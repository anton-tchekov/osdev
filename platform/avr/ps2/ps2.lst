   1               		.file	"ps2.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "ps2/ps2.c"
  11               	.global	ps2_init
  13               	ps2_init:
  14               	.LFB3:
  15               		.file 1 "ps2/ps2.c"
   1:ps2/ps2.c     **** /**
   2:ps2/ps2.c     ****  * @file    ps2.c
   3:ps2/ps2.c     ****  * @author  Haron Nazari, Anton Tchekov
   4:ps2/ps2.c     ****  * @version 0.1
   5:ps2/ps2.c     ****  * @date    16.05.2023
   6:ps2/ps2.c     ****  */
   7:ps2/ps2.c     **** 
   8:ps2/ps2.c     **** #include <ps2.h>
   9:ps2/ps2.c     **** #include <logger.h>
  10:ps2/ps2.c     **** #include <avr/pgmspace.h>
  11:ps2/ps2.c     **** 
  12:ps2/ps2.c     **** /** The byte that is currently being received */
  13:ps2/ps2.c     **** static u8 _byte;
  14:ps2/ps2.c     **** 
  15:ps2/ps2.c     **** /**
  16:ps2/ps2.c     ****  * The number of the current bit:
  17:ps2/ps2.c     ****  *
  18:ps2/ps2.c     ****  *   0: Start bit
  19:ps2/ps2.c     ****  * 1-8: Data bit
  20:ps2/ps2.c     ****  *   9: Parity bit
  21:ps2/ps2.c     ****  *  10: Stop bit
  22:ps2/ps2.c     ****  */
  23:ps2/ps2.c     **** static u8 _bit;
  24:ps2/ps2.c     **** 
  25:ps2/ps2.c     **** void ps2_init(void)
  26:ps2/ps2.c     **** {
  16               		.loc 1 26 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  27:ps2/ps2.c     **** 	/* By default, both pins are already inputs on startup */
  28:ps2/ps2.c     **** 
  29:ps2/ps2.c     **** 	/* Enable pullups */
  30:ps2/ps2.c     **** 	PS2_CLOCK_PORT_OUT |= (1 << PS2_CLOCK_PIN);
  22               		.loc 1 30 2 view .LVU1
  23               		.loc 1 30 21 is_stmt 0 view .LVU2
  24 0000 2A9A      		sbi 0x5,2
  31:ps2/ps2.c     **** 	PS2_DATA_PORT_OUT |= (1 << PS2_DATA_PIN);
  25               		.loc 1 31 2 is_stmt 1 view .LVU3
  26               		.loc 1 31 20 is_stmt 0 view .LVU4
  27 0002 2B9A      		sbi 0x5,3
  32:ps2/ps2.c     **** 
  33:ps2/ps2.c     **** 	/* Enable external interrupt 0 (PORTB2) */
  34:ps2/ps2.c     **** 	EIMSK |= (1 << PS2_EXT_INTERRUPT);
  28               		.loc 1 34 2 is_stmt 1 view .LVU5
  29               		.loc 1 34 8 is_stmt 0 view .LVU6
  30 0004 E89A      		sbi 0x1d,0
  35:ps2/ps2.c     **** 
  36:ps2/ps2.c     **** 	/* Trigger interrupt on falling edge */
  37:ps2/ps2.c     **** 	EICRA |= (1 << ISC01);
  31               		.loc 1 37 2 is_stmt 1 view .LVU7
  32 0006 E9E6      		ldi r30,lo8(105)
  33 0008 F0E0      		ldi r31,0
  34 000a 8081      		ld r24,Z
  35               		.loc 1 37 8 is_stmt 0 view .LVU8
  36 000c 8260      		ori r24,lo8(2)
  37 000e 8083      		st Z,r24
  38:ps2/ps2.c     **** 
  39:ps2/ps2.c     **** 	log_boot_P(PSTR("PS/2 keyboard initialized"));
  38               		.loc 1 39 2 is_stmt 1 view .LVU9
  39               	.LBB4:
  40               		.loc 1 39 13 view .LVU10
  41               		.loc 1 39 13 view .LVU11
  42               	.LBE4:
  43               		.loc 1 39 2 is_stmt 0 view .LVU12
  44 0010 80E0      		ldi r24,lo8(__c.0)
  45 0012 90E0      		ldi r25,hi8(__c.0)
  46 0014 9F93      		push r25
  47               		.cfi_def_cfa_offset 3
  48 0016 8F93      		push r24
  49               		.cfi_def_cfa_offset 4
  50 0018 0E94 0000 		call log_boot_P
  51               	.LVL0:
  40:ps2/ps2.c     **** }
  52               		.loc 1 40 1 view .LVU13
  53 001c 0F90      		pop __tmp_reg__
  54 001e 0F90      		pop __tmp_reg__
  55               		.cfi_def_cfa_offset 2
  56               	/* epilogue start */
  57 0020 0895      		ret
  58               		.cfi_endproc
  59               	.LFE3:
  61               	.global	__vector_1
  63               	__vector_1:
  64               	.LFB6:
  41:ps2/ps2.c     **** 
  42:ps2/ps2.c     **** /**
  43:ps2/ps2.c     ****  * @brief Get the PS/2 data line state
  44:ps2/ps2.c     ****  *
  45:ps2/ps2.c     ****  * @return 0 if LOW, non-zero if HIGH
  46:ps2/ps2.c     ****  */
  47:ps2/ps2.c     **** static inline u8 _ps2_data_read(void)
  48:ps2/ps2.c     **** {
  49:ps2/ps2.c     **** 	/* Read keyboard data pin */
  50:ps2/ps2.c     **** 	return PS2_DATA_PORT_IN & (1 << PS2_DATA_PIN);
  51:ps2/ps2.c     **** }
  52:ps2/ps2.c     **** 
  53:ps2/ps2.c     **** /**
  54:ps2/ps2.c     ****  * @brief Called when a falling edge is detected on the PS/2 clock pin
  55:ps2/ps2.c     ****  */
  56:ps2/ps2.c     **** static inline void _ps2_clock_falling_edge(void)
  57:ps2/ps2.c     **** {
  58:ps2/ps2.c     **** 	if(_bit == 0)
  59:ps2/ps2.c     **** 	{
  60:ps2/ps2.c     **** 		/* Start bit, reset byte */
  61:ps2/ps2.c     **** 		_byte = 0;
  62:ps2/ps2.c     **** 	}
  63:ps2/ps2.c     **** 	else if(_bit >= 1 && _bit <= 8)
  64:ps2/ps2.c     **** 	{
  65:ps2/ps2.c     **** 		/* Data bit */
  66:ps2/ps2.c     **** 		if(_ps2_data_read())
  67:ps2/ps2.c     **** 		{
  68:ps2/ps2.c     **** 			/* Set bit */
  69:ps2/ps2.c     **** 			_byte |= (1 << (_bit - 1));
  70:ps2/ps2.c     **** 		}
  71:ps2/ps2.c     **** 	}
  72:ps2/ps2.c     **** 	else if(_bit == 9)
  73:ps2/ps2.c     **** 	{
  74:ps2/ps2.c     **** 		/* Ignore parity bit */
  75:ps2/ps2.c     **** 		/* TODO: Check parity bit */
  76:ps2/ps2.c     **** 		ps2_event(_byte);
  77:ps2/ps2.c     **** 	}
  78:ps2/ps2.c     **** 	else if(_bit == 10)
  79:ps2/ps2.c     **** 	{
  80:ps2/ps2.c     **** 		/* Stop bit, reset bit counter */
  81:ps2/ps2.c     **** 		_bit = 0;
  82:ps2/ps2.c     **** 
  83:ps2/ps2.c     **** 		/* Return immediately so it stays 0 */
  84:ps2/ps2.c     **** 		return;
  85:ps2/ps2.c     **** 	}
  86:ps2/ps2.c     **** 
  87:ps2/ps2.c     **** 	++_bit;
  88:ps2/ps2.c     **** }
  89:ps2/ps2.c     **** 
  90:ps2/ps2.c     **** /** External interrupt */
  91:ps2/ps2.c     **** ISR(INT0_vect)
  92:ps2/ps2.c     **** {
  65               		.loc 1 92 1 is_stmt 1 view -0
  66               		.cfi_startproc
  67 0022 1F92      		push r1
  68               		.cfi_def_cfa_offset 3
  69               		.cfi_offset 1, -2
  70 0024 0F92      		push r0
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 0, -3
  73 0026 0FB6      		in r0,__SREG__
  74 0028 0F92      		push r0
  75 002a 1124      		clr __zero_reg__
  76 002c 2F93      		push r18
  77               		.cfi_def_cfa_offset 5
  78               		.cfi_offset 18, -4
  79 002e 3F93      		push r19
  80               		.cfi_def_cfa_offset 6
  81               		.cfi_offset 19, -5
  82 0030 4F93      		push r20
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 20, -6
  85 0032 5F93      		push r21
  86               		.cfi_def_cfa_offset 8
  87               		.cfi_offset 21, -7
  88 0034 6F93      		push r22
  89               		.cfi_def_cfa_offset 9
  90               		.cfi_offset 22, -8
  91 0036 7F93      		push r23
  92               		.cfi_def_cfa_offset 10
  93               		.cfi_offset 23, -9
  94 0038 8F93      		push r24
  95               		.cfi_def_cfa_offset 11
  96               		.cfi_offset 24, -10
  97 003a 9F93      		push r25
  98               		.cfi_def_cfa_offset 12
  99               		.cfi_offset 25, -11
 100 003c AF93      		push r26
 101               		.cfi_def_cfa_offset 13
 102               		.cfi_offset 26, -12
 103 003e BF93      		push r27
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 27, -13
 106 0040 EF93      		push r30
 107               		.cfi_def_cfa_offset 15
 108               		.cfi_offset 30, -14
 109 0042 FF93      		push r31
 110               		.cfi_def_cfa_offset 16
 111               		.cfi_offset 31, -15
 112               	/* prologue: Signal */
 113               	/* frame size = 0 */
 114               	/* stack size = 15 */
 115               	.L__stack_usage = 15
  93:ps2/ps2.c     **** 	_ps2_clock_falling_edge();
 116               		.loc 1 93 2 view .LVU15
 117               	.LBB9:
 118               	.LBI9:
  56:ps2/ps2.c     **** {
 119               		.loc 1 56 20 view .LVU16
 120               	.LBB10:
  58:ps2/ps2.c     **** 	{
 121               		.loc 1 58 2 view .LVU17
  58:ps2/ps2.c     **** 	{
 122               		.loc 1 58 10 is_stmt 0 view .LVU18
 123 0044 8091 0000 		lds r24,_bit
  58:ps2/ps2.c     **** 	{
 124               		.loc 1 58 4 view .LVU19
 125 0048 8111      		cpse r24,__zero_reg__
 126 004a 00C0      		rjmp .L3
  61:ps2/ps2.c     **** 	}
 127               		.loc 1 61 3 is_stmt 1 view .LVU20
  61:ps2/ps2.c     **** 	}
 128               		.loc 1 61 9 is_stmt 0 view .LVU21
 129 004c 1092 0000 		sts _byte,__zero_reg__
 130               	.L4:
  87:ps2/ps2.c     **** }
 131               		.loc 1 87 2 is_stmt 1 view .LVU22
 132 0050 8091 0000 		lds r24,_bit
 133 0054 8F5F      		subi r24,lo8(-(1))
 134               	.L7:
  81:ps2/ps2.c     **** 
 135               		.loc 1 81 8 is_stmt 0 view .LVU23
 136 0056 8093 0000 		sts _bit,r24
 137               	/* epilogue start */
 138               	.LBE10:
 139               	.LBE9:
  94:ps2/ps2.c     **** }
 140               		.loc 1 94 1 view .LVU24
 141 005a FF91      		pop r31
 142 005c EF91      		pop r30
 143 005e BF91      		pop r27
 144 0060 AF91      		pop r26
 145 0062 9F91      		pop r25
 146 0064 8F91      		pop r24
 147 0066 7F91      		pop r23
 148 0068 6F91      		pop r22
 149 006a 5F91      		pop r21
 150 006c 4F91      		pop r20
 151 006e 3F91      		pop r19
 152 0070 2F91      		pop r18
 153 0072 0F90      		pop r0
 154 0074 0FBE      		out __SREG__,r0
 155 0076 0F90      		pop r0
 156 0078 1F90      		pop r1
 157 007a 1895      		reti
 158               	.L3:
 159               	.LBB14:
 160               	.LBB13:
  63:ps2/ps2.c     **** 	{
 161               		.loc 1 63 7 is_stmt 1 view .LVU25
  63:ps2/ps2.c     **** 	{
 162               		.loc 1 63 20 is_stmt 0 view .LVU26
 163 007c 9FEF      		ldi r25,lo8(-1)
 164 007e 980F      		add r25,r24
  63:ps2/ps2.c     **** 	{
 165               		.loc 1 63 9 view .LVU27
 166 0080 9830      		cpi r25,lo8(8)
 167 0082 00F4      		brsh .L5
  66:ps2/ps2.c     **** 		{
 168               		.loc 1 66 3 is_stmt 1 view .LVU28
 169               	.LBB11:
 170               	.LBI11:
  47:ps2/ps2.c     **** {
 171               		.loc 1 47 18 view .LVU29
 172               	.LBB12:
  50:ps2/ps2.c     **** }
 173               		.loc 1 50 2 view .LVU30
 174               	.LBE12:
 175               	.LBE11:
  66:ps2/ps2.c     **** 		{
 176               		.loc 1 66 5 is_stmt 0 view .LVU31
 177 0084 1B9B      		sbis 0x3,3
 178 0086 00C0      		rjmp .L4
  69:ps2/ps2.c     **** 		}
 179               		.loc 1 69 4 is_stmt 1 view .LVU32
  69:ps2/ps2.c     **** 		}
 180               		.loc 1 69 25 is_stmt 0 view .LVU33
 181 0088 8150      		subi r24,1
 182 008a 990B      		sbc r25,r25
  69:ps2/ps2.c     **** 		}
 183               		.loc 1 69 16 view .LVU34
 184 008c 21E0      		ldi r18,lo8(1)
 185 008e 30E0      		ldi r19,0
 186 0090 00C0      		rjmp 2f
 187               		1:
 188 0092 220F      		lsl r18
 189               		2:
 190 0094 8A95      		dec r24
 191 0096 02F4      		brpl 1b
  69:ps2/ps2.c     **** 		}
 192               		.loc 1 69 10 view .LVU35
 193 0098 8091 0000 		lds r24,_byte
 194 009c 822B      		or r24,r18
 195 009e 8093 0000 		sts _byte,r24
 196 00a2 00C0      		rjmp .L4
 197               	.L5:
  72:ps2/ps2.c     **** 	{
 198               		.loc 1 72 7 is_stmt 1 view .LVU36
  72:ps2/ps2.c     **** 	{
 199               		.loc 1 72 9 is_stmt 0 view .LVU37
 200 00a4 8930      		cpi r24,lo8(9)
 201 00a6 01F4      		brne .L6
  76:ps2/ps2.c     **** 	}
 202               		.loc 1 76 3 is_stmt 1 view .LVU38
 203 00a8 8091 0000 		lds r24,_byte
 204 00ac 0E94 0000 		call ps2_event
 205               	.LVL1:
 206 00b0 00C0      		rjmp .L4
 207               	.L6:
  78:ps2/ps2.c     **** 	{
 208               		.loc 1 78 7 view .LVU39
  78:ps2/ps2.c     **** 	{
 209               		.loc 1 78 9 is_stmt 0 view .LVU40
 210 00b2 8A30      		cpi r24,lo8(10)
 211 00b4 01F4      		brne .L4
 212 00b6 80E0      		ldi r24,0
 213 00b8 00C0      		rjmp .L7
 214               	.LBE13:
 215               	.LBE14:
 216               		.cfi_endproc
 217               	.LFE6:
 219               		.section	.progmem.data,"a",@progbits
 222               	__c.0:
 223 0000 5053 2F32 		.string	"PS/2 keyboard initialized"
 223      206B 6579 
 223      626F 6172 
 223      6420 696E 
 223      6974 6961 
 224               		.local	_bit
 225               		.comm	_bit,1,1
 226               		.local	_byte
 227               		.comm	_byte,1,1
 228               		.text
 229               	.Letext0:
 230               		.file 2 "ps2/ps2.h"
 231               		.file 3 "logger/logger.h"
 232               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 233               		.file 5 "../../types/types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ps2.c
     /tmp/ccFbIF1g.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccFbIF1g.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccFbIF1g.s:4      *ABS*:0000003f __SREG__
     /tmp/ccFbIF1g.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccFbIF1g.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccFbIF1g.s:13     .text:00000000 ps2_init
     /tmp/ccFbIF1g.s:16     .text:00000000 .Loc.0
     /tmp/ccFbIF1g.s:17     .text:00000000 L0
     /tmp/ccFbIF1g.s:22     .text:00000000 .Loc.1
     /tmp/ccFbIF1g.s:23     .text:00000000 .Loc.2
     /tmp/ccFbIF1g.s:25     .text:00000002 .Loc.3
     /tmp/ccFbIF1g.s:26     .text:00000002 .Loc.4
     /tmp/ccFbIF1g.s:28     .text:00000004 .Loc.5
     /tmp/ccFbIF1g.s:29     .text:00000004 .Loc.6
     /tmp/ccFbIF1g.s:31     .text:00000006 .Loc.7
     /tmp/ccFbIF1g.s:35     .text:0000000c .Loc.8
     /tmp/ccFbIF1g.s:38     .text:00000010 .Loc.9
     /tmp/ccFbIF1g.s:40     .text:00000010 .Loc.10
     /tmp/ccFbIF1g.s:41     .text:00000010 .Loc.11
     /tmp/ccFbIF1g.s:43     .text:00000010 .Loc.12
     /tmp/ccFbIF1g.s:222    .progmem.data:00000000 __c.0
     /tmp/ccFbIF1g.s:52     .text:0000001c .Loc.13
     /tmp/ccFbIF1g.s:58     .text:00000022 L0
     /tmp/ccFbIF1g.s:63     .text:00000022 __vector_1
     /tmp/ccFbIF1g.s:65     .text:00000022 .Loc.14
     /tmp/ccFbIF1g.s:66     .text:00000022 L0
     /tmp/ccFbIF1g.s:116    .text:00000044 .Loc.15
     /tmp/ccFbIF1g.s:119    .text:00000044 .Loc.16
     /tmp/ccFbIF1g.s:121    .text:00000044 .Loc.17
     /tmp/ccFbIF1g.s:122    .text:00000044 .Loc.18
                             .bss:00000000 _bit
     /tmp/ccFbIF1g.s:124    .text:00000048 .Loc.19
     /tmp/ccFbIF1g.s:127    .text:0000004c .Loc.20
     /tmp/ccFbIF1g.s:128    .text:0000004c .Loc.21
     /tmp/ccFbIF1g.s:225    .bss:00000001 _byte
     /tmp/ccFbIF1g.s:131    .text:00000050 .Loc.22
     /tmp/ccFbIF1g.s:135    .text:00000056 .Loc.23
     /tmp/ccFbIF1g.s:140    .text:0000005a .Loc.24
     /tmp/ccFbIF1g.s:161    .text:0000007c .Loc.25
     /tmp/ccFbIF1g.s:162    .text:0000007c .Loc.26
     /tmp/ccFbIF1g.s:165    .text:00000080 .Loc.27
     /tmp/ccFbIF1g.s:168    .text:00000084 .Loc.28
     /tmp/ccFbIF1g.s:171    .text:00000084 .Loc.29
     /tmp/ccFbIF1g.s:173    .text:00000084 .Loc.30
     /tmp/ccFbIF1g.s:176    .text:00000084 .Loc.31
     /tmp/ccFbIF1g.s:179    .text:00000088 .Loc.32
     /tmp/ccFbIF1g.s:180    .text:00000088 .Loc.33
     /tmp/ccFbIF1g.s:183    .text:0000008c .Loc.34
     /tmp/ccFbIF1g.s:192    .text:00000098 .Loc.35
     /tmp/ccFbIF1g.s:198    .text:000000a4 .Loc.36
     /tmp/ccFbIF1g.s:199    .text:000000a4 .Loc.37
     /tmp/ccFbIF1g.s:202    .text:000000a8 .Loc.38
     /tmp/ccFbIF1g.s:208    .text:000000b2 .Loc.39
     /tmp/ccFbIF1g.s:209    .text:000000b2 .Loc.40
     /tmp/ccFbIF1g.s:216    .text:000000ba L0
     /tmp/ccFbIF1g.s:234    .text:000000ba L0
                     .debug_frame:00000000 L0
     /tmp/ccFbIF1g.s:158    .text:0000007c .L3
     /tmp/ccFbIF1g.s:197    .text:000000a4 .L5
     /tmp/ccFbIF1g.s:130    .text:00000050 .L4
     /tmp/ccFbIF1g.s:189    .text:00000094 .L21
     /tmp/ccFbIF1g.s:187    .text:00000092 .L11
     /tmp/ccFbIF1g.s:207    .text:000000b2 .L6
     /tmp/ccFbIF1g.s:134    .text:00000056 .L7
     /tmp/ccFbIF1g.s:423    .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccFbIF1g.s:8      .text:00000000 .Ltext0
     /tmp/ccFbIF1g.s:229    .text:000000ba .Letext0
     /tmp/ccFbIF1g.s:754    .debug_line:00000000 .Ldebug_line0
     /tmp/ccFbIF1g.s:64     .text:00000022 .LFB6
     /tmp/ccFbIF1g.s:217    .text:000000ba .LFE6
     /tmp/ccFbIF1g.s:118    .text:00000044 .LBI9
     /tmp/ccFbIF1g.s:744    .debug_rnglists:0000000c .LLRL0
     /tmp/ccFbIF1g.s:170    .text:00000084 .LBI11
     /tmp/ccFbIF1g.s:169    .text:00000084 .LBB11
     /tmp/ccFbIF1g.s:175    .text:00000084 .LBE11
     /tmp/ccFbIF1g.s:205    .text:000000b0 .LVL1
     /tmp/ccFbIF1g.s:14     .text:00000000 .LFB3
     /tmp/ccFbIF1g.s:59     .text:00000022 .LFE3
     /tmp/ccFbIF1g.s:39     .text:00000010 .LBB4
     /tmp/ccFbIF1g.s:42     .text:00000010 .LBE4
     /tmp/ccFbIF1g.s:51     .text:0000001c .LVL0
     /tmp/ccFbIF1g.s:235    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
log_boot_P
ps2_event
__do_clear_bss
