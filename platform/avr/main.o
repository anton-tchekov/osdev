   1               		.file	"<artificial>"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "<artificial>"
  12               	_abgr_to_rgb565:
  13               	.LVL0:
  14               	.LFB0:
  15               		.file 1 "platform.c"
   1:platform.c    **** /**
   2:platform.c    ****  * @file    platform.c
   3:platform.c    ****  * @author  Anton Tchekov
   4:platform.c    ****  * @version 0.1
   5:platform.c    ****  * @date    22.05.2023
   6:platform.c    ****  * @brief   Platform specific functions for AVR
   7:platform.c    ****  */
   8:platform.c    **** 
   9:platform.c    **** #include <platform.h>
  10:platform.c    **** #include <serial.h>
  11:platform.c    **** #include <lcd.h>
  12:platform.c    **** #include <xmem.h>
  13:platform.c    **** #include <random.h>
  14:platform.c    **** #include <timer.h>
  15:platform.c    **** #include <avr/pgmspace.h>
  16:platform.c    **** 
  17:platform.c    **** /* --- MEMORY --- */
  18:platform.c    **** 
  19:platform.c    **** u32 env_memory_size(void)
  20:platform.c    **** {
  21:platform.c    **** 	return xmem_size();
  22:platform.c    **** }
  23:platform.c    **** 
  24:platform.c    **** void env_memory_read(u32 addr, void *data, u32 size)
  25:platform.c    **** {
  26:platform.c    **** 	xmem_read(addr, data, size);
  27:platform.c    **** }
  28:platform.c    **** 
  29:platform.c    **** void env_memory_write(u32 addr, const void *data, u32 size)
  30:platform.c    **** {
  31:platform.c    **** 	xmem_write(addr, data, size);
  32:platform.c    **** }
  33:platform.c    **** 
  34:platform.c    **** /* --- GRAPHICS --- */
  35:platform.c    **** 
  36:platform.c    **** /** Extract red channel from ABGR color */
  37:platform.c    **** static inline u8 _abgr_r(u32 color) { return (color >> 24) & 0xFF; }
  38:platform.c    **** 
  39:platform.c    **** /** Extract green channel from ABGR color */
  40:platform.c    **** static inline u8 _abgr_g(u32 color) { return (color >> 16) & 0xFF; }
  41:platform.c    **** 
  42:platform.c    **** /** Extract blue channel from ABGR color */
  43:platform.c    **** static inline u8 _abgr_b(u32 color) { return (color >>  8) & 0xFF; }
  44:platform.c    **** 
  45:platform.c    **** /** Reverse gamma correction table */
  46:platform.c    **** static const u8 PROGMEM _gamma[] =
  47:platform.c    **** {
  48:platform.c    **** 	  0,  21,  28,  34,  39,  43,  46,  50,  53,  56,  59,  61,  64,  66,  68,  70,
  49:platform.c    **** 	 72,  74,  76,  78,  80,  82,  84,  85,  87,  89,  90,  92,  93,  95,  96,  98,
  50:platform.c    **** 	 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118,
  51:platform.c    **** 	119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
  52:platform.c    **** 	136, 137, 138, 139, 140, 141, 142, 143, 144, 144, 145, 146, 147, 148, 149, 150,
  53:platform.c    **** 	151, 151, 152, 153, 154, 155, 156, 156, 157, 158, 159, 160, 160, 161, 162, 163,
  54:platform.c    **** 	164, 164, 165, 166, 167, 167, 168, 169, 170, 170, 171, 172, 173, 173, 174, 175,
  55:platform.c    **** 	175, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 183, 184, 184, 185, 186,
  56:platform.c    **** 	186, 187, 188, 188, 189, 190, 190, 191, 192, 192, 193, 194, 194, 195, 195, 196,
  57:platform.c    **** 	197, 197, 198, 199, 199, 200, 200, 201, 202, 202, 203, 203, 204, 205, 205, 206,
  58:platform.c    **** 	206, 207, 207, 208, 209, 209, 210, 210, 211, 212, 212, 213, 213, 214, 214, 215,
  59:platform.c    **** 	215, 216, 217, 217, 218, 218, 219, 219, 220, 220, 221, 221, 222, 223, 223, 224,
  60:platform.c    **** 	224, 225, 225, 226, 226, 227, 227, 228, 228, 229, 229, 230, 230, 231, 231, 232,
  61:platform.c    **** 	232, 233, 233, 234, 234, 235, 235, 236, 236, 237, 237, 238, 238, 239, 239, 240,
  62:platform.c    **** 	240, 241, 241, 242, 242, 243, 243, 244, 244, 245, 245, 246, 246, 247, 247, 248,
  63:platform.c    **** 	248, 249, 249, 249, 250, 250, 251, 251, 252, 252, 253, 253, 254, 254, 255, 255
  64:platform.c    **** };
  65:platform.c    **** 
  66:platform.c    **** /**
  67:platform.c    ****  * @brief Perform gamma correction on a color channel
  68:platform.c    ****  *
  69:platform.c    ****  * @param value Input color channel value
  70:platform.c    ****  * @return Gamma corrected output value
  71:platform.c    ****  */
  72:platform.c    **** static inline u8 _gamma_correction(u8 value)
  73:platform.c    **** {
  74:platform.c    **** 	return pgm_read_byte(_gamma + value);
  75:platform.c    **** }
  76:platform.c    **** 
  77:platform.c    **** /**
  78:platform.c    ****  * @brief Convert ABGR8888 to RGB565 and do gamma correction
  79:platform.c    ****  *        for LCD with low contrast
  80:platform.c    ****  *
  81:platform.c    ****  * @param color The color to be converted
  82:platform.c    ****  * @return RGB565 color
  83:platform.c    ****  */
  84:platform.c    **** static RGB565 _abgr_to_rgb565(u32 color)
  85:platform.c    **** {
  16               		.loc 1 85 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 85 1 is_stmt 0 view .LVU1
  23 0000 272F      		mov r18,r23
  24 0002 462F      		mov r20,r22
  25 0004 572F      		mov r21,r23
  26 0006 BC01      		movw r22,r24
  27               	.LVL1:
  86:platform.c    **** 	return lcd_color(
  28               		.loc 1 86 2 is_stmt 1 view .LVU2
  29               	.LBB16:
  30               	.LBI16:
  43:platform.c    **** 
  31               		.loc 1 43 18 view .LVU3
  32               	.LBB17:
  43:platform.c    **** 
  33               		.loc 1 43 39 view .LVU4
  43:platform.c    **** 
  34               		.loc 1 43 39 is_stmt 0 view .LVU5
  35               	.LBE17:
  36               	.LBE16:
  37               	.LBB18:
  38               	.LBI18:
  72:platform.c    **** {
  39               		.loc 1 72 18 is_stmt 1 view .LVU6
  74:platform.c    **** }
  40               		.loc 1 74 2 view .LVU7
  41               	.LBB19:
  74:platform.c    **** }
  42               		.loc 1 74 9 view .LVU8
  74:platform.c    **** }
  43               		.loc 1 74 9 view .LVU9
  74:platform.c    **** }
  44               		.loc 1 74 9 view .LVU10
  45 0008 E22F      		mov r30,r18
  46 000a F0E0      		ldi r31,0
  47 000c E050      		subi r30,lo8(-(_gamma))
  48 000e F040      		sbci r31,hi8(-(_gamma))
  49               	/* #APP */
  50               	 ;  74 "platform.c" 1
  51 0010 A491      		lpm r26, Z
  52               		
  53               	 ;  0 "" 2
  54               	.LVL2:
  74:platform.c    **** }
  55               		.loc 1 74 9 view .LVU11
  74:platform.c    **** }
  56               		.loc 1 74 9 is_stmt 0 view .LVU12
  57               	/* #NOAPP */
  58               	.LBE19:
  59               	.LBE18:
  60               	.LBB20:
  61               	.LBI20:
  40:platform.c    **** 
  62               		.loc 1 40 18 is_stmt 1 view .LVU13
  63               	.LBB21:
  40:platform.c    **** 
  64               		.loc 1 40 39 view .LVU14
  40:platform.c    **** 
  65               		.loc 1 40 39 is_stmt 0 view .LVU15
  66               	.LBE21:
  67               	.LBE20:
  68               	.LBB22:
  69               	.LBI22:
  72:platform.c    **** {
  70               		.loc 1 72 18 is_stmt 1 view .LVU16
  74:platform.c    **** }
  71               		.loc 1 74 2 view .LVU17
  72               	.LBB23:
  74:platform.c    **** }
  73               		.loc 1 74 9 view .LVU18
  74:platform.c    **** }
  74               		.loc 1 74 9 view .LVU19
  74:platform.c    **** }
  75               		.loc 1 74 9 view .LVU20
  76 0012 E82F      		mov r30,r24
  77 0014 F0E0      		ldi r31,0
  78 0016 E050      		subi r30,lo8(-(_gamma))
  79 0018 F040      		sbci r31,hi8(-(_gamma))
  80               	/* #APP */
  81               	 ;  74 "platform.c" 1
  82 001a 2491      		lpm r18, Z
  83               		
  84               	 ;  0 "" 2
  85               	.LVL3:
  74:platform.c    **** }
  86               		.loc 1 74 9 view .LVU21
  74:platform.c    **** }
  87               		.loc 1 74 9 is_stmt 0 view .LVU22
  88               	/* #NOAPP */
  89               	.LBE23:
  90               	.LBE22:
  91               	.LBB24:
  92               	.LBI24:
  37:platform.c    **** 
  93               		.loc 1 37 18 is_stmt 1 view .LVU23
  94               	.LBB25:
  37:platform.c    **** 
  95               		.loc 1 37 39 view .LVU24
  37:platform.c    **** 
  96               		.loc 1 37 39 is_stmt 0 view .LVU25
  97               	.LBE25:
  98               	.LBE24:
  99               	.LBB27:
 100               	.LBI27:
  72:platform.c    **** {
 101               		.loc 1 72 18 is_stmt 1 view .LVU26
  74:platform.c    **** }
 102               		.loc 1 74 2 view .LVU27
 103               	.LBB28:
  74:platform.c    **** }
 104               		.loc 1 74 9 view .LVU28
  74:platform.c    **** }
 105               		.loc 1 74 9 view .LVU29
  74:platform.c    **** }
 106               		.loc 1 74 9 view .LVU30
 107               	.LBE28:
 108               	.LBE27:
 109               	.LBB30:
 110               	.LBB26:
  37:platform.c    **** 
 111               		.loc 1 37 60 is_stmt 0 view .LVU31
 112 001c 472F      		mov r20,r23
 113 001e 5527      		clr r21
 114 0020 6627      		clr r22
 115 0022 7727      		clr r23
 116               	.LVL4:
  37:platform.c    **** 
 117               		.loc 1 37 60 view .LVU32
 118               	.LBE26:
 119               	.LBE30:
 120               	.LBB31:
 121               	.LBB29:
  74:platform.c    **** }
 122               		.loc 1 74 9 view .LVU33
 123 0024 4050      		subi r20,lo8(-(_gamma))
 124 0026 5040      		sbci r21,hi8(-(_gamma))
 125 0028 FA01      		movw r30,r20
 126               	/* #APP */
 127               	 ;  74 "platform.c" 1
 128 002a 8491      		lpm r24, Z
 129               		
 130               	 ;  0 "" 2
 131               	.LVL5:
  74:platform.c    **** }
 132               		.loc 1 74 9 is_stmt 1 view .LVU34
  74:platform.c    **** }
 133               		.loc 1 74 9 is_stmt 0 view .LVU35
 134               	/* #NOAPP */
 135               	.LBE29:
 136               	.LBE31:
 137               	.LBB32:
 138               	.LBI32:
 139               		.file 2 "lcd/lcd.c"
   1:lcd/lcd.c     **** /**
   2:lcd/lcd.c     ****  * @file    lcd.c
   3:lcd/lcd.c     ****  * @author  Anton Tchekov
   4:lcd/lcd.c     ****  * @version 0.2
   5:lcd/lcd.c     ****  * @date    17.05.2023
   6:lcd/lcd.c     ****  */
   7:lcd/lcd.c     **** 
   8:lcd/lcd.c     **** #include <lcd.h>
   9:lcd/lcd.c     **** #include <logger.h>
  10:lcd/lcd.c     **** #include <spi.h>
  11:lcd/lcd.c     **** #include <gpio.h>
  12:lcd/lcd.c     **** #include <xmem.h>
  13:lcd/lcd.c     **** #include <avr/pgmspace.h>
  14:lcd/lcd.c     **** #include <util/delay.h>
  15:lcd/lcd.c     **** 
  16:lcd/lcd.c     **** enum
  17:lcd/lcd.c     **** {
  18:lcd/lcd.c     **** 	L2R_U2D,
  19:lcd/lcd.c     **** 	L2R_D2U,
  20:lcd/lcd.c     **** 	R2L_U2D,
  21:lcd/lcd.c     **** 	R2L_D2U,
  22:lcd/lcd.c     **** 	U2D_L2R,
  23:lcd/lcd.c     **** 	U2D_R2L,
  24:lcd/lcd.c     **** 	D2U_L2R,
  25:lcd/lcd.c     **** 	D2U_R2L
  26:lcd/lcd.c     **** };
  27:lcd/lcd.c     **** 
  28:lcd/lcd.c     **** /** LCD orientation*/
  29:lcd/lcd.c     **** #define SCAN_DIR       L2R_U2D
  30:lcd/lcd.c     **** 
  31:lcd/lcd.c     **** /** Default font width in pixels */
  32:lcd/lcd.c     **** #define FONT_WIDTH    5
  33:lcd/lcd.c     **** 
  34:lcd/lcd.c     **** /** Default font height in pixels */
  35:lcd/lcd.c     **** #define FONT_HEIGHT   7
  36:lcd/lcd.c     **** 
  37:lcd/lcd.c     **** /** Default 5x7 monospace font */
  38:lcd/lcd.c     **** static const u8 _font5x7[] PROGMEM =
  39:lcd/lcd.c     **** {
  40:lcd/lcd.c     **** 	0x00, 0x00, 0x00, 0x00, 0x00, /*   */
  41:lcd/lcd.c     **** 	0x00, 0x00, 0x5F, 0x00, 0x00, /* ! */
  42:lcd/lcd.c     **** 	0x00, 0x07, 0x00, 0x07, 0x00, /* " */
  43:lcd/lcd.c     **** 	0x14, 0x7F, 0x14, 0x7F, 0x14, /* # */
  44:lcd/lcd.c     **** 	0x24, 0x2A, 0x7F, 0x2A, 0x12, /* $ */
  45:lcd/lcd.c     **** 	0x23, 0x13, 0x08, 0x64, 0x62, /* % */
  46:lcd/lcd.c     **** 	0x36, 0x49, 0x55, 0x22, 0x50, /* & */
  47:lcd/lcd.c     **** 	0x00, 0x00, 0x03, 0x00, 0x00, /* ' */
  48:lcd/lcd.c     **** 	0x00, 0x1C, 0x22, 0x41, 0x00, /* ( */
  49:lcd/lcd.c     **** 	0x00, 0x41, 0x22, 0x1C, 0x00, /* ) */
  50:lcd/lcd.c     **** 	0x14, 0x08, 0x3E, 0x08, 0x14, /* * */
  51:lcd/lcd.c     **** 	0x08, 0x08, 0x3E, 0x08, 0x08, /* + */
  52:lcd/lcd.c     **** 	0x00, 0x50, 0x30, 0x00, 0x00, /* , */
  53:lcd/lcd.c     **** 	0x08, 0x08, 0x08, 0x08, 0x08, /* - */
  54:lcd/lcd.c     **** 	0x00, 0x60, 0x60, 0x00, 0x00, /* . */
  55:lcd/lcd.c     **** 	0x20, 0x10, 0x08, 0x04, 0x02, /* / */
  56:lcd/lcd.c     **** 
  57:lcd/lcd.c     **** 	0x3E, 0x51, 0x49, 0x45, 0x3E, /* 0 */
  58:lcd/lcd.c     **** 	0x00, 0x42, 0x7F, 0x40, 0x00, /* 1 */
  59:lcd/lcd.c     **** 	0x62, 0x51, 0x49, 0x49, 0x46, /* 2 */
  60:lcd/lcd.c     **** 	0x22, 0x41, 0x49, 0x49, 0x36, /* 3 */
  61:lcd/lcd.c     **** 	0x18, 0x14, 0x12, 0x7F, 0x10, /* 4 */
  62:lcd/lcd.c     **** 	0x27, 0x45, 0x45, 0x45, 0x39, /* 5 */
  63:lcd/lcd.c     **** 	0x3C, 0x4A, 0x49, 0x49, 0x30, /* 6 */
  64:lcd/lcd.c     **** 	0x01, 0x71, 0x09, 0x05, 0x03, /* 7 */
  65:lcd/lcd.c     **** 	0x36, 0x49, 0x49, 0x49, 0x36, /* 8 */
  66:lcd/lcd.c     **** 	0x06, 0x49, 0x49, 0x29, 0x1E, /* 9 */
  67:lcd/lcd.c     **** 
  68:lcd/lcd.c     **** 	0x00, 0x36, 0x36, 0x00, 0x00, /* : */
  69:lcd/lcd.c     **** 	0x00, 0x56, 0x36, 0x00, 0x00, /* ; */
  70:lcd/lcd.c     **** 	0x08, 0x14, 0x22, 0x41, 0x00, /* < */
  71:lcd/lcd.c     **** 	0x14, 0x14, 0x14, 0x14, 0x14, /* = */
  72:lcd/lcd.c     **** 	0x00, 0x41, 0x22, 0x14, 0x08, /* > */
  73:lcd/lcd.c     **** 	0x02, 0x01, 0x51, 0x09, 0x06, /* ? */
  74:lcd/lcd.c     **** 	0x32, 0x49, 0x79, 0x41, 0x3E, /* @ */
  75:lcd/lcd.c     **** 
  76:lcd/lcd.c     **** 	0x7C, 0x12, 0x11, 0x12, 0x7C, /* A */
  77:lcd/lcd.c     **** 	0x41, 0x7F, 0x49, 0x49, 0x36, /* B */
  78:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x41, 0x22, /* C */
  79:lcd/lcd.c     **** 	0x41, 0x7F, 0x41, 0x41, 0x3E, /* D */
  80:lcd/lcd.c     **** 	0x7F, 0x49, 0x49, 0x49, 0x41, /* E */
  81:lcd/lcd.c     **** 	0x7F, 0x09, 0x09, 0x09, 0x01, /* F */
  82:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x49, 0x7A, /* G */
  83:lcd/lcd.c     **** 	0x7F, 0x08, 0x08, 0x08, 0x7F, /* H */
  84:lcd/lcd.c     **** 	0x00, 0x41, 0x7F, 0x41, 0x00, /* I */
  85:lcd/lcd.c     **** 	0x20, 0x40, 0x41, 0x3F, 0x01, /* J */
  86:lcd/lcd.c     **** 	0x7F, 0x08, 0x14, 0x22, 0x41, /* K */
  87:lcd/lcd.c     **** 	0x7F, 0x40, 0x40, 0x40, 0x40, /* L */
  88:lcd/lcd.c     **** 	0x7F, 0x02, 0x0C, 0x02, 0x7F, /* M */
  89:lcd/lcd.c     **** 	0x7F, 0x04, 0x08, 0x10, 0x7F, /* N */
  90:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x41, 0x3E, /* O */
  91:lcd/lcd.c     **** 	0x7F, 0x09, 0x09, 0x09, 0x06, /* P */
  92:lcd/lcd.c     **** 	0x3E, 0x41, 0x51, 0x21, 0x5E, /* Q */
  93:lcd/lcd.c     **** 	0x7F, 0x09, 0x19, 0x29, 0x46, /* R */
  94:lcd/lcd.c     **** 	0x26, 0x49, 0x49, 0x49, 0x32, /* S */
  95:lcd/lcd.c     **** 	0x01, 0x01, 0x7F, 0x01, 0x01, /* T */
  96:lcd/lcd.c     **** 	0x3F, 0x40, 0x40, 0x40, 0x3F, /* U */
  97:lcd/lcd.c     **** 	0x1F, 0x20, 0x40, 0x20, 0x1F, /* V */
  98:lcd/lcd.c     **** 	0x3F, 0x40, 0x38, 0x40, 0x3F, /* W */
  99:lcd/lcd.c     **** 	0x63, 0x14, 0x08, 0x14, 0x63, /* X */
 100:lcd/lcd.c     **** 	0x07, 0x08, 0x70, 0x08, 0x07, /* Y */
 101:lcd/lcd.c     **** 	0x61, 0x51, 0x49, 0x45, 0x43, /* Z */
 102:lcd/lcd.c     **** 
 103:lcd/lcd.c     **** 	0x00, 0x7F, 0x41, 0x41, 0x00, /* [ */
 104:lcd/lcd.c     **** 	0x02, 0x04, 0x08, 0x10, 0x20, /* \ */
 105:lcd/lcd.c     **** 	0x00, 0x41, 0x41, 0x7F, 0x00, /* ] */
 106:lcd/lcd.c     **** 	0x04, 0x02, 0x01, 0x02, 0x04, /* ^ */
 107:lcd/lcd.c     **** 	0x40, 0x40, 0x40, 0x40, 0x40, /* _ */
 108:lcd/lcd.c     **** 	0x00, 0x01, 0x02, 0x04, 0x00, /* ` */
 109:lcd/lcd.c     **** 
 110:lcd/lcd.c     **** 	0x20, 0x54, 0x54, 0x54, 0x78, /* a */
 111:lcd/lcd.c     **** 	0x7F, 0x48, 0x44, 0x44, 0x38, /* b */
 112:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x44, 0x20, /* c */
 113:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x48, 0x7F, /* d */
 114:lcd/lcd.c     **** 	0x38, 0x54, 0x54, 0x54, 0x18, /* e */
 115:lcd/lcd.c     **** 	0x08, 0x7E, 0x09, 0x01, 0x02, /* f */
 116:lcd/lcd.c     **** 	0x08, 0x54, 0x54, 0x54, 0x3C, /* g */
 117:lcd/lcd.c     **** 	0x7F, 0x08, 0x04, 0x04, 0x78, /* h */
 118:lcd/lcd.c     **** 	0x00, 0x48, 0x7D, 0x40, 0x00, /* i */
 119:lcd/lcd.c     **** 	0x20, 0x40, 0x44, 0x3D, 0x00, /* j */
 120:lcd/lcd.c     **** 	0x7F, 0x10, 0x28, 0x44, 0x00, /* k */
 121:lcd/lcd.c     **** 	0x00, 0x41, 0x7F, 0x40, 0x00, /* l */
 122:lcd/lcd.c     **** 	0x7C, 0x04, 0x78, 0x04, 0x78, /* m */
 123:lcd/lcd.c     **** 	0x7C, 0x08, 0x04, 0x04, 0x78, /* n */
 124:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x44, 0x38, /* o */
 125:lcd/lcd.c     **** 	0x7C, 0x14, 0x14, 0x14, 0x08, /* p */
 126:lcd/lcd.c     **** 	0x08, 0x14, 0x14, 0x18, 0x7C, /* q */
 127:lcd/lcd.c     **** 	0x7C, 0x08, 0x04, 0x04, 0x08, /* r */
 128:lcd/lcd.c     **** 	0x48, 0x54, 0x54, 0x54, 0x20, /* s */
 129:lcd/lcd.c     **** 	0x04, 0x3F, 0x44, 0x40, 0x20, /* t */
 130:lcd/lcd.c     **** 	0x3C, 0x40, 0x40, 0x20, 0x7C, /* u */
 131:lcd/lcd.c     **** 	0x1C, 0x20, 0x40, 0x20, 0x1C, /* v */
 132:lcd/lcd.c     **** 	0x3C, 0x40, 0x30, 0x40, 0x3C, /* w */
 133:lcd/lcd.c     **** 	0x44, 0x28, 0x10, 0x28, 0x44, /* x */
 134:lcd/lcd.c     **** 	0x0C, 0x50, 0x50, 0x50, 0x3C, /* y */
 135:lcd/lcd.c     **** 	0x44, 0x64, 0x54, 0x4C, 0x44, /* z */
 136:lcd/lcd.c     **** 
 137:lcd/lcd.c     **** 	0x00, 0x08, 0x36, 0x41, 0x00, /* { */
 138:lcd/lcd.c     **** 	0x00, 0x00, 0x7F, 0x00, 0x00, /* | */
 139:lcd/lcd.c     **** 	0x00, 0x41, 0x36, 0x08, 0x00, /* } */
 140:lcd/lcd.c     **** 	0x10, 0x08, 0x08, 0x10, 0x08  /* ~ */
 141:lcd/lcd.c     **** };
 142:lcd/lcd.c     **** 
 143:lcd/lcd.c     **** /* --- PRIVATE --- */
 144:lcd/lcd.c     **** 
 145:lcd/lcd.c     **** /**
 146:lcd/lcd.c     ****  * @brief Reset the LCD
 147:lcd/lcd.c     ****  */
 148:lcd/lcd.c     **** static void _lcd_reset(void)
 149:lcd/lcd.c     **** {
 150:lcd/lcd.c     **** 	LCD_RST_1;
 151:lcd/lcd.c     **** 	_delay_ms(500);
 152:lcd/lcd.c     **** 	LCD_RST_0;
 153:lcd/lcd.c     **** 	_delay_ms(500);
 154:lcd/lcd.c     **** 	LCD_RST_1;
 155:lcd/lcd.c     **** 	_delay_ms(500);
 156:lcd/lcd.c     **** }
 157:lcd/lcd.c     **** 
 158:lcd/lcd.c     **** /**
 159:lcd/lcd.c     ****  * @brief Write an LCD register
 160:lcd/lcd.c     ****  *
 161:lcd/lcd.c     ****  * @param reg Register value
 162:lcd/lcd.c     ****  */
 163:lcd/lcd.c     **** static void _lcd_write_reg(u8 reg)
 164:lcd/lcd.c     **** {
 165:lcd/lcd.c     **** 	LCD_DC_0;
 166:lcd/lcd.c     **** 	LCD_CS_0;
 167:lcd/lcd.c     **** 	spi_xchg(reg);
 168:lcd/lcd.c     **** 	LCD_CS_1;
 169:lcd/lcd.c     **** }
 170:lcd/lcd.c     **** 
 171:lcd/lcd.c     **** /**
 172:lcd/lcd.c     ****  * @brief Send data to the LCD
 173:lcd/lcd.c     ****  *
 174:lcd/lcd.c     ****  * @param data Data value
 175:lcd/lcd.c     ****  */
 176:lcd/lcd.c     **** static void _lcd_write_data(u8 data)
 177:lcd/lcd.c     **** {
 178:lcd/lcd.c     **** 	LCD_DC_1;
 179:lcd/lcd.c     **** 	LCD_CS_0;
 180:lcd/lcd.c     **** 	spi_xchg(0);
 181:lcd/lcd.c     **** 	spi_xchg(data);
 182:lcd/lcd.c     **** 	LCD_CS_1;
 183:lcd/lcd.c     **** }
 184:lcd/lcd.c     **** 
 185:lcd/lcd.c     **** /**
 186:lcd/lcd.c     ****  * @brief Start an LCD drawing rectangle
 187:lcd/lcd.c     ****  *
 188:lcd/lcd.c     ****  * @param x X-Coordinate
 189:lcd/lcd.c     ****  * @param y Y-Coordinate
 190:lcd/lcd.c     ****  * @param w Width
 191:lcd/lcd.c     ****  * @param h Height
 192:lcd/lcd.c     ****  */
 193:lcd/lcd.c     **** static void _lcd_window_start(u16 x, u16 y, u16 w, u16 h)
 194:lcd/lcd.c     **** {
 195:lcd/lcd.c     **** 	u16 x_end, y_end;
 196:lcd/lcd.c     **** 
 197:lcd/lcd.c     **** 	x_end = x + w - 1;
 198:lcd/lcd.c     **** 	y_end = y + h - 1;
 199:lcd/lcd.c     **** 
 200:lcd/lcd.c     **** 	spi_fast();
 201:lcd/lcd.c     **** 
 202:lcd/lcd.c     **** 	_lcd_write_reg(0x2A);
 203:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
 204:lcd/lcd.c     **** 	_lcd_write_data(x);
 205:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
 206:lcd/lcd.c     **** 	_lcd_write_data(x_end);
 207:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
 208:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
 209:lcd/lcd.c     **** 	_lcd_write_data(y);
 210:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
 211:lcd/lcd.c     **** 	_lcd_write_data(y_end);
 212:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
 213:lcd/lcd.c     **** 	LCD_DC_1;
 214:lcd/lcd.c     **** 	LCD_CS_0;
 215:lcd/lcd.c     **** }
 216:lcd/lcd.c     **** 
 217:lcd/lcd.c     **** /**
 218:lcd/lcd.c     ****  * @brief Send the color of one pixel to the LCD
 219:lcd/lcd.c     ****  *
 220:lcd/lcd.c     ****  * @param data RGB565 color
 221:lcd/lcd.c     ****  */
 222:lcd/lcd.c     **** static inline void _lcd_pixel(RGB565 data)
 223:lcd/lcd.c     **** {
 224:lcd/lcd.c     **** 	spi_xchg(data >> 8);
 225:lcd/lcd.c     **** 	spi_xchg(data);
 226:lcd/lcd.c     **** }
 227:lcd/lcd.c     **** 
 228:lcd/lcd.c     **** /**
 229:lcd/lcd.c     ****  * @brief End LCD drawing rectangle
 230:lcd/lcd.c     ****  */
 231:lcd/lcd.c     **** static inline void _lcd_window_end(void)
 232:lcd/lcd.c     **** {
 233:lcd/lcd.c     **** 	LCD_CS_1;
 234:lcd/lcd.c     **** }
 235:lcd/lcd.c     **** 
 236:lcd/lcd.c     **** /**
 237:lcd/lcd.c     ****  * @brief Send LCD initialization commands
 238:lcd/lcd.c     ****  */
 239:lcd/lcd.c     **** static void _lcd_init_reg(void)
 240:lcd/lcd.c     **** {
 241:lcd/lcd.c     **** 	_lcd_write_reg(0xF9);
 242:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 243:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 244:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
 245:lcd/lcd.c     **** 	_lcd_write_data(0x19);
 246:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
 247:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
 248:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 249:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 250:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 251:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 252:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 253:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 254:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 255:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 256:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 257:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 258:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 259:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 260:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 261:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 262:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 263:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 264:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 265:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 266:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 267:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 268:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 269:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 270:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 271:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 272:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 273:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 274:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 275:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 276:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 277:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 278:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 279:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 280:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 281:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 282:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 283:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 284:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 285:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 286:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 287:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 288:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 289:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 290:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 291:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 292:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 293:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 294:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 295:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 296:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 297:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 298:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 299:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 300:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 301:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 302:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 303:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 304:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 305:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 306:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 307:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 308:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 309:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 310:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 311:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 312:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 313:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 314:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 315:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 316:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 317:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 318:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 319:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 320:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 321:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 322:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 323:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 324:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 325:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 326:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 327:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 328:lcd/lcd.c     **** }
 329:lcd/lcd.c     **** 
 330:lcd/lcd.c     **** /**
 331:lcd/lcd.c     ****  * @brief Set LCD orientation
 332:lcd/lcd.c     ****  *
 333:lcd/lcd.c     ****  * @param scan_dir LCD orientation (see enum above)
 334:lcd/lcd.c     ****  */
 335:lcd/lcd.c     **** static void _lcd_set_gram_scan_dir(u8 scan_dir)
 336:lcd/lcd.c     **** {
 337:lcd/lcd.c     **** 	u16 a, b;
 338:lcd/lcd.c     **** 	switch(scan_dir)
 339:lcd/lcd.c     **** 	{
 340:lcd/lcd.c     **** 	case L2R_U2D:
 341:lcd/lcd.c     **** 		a = 0x08;
 342:lcd/lcd.c     **** 		b = 0x22;
 343:lcd/lcd.c     **** 		break;
 344:lcd/lcd.c     **** 
 345:lcd/lcd.c     **** 	case L2R_D2U:
 346:lcd/lcd.c     **** 		a = 0x08;
 347:lcd/lcd.c     **** 		b = 0x62;
 348:lcd/lcd.c     **** 		break;
 349:lcd/lcd.c     **** 
 350:lcd/lcd.c     **** 	case R2L_U2D:
 351:lcd/lcd.c     **** 		a = 0x08;
 352:lcd/lcd.c     **** 		b = 0x02;
 353:lcd/lcd.c     **** 		break;
 354:lcd/lcd.c     **** 
 355:lcd/lcd.c     **** 	case R2L_D2U:
 356:lcd/lcd.c     **** 		a = 0x08;
 357:lcd/lcd.c     **** 		b = 0x42;
 358:lcd/lcd.c     **** 		break;
 359:lcd/lcd.c     **** 
 360:lcd/lcd.c     **** 	case U2D_L2R:
 361:lcd/lcd.c     **** 		a = 0x28;
 362:lcd/lcd.c     **** 		b = 0x22;
 363:lcd/lcd.c     **** 		break;
 364:lcd/lcd.c     **** 
 365:lcd/lcd.c     **** 	case U2D_R2L:
 366:lcd/lcd.c     **** 		a = 0x28;
 367:lcd/lcd.c     **** 		b = 0x02;
 368:lcd/lcd.c     **** 		break;
 369:lcd/lcd.c     **** 
 370:lcd/lcd.c     **** 	case D2U_L2R:
 371:lcd/lcd.c     **** 		a = 0x28;
 372:lcd/lcd.c     **** 		b = 0x62;
 373:lcd/lcd.c     **** 		break;
 374:lcd/lcd.c     **** 
 375:lcd/lcd.c     **** 	case D2U_R2L:
 376:lcd/lcd.c     **** 		a = 0x28;
 377:lcd/lcd.c     **** 		b = 0x42;
 378:lcd/lcd.c     **** 		break;
 379:lcd/lcd.c     **** 	}
 380:lcd/lcd.c     **** 
 381:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 382:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 383:lcd/lcd.c     **** 	_lcd_write_data(b);
 384:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 385:lcd/lcd.c     **** 	_lcd_write_data(a);
 386:lcd/lcd.c     **** }
 387:lcd/lcd.c     **** 
 388:lcd/lcd.c     **** /* --- PUBLIC --- */
 389:lcd/lcd.c     **** void lcd_backlight(u8 value)
 390:lcd/lcd.c     **** {
 391:lcd/lcd.c     **** 	/* TODO: Write PWM Value
 392:lcd/lcd.c     **** 	 * CHANGE BACKLIGHT PIN TO PIN 3 (TIMER 2)
 393:lcd/lcd.c     **** 	 */
 394:lcd/lcd.c     **** 	(void)value;
 395:lcd/lcd.c     **** }
 396:lcd/lcd.c     **** 
 397:lcd/lcd.c     **** void lcd_init(u8 backlight, RGB565 bg)
 398:lcd/lcd.c     **** {
 399:lcd/lcd.c     **** 	/* Initialize LCD */
 400:lcd/lcd.c     **** 	log_boot_P(LOG_INIT, PSTR("LCD driver starting"));
 401:lcd/lcd.c     **** 	spi_fast();
 402:lcd/lcd.c     **** 	_lcd_reset();
 403:lcd/lcd.c     **** 	lcd_backlight(backlight);
 404:lcd/lcd.c     **** 	_lcd_init_reg();
 405:lcd/lcd.c     **** 	_lcd_set_gram_scan_dir(SCAN_DIR);
 406:lcd/lcd.c     **** 	_delay_ms(200);
 407:lcd/lcd.c     **** 	_lcd_write_reg(0x11);
 408:lcd/lcd.c     **** 	_delay_ms(120);
 409:lcd/lcd.c     **** 	_lcd_write_reg(0x29);
 410:lcd/lcd.c     **** 
 411:lcd/lcd.c     **** 	lcd_rect(0, 0, LCD_WIDTH, LCD_HEIGHT, bg);
 412:lcd/lcd.c     **** 
 413:lcd/lcd.c     **** 	log_boot_P(LOG_INIT, PSTR("LCD driver initialized"));
 414:lcd/lcd.c     **** }
 415:lcd/lcd.c     **** 
 416:lcd/lcd.c     **** void lcd_rect(u16 x, u16 y, u16 w, u16 h, RGB565 color)
 417:lcd/lcd.c     **** {
 418:lcd/lcd.c     **** 	u16 w0, h0;
 419:lcd/lcd.c     **** 
 420:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 421:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 422:lcd/lcd.c     **** 	{
 423:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 424:lcd/lcd.c     **** 		{
 425:lcd/lcd.c     **** 			_lcd_pixel(color);
 426:lcd/lcd.c     **** 		}
 427:lcd/lcd.c     **** 	}
 428:lcd/lcd.c     **** 
 429:lcd/lcd.c     **** 	_lcd_window_end();
 430:lcd/lcd.c     **** }
 431:lcd/lcd.c     **** 
 432:lcd/lcd.c     **** RGB565 lcd_color(u8 r, u8 g, u8 b)
 140               		.loc 2 432 8 is_stmt 1 view .LVU36
 141               	.LBB33:
 433:lcd/lcd.c     **** {
 434:lcd/lcd.c     **** 	return ((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3);
 142               		.loc 2 434 2 view .LVU37
 143               		.loc 2 434 21 is_stmt 0 view .LVU38
 144 002c 90E0      		ldi r25,0
 145 002e 982F      		mov r25,r24
 146 0030 8827      		clr r24
 147 0032 8827      		clr r24
 148 0034 987F      		andi r25,248
 149               		.loc 2 434 41 view .LVU39
 150 0036 F8E0      		ldi r31,lo8(8)
 151 0038 2F9F      		mul r18,r31
 152 003a 9001      		movw r18,r0
 153 003c 1124      		clr __zero_reg__
 154 003e 207E      		andi r18,224
 155 0040 3770      		andi r19,7
 156               		.loc 2 434 27 view .LVU40
 157 0042 822B      		or r24,r18
 158 0044 932B      		or r25,r19
 159               		.loc 2 434 52 view .LVU41
 160 0046 A695      		lsr r26
 161 0048 A695      		lsr r26
 162 004a A695      		lsr r26
 163               	.LBE33:
 164               	.LBE32:
  87:platform.c    **** 		_gamma_correction(_abgr_r(color)),
  88:platform.c    **** 		_gamma_correction(_abgr_g(color)),
  89:platform.c    **** 		_gamma_correction(_abgr_b(color)));
  90:platform.c    **** }
 165               		.loc 1 90 1 view .LVU42
 166 004c 8A2B      		or r24,r26
 167               	/* epilogue start */
 168 004e 0895      		ret
 169               		.cfi_endproc
 170               	.LFE0:
 173               	serial_tx:
 174               	.LFB2:
 175               		.file 3 "serial/serial.c"
   1:serial/serial.c **** /**
   2:serial/serial.c ****  * @file    serial.c
   3:serial/serial.c ****  * @author  Anton Tchekov
   4:serial/serial.c ****  * @version 0.1
   5:serial/serial.c ****  * @date    16.05.2023
   6:serial/serial.c ****  */
   7:serial/serial.c **** 
   8:serial/serial.c **** #include "serial.h"
   9:serial/serial.c **** #include <avr/io.h>
  10:serial/serial.c **** #include <avr/interrupt.h>
  11:serial/serial.c **** #include <avr/pgmspace.h>
  12:serial/serial.c **** 
  13:serial/serial.c **** /** UART Baudrate */
  14:serial/serial.c **** #define UART_BAUD        9600
  15:serial/serial.c **** 
  16:serial/serial.c **** /** UART Prescaler */
  17:serial/serial.c **** #define UART_PRESCALER       (((F_CPU / (UART_BAUD * 16UL))) - 1)
  18:serial/serial.c **** 
  19:serial/serial.c **** void serial_init(void)
  20:serial/serial.c **** {
  21:serial/serial.c **** 	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  22:serial/serial.c **** 	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
  23:serial/serial.c **** 	UBRR0 = UART_PRESCALER;
  24:serial/serial.c **** }
  25:serial/serial.c **** 
  26:serial/serial.c **** void serial_tx(char c)
  27:serial/serial.c **** {
 176               		.loc 3 27 1 is_stmt 1 view -0
 177               		.cfi_startproc
 178               	/* prologue: function */
 179               	/* frame size = 0 */
 180               	/* stack size = 0 */
 181               	.L__stack_usage = 0
 182               	.LVL6:
 183               	.L3:
  28:serial/serial.c **** 	while(!(UCSR0A & (1 << UDRE0))) {}
 184               		.loc 3 28 35 discriminator 1 view .LVU44
 185               		.loc 3 28 8 discriminator 1 view .LVU45
 186               		.loc 3 28 10 is_stmt 0 discriminator 1 view .LVU46
 187 0050 9091 C000 		lds r25,192
 188               		.loc 3 28 8 discriminator 1 view .LVU47
 189 0054 95FF      		sbrs r25,5
 190 0056 00C0      		rjmp .L3
  29:serial/serial.c **** 	UDR0 = c;
 191               		.loc 3 29 2 is_stmt 1 view .LVU48
 192               		.loc 3 29 7 is_stmt 0 view .LVU49
 193 0058 8093 C600 		sts 198,r24
 194               	/* epilogue start */
  30:serial/serial.c **** }
 195               		.loc 3 30 1 view .LVU50
 196 005c 0895      		ret
 197               		.cfi_endproc
 198               	.LFE2:
 201               	spi_fast:
 202               	.LFB3:
 203               		.file 4 "spi/spi.c"
   1:spi/spi.c     **** /**
   2:spi/spi.c     ****  * @file    spi.c
   3:spi/spi.c     ****  * @author  Anton Tchekov
   4:spi/spi.c     ****  * @version 0.1
   5:spi/spi.c     ****  * @date    16.05.2023
   6:spi/spi.c     ****  */
   7:spi/spi.c     **** 
   8:spi/spi.c     **** #include <spi.h>
   9:spi/spi.c     **** #include <gpio.h>
  10:spi/spi.c     **** #include <logger.h>
  11:spi/spi.c     **** #include <avr/pgmspace.h>
  12:spi/spi.c     **** 
  13:spi/spi.c     **** void spi_init(void)
  14:spi/spi.c     **** {
  15:spi/spi.c     **** 	SPCR = (1 << SPE) | (1 << MSTR);
  16:spi/spi.c     **** 	log_boot_P(LOG_INIT, PSTR("SPI initialized"));
  17:spi/spi.c     **** }
  18:spi/spi.c     **** 
  19:spi/spi.c     **** void spi_fast(void)
  20:spi/spi.c     **** {
 204               		.loc 4 20 1 is_stmt 1 view -0
 205               		.cfi_startproc
 206               	/* prologue: function */
 207               	/* frame size = 0 */
 208               	/* stack size = 0 */
 209               	.L__stack_usage = 0
  21:spi/spi.c     **** 	SPCR &= ~((1 << SPR1) | (1 << SPR0));
 210               		.loc 4 21 2 view .LVU52
 211               		.loc 4 21 7 is_stmt 0 view .LVU53
 212 005e 8CB5      		in r24,0x2c
 213 0060 8C7F      		andi r24,lo8(-4)
 214 0062 8CBD      		out 0x2c,r24
  22:spi/spi.c     **** 	SPSR |= (1 << SPI2X);
 215               		.loc 4 22 2 is_stmt 1 view .LVU54
 216 0064 8DB5      		in r24,0x2d
 217               		.loc 4 22 7 is_stmt 0 view .LVU55
 218 0066 8160      		ori r24,lo8(1)
 219 0068 8DBD      		out 0x2d,r24
 220               	/* epilogue start */
  23:spi/spi.c     **** }
 221               		.loc 4 23 1 view .LVU56
 222 006a 0895      		ret
 223               		.cfi_endproc
 224               	.LFE3:
 227               	spi_xchg_try:
 228               	.LVL7:
 229               	.LFB4:
  24:spi/spi.c     **** 
  25:spi/spi.c     **** u8 spi_xchg(u8 byte)
  26:spi/spi.c     **** {
  27:spi/spi.c     **** 	u16 cnt = 0;
  28:spi/spi.c     **** 	SPDR = byte;
  29:spi/spi.c     **** 	while(!(SPSR & (1 << SPIF)))
  30:spi/spi.c     **** 	{
  31:spi/spi.c     **** 		if(cnt++ == 0xFFFF)
  32:spi/spi.c     **** 		{
  33:spi/spi.c     **** 			panic(PSTR("SPI timeout"));
  34:spi/spi.c     **** 		}
  35:spi/spi.c     **** 	}
  36:spi/spi.c     **** 
  37:spi/spi.c     **** 	return SPDR;
  38:spi/spi.c     **** }
  39:spi/spi.c     **** 
  40:spi/spi.c     **** Status spi_xchg_try(u8 in, u8 *out)
  41:spi/spi.c     **** {
 230               		.loc 4 41 1 is_stmt 1 view -0
 231               		.cfi_startproc
 232               	/* prologue: function */
 233               	/* frame size = 0 */
 234               	/* stack size = 0 */
 235               	.L__stack_usage = 0
 236               		.loc 4 41 1 is_stmt 0 view .LVU58
 237 006c FB01      		movw r30,r22
  42:spi/spi.c     **** 	u16 cnt = 0;
 238               		.loc 4 42 2 is_stmt 1 view .LVU59
 239               	.LVL8:
  43:spi/spi.c     **** 	SPDR = in;
 240               		.loc 4 43 2 view .LVU60
 241               		.loc 4 43 7 is_stmt 0 view .LVU61
 242 006e 8EBD      		out 0x2e,r24
  44:spi/spi.c     **** 	while(!(SPSR & (1 << SPIF)))
 243               		.loc 4 44 2 is_stmt 1 view .LVU62
 244               		.loc 4 44 7 is_stmt 0 view .LVU63
 245 0070 80E0      		ldi r24,0
 246 0072 90E0      		ldi r25,0
 247               	.LVL9:
 248               	.L8:
 249               		.loc 4 44 8 is_stmt 1 view .LVU64
 250 0074 0DB4      		in __tmp_reg__,0x2d
 251 0076 07FE      		sbrs __tmp_reg__,7
 252 0078 00C0      		rjmp .L10
  45:spi/spi.c     **** 	{
  46:spi/spi.c     **** 		if(cnt++ == 0xFFFF)
  47:spi/spi.c     **** 		{
  48:spi/spi.c     **** 			SD_DESELECT;
  49:spi/spi.c     **** 			return STATUS_TIMEOUT;
  50:spi/spi.c     **** 		}
  51:spi/spi.c     **** 	}
  52:spi/spi.c     **** 
  53:spi/spi.c     **** 	*out = SPDR;
 253               		.loc 4 53 2 view .LVU65
 254               		.loc 4 53 9 is_stmt 0 view .LVU66
 255 007a 8EB5      		in r24,0x2e
 256               	.LVL10:
 257               		.loc 4 53 7 view .LVU67
 258 007c 8083      		st Z,r24
 259               	.LVL11:
  54:spi/spi.c     **** 	return STATUS_OK;
 260               		.loc 4 54 2 is_stmt 1 view .LVU68
 261               		.loc 4 54 9 is_stmt 0 view .LVU69
 262 007e 80E0      		ldi r24,0
 263               	/* epilogue start */
  55:spi/spi.c     **** }
 264               		.loc 4 55 1 view .LVU70
 265 0080 0895      		ret
 266               	.LVL12:
 267               	.L10:
  46:spi/spi.c     **** 		{
 268               		.loc 4 46 3 is_stmt 1 view .LVU71
  46:spi/spi.c     **** 		{
 269               		.loc 4 46 5 is_stmt 0 view .LVU72
 270 0082 0197      		sbiw r24,1
 271               	.LVL13:
  46:spi/spi.c     **** 		{
 272               		.loc 4 46 5 view .LVU73
 273 0084 0097      		sbiw r24,0
 274 0086 01F4      		brne .L8
 275               	.LBB36:
 276               	.LBI36:
  40:spi/spi.c     **** {
 277               		.loc 4 40 8 is_stmt 1 view .LVU74
 278               	.LVL14:
 279               	.LBB37:
  48:spi/spi.c     **** 			return STATUS_TIMEOUT;
 280               		.loc 4 48 4 view .LVU75
 281 0088 5C9A      		sbi 0xb,4
  49:spi/spi.c     **** 		}
 282               		.loc 4 49 4 view .LVU76
 283               	.LVL15:
  48:spi/spi.c     **** 			return STATUS_TIMEOUT;
 284               		.loc 4 48 4 is_stmt 0 view .LVU77
 285 008a 82E0      		ldi r24,lo8(2)
 286               	.LVL16:
  48:spi/spi.c     **** 			return STATUS_TIMEOUT;
 287               		.loc 4 48 4 view .LVU78
 288 008c 0895      		ret
 289               	.LBE37:
 290               	.LBE36:
 291               		.cfi_endproc
 292               	.LFE4:
 295               	spi_tx_try:
 296               	.LVL17:
 297               	.LFB6:
  56:spi/spi.c     **** 
  57:spi/spi.c     **** Status spi_tx_try(u8 in)
  58:spi/spi.c     **** {
 298               		.loc 4 58 1 is_stmt 1 view -0
 299               		.cfi_startproc
 300               		.loc 4 58 1 is_stmt 0 view .LVU80
 301 008e CF93      		push r28
 302               		.cfi_def_cfa_offset 3
 303               		.cfi_offset 28, -2
 304 0090 DF93      		push r29
 305               		.cfi_def_cfa_offset 4
 306               		.cfi_offset 29, -3
 307 0092 0F92      		push __tmp_reg__
 308               		.cfi_def_cfa_offset 5
 309 0094 CDB7      		in r28,__SP_L__
 310 0096 DEB7      		in r29,__SP_H__
 311               		.cfi_def_cfa_register 28
 312               	/* prologue: function */
 313               	/* frame size = 1 */
 314               	/* stack size = 3 */
 315               	.L__stack_usage = 3
  59:spi/spi.c     **** 	u8 dummy;
 316               		.loc 4 59 2 is_stmt 1 view .LVU81
  60:spi/spi.c     **** 	return spi_xchg_try(in, &dummy);
 317               		.loc 4 60 2 view .LVU82
 318               		.loc 4 60 9 is_stmt 0 view .LVU83
 319 0098 BE01      		movw r22,r28
 320 009a 6F5F      		subi r22,-1
 321 009c 7F4F      		sbci r23,-1
 322 009e 0E94 0000 		call spi_xchg_try
 323               	.LVL18:
 324               	/* epilogue start */
  61:spi/spi.c     **** }
 325               		.loc 4 61 1 view .LVU84
 326 00a2 0F90      		pop __tmp_reg__
 327 00a4 DF91      		pop r29
 328 00a6 CF91      		pop r28
 329 00a8 0895      		ret
 330               		.cfi_endproc
 331               	.LFE6:
 334               	_lcd_window_end:
 335               	.LFB7:
 232:lcd/lcd.c     **** 	LCD_CS_1;
 336               		.loc 2 232 1 is_stmt 1 view -0
 337               		.cfi_startproc
 338               	/* prologue: function */
 339               	/* frame size = 0 */
 340               	/* stack size = 0 */
 341               	.L__stack_usage = 0
 233:lcd/lcd.c     **** }
 342               		.loc 2 233 2 view .LVU86
 343 00aa 409A      		sbi 0x8,0
 344               	/* epilogue start */
 234:lcd/lcd.c     **** 
 345               		.loc 2 234 1 is_stmt 0 view .LVU87
 346 00ac 0895      		ret
 347               		.cfi_endproc
 348               	.LFE7:
 351               	sd_read:
 352               	.LVL19:
 353               	.LFB8:
 354               		.file 5 "sd/sd.c"
   1:sd/sd.c       **** /**
   2:sd/sd.c       ****  * @file    sd.c
   3:sd/sd.c       ****  * @author  Anton Tchekov
   4:sd/sd.c       ****  * @version 0.2
   5:sd/sd.c       ****  * @date    20.05.2023
   6:sd/sd.c       ****  */
   7:sd/sd.c       **** 
   8:sd/sd.c       **** #include <sd.h>
   9:sd/sd.c       **** #include <spi.h>
  10:sd/sd.c       **** #include <logger.h>
  11:sd/sd.c       **** #include <gpio.h>
  12:sd/sd.c       **** #include <string.h>
  13:sd/sd.c       **** #include <avr/io.h>
  14:sd/sd.c       **** #include <avr/pgmspace.h>
  15:sd/sd.c       **** #include <util/delay.h>
  16:sd/sd.c       **** 
  17:sd/sd.c       **** /** SD go to idle state command */
  18:sd/sd.c       **** #define CMD_GO_IDLE_STATE      0x00
  19:sd/sd.c       **** 
  20:sd/sd.c       **** /** SD send IF cond */
  21:sd/sd.c       **** #define CMD_SEND_IF_COND       0x08
  22:sd/sd.c       **** 
  23:sd/sd.c       **** /** SD read card-specific data register */
  24:sd/sd.c       **** #define CMD_SEND_CSD           0x09
  25:sd/sd.c       **** 
  26:sd/sd.c       **** /** SD read card identification number */
  27:sd/sd.c       **** #define CMD_SEND_CID           0x0A
  28:sd/sd.c       **** 
  29:sd/sd.c       **** /** SD set block length command */
  30:sd/sd.c       **** #define CMD_SET_BLOCKLEN       0x10
  31:sd/sd.c       **** 
  32:sd/sd.c       **** /** SD read single block command */
  33:sd/sd.c       **** #define CMD_READ_SINGLE_BLOCK  0x11
  34:sd/sd.c       **** 
  35:sd/sd.c       **** /** SD write single block command */
  36:sd/sd.c       **** #define CMD_WRITE_SINGLE_BLOCK 0x18
  37:sd/sd.c       **** 
  38:sd/sd.c       **** /** SDHC set OP cond */
  39:sd/sd.c       **** #define CMD_SEND_OP_COND       0x01
  40:sd/sd.c       **** 
  41:sd/sd.c       **** /** SD set OP cond */
  42:sd/sd.c       **** #define CMD_SD_SEND_OP_COND    0x29
  43:sd/sd.c       **** 
  44:sd/sd.c       **** /** SD send app command */
  45:sd/sd.c       **** #define CMD_APP                0x37
  46:sd/sd.c       **** 
  47:sd/sd.c       **** /** SD read operation conditions register */
  48:sd/sd.c       **** #define CMD_READ_OCR           0x3A
  49:sd/sd.c       **** 
  50:sd/sd.c       **** /** SD idle */
  51:sd/sd.c       **** #define IDLE_STATE             (1 << 0)
  52:sd/sd.c       **** 
  53:sd/sd.c       **** /** SD illegal command */
  54:sd/sd.c       **** #define ILLEGAL_CMD            (1 << 2)
  55:sd/sd.c       **** 
  56:sd/sd.c       **** /** SD card type 1 */
  57:sd/sd.c       **** #define SD_1                   (1 << 0)
  58:sd/sd.c       **** 
  59:sd/sd.c       **** /** SD card type 2 */
  60:sd/sd.c       **** #define SD_2                   (1 << 1)
  61:sd/sd.c       **** 
  62:sd/sd.c       **** /** SDHC card type */
  63:sd/sd.c       **** #define SD_HC                  (1 << 2)
  64:sd/sd.c       **** 
  65:sd/sd.c       **** /* SD card properties */
  66:sd/sd.c       **** 
  67:sd/sd.c       **** /** SD card serial number */
  68:sd/sd.c       **** static u32 _serial;
  69:sd/sd.c       **** 
  70:sd/sd.c       **** /** SD card capacity in 512-byte blocks */
  71:sd/sd.c       **** static u32 _capacity;
  72:sd/sd.c       **** 
  73:sd/sd.c       **** /** SD card OEM name: 2 characters + null-terminator */
  74:sd/sd.c       **** static u8 _oem[3];
  75:sd/sd.c       **** 
  76:sd/sd.c       **** /** SD card product name: 5 characters + null-terminator */
  77:sd/sd.c       **** static u8 _product[6];
  78:sd/sd.c       **** 
  79:sd/sd.c       **** /** SD card type: SD1 / SD2 / SDHC */
  80:sd/sd.c       **** static u8 _card_type;
  81:sd/sd.c       **** 
  82:sd/sd.c       **** /** SD manufacturer ID */
  83:sd/sd.c       **** static u8 _manufacturer;
  84:sd/sd.c       **** 
  85:sd/sd.c       **** /** SD card revision number as packed BCD */
  86:sd/sd.c       **** static u8 _revision;
  87:sd/sd.c       **** 
  88:sd/sd.c       **** /** SD card manufacturing year after 2000 */
  89:sd/sd.c       **** static u8 _manufacturing_year;
  90:sd/sd.c       **** 
  91:sd/sd.c       **** /** SD card manufacturing month number */
  92:sd/sd.c       **** static u8 _manufacturing_month;
  93:sd/sd.c       **** 
  94:sd/sd.c       **** /** SD card copy/original flag */
  95:sd/sd.c       **** static u8 _flag_copy;
  96:sd/sd.c       **** 
  97:sd/sd.c       **** /** SD card write protected flag */
  98:sd/sd.c       **** static u8 _flag_write_protect;
  99:sd/sd.c       **** 
 100:sd/sd.c       **** /** SD card temporarily write protected flag */
 101:sd/sd.c       **** static u8 _flag_write_protect_temp;
 102:sd/sd.c       **** 
 103:sd/sd.c       **** /** SD card format ID */
 104:sd/sd.c       **** static u8 _format;
 105:sd/sd.c       **** 
 106:sd/sd.c       **** /* --- PRIVATE --- */
 107:sd/sd.c       **** 
 108:sd/sd.c       **** /**
 109:sd/sd.c       ****  * @brief Put SPI into slow mode for initialization
 110:sd/sd.c       ****  */
 111:sd/sd.c       **** static void _spi_configure_slow(void)
 112:sd/sd.c       **** {
 113:sd/sd.c       **** 	SPCR |= (1 << SPR1) | (1 << SPR0);
 114:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 115:sd/sd.c       **** }
 116:sd/sd.c       **** 
 117:sd/sd.c       **** /**
 118:sd/sd.c       ****  * @brief Trigger an SD timeout panic
 119:sd/sd.c       ****  */
 120:sd/sd.c       **** static void _sd_timeout(void)
 121:sd/sd.c       **** {
 122:sd/sd.c       **** 	SD_DESELECT;
 123:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 124:sd/sd.c       **** }
 125:sd/sd.c       **** 
 126:sd/sd.c       **** /**
 127:sd/sd.c       ****  * @brief Trigger an SD error panic
 128:sd/sd.c       ****  */
 129:sd/sd.c       **** static void _sd_error(void)
 130:sd/sd.c       **** {
 131:sd/sd.c       **** 	SD_DESELECT;
 132:sd/sd.c       **** 	panic(PSTR("SD error"));
 133:sd/sd.c       **** }
 134:sd/sd.c       **** 
 135:sd/sd.c       **** /**
 136:sd/sd.c       ****  * @brief Execute an SD command (panic if failed)
 137:sd/sd.c       ****  *
 138:sd/sd.c       ****  * @param cmd Command number
 139:sd/sd.c       ****  * @param arg Address parameter
 140:sd/sd.c       ****  * @return Output byte
 141:sd/sd.c       ****  */
 142:sd/sd.c       **** static u8 _sd_command(u8 cmd, u32 arg)
 143:sd/sd.c       **** {
 144:sd/sd.c       **** 	u8 i, response;
 145:sd/sd.c       **** 	spi_xchg(0xFF);
 146:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
 147:sd/sd.c       **** 	spi_xchg((arg >> 24) & 0xFF);
 148:sd/sd.c       **** 	spi_xchg((arg >> 16) & 0xFF);
 149:sd/sd.c       **** 	spi_xchg((arg >> 8) & 0xFF);
 150:sd/sd.c       **** 	spi_xchg((arg >> 0) & 0xFF);
 151:sd/sd.c       **** 	switch(cmd)
 152:sd/sd.c       **** 	{
 153:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
 154:sd/sd.c       **** 		spi_xchg(0x95);
 155:sd/sd.c       **** 		break;
 156:sd/sd.c       **** 
 157:sd/sd.c       **** 	case CMD_SEND_IF_COND:
 158:sd/sd.c       **** 		spi_xchg(0x87);
 159:sd/sd.c       **** 		break;
 160:sd/sd.c       **** 
 161:sd/sd.c       **** 	default:
 162:sd/sd.c       **** 		spi_xchg(0xFF);
 163:sd/sd.c       **** 		break;
 164:sd/sd.c       **** 	}
 165:sd/sd.c       **** 
 166:sd/sd.c       **** 	for(i = 0; i < 10 && ((response = spi_xchg(0xFF)) == 0xFF); ++i) ;
 167:sd/sd.c       **** 	return response;
 168:sd/sd.c       **** }
 169:sd/sd.c       **** 
 170:sd/sd.c       **** /**
 171:sd/sd.c       ****  * @brief Try to execute an SD command
 172:sd/sd.c       ****  *
 173:sd/sd.c       ****  * @param cmd Command number
 174:sd/sd.c       ****  * @param arg Address parameter
 175:sd/sd.c       ****  * @return Status response
 176:sd/sd.c       ****  */
 177:sd/sd.c       **** static Status _sd_command_try(u8 cmd, u32 arg)
 178:sd/sd.c       **** {
 179:sd/sd.c       **** 	u8 i, response;
 180:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 181:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 186:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 187:sd/sd.c       **** 	for(i = 0; ; ++i)
 188:sd/sd.c       **** 	{
 189:sd/sd.c       **** 		RETURN_IF(spi_rx_try(&response));
 190:sd/sd.c       **** 		if(response != 0xFF)
 191:sd/sd.c       **** 		{
 192:sd/sd.c       **** 			break;
 193:sd/sd.c       **** 		}
 194:sd/sd.c       **** 
 195:sd/sd.c       **** 		if(i >= 10)
 196:sd/sd.c       **** 		{
 197:sd/sd.c       **** 			return STATUS_TIMEOUT;
 198:sd/sd.c       **** 		}
 199:sd/sd.c       **** 	}
 200:sd/sd.c       **** 
 201:sd/sd.c       **** 	if(response)
 202:sd/sd.c       **** 	{
 203:sd/sd.c       **** 		SD_DESELECT;
 204:sd/sd.c       **** 		return STATUS_FAIL;
 205:sd/sd.c       **** 	}
 206:sd/sd.c       **** 
 207:sd/sd.c       **** 	return STATUS_OK;
 208:sd/sd.c       **** }
 209:sd/sd.c       **** 
 210:sd/sd.c       **** /**
 211:sd/sd.c       ****  * @brief Convert block number to internal SD address
 212:sd/sd.c       ****  *        since SD uses byte address but SDHC uses block number
 213:sd/sd.c       ****  *
 214:sd/sd.c       ****  * @param block Block number
 215:sd/sd.c       ****  * @return Internal Address
 216:sd/sd.c       ****  */
 217:sd/sd.c       **** static u32 _sd_block_addr(u32 block)
 218:sd/sd.c       **** {
 219:sd/sd.c       **** 	return _card_type & SD_HC ? block : (block << BLOCK_SIZE_POT);
 220:sd/sd.c       **** }
 221:sd/sd.c       **** 
 222:sd/sd.c       **** /**
 223:sd/sd.c       ****  * @brief Print SD card info to serial port
 224:sd/sd.c       ****  */
 225:sd/sd.c       **** static void _sd_info_print(void)
 226:sd/sd.c       **** {
 227:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Card Type        : %S"),
 228:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 229:sd/sd.c       **** 
 230:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Block Size       : %d"),
 231:sd/sd.c       **** 		BLOCK_SIZE);
 232:sd/sd.c       **** 
 233:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Manufacturer ID  : %02X"),
 234:sd/sd.c       **** 		_manufacturer);
 235:sd/sd.c       **** 
 236:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("OEM              : %s"),
 237:sd/sd.c       **** 		_oem);
 238:sd/sd.c       **** 
 239:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Product Name     : %s"),
 240:sd/sd.c       **** 		_product);
 241:sd/sd.c       **** 
 242:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Revision         : %c.%c"),
 243:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 244:sd/sd.c       **** 
 245:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Serial Number    : 0x%08"PRIx32),
 246:sd/sd.c       **** 		_serial);
 247:sd/sd.c       **** 
 248:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Manufacture Date : %02d-%d"),
 249:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 250:sd/sd.c       **** 
 251:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Capacity         : %"PRIu32" blocks"),
 252:sd/sd.c       **** 		_capacity);
 253:sd/sd.c       **** 
 254:sd/sd.c       **** 	log_boot_P(LOG_OFFSET, PSTR("                   (%"PRIu32" bytes)"),
 255:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 256:sd/sd.c       **** 
 257:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Format           : 0x%02X"),
 258:sd/sd.c       **** 		_format);
 259:sd/sd.c       **** 
 260:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Flags            : %S%S"),
 261:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 262:sd/sd.c       **** 		_flag_write_protect_temp ? PSTR("Temporarily Write Protected") :
 263:sd/sd.c       **** 			(_flag_write_protect ? PSTR("Write Protected") :
 264:sd/sd.c       **** 			PSTR("Rewritable")));
 265:sd/sd.c       **** }
 266:sd/sd.c       **** 
 267:sd/sd.c       **** /* --- PUBLIC --- */
 268:sd/sd.c       **** void sd_init(void)
 269:sd/sd.c       **** {
 270:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("SD driver starting"));
 271:sd/sd.c       **** 
 272:sd/sd.c       **** 	{
 273:sd/sd.c       **** 		u8 response;
 274:sd/sd.c       **** 		u16 i;
 275:sd/sd.c       **** 		u32 arg;
 276:sd/sd.c       **** 
 277:sd/sd.c       **** 		SD_DESELECT;
 278:sd/sd.c       **** 		_spi_configure_slow();
 279:sd/sd.c       **** 		_card_type = 0;
 280:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 281:sd/sd.c       **** 		{
 282:sd/sd.c       **** 			spi_xchg(0xFF);
 283:sd/sd.c       **** 		}
 284:sd/sd.c       **** 
 285:sd/sd.c       **** 		SD_SELECT;
 286:sd/sd.c       **** 		for(i = 0; ; ++i)
 287:sd/sd.c       **** 		{
 288:sd/sd.c       **** 			if(_sd_command(CMD_GO_IDLE_STATE, 0) == IDLE_STATE)
 289:sd/sd.c       **** 			{
 290:sd/sd.c       **** 				break;
 291:sd/sd.c       **** 			}
 292:sd/sd.c       **** 
 293:sd/sd.c       **** 			if(i == 0x1FF)
 294:sd/sd.c       **** 			{
 295:sd/sd.c       **** 				_sd_timeout();
 296:sd/sd.c       **** 			}
 297:sd/sd.c       **** 		}
 298:sd/sd.c       **** 
 299:sd/sd.c       **** 		if((_sd_command(CMD_SEND_IF_COND, 0x1AA) & ILLEGAL_CMD) == 0)
 300:sd/sd.c       **** 		{
 301:sd/sd.c       **** 			spi_xchg(0xFF);
 302:sd/sd.c       **** 			spi_xchg(0xFF);
 303:sd/sd.c       **** 			if(((spi_xchg(0xFF) & 0x01) == 0) ||
 304:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 305:sd/sd.c       **** 			{
 306:sd/sd.c       **** 				_sd_error();
 307:sd/sd.c       **** 			}
 308:sd/sd.c       **** 
 309:sd/sd.c       **** 			_card_type |= SD_2;
 310:sd/sd.c       **** 		}
 311:sd/sd.c       **** 		else
 312:sd/sd.c       **** 		{
 313:sd/sd.c       **** 			_sd_command(CMD_APP, 0);
 314:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 315:sd/sd.c       **** 			{
 316:sd/sd.c       **** 				_card_type |= SD_1;
 317:sd/sd.c       **** 			}
 318:sd/sd.c       **** 		}
 319:sd/sd.c       **** 
 320:sd/sd.c       **** 		for(i = 0; ; ++i)
 321:sd/sd.c       **** 		{
 322:sd/sd.c       **** 			if(_card_type & (SD_1 | SD_2))
 323:sd/sd.c       **** 			{
 324:sd/sd.c       **** 				arg = 0;
 325:sd/sd.c       **** 				if(_card_type & SD_2)
 326:sd/sd.c       **** 				{
 327:sd/sd.c       **** 					arg = 0x40000000;
 328:sd/sd.c       **** 				}
 329:sd/sd.c       **** 
 330:sd/sd.c       **** 				_sd_command(CMD_APP, 0);
 331:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 332:sd/sd.c       **** 			}
 333:sd/sd.c       **** 			else
 334:sd/sd.c       **** 			{
 335:sd/sd.c       **** 				response = _sd_command(CMD_SEND_OP_COND, 0);
 336:sd/sd.c       **** 			}
 337:sd/sd.c       **** 
 338:sd/sd.c       **** 			if((response & IDLE_STATE) == 0)
 339:sd/sd.c       **** 			{
 340:sd/sd.c       **** 				break;
 341:sd/sd.c       **** 			}
 342:sd/sd.c       **** 
 343:sd/sd.c       **** 			if(i == 0x7FFF)
 344:sd/sd.c       **** 			{
 345:sd/sd.c       **** 				_sd_timeout();
 346:sd/sd.c       **** 			}
 347:sd/sd.c       **** 		}
 348:sd/sd.c       **** 
 349:sd/sd.c       **** 		if(_card_type & SD_2)
 350:sd/sd.c       **** 		{
 351:sd/sd.c       **** 			if(_sd_command(CMD_READ_OCR, 0))
 352:sd/sd.c       **** 			{
 353:sd/sd.c       **** 				_sd_error();
 354:sd/sd.c       **** 			}
 355:sd/sd.c       **** 
 356:sd/sd.c       **** 			if(spi_xchg(0xFF) & 0x40)
 357:sd/sd.c       **** 			{
 358:sd/sd.c       **** 				_card_type |= SD_HC;
 359:sd/sd.c       **** 			}
 360:sd/sd.c       **** 
 361:sd/sd.c       **** 			spi_xchg(0xFF);
 362:sd/sd.c       **** 			spi_xchg(0xFF);
 363:sd/sd.c       **** 			spi_xchg(0xFF);
 364:sd/sd.c       **** 		}
 365:sd/sd.c       **** 
 366:sd/sd.c       **** 		if(_sd_command(CMD_SET_BLOCKLEN, 512))
 367:sd/sd.c       **** 		{
 368:sd/sd.c       **** 			_sd_error();
 369:sd/sd.c       **** 		}
 370:sd/sd.c       **** 
 371:sd/sd.c       **** 		SD_DESELECT;
 372:sd/sd.c       **** 		spi_fast();
 373:sd/sd.c       **** 		_delay_ms(20);
 374:sd/sd.c       **** 	}
 375:sd/sd.c       **** 
 376:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("SD card initialized"));
 377:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("Reading SD card parameters"));
 378:sd/sd.c       **** 
 379:sd/sd.c       **** 	{
 380:sd/sd.c       **** 		u8 i, b, csd_read_bl_len, csd_c_size_mult, csd_structure;
 381:sd/sd.c       **** 		u16 j, csd_c_size;
 382:sd/sd.c       **** 
 383:sd/sd.c       **** 		spi_fast();
 384:sd/sd.c       **** 		SD_SELECT;
 385:sd/sd.c       **** 
 386:sd/sd.c       **** 		/* Read CID register */
 387:sd/sd.c       **** 		_sd_command(CMD_SEND_CID, 0);
 388:sd/sd.c       **** 		j = 0;
 389:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 390:sd/sd.c       **** 		{
 391:sd/sd.c       **** 			if(++j > 0x7FFF)
 392:sd/sd.c       **** 			{
 393:sd/sd.c       **** 				_sd_timeout();
 394:sd/sd.c       **** 			}
 395:sd/sd.c       **** 		}
 396:sd/sd.c       **** 
 397:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 398:sd/sd.c       **** 		{
 399:sd/sd.c       **** 			b = spi_xchg(0xFF);
 400:sd/sd.c       **** 			switch(i)
 401:sd/sd.c       **** 			{
 402:sd/sd.c       **** 				case 0:
 403:sd/sd.c       **** 					_manufacturer = b;
 404:sd/sd.c       **** 					break;
 405:sd/sd.c       **** 
 406:sd/sd.c       **** 				case 1:
 407:sd/sd.c       **** 				case 2:
 408:sd/sd.c       **** 					_oem[i - 1] = b;
 409:sd/sd.c       **** 					break;
 410:sd/sd.c       **** 
 411:sd/sd.c       **** 				case 3:
 412:sd/sd.c       **** 				case 4:
 413:sd/sd.c       **** 				case 5:
 414:sd/sd.c       **** 				case 6:
 415:sd/sd.c       **** 				case 7:
 416:sd/sd.c       **** 					_product[i - 3] = b;
 417:sd/sd.c       **** 					break;
 418:sd/sd.c       **** 
 419:sd/sd.c       **** 				case 8:
 420:sd/sd.c       **** 					_revision = b;
 421:sd/sd.c       **** 					break;
 422:sd/sd.c       **** 
 423:sd/sd.c       **** 				case 9:
 424:sd/sd.c       **** 				case 10:
 425:sd/sd.c       **** 				case 11:
 426:sd/sd.c       **** 				case 12:
 427:sd/sd.c       **** 					_serial |= (u32)b << ((12 - i) * 8);
 428:sd/sd.c       **** 					break;
 429:sd/sd.c       **** 
 430:sd/sd.c       **** 				case 13:
 431:sd/sd.c       **** 					_manufacturing_year = b << 4;
 432:sd/sd.c       **** 					break;
 433:sd/sd.c       **** 
 434:sd/sd.c       **** 				case 14:
 435:sd/sd.c       **** 					_manufacturing_year |= b >> 4;
 436:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 437:sd/sd.c       **** 					break;
 438:sd/sd.c       **** 			}
 439:sd/sd.c       **** 		}
 440:sd/sd.c       **** 
 441:sd/sd.c       **** 		/* Read CSD register */
 442:sd/sd.c       **** 		csd_read_bl_len = 0;
 443:sd/sd.c       **** 		csd_c_size_mult = 0;
 444:sd/sd.c       **** 		csd_structure = 0;
 445:sd/sd.c       **** 		csd_c_size = 0;
 446:sd/sd.c       **** 
 447:sd/sd.c       **** 		_sd_command(CMD_SEND_CSD, 0);
 448:sd/sd.c       **** 		j = 0;
 449:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 450:sd/sd.c       **** 		{
 451:sd/sd.c       **** 			if(++j > 0x7FFF)
 452:sd/sd.c       **** 			{
 453:sd/sd.c       **** 				_sd_timeout();
 454:sd/sd.c       **** 			}
 455:sd/sd.c       **** 		}
 456:sd/sd.c       **** 
 457:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 458:sd/sd.c       **** 		{
 459:sd/sd.c       **** 			b = spi_xchg(0xFF);
 460:sd/sd.c       **** 			if(i == 0)
 461:sd/sd.c       **** 			{
 462:sd/sd.c       **** 				csd_structure = b >> 6;
 463:sd/sd.c       **** 			}
 464:sd/sd.c       **** 			else if(i == 14)
 465:sd/sd.c       **** 			{
 466:sd/sd.c       **** 				if(b & 0x40)
 467:sd/sd.c       **** 				{
 468:sd/sd.c       **** 					_flag_copy = 1;
 469:sd/sd.c       **** 				}
 470:sd/sd.c       **** 
 471:sd/sd.c       **** 				if(b & 0x20)
 472:sd/sd.c       **** 				{
 473:sd/sd.c       **** 					_flag_write_protect = 1;
 474:sd/sd.c       **** 				}
 475:sd/sd.c       **** 
 476:sd/sd.c       **** 				if(b & 0x10)
 477:sd/sd.c       **** 				{
 478:sd/sd.c       **** 					_flag_write_protect_temp = 1;
 479:sd/sd.c       **** 				}
 480:sd/sd.c       **** 
 481:sd/sd.c       **** 				_format = (b & 0x0C) >> 2;
 482:sd/sd.c       **** 			}
 483:sd/sd.c       **** 			else
 484:sd/sd.c       **** 			{
 485:sd/sd.c       **** 				if(csd_structure == 0x01)
 486:sd/sd.c       **** 				{
 487:sd/sd.c       **** 					switch(i)
 488:sd/sd.c       **** 					{
 489:sd/sd.c       **** 						case 7:
 490:sd/sd.c       **** 							b &= 0x3f;
 491:sd/sd.c       **** 
 492:sd/sd.c       **** 						case 8:
 493:sd/sd.c       **** 						case 9:
 494:sd/sd.c       **** 							csd_c_size <<= 8;
 495:sd/sd.c       **** 							csd_c_size |= b;
 496:sd/sd.c       **** 							++csd_c_size;
 497:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 498:sd/sd.c       **** 					}
 499:sd/sd.c       **** 				}
 500:sd/sd.c       **** 				else if(csd_structure == 0x00)
 501:sd/sd.c       **** 				{
 502:sd/sd.c       **** 					switch(i)
 503:sd/sd.c       **** 					{
 504:sd/sd.c       **** 						case 5:
 505:sd/sd.c       **** 							csd_read_bl_len = b & 0x0F;
 506:sd/sd.c       **** 							break;
 507:sd/sd.c       **** 
 508:sd/sd.c       **** 						case 6:
 509:sd/sd.c       **** 							csd_c_size = b & 0x03;
 510:sd/sd.c       **** 							csd_c_size <<= 8;
 511:sd/sd.c       **** 							break;
 512:sd/sd.c       **** 
 513:sd/sd.c       **** 						case 7:
 514:sd/sd.c       **** 							csd_c_size |= b;
 515:sd/sd.c       **** 							csd_c_size <<= 2;
 516:sd/sd.c       **** 							break;
 517:sd/sd.c       **** 
 518:sd/sd.c       **** 						case 8:
 519:sd/sd.c       **** 							csd_c_size |= b >> 6;
 520:sd/sd.c       **** 							++csd_c_size;
 521:sd/sd.c       **** 							break;
 522:sd/sd.c       **** 
 523:sd/sd.c       **** 						case 9:
 524:sd/sd.c       **** 							csd_c_size_mult = b & 0x03;
 525:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 526:sd/sd.c       **** 							break;
 527:sd/sd.c       **** 
 528:sd/sd.c       **** 						case 10:
 529:sd/sd.c       **** 							csd_c_size_mult |= b >> 7;
 530:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 531:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 532:sd/sd.c       **** 							break;
 533:sd/sd.c       **** 					}
 534:sd/sd.c       **** 				}
 535:sd/sd.c       **** 			}
 536:sd/sd.c       **** 		}
 537:sd/sd.c       **** 
 538:sd/sd.c       **** 		SD_DESELECT;
 539:sd/sd.c       **** 	}
 540:sd/sd.c       **** 
 541:sd/sd.c       **** 	/* Print disk info */
 542:sd/sd.c       **** 	_sd_info_print();
 543:sd/sd.c       **** }
 544:sd/sd.c       **** 
 545:sd/sd.c       **** u32 sd_size(void)
 546:sd/sd.c       **** {
 547:sd/sd.c       **** 	return _capacity;
 548:sd/sd.c       **** }
 549:sd/sd.c       **** 
 550:sd/sd.c       **** Status sd_read(u32 block, void *data)
 551:sd/sd.c       **** {
 355               		.loc 5 551 1 is_stmt 1 view -0
 356               		.cfi_startproc
 357               		.loc 5 551 1 is_stmt 0 view .LVU89
 358 00ae AF92      		push r10
 359               		.cfi_def_cfa_offset 3
 360               		.cfi_offset 10, -2
 361 00b0 BF92      		push r11
 362               		.cfi_def_cfa_offset 4
 363               		.cfi_offset 11, -3
 364 00b2 CF92      		push r12
 365               		.cfi_def_cfa_offset 5
 366               		.cfi_offset 12, -4
 367 00b4 DF92      		push r13
 368               		.cfi_def_cfa_offset 6
 369               		.cfi_offset 13, -5
 370 00b6 EF92      		push r14
 371               		.cfi_def_cfa_offset 7
 372               		.cfi_offset 14, -6
 373 00b8 FF92      		push r15
 374               		.cfi_def_cfa_offset 8
 375               		.cfi_offset 15, -7
 376 00ba 0F93      		push r16
 377               		.cfi_def_cfa_offset 9
 378               		.cfi_offset 16, -8
 379 00bc 1F93      		push r17
 380               		.cfi_def_cfa_offset 10
 381               		.cfi_offset 17, -9
 382 00be CF93      		push r28
 383               		.cfi_def_cfa_offset 11
 384               		.cfi_offset 28, -10
 385 00c0 DF93      		push r29
 386               		.cfi_def_cfa_offset 12
 387               		.cfi_offset 29, -11
 388 00c2 0F92      		push __tmp_reg__
 389               		.cfi_def_cfa_offset 13
 390 00c4 CDB7      		in r28,__SP_L__
 391 00c6 DEB7      		in r29,__SP_H__
 392               		.cfi_def_cfa_register 28
 393               	/* prologue: function */
 394               	/* frame size = 1 */
 395               	/* stack size = 11 */
 396               	.L__stack_usage = 11
 397 00c8 6B01      		movw r12,r22
 398 00ca 7C01      		movw r14,r24
 399 00cc 8A01      		movw r16,r20
 552:sd/sd.c       **** 	u16 i;
 400               		.loc 5 552 2 is_stmt 1 view .LVU90
 553:sd/sd.c       **** 	u8 *data8, response;
 401               		.loc 5 553 2 view .LVU91
 554:sd/sd.c       **** 
 555:sd/sd.c       **** 	data8 = data;
 402               		.loc 5 555 2 view .LVU92
 403               	.LVL20:
 556:sd/sd.c       **** 	SD_SELECT;
 404               		.loc 5 556 2 view .LVU93
 405 00ce 5C98      		cbi 0xb,4
 557:sd/sd.c       **** 
 558:sd/sd.c       **** 	/* Start read */
 559:sd/sd.c       **** 	RETURN_IF(_sd_command_try(CMD_READ_SINGLE_BLOCK,
 406               		.loc 5 559 2 view .LVU94
 407               	.LBB75:
 408               		.loc 5 559 2 view .LVU95
 409               	.LVL21:
 410               	.LBB76:
 411               	.LBI76:
 217:sd/sd.c       **** {
 412               		.loc 5 217 12 view .LVU96
 413               	.LBB77:
 219:sd/sd.c       **** }
 414               		.loc 5 219 2 view .LVU97
 219:sd/sd.c       **** }
 415               		.loc 5 219 36 is_stmt 0 view .LVU98
 416 00d0 8091 0000 		lds r24,_card_type
 417 00d4 82FD      		sbrc r24,2
 418 00d6 00C0      		rjmp .L15
 419 00d8 99E0      		ldi r25,9
 420               		1:
 421 00da CC0C      		lsl r12
 422 00dc DD1C      		rol r13
 423 00de EE1C      		rol r14
 424 00e0 FF1C      		rol r15
 425 00e2 9A95      		dec r25
 426 00e4 01F4      		brne 1b
 427               	.LVL22:
 428               	.L15:
 219:sd/sd.c       **** }
 429               		.loc 5 219 36 view .LVU99
 430               	.LBE77:
 431               	.LBE76:
 432               	.LBB78:
 433               	.LBI78:
 177:sd/sd.c       **** {
 434               		.loc 5 177 15 is_stmt 1 view .LVU100
 435               	.LBB79:
 436               	.LBB80:
 180:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 437               		.loc 5 180 2 is_stmt 0 view .LVU101
 438 00e6 8FEF      		ldi r24,lo8(-1)
 439 00e8 0E94 0000 		call spi_tx_try
 440               	.LVL23:
 180:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 441               		.loc 5 180 2 view .LVU102
 442 00ec 8111      		cpse r24,__zero_reg__
 443 00ee 00C0      		rjmp .L14
 444               	.LBE80:
 445               	.LBB81:
 181:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 446               		.loc 5 181 2 view .LVU103
 447 00f0 81E5      		ldi r24,lo8(81)
 448               	.LVL24:
 181:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 449               		.loc 5 181 2 view .LVU104
 450 00f2 0E94 0000 		call spi_tx_try
 451               	.LVL25:
 181:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 452               		.loc 5 181 2 view .LVU105
 453 00f6 8111      		cpse r24,__zero_reg__
 454 00f8 00C0      		rjmp .L14
 455               	.LBE81:
 456               	.LBB82:
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 457               		.loc 5 182 2 view .LVU106
 458 00fa 8F2D      		mov r24,r15
 459               	.LVL26:
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 460               		.loc 5 182 2 view .LVU107
 461 00fc 0E94 0000 		call spi_tx_try
 462               	.LVL27:
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 463               		.loc 5 182 2 view .LVU108
 464 0100 8111      		cpse r24,__zero_reg__
 465 0102 00C0      		rjmp .L14
 466               	.LBE82:
 467               	.LBB83:
 468               	.LBI83:
 177:sd/sd.c       **** {
 469               		.loc 5 177 15 is_stmt 1 view .LVU109
 470               	.LVL28:
 471               	.LBB84:
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 472               		.loc 5 182 2 view .LVU110
 182:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 473               		.loc 5 182 34 view .LVU111
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 474               		.loc 5 183 2 view .LVU112
 475               	.LBB85:
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 476               		.loc 5 183 2 view .LVU113
 477 0104 8E2D      		mov r24,r14
 478               	.LVL29:
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 479               		.loc 5 183 2 is_stmt 0 view .LVU114
 480 0106 0E94 0000 		call spi_tx_try
 481               	.LVL30:
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 482               		.loc 5 183 2 is_stmt 1 view .LVU115
 483 010a 8111      		cpse r24,__zero_reg__
 484 010c 00C0      		rjmp .L14
 485               	.LBE85:
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 486               		.loc 5 183 2 view .LVU116
 183:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 487               		.loc 5 183 34 view .LVU117
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 488               		.loc 5 184 2 view .LVU118
 489               	.LBB86:
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 490               		.loc 5 184 2 view .LVU119
 491 010e 8D2D      		mov r24,r13
 492               	.LVL31:
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 493               		.loc 5 184 2 is_stmt 0 view .LVU120
 494 0110 0E94 0000 		call spi_tx_try
 495               	.LVL32:
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 496               		.loc 5 184 2 is_stmt 1 view .LVU121
 497 0114 8111      		cpse r24,__zero_reg__
 498 0116 00C0      		rjmp .L14
 499               	.LBE86:
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 500               		.loc 5 184 2 view .LVU122
 184:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 501               		.loc 5 184 33 view .LVU123
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 502               		.loc 5 185 2 view .LVU124
 503               	.LBB87:
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 504               		.loc 5 185 2 view .LVU125
 505 0118 8C2D      		mov r24,r12
 506               	.LVL33:
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 507               		.loc 5 185 2 is_stmt 0 view .LVU126
 508 011a 0E94 0000 		call spi_tx_try
 509               	.LVL34:
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 510               		.loc 5 185 2 is_stmt 1 view .LVU127
 511 011e 8111      		cpse r24,__zero_reg__
 512 0120 00C0      		rjmp .L14
 513               	.LBE87:
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 514               		.loc 5 185 2 view .LVU128
 185:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 515               		.loc 5 185 28 view .LVU129
 186:sd/sd.c       **** 	for(i = 0; ; ++i)
 516               		.loc 5 186 2 view .LVU130
 517               	.LBB88:
 186:sd/sd.c       **** 	for(i = 0; ; ++i)
 518               		.loc 5 186 2 view .LVU131
 519 0122 8FEF      		ldi r24,lo8(-1)
 520               	.LVL35:
 186:sd/sd.c       **** 	for(i = 0; ; ++i)
 521               		.loc 5 186 2 is_stmt 0 view .LVU132
 522 0124 0E94 0000 		call spi_tx_try
 523               	.LVL36:
 186:sd/sd.c       **** 	for(i = 0; ; ++i)
 524               		.loc 5 186 2 is_stmt 1 view .LVU133
 525 0128 8111      		cpse r24,__zero_reg__
 526 012a 00C0      		rjmp .L14
 527 012c 8BE0      		ldi r24,lo8(11)
 528 012e F82E      		mov r15,r24
 529               	.LVL37:
 186:sd/sd.c       **** 	for(i = 0; ; ++i)
 530               		.loc 5 186 2 is_stmt 0 view .LVU134
 531               	.LBE88:
 532               	.LBB89:
 533               	.LBB90:
 534               	.LBB91:
  62:spi/spi.c     **** 
  63:spi/spi.c     **** Status spi_rx_try(u8 *out)
  64:spi/spi.c     **** {
  65:spi/spi.c     **** 	return spi_xchg_try(0xFF, out);
 535               		.loc 4 65 9 view .LVU135
 536 0130 CE01      		movw r24,r28
 537 0132 0196      		adiw r24,1
 538 0134 6C01      		movw r12,r24
 539               	.LVL38:
 540               	.L23:
 541               		.loc 4 65 9 view .LVU136
 542               	.LBE91:
 543               	.LBE90:
 544               	.LBE89:
 189:sd/sd.c       **** 		if(response != 0xFF)
 545               		.loc 5 189 3 is_stmt 1 view .LVU137
 546               	.LBB94:
 189:sd/sd.c       **** 		if(response != 0xFF)
 547               		.loc 5 189 3 view .LVU138
 548               	.LBB93:
 549               	.LBI90:
  63:spi/spi.c     **** {
 550               		.loc 4 63 8 view .LVU139
 551               	.LBB92:
 552               		.loc 4 65 2 view .LVU140
 553               		.loc 4 65 9 is_stmt 0 view .LVU141
 554 0136 B601      		movw r22,r12
 555 0138 8FEF      		ldi r24,lo8(-1)
 556 013a 0E94 0000 		call spi_xchg_try
 557               	.LVL39:
 558               		.loc 4 65 9 view .LVU142
 559               	.LBE92:
 560               	.LBE93:
 189:sd/sd.c       **** 		if(response != 0xFF)
 561               		.loc 5 189 3 is_stmt 1 view .LVU143
 562 013e BC2C      		mov r11,r12
 563 0140 AD2C      		mov r10,r13
 564 0142 8111      		cpse r24,__zero_reg__
 565 0144 00C0      		rjmp .L14
 566               	.LBE94:
 189:sd/sd.c       **** 		if(response != 0xFF)
 567               		.loc 5 189 3 view .LVU144
 189:sd/sd.c       **** 		if(response != 0xFF)
 568               		.loc 5 189 35 view .LVU145
 190:sd/sd.c       **** 		{
 569               		.loc 5 190 3 view .LVU146
 190:sd/sd.c       **** 		{
 570               		.loc 5 190 15 is_stmt 0 view .LVU147
 571 0146 8981      		ldd r24,Y+1
 572               	.LVL40:
 190:sd/sd.c       **** 		{
 573               		.loc 5 190 5 view .LVU148
 574 0148 8F3F      		cpi r24,lo8(-1)
 575 014a 01F4      		brne .L22
 195:sd/sd.c       **** 		{
 576               		.loc 5 195 3 is_stmt 1 view .LVU149
 195:sd/sd.c       **** 		{
 577               		.loc 5 195 5 is_stmt 0 view .LVU150
 578 014c FA94      		dec r15
 579               	.LVL41:
 195:sd/sd.c       **** 		{
 580               		.loc 5 195 5 view .LVU151
 581 014e F110      		cpse r15,__zero_reg__
 582 0150 00C0      		rjmp .L23
 583               	.LVL42:
 584               	.L34:
 195:sd/sd.c       **** 		{
 585               		.loc 5 195 5 view .LVU152
 586               	.LBE84:
 587               	.LBE83:
 588               	.LBE79:
 589               	.LBE78:
 590               	.LBE75:
 591               	.LBB107:
 592               	.LBB108:
 560:sd/sd.c       **** 		_sd_block_addr(block)));
 561:sd/sd.c       **** 
 562:sd/sd.c       **** 	/* Wait for ready */
 563:sd/sd.c       **** 	for(i = 0; ; ++i)
 564:sd/sd.c       **** 	{
 565:sd/sd.c       **** 		RETURN_IF(spi_rx_try(&response));
 566:sd/sd.c       **** 		if(response == 0xFE)
 567:sd/sd.c       **** 		{
 568:sd/sd.c       **** 			break;
 569:sd/sd.c       **** 		}
 570:sd/sd.c       **** 
 571:sd/sd.c       **** 		if(i == 0xFFFF)
 572:sd/sd.c       **** 		{
 573:sd/sd.c       **** 			SD_DESELECT;
 574:sd/sd.c       **** 			return STATUS_TIMEOUT;
 593               		.loc 5 574 4 is_stmt 1 view .LVU153
 594               		.loc 5 574 11 is_stmt 0 view .LVU154
 595 0152 82E0      		ldi r24,lo8(2)
 596 0154 00C0      		rjmp .L14
 597               	.LVL43:
 598               	.L22:
 599               		.loc 5 574 11 view .LVU155
 600               	.LBE108:
 601               	.LBE107:
 602               	.LBB122:
 603               	.LBB104:
 604               	.LBB101:
 605               	.LBB98:
 606               	.LBB95:
 201:sd/sd.c       **** 	{
 607               		.loc 5 201 2 is_stmt 1 view .LVU156
 608               	.LBE95:
 609               	.LBE98:
 610               	.LBE101:
 611               	.LBE104:
 612               	.LBE122:
 613               	.LBB123:
 614               	.LBB120:
 563:sd/sd.c       **** 	{
 615               		.loc 5 563 8 is_stmt 0 view .LVU157
 616 0156 E12C      		mov r14,__zero_reg__
 617 0158 F12C      		mov r15,__zero_reg__
 618               	.LBE120:
 619               	.LBE123:
 620               	.LBB124:
 621               	.LBB105:
 622               	.LBB102:
 623               	.LBB99:
 624               	.LBB96:
 201:sd/sd.c       **** 	{
 625               		.loc 5 201 4 view .LVU158
 626 015a 8823      		tst r24
 627 015c 01F0      		breq .L25
 203:sd/sd.c       **** 		return STATUS_FAIL;
 628               		.loc 5 203 3 is_stmt 1 view .LVU159
 629 015e 5C9A      		sbi 0xb,4
 204:sd/sd.c       **** 	}
 630               		.loc 5 204 3 view .LVU160
 631               	.LVL44:
 204:sd/sd.c       **** 	}
 632               		.loc 5 204 3 is_stmt 0 view .LVU161
 633               	.LBE96:
 634               	.LBE99:
 635               	.LBE102:
 636               	.LBE105:
 559:sd/sd.c       **** 		_sd_block_addr(block)));
 637               		.loc 5 559 2 is_stmt 1 view .LVU162
 638               	.LBB106:
 639               	.LBB103:
 640               	.LBB100:
 641               	.LBB97:
 204:sd/sd.c       **** 	}
 642               		.loc 5 204 10 is_stmt 0 view .LVU163
 643 0160 81E0      		ldi r24,lo8(1)
 644               	.LVL45:
 645               	.L14:
 646               	/* epilogue start */
 204:sd/sd.c       **** 	}
 647               		.loc 5 204 10 view .LVU164
 648               	.LBE97:
 649               	.LBE100:
 650               	.LBE103:
 651               	.LBE106:
 652               	.LBE124:
 575:sd/sd.c       **** 		}
 576:sd/sd.c       **** 	}
 577:sd/sd.c       **** 
 578:sd/sd.c       **** 	/* Read data */
 579:sd/sd.c       **** 	for(i = 0; i < BLOCK_SIZE; ++i)
 580:sd/sd.c       **** 	{
 581:sd/sd.c       **** 		RETURN_IF(spi_rx_try(&data8[i]));
 582:sd/sd.c       **** 	}
 583:sd/sd.c       **** 
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 586:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 587:sd/sd.c       **** 	SD_DESELECT;
 588:sd/sd.c       **** 	return STATUS_OK;
 589:sd/sd.c       **** }
 653               		.loc 5 589 1 view .LVU165
 654 0162 0F90      		pop __tmp_reg__
 655 0164 DF91      		pop r29
 656 0166 CF91      		pop r28
 657 0168 1F91      		pop r17
 658 016a 0F91      		pop r16
 659               	.LVL46:
 660               		.loc 5 589 1 view .LVU166
 661 016c FF90      		pop r15
 662 016e EF90      		pop r14
 663 0170 DF90      		pop r13
 664 0172 CF90      		pop r12
 665 0174 BF90      		pop r11
 666 0176 AF90      		pop r10
 667 0178 0895      		ret
 668               	.LVL47:
 669               	.L28:
 670               	.LBB125:
 671               	.LBB121:
 563:sd/sd.c       **** 	{
 672               		.loc 5 563 15 is_stmt 1 view .LVU167
 673 017a 8FEF      		ldi r24,-1
 674 017c E81A      		sub r14,r24
 675 017e F80A      		sbc r15,r24
 676               	.LVL48:
 563:sd/sd.c       **** 	{
 677               		.loc 5 563 2 view .LVU168
 678               	.L25:
 565:sd/sd.c       **** 		if(response == 0xFE)
 679               		.loc 5 565 3 view .LVU169
 680               	.LBB109:
 565:sd/sd.c       **** 		if(response == 0xFE)
 681               		.loc 5 565 3 view .LVU170
 682               	.LBB110:
 683               	.LBI110:
  63:spi/spi.c     **** {
 684               		.loc 4 63 8 view .LVU171
 685               	.LBB111:
 686               		.loc 4 65 2 view .LVU172
 687               		.loc 4 65 9 is_stmt 0 view .LVU173
 688 0180 6B2D      		mov r22,r11
 689 0182 7A2D      		mov r23,r10
 690 0184 8FEF      		ldi r24,lo8(-1)
 691 0186 0E94 0000 		call spi_xchg_try
 692               	.LVL49:
 693               		.loc 4 65 9 view .LVU174
 694               	.LBE111:
 695               	.LBE110:
 565:sd/sd.c       **** 		if(response == 0xFE)
 696               		.loc 5 565 3 is_stmt 1 view .LVU175
 697 018a 8111      		cpse r24,__zero_reg__
 698 018c 00C0      		rjmp .L14
 699               	.LBE109:
 565:sd/sd.c       **** 		if(response == 0xFE)
 700               		.loc 5 565 3 view .LVU176
 565:sd/sd.c       **** 		if(response == 0xFE)
 701               		.loc 5 565 35 view .LVU177
 566:sd/sd.c       **** 		{
 702               		.loc 5 566 3 view .LVU178
 566:sd/sd.c       **** 		{
 703               		.loc 5 566 5 is_stmt 0 view .LVU179
 704 018e 8981      		ldd r24,Y+1
 705               	.LVL50:
 566:sd/sd.c       **** 		{
 706               		.loc 5 566 5 view .LVU180
 707 0190 8E3F      		cpi r24,lo8(-2)
 708 0192 01F0      		breq .L32
 571:sd/sd.c       **** 		{
 709               		.loc 5 571 3 is_stmt 1 view .LVU181
 571:sd/sd.c       **** 		{
 710               		.loc 5 571 5 is_stmt 0 view .LVU182
 711 0194 9FEF      		ldi r25,-1
 712 0196 E916      		cp r14,r25
 713 0198 F906      		cpc r15,r25
 714 019a 01F4      		brne .L28
 573:sd/sd.c       **** 			return STATUS_TIMEOUT;
 715               		.loc 5 573 4 is_stmt 1 view .LVU183
 716 019c 5C9A      		sbi 0xb,4
 717 019e 00C0      		rjmp .L34
 718               	.L32:
 579:sd/sd.c       **** 	{
 719               		.loc 5 579 8 is_stmt 0 view .LVU184
 720 01a0 E12C      		mov r14,__zero_reg__
 721 01a2 F12C      		mov r15,__zero_reg__
 722               	.LVL51:
 723               	.L27:
 581:sd/sd.c       **** 	}
 724               		.loc 5 581 3 is_stmt 1 view .LVU185
 725               	.LBB112:
 581:sd/sd.c       **** 	}
 726               		.loc 5 581 3 view .LVU186
 727               	.LBB113:
 728               	.LBI113:
  63:spi/spi.c     **** {
 729               		.loc 4 63 8 view .LVU187
 730               	.LBB114:
 731               		.loc 4 65 2 view .LVU188
 732               	.LBE114:
 733               	.LBE113:
 581:sd/sd.c       **** 	}
 734               		.loc 5 581 3 is_stmt 0 view .LVU189
 735 01a4 B801      		movw r22,r16
 736 01a6 6E0D      		add r22,r14
 737 01a8 7F1D      		adc r23,r15
 738               	.LVL52:
 739               	.LBB116:
 740               	.LBB115:
 741               		.loc 4 65 9 view .LVU190
 742 01aa 8FEF      		ldi r24,lo8(-1)
 743 01ac 0E94 0000 		call spi_xchg_try
 744               	.LVL53:
 745               		.loc 4 65 9 view .LVU191
 746               	.LBE115:
 747               	.LBE116:
 581:sd/sd.c       **** 	}
 748               		.loc 5 581 3 is_stmt 1 view .LVU192
 749 01b0 8111      		cpse r24,__zero_reg__
 750 01b2 00C0      		rjmp .L14
 751               	.LBE112:
 581:sd/sd.c       **** 	}
 752               		.loc 5 581 3 view .LVU193
 581:sd/sd.c       **** 	}
 753               		.loc 5 581 35 view .LVU194
 579:sd/sd.c       **** 	{
 754               		.loc 5 579 29 view .LVU195
 755 01b4 9FEF      		ldi r25,-1
 756 01b6 E91A      		sub r14,r25
 757 01b8 F90A      		sbc r15,r25
 758               	.LVL54:
 579:sd/sd.c       **** 	{
 759               		.loc 5 579 15 view .LVU196
 760 01ba E114      		cp r14,__zero_reg__
 761 01bc 82E0      		ldi r24,2
 762 01be F806      		cpc r15,r24
 763               	.LVL55:
 579:sd/sd.c       **** 	{
 764               		.loc 5 579 15 is_stmt 0 view .LVU197
 765 01c0 01F4      		brne .L27
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 766               		.loc 5 584 2 is_stmt 1 view .LVU198
 767               	.LBB117:
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 768               		.loc 5 584 2 view .LVU199
 769 01c2 8FEF      		ldi r24,lo8(-1)
 770 01c4 0E94 0000 		call spi_tx_try
 771               	.LVL56:
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 772               		.loc 5 584 2 view .LVU200
 773 01c8 8111      		cpse r24,__zero_reg__
 774 01ca 00C0      		rjmp .L14
 775               	.LBE117:
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 776               		.loc 5 584 2 view .LVU201
 584:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 777               		.loc 5 584 29 view .LVU202
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 778               		.loc 5 585 2 view .LVU203
 779               	.LBB118:
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 780               		.loc 5 585 2 view .LVU204
 781 01cc 8FEF      		ldi r24,lo8(-1)
 782               	.LVL57:
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 783               		.loc 5 585 2 is_stmt 0 view .LVU205
 784 01ce 0E94 0000 		call spi_tx_try
 785               	.LVL58:
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 786               		.loc 5 585 2 is_stmt 1 view .LVU206
 787 01d2 8111      		cpse r24,__zero_reg__
 788 01d4 00C0      		rjmp .L14
 789               	.LBE118:
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 790               		.loc 5 585 2 view .LVU207
 585:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 791               		.loc 5 585 29 view .LVU208
 586:sd/sd.c       **** 	SD_DESELECT;
 792               		.loc 5 586 2 view .LVU209
 793               	.LBB119:
 586:sd/sd.c       **** 	SD_DESELECT;
 794               		.loc 5 586 2 view .LVU210
 795 01d6 8FEF      		ldi r24,lo8(-1)
 796               	.LVL59:
 586:sd/sd.c       **** 	SD_DESELECT;
 797               		.loc 5 586 2 is_stmt 0 view .LVU211
 798 01d8 0E94 0000 		call spi_tx_try
 799               	.LVL60:
 586:sd/sd.c       **** 	SD_DESELECT;
 800               		.loc 5 586 2 is_stmt 1 view .LVU212
 801 01dc 8111      		cpse r24,__zero_reg__
 802 01de 00C0      		rjmp .L14
 803               	.LBE119:
 586:sd/sd.c       **** 	SD_DESELECT;
 804               		.loc 5 586 2 view .LVU213
 586:sd/sd.c       **** 	SD_DESELECT;
 805               		.loc 5 586 29 view .LVU214
 587:sd/sd.c       **** 	return STATUS_OK;
 806               		.loc 5 587 2 view .LVU215
 807 01e0 5C9A      		sbi 0xb,4
 588:sd/sd.c       **** }
 808               		.loc 5 588 2 view .LVU216
 588:sd/sd.c       **** }
 809               		.loc 5 588 9 is_stmt 0 view .LVU217
 810 01e2 00C0      		rjmp .L14
 811               	.LBE121:
 812               	.LBE125:
 813               		.cfi_endproc
 814               	.LFE8:
 817               	_gfx_check_bounds:
 818               	.LVL61:
 819               	.LFB14:
 820               		.file 6 "../../emulator/emulator.c"
   1:../../emulator/emulator.c **** /**
   2:../../emulator/emulator.c ****  * @file    emulator.c
   3:../../emulator/emulator.c ****  * @author  Anton Tchekov
   4:../../emulator/emulator.c ****  * @version 0.1
   5:../../emulator/emulator.c ****  * @date    24.05.2023
   6:../../emulator/emulator.c ****  */
   7:../../emulator/emulator.c **** 
   8:../../emulator/emulator.c **** #include <types.h>
   9:../../emulator/emulator.c **** #include <platform.h>
  10:../../emulator/emulator.c **** #include <emulator.h>
  11:../../emulator/emulator.c **** #include <gfx-types.h>
  12:../../emulator/emulator.c **** 
  13:../../emulator/emulator.c **** #include <stdio.h>
  14:../../emulator/emulator.c **** #include <stdlib.h>
  15:../../emulator/emulator.c **** #include <string.h>
  16:../../emulator/emulator.c **** 
  17:../../emulator/emulator.c **** #include <time.h>
  18:../../emulator/emulator.c **** #include <util.h>
  19:../../emulator/emulator.c **** 
  20:../../emulator/emulator.c **** /* --- LOGGING --- */
  21:../../emulator/emulator.c **** #ifdef DEBUG
  22:../../emulator/emulator.c **** 
  23:../../emulator/emulator.c **** #ifdef __linux__
  24:../../emulator/emulator.c **** 
  25:../../emulator/emulator.c **** /** Print to terminal */
  26:../../emulator/emulator.c **** #define EMU_LOG(...) { printf(__VA_ARGS__); fputc('\n', stdout); }
  27:../../emulator/emulator.c **** 
  28:../../emulator/emulator.c **** /** PROGMEM string mock */
  29:../../emulator/emulator.c **** #define PSTR(X) X
  30:../../emulator/emulator.c **** 
  31:../../emulator/emulator.c **** #else /* __linux__ */
  32:../../emulator/emulator.c **** 
  33:../../emulator/emulator.c **** #include <logger.h>
  34:../../emulator/emulator.c **** #include <avr/pgmspace.h>
  35:../../emulator/emulator.c **** 
  36:../../emulator/emulator.c **** /** Print to serial/LCD */
  37:../../emulator/emulator.c **** #define EMU_LOG(...) log_boot_P(LOG_EXT, __VA_ARGS__)
  38:../../emulator/emulator.c **** 
  39:../../emulator/emulator.c **** #endif /* __linux__ */
  40:../../emulator/emulator.c **** 
  41:../../emulator/emulator.c **** /**
  42:../../emulator/emulator.c ****  * @brief Print all registers of the emulator
  43:../../emulator/emulator.c ****  *
  44:../../emulator/emulator.c ****  * @param emu The emulator
  45:../../emulator/emulator.c ****  */
  46:../../emulator/emulator.c **** static void emulator_dump_registers(Emulator *emu)
  47:../../emulator/emulator.c **** {
  48:../../emulator/emulator.c **** 	EMU_LOG(PSTR("\nPC  0x%08"PRIx32" %10d"), emu->PC, emu->PC);
  49:../../emulator/emulator.c **** 	for(i32 i = 0; i < 32; ++i)
  50:../../emulator/emulator.c **** 	{
  51:../../emulator/emulator.c **** 		EMU_LOG(PSTR("r%"PRIu8"%s 0x%08"PRIx32" %10d"), i, i < 10 ? " " : "",
  52:../../emulator/emulator.c **** 			emu->Registers[i], emu->Registers[i]);
  53:../../emulator/emulator.c **** 	}
  54:../../emulator/emulator.c **** }
  55:../../emulator/emulator.c **** 
  56:../../emulator/emulator.c **** #else /* DEBUG */
  57:../../emulator/emulator.c **** 
  58:../../emulator/emulator.c **** /** Empty logger */
  59:../../emulator/emulator.c **** #define EMU_LOG(...)
  60:../../emulator/emulator.c **** 
  61:../../emulator/emulator.c **** #endif /* DEBUG */
  62:../../emulator/emulator.c **** 
  63:../../emulator/emulator.c **** /* --- OPCODES --- */
  64:../../emulator/emulator.c **** 
  65:../../emulator/emulator.c **** /** Maximum number of tasks */
  66:../../emulator/emulator.c **** #define MAX_TASKS        1
  67:../../emulator/emulator.c **** 
  68:../../emulator/emulator.c **** /** Opcode for Load instructions */
  69:../../emulator/emulator.c **** #define OPCODE_LOAD   0x00
  70:../../emulator/emulator.c **** 
  71:../../emulator/emulator.c **** /** Opcodes for instructions with immediate values */
  72:../../emulator/emulator.c **** #define OPCODE_IMM    0x04
  73:../../emulator/emulator.c **** 
  74:../../emulator/emulator.c **** /** Opcode for AUIPC instruction */
  75:../../emulator/emulator.c **** #define OPCODE_AUIPC  0x05 /* Add Upper Immediate to Program Counter */
  76:../../emulator/emulator.c **** 
  77:../../emulator/emulator.c **** /** Opcode for store instructions */
  78:../../emulator/emulator.c **** #define OPCODE_STORE  0x08
  79:../../emulator/emulator.c **** 
  80:../../emulator/emulator.c **** /** Opcodes for instructions on registers */
  81:../../emulator/emulator.c **** #define OPCODE_REG    0x0C
  82:../../emulator/emulator.c **** 
  83:../../emulator/emulator.c **** /** Opcode for LUI instruction */
  84:../../emulator/emulator.c **** #define OPCODE_LUI    0x0D /* Load Upper Immediate */
  85:../../emulator/emulator.c **** 
  86:../../emulator/emulator.c **** /** Opcode for branch instructions */
  87:../../emulator/emulator.c **** #define OPCODE_BRANCH 0x18
  88:../../emulator/emulator.c **** 
  89:../../emulator/emulator.c **** /** Opcode for JALR instructions */
  90:../../emulator/emulator.c **** #define OPCODE_JALR   0x19 /* Jump and Link Register */
  91:../../emulator/emulator.c **** 
  92:../../emulator/emulator.c **** /** Opcode for JAL instructions */
  93:../../emulator/emulator.c **** #define OPCODE_JAL    0x1B /* Jump and Link */
  94:../../emulator/emulator.c **** 
  95:../../emulator/emulator.c **** /** Opcode for ECALL instructions */
  96:../../emulator/emulator.c **** #define OPCODE_ECALL  0x1C /* Environment Call */
  97:../../emulator/emulator.c **** 
  98:../../emulator/emulator.c **** /**
  99:../../emulator/emulator.c ****  * @brief Sign extend twos-complement value to 32-bit
 100:../../emulator/emulator.c ****  *
 101:../../emulator/emulator.c ****  * @param bits Number of bits
 102:../../emulator/emulator.c ****  * @param value Value to sign extent
 103:../../emulator/emulator.c ****  * @return Result
 104:../../emulator/emulator.c ****  */
 105:../../emulator/emulator.c **** static inline u32 sext(u8 bits, u32 value)
 106:../../emulator/emulator.c **** {
 107:../../emulator/emulator.c **** 	u32 m = ((u32)1) << (bits - 1);
 108:../../emulator/emulator.c **** 	return (value ^ m) - m;
 109:../../emulator/emulator.c **** }
 110:../../emulator/emulator.c **** 
 111:../../emulator/emulator.c **** /** Called function finished flag */
 112:../../emulator/emulator.c **** static bool _finished;
 113:../../emulator/emulator.c **** 
 114:../../emulator/emulator.c **** /** List of currently running tasks */
 115:../../emulator/emulator.c **** static Emulator _tasks[MAX_TASKS];
 116:../../emulator/emulator.c **** 
 117:../../emulator/emulator.c **** /** Currently active task */
 118:../../emulator/emulator.c **** static Emulator *_emu = &_tasks[0];
 119:../../emulator/emulator.c **** 
 120:../../emulator/emulator.c **** /** Total size of the memory in bytes */
 121:../../emulator/emulator.c **** static u32 _memory_size;
 122:../../emulator/emulator.c **** 
 123:../../emulator/emulator.c **** void kernel_init(void)
 124:../../emulator/emulator.c **** {
 125:../../emulator/emulator.c **** 	_memory_size = env_memory_size();
 126:../../emulator/emulator.c **** 	_emu->SegmentStart = 0;
 127:../../emulator/emulator.c **** 	_emu->SegmentSize = _memory_size;
 128:../../emulator/emulator.c **** 	_emu->SegmentEnd = _memory_size;
 129:../../emulator/emulator.c **** 	emulator_call(_emu, 0, NULL, 0, _memory_size);
 130:../../emulator/emulator.c **** }
 131:../../emulator/emulator.c **** 
 132:../../emulator/emulator.c **** void os_update(void)
 133:../../emulator/emulator.c **** {
 134:../../emulator/emulator.c **** 	u32 addr = _emu->Events[EVENT_LOOP];
 135:../../emulator/emulator.c **** 	if(addr)
 136:../../emulator/emulator.c **** 	{
 137:../../emulator/emulator.c **** 		emulator_call(_emu, addr, NULL, 0, _memory_size);
 138:../../emulator/emulator.c **** 	}
 139:../../emulator/emulator.c **** }
 140:../../emulator/emulator.c **** 
 141:../../emulator/emulator.c **** void keyboard_event(Key key, i32 chr, KeyState down)
 142:../../emulator/emulator.c **** {
 143:../../emulator/emulator.c **** 	u32 addr = _emu->Events[EVENT_KEY];
 144:../../emulator/emulator.c **** 	if(addr)
 145:../../emulator/emulator.c **** 	{
 146:../../emulator/emulator.c **** 		u32 args[] = { key, chr, down };
 147:../../emulator/emulator.c **** 		emulator_call(_emu, addr, args, ARRLEN(args), _memory_size);
 148:../../emulator/emulator.c **** 	}
 149:../../emulator/emulator.c **** }
 150:../../emulator/emulator.c **** 
 151:../../emulator/emulator.c **** /**
 152:../../emulator/emulator.c ****  * @brief Checks if a render window is out ot bounds
 153:../../emulator/emulator.c ****  *
 154:../../emulator/emulator.c ****  * @param x X-Coordinate
 155:../../emulator/emulator.c ****  * @param y Y-Coordinate
 156:../../emulator/emulator.c ****  * @param w Width
 157:../../emulator/emulator.c ****  * @param h Height
 158:../../emulator/emulator.c ****  * @return Non-zero if invalid
 159:../../emulator/emulator.c ****  */
 160:../../emulator/emulator.c **** static u8 _gfx_check_bounds(u16 x, u16 y, u16 w, u16 h)
 161:../../emulator/emulator.c **** {
 821               		.loc 6 161 1 is_stmt 1 view -0
 822               		.cfi_startproc
 823               	/* prologue: function */
 824               	/* frame size = 0 */
 825               	/* stack size = 0 */
 826               	.L__stack_usage = 0
 827               		.loc 6 161 1 is_stmt 0 view .LVU219
 828 01e4 FC01      		movw r30,r24
 829 01e6 CB01      		movw r24,r22
 830               	.LVL62:
 831               		.loc 6 161 1 view .LVU220
 832 01e8 BA01      		movw r22,r20
 833               	.LVL63:
 834               		.loc 6 161 1 view .LVU221
 835 01ea A901      		movw r20,r18
 836               	.LVL64:
 162:../../emulator/emulator.c **** 	return (x >= GFX_WIDTH) ||
 837               		.loc 6 162 2 is_stmt 1 view .LVU222
 163:../../emulator/emulator.c **** 		(y >= GFX_HEIGHT) ||
 164:../../emulator/emulator.c **** 		(w > GFX_WIDTH) ||
 165:../../emulator/emulator.c **** 		(h > GFX_HEIGHT) ||
 166:../../emulator/emulator.c **** 		(x + w > GFX_WIDTH) ||
 838               		.loc 6 166 23 is_stmt 0 view .LVU223
 839 01ec E034      		cpi r30,64
 840 01ee 21E0      		ldi r18,1
 841 01f0 F207      		cpc r31,r18
 842               	.LVL65:
 843               		.loc 6 166 23 view .LVU224
 844 01f2 00F4      		brsh .L42
 162:../../emulator/emulator.c **** 	return (x >= GFX_WIDTH) ||
 845               		.loc 6 162 26 view .LVU225
 846 01f4 803E      		cpi r24,-32
 847 01f6 21E0      		ldi r18,1
 848 01f8 9207      		cpc r25,r18
 849 01fa 00F4      		brsh .L42
 163:../../emulator/emulator.c **** 		(y >= GFX_HEIGHT) ||
 850               		.loc 6 163 21 view .LVU226
 851 01fc 6134      		cpi r22,65
 852 01fe 21E0      		ldi r18,1
 853 0200 7207      		cpc r23,r18
 854 0202 00F4      		brsh .L42
 164:../../emulator/emulator.c **** 		(h > GFX_HEIGHT) ||
 855               		.loc 6 164 19 view .LVU227
 856 0204 413E      		cpi r20,-31
 857 0206 21E0      		ldi r18,1
 858 0208 5207      		cpc r21,r18
 859 020a 00F4      		brsh .L42
 860               		.loc 6 166 6 view .LVU228
 861 020c E60F      		add r30,r22
 862 020e F71F      		adc r31,r23
 863               	.LVL66:
 165:../../emulator/emulator.c **** 		(x + w > GFX_WIDTH) ||
 864               		.loc 6 165 20 view .LVU229
 865 0210 E134      		cpi r30,65
 866 0212 F140      		sbci r31,1
 867 0214 00F4      		brsh .L42
 167:../../emulator/emulator.c **** 		(y + h > GFX_HEIGHT);
 868               		.loc 6 167 6 discriminator 2 view .LVU230
 869 0216 480F      		add r20,r24
 870 0218 591F      		adc r21,r25
 871               	.LVL67:
 166:../../emulator/emulator.c **** 		(y + h > GFX_HEIGHT);
 872               		.loc 6 166 23 discriminator 2 view .LVU231
 873 021a 81E0      		ldi r24,lo8(1)
 874               	.LVL68:
 166:../../emulator/emulator.c **** 		(y + h > GFX_HEIGHT);
 875               		.loc 6 166 23 discriminator 2 view .LVU232
 876 021c 413E      		cpi r20,-31
 877 021e 5140      		sbci r21,1
 878 0220 00F4      		brsh .L36
 879 0222 80E0      		ldi r24,0
 880 0224 0895      		ret
 881               	.LVL69:
 882               	.L42:
 166:../../emulator/emulator.c **** 		(y + h > GFX_HEIGHT);
 883               		.loc 6 166 23 view .LVU233
 884 0226 81E0      		ldi r24,lo8(1)
 885               	.LVL70:
 886               	.L36:
 887               	/* epilogue start */
 168:../../emulator/emulator.c **** }
 888               		.loc 6 168 1 discriminator 5 view .LVU234
 889 0228 0895      		ret
 890               		.cfi_endproc
 891               	.LFE14:
 894               	_memory_check_bounds:
 895               	.LVL71:
 896               	.LFB15:
 169:../../emulator/emulator.c **** 
 170:../../emulator/emulator.c **** /**
 171:../../emulator/emulator.c ****  * @brief Check memory location permissions
 172:../../emulator/emulator.c ****  *
 173:../../emulator/emulator.c ****  * @param addr Start address
 174:../../emulator/emulator.c ****  * @param size Size of the block to be accessed
 175:../../emulator/emulator.c ****  * @return Non-zero if invalid
 176:../../emulator/emulator.c ****  */
 177:../../emulator/emulator.c **** static u8 _memory_check_bounds(u32 addr, u32 size)
 178:../../emulator/emulator.c **** {
 897               		.loc 6 178 1 is_stmt 1 view -0
 898               		.cfi_startproc
 899               		.loc 6 178 1 is_stmt 0 view .LVU236
 900 022a CF92      		push r12
 901               		.cfi_def_cfa_offset 3
 902               		.cfi_offset 12, -2
 903 022c DF92      		push r13
 904               		.cfi_def_cfa_offset 4
 905               		.cfi_offset 13, -3
 906 022e EF92      		push r14
 907               		.cfi_def_cfa_offset 5
 908               		.cfi_offset 14, -4
 909 0230 FF92      		push r15
 910               		.cfi_def_cfa_offset 6
 911               		.cfi_offset 15, -5
 912 0232 0F93      		push r16
 913               		.cfi_def_cfa_offset 7
 914               		.cfi_offset 16, -6
 915 0234 1F93      		push r17
 916               		.cfi_def_cfa_offset 8
 917               		.cfi_offset 17, -7
 918               	/* prologue: function */
 919               	/* frame size = 0 */
 920               	/* stack size = 6 */
 921               	.L__stack_usage = 6
 922 0236 6B01      		movw r12,r22
 923 0238 7C01      		movw r14,r24
 924 023a C901      		movw r24,r18
 925 023c DA01      		movw r26,r20
 179:../../emulator/emulator.c **** 	return (addr >= _emu->SegmentEnd) ||
 926               		.loc 6 179 2 is_stmt 1 view .LVU237
 927               		.loc 6 179 22 is_stmt 0 view .LVU238
 928 023e 4091 0000 		lds r20,_tasks+8
 929 0242 5091 0000 		lds r21,_tasks+8+1
 930 0246 6091 0000 		lds r22,_tasks+8+2
 931 024a 7091 0000 		lds r23,_tasks+8+3
 180:../../emulator/emulator.c **** 		(size >= _emu->SegmentSize) ||
 932               		.loc 6 180 31 view .LVU239
 933 024e C416      		cp r12,r20
 934 0250 D506      		cpc r13,r21
 935 0252 E606      		cpc r14,r22
 936 0254 F706      		cpc r15,r23
 937 0256 00F4      		brsh .L47
 179:../../emulator/emulator.c **** 	return (addr >= _emu->SegmentEnd) ||
 938               		.loc 6 179 36 discriminator 2 view .LVU240
 939 0258 0091 0000 		lds r16,_tasks+4
 940 025c 1091 0000 		lds r17,_tasks+4+1
 941 0260 2091 0000 		lds r18,_tasks+4+2
 942 0264 3091 0000 		lds r19,_tasks+4+3
 943 0268 8017      		cp r24,r16
 944 026a 9107      		cpc r25,r17
 945 026c A207      		cpc r26,r18
 946 026e B307      		cpc r27,r19
 947 0270 00F4      		brsh .L47
 181:../../emulator/emulator.c **** 		(addr + size >= _emu->SegmentEnd);
 948               		.loc 6 181 9 discriminator 3 view .LVU241
 949 0272 8C0D      		add r24,r12
 950 0274 9D1D      		adc r25,r13
 951 0276 AE1D      		adc r26,r14
 952 0278 BF1D      		adc r27,r15
 180:../../emulator/emulator.c **** 		(size >= _emu->SegmentSize) ||
 953               		.loc 6 180 31 discriminator 3 view .LVU242
 954 027a 21E0      		ldi r18,lo8(1)
 955               	.LVL72:
 180:../../emulator/emulator.c **** 		(size >= _emu->SegmentSize) ||
 956               		.loc 6 180 31 discriminator 3 view .LVU243
 957 027c 8417      		cp r24,r20
 958 027e 9507      		cpc r25,r21
 959 0280 A607      		cpc r26,r22
 960 0282 B707      		cpc r27,r23
 961 0284 00F4      		brsh .L45
 962 0286 20E0      		ldi r18,0
 963               	.L45:
 964 0288 822F      		mov r24,r18
 965               	.L44:
 966               	/* epilogue start */
 182:../../emulator/emulator.c **** }
 967               		.loc 6 182 1 discriminator 6 view .LVU244
 968 028a 1F91      		pop r17
 969 028c 0F91      		pop r16
 970 028e FF90      		pop r15
 971 0290 EF90      		pop r14
 972 0292 DF90      		pop r13
 973 0294 CF90      		pop r12
 974 0296 0895      		ret
 975               	.LVL73:
 976               	.L47:
 180:../../emulator/emulator.c **** 		(size >= _emu->SegmentSize) ||
 977               		.loc 6 180 31 view .LVU245
 978 0298 81E0      		ldi r24,lo8(1)
 979 029a 00C0      		rjmp .L44
 980               		.cfi_endproc
 981               	.LFE15:
 984               	syscall_exit:
 985               	.LVL74:
 986               	.LFB16:
 183:../../emulator/emulator.c **** 
 184:../../emulator/emulator.c **** /* --- Store --- */
 185:../../emulator/emulator.c **** 
 186:../../emulator/emulator.c **** /**
 187:../../emulator/emulator.c ****  * @brief Store byte
 188:../../emulator/emulator.c ****  *
 189:../../emulator/emulator.c ****  * @param addr The address at which to store the value
 190:../../emulator/emulator.c ****  * @param value The value to store
 191:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 192:../../emulator/emulator.c ****  */
 193:../../emulator/emulator.c **** static u8 memory_sb(u32 addr, u32 value)
 194:../../emulator/emulator.c **** {
 195:../../emulator/emulator.c **** 	i8 value8 = (i8)value;
 196:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 197:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 198:../../emulator/emulator.c **** 	{
 199:../../emulator/emulator.c **** 		return 1;
 200:../../emulator/emulator.c **** 	}
 201:../../emulator/emulator.c **** 
 202:../../emulator/emulator.c **** 	env_memory_write(addr, &value8, sizeof(value8));
 203:../../emulator/emulator.c **** 	return 0;
 204:../../emulator/emulator.c **** }
 205:../../emulator/emulator.c **** 
 206:../../emulator/emulator.c **** /**
 207:../../emulator/emulator.c ****  * @brief Store 16-bit half-word
 208:../../emulator/emulator.c ****  *
 209:../../emulator/emulator.c ****  * @param addr The address at which to store the value
 210:../../emulator/emulator.c ****  * @param value The value to store
 211:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 212:../../emulator/emulator.c ****  */
 213:../../emulator/emulator.c **** static u8 memory_sh(u32 addr, u32 value)
 214:../../emulator/emulator.c **** {
 215:../../emulator/emulator.c **** 	i16 value16 = (i16)value;
 216:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 217:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 218:../../emulator/emulator.c **** 	{
 219:../../emulator/emulator.c **** 		return 1;
 220:../../emulator/emulator.c **** 	}
 221:../../emulator/emulator.c **** 
 222:../../emulator/emulator.c **** 	env_memory_write(addr, &value16, sizeof(value16));
 223:../../emulator/emulator.c **** 	return 0;
 224:../../emulator/emulator.c **** }
 225:../../emulator/emulator.c **** 
 226:../../emulator/emulator.c **** /**
 227:../../emulator/emulator.c ****  * @brief Store 32-bit word
 228:../../emulator/emulator.c ****  *
 229:../../emulator/emulator.c ****  * @param addr The address at which to store the value
 230:../../emulator/emulator.c ****  * @param value The value to store
 231:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 232:../../emulator/emulator.c ****  */
 233:../../emulator/emulator.c **** static u8 memory_sw(u32 addr, u32 value)
 234:../../emulator/emulator.c **** {
 235:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 236:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 237:../../emulator/emulator.c **** 	{
 238:../../emulator/emulator.c **** 		return 1;
 239:../../emulator/emulator.c **** 	}
 240:../../emulator/emulator.c **** 
 241:../../emulator/emulator.c **** 	env_memory_write(addr, &value, sizeof(value));
 242:../../emulator/emulator.c **** 	return 0;
 243:../../emulator/emulator.c **** }
 244:../../emulator/emulator.c **** 
 245:../../emulator/emulator.c **** /* --- Load --- */
 246:../../emulator/emulator.c **** /**
 247:../../emulator/emulator.c ****  * @brief Load a signed byte and perform sign-extension
 248:../../emulator/emulator.c ****  *
 249:../../emulator/emulator.c ****  * @param addr The address from which to load the value
 250:../../emulator/emulator.c ****  * @param out Output parameter for the loaded value
 251:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 252:../../emulator/emulator.c ****  */
 253:../../emulator/emulator.c **** static u8 memory_lb(u32 addr, u32 *out)
 254:../../emulator/emulator.c **** {
 255:../../emulator/emulator.c **** 	i8 value8;
 256:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 257:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 258:../../emulator/emulator.c **** 	{
 259:../../emulator/emulator.c **** 		return 1;
 260:../../emulator/emulator.c **** 	}
 261:../../emulator/emulator.c **** 
 262:../../emulator/emulator.c **** 	env_memory_read(addr, &value8, sizeof(value8));
 263:../../emulator/emulator.c **** 	*out = (i32)value8;
 264:../../emulator/emulator.c **** 	return 0;
 265:../../emulator/emulator.c **** }
 266:../../emulator/emulator.c **** 
 267:../../emulator/emulator.c **** /**
 268:../../emulator/emulator.c ****  * @brief Load a 16-bit signed half-word and perform sign extension
 269:../../emulator/emulator.c ****  *
 270:../../emulator/emulator.c ****  * @param addr The address from which to load the value
 271:../../emulator/emulator.c ****  * @param out Output parameter for the loaded value
 272:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 273:../../emulator/emulator.c ****  */
 274:../../emulator/emulator.c **** static u8 memory_lh(u32 addr, u32 *out)
 275:../../emulator/emulator.c **** {
 276:../../emulator/emulator.c **** 	i16 value16;
 277:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 278:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 279:../../emulator/emulator.c **** 	{
 280:../../emulator/emulator.c **** 		return 1;
 281:../../emulator/emulator.c **** 	}
 282:../../emulator/emulator.c **** 
 283:../../emulator/emulator.c **** 	env_memory_read(addr, &value16, sizeof(value16));
 284:../../emulator/emulator.c **** 	*out = (i32)value16;
 285:../../emulator/emulator.c **** 	return 0;
 286:../../emulator/emulator.c **** }
 287:../../emulator/emulator.c **** 
 288:../../emulator/emulator.c **** /**
 289:../../emulator/emulator.c ****  * @brief Load a 32-bit word
 290:../../emulator/emulator.c ****  *
 291:../../emulator/emulator.c ****  * @param addr The address from which to load the value
 292:../../emulator/emulator.c ****  * @param out Output parameter for the loaded value
 293:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 294:../../emulator/emulator.c ****  */
 295:../../emulator/emulator.c **** static u8 memory_lw(u32 addr, u32 *out)
 296:../../emulator/emulator.c **** {
 297:../../emulator/emulator.c **** 	u32 value;
 298:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 299:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 300:../../emulator/emulator.c **** 	{
 301:../../emulator/emulator.c **** 		return 1;
 302:../../emulator/emulator.c **** 	}
 303:../../emulator/emulator.c **** 
 304:../../emulator/emulator.c **** 	env_memory_read(addr, &value, sizeof(value));
 305:../../emulator/emulator.c **** 	*out = value;
 306:../../emulator/emulator.c **** 	return 0;
 307:../../emulator/emulator.c **** }
 308:../../emulator/emulator.c **** 
 309:../../emulator/emulator.c **** /**
 310:../../emulator/emulator.c ****  * @brief Load an unsigned byte
 311:../../emulator/emulator.c ****  *
 312:../../emulator/emulator.c ****  * @param addr The address from which to load the value
 313:../../emulator/emulator.c ****  * @param out Output parameter for the loaded value
 314:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 315:../../emulator/emulator.c ****  */
 316:../../emulator/emulator.c **** static u8 memory_lbu(u32 addr, u32 *out)
 317:../../emulator/emulator.c **** {
 318:../../emulator/emulator.c **** 	u8 value8;
 319:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 320:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 321:../../emulator/emulator.c **** 	{
 322:../../emulator/emulator.c **** 		return 1;
 323:../../emulator/emulator.c **** 	}
 324:../../emulator/emulator.c **** 
 325:../../emulator/emulator.c **** 	env_memory_read(addr, &value8, sizeof(value8));
 326:../../emulator/emulator.c **** 	*out = value8;
 327:../../emulator/emulator.c **** 	return 0;
 328:../../emulator/emulator.c **** }
 329:../../emulator/emulator.c **** 
 330:../../emulator/emulator.c **** /**
 331:../../emulator/emulator.c ****  * @brief Load an unsigned 16-bit half-word
 332:../../emulator/emulator.c ****  *
 333:../../emulator/emulator.c ****  * @param addr The address from which to load the value
 334:../../emulator/emulator.c ****  * @param out Output parameter for the loaded value
 335:../../emulator/emulator.c ****  * @return Non-zero if out ouf bounds
 336:../../emulator/emulator.c ****  */
 337:../../emulator/emulator.c **** static u8 memory_lhu(u32 addr, u32 *out)
 338:../../emulator/emulator.c **** {
 339:../../emulator/emulator.c **** 	u16 value16;
 340:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 341:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 342:../../emulator/emulator.c **** 	{
 343:../../emulator/emulator.c **** 		return 1;
 344:../../emulator/emulator.c **** 	}
 345:../../emulator/emulator.c **** 
 346:../../emulator/emulator.c **** 	env_memory_read(addr, &value16, sizeof(value16));
 347:../../emulator/emulator.c **** 	*out = value16;
 348:../../emulator/emulator.c **** 	return 0;
 349:../../emulator/emulator.c **** }
 350:../../emulator/emulator.c **** 
 351:../../emulator/emulator.c **** /* --- Syscalls --- */
 352:../../emulator/emulator.c **** 
 353:../../emulator/emulator.c **** /**
 354:../../emulator/emulator.c ****  * @brief Exit program
 355:../../emulator/emulator.c ****  *
 356:../../emulator/emulator.c ****  * @param args args[0]: Exit code
 357:../../emulator/emulator.c ****  * @return Non-zero on error
 358:../../emulator/emulator.c ****  */
 359:../../emulator/emulator.c **** static u8 syscall_exit(u32 *args)
 360:../../emulator/emulator.c **** {
 987               		.loc 6 360 1 is_stmt 1 view -0
 988               		.cfi_startproc
 989               	/* prologue: function */
 990               	/* frame size = 0 */
 991               	/* stack size = 0 */
 992               	.L__stack_usage = 0
 361:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 362:../../emulator/emulator.c **** 	return 1;
 993               		.loc 6 362 2 view .LVU247
 363:../../emulator/emulator.c **** 	(void)args;
 994               		.loc 6 363 2 view .LVU248
 364:../../emulator/emulator.c **** }
 995               		.loc 6 364 1 is_stmt 0 view .LVU249
 996 029c 81E0      		ldi r24,lo8(1)
 997               	.LVL75:
 998               	/* epilogue start */
 999               		.loc 6 364 1 view .LVU250
 1000 029e 0895      		ret
 1001               		.cfi_endproc
 1002               	.LFE16:
 1005               	syscall_finish:
 1006               	.LVL76:
 1007               	.LFB17:
 365:../../emulator/emulator.c **** 
 366:../../emulator/emulator.c **** /**
 367:../../emulator/emulator.c ****  * @brief Yield function to pass control to the scheduler
 368:../../emulator/emulator.c ****  *
 369:../../emulator/emulator.c ****  * @param args Unused
 370:../../emulator/emulator.c ****  * @return Non-zero on error
 371:../../emulator/emulator.c ****  */
 372:../../emulator/emulator.c **** static u8 syscall_finish(u32 *args)
 373:../../emulator/emulator.c **** {
 1008               		.loc 6 373 1 is_stmt 1 view -0
 1009               		.cfi_startproc
 1010               	/* prologue: function */
 1011               	/* frame size = 0 */
 1012               	/* stack size = 0 */
 1013               	.L__stack_usage = 0
 374:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 375:../../emulator/emulator.c **** 	_finished = true;
 1014               		.loc 6 375 2 view .LVU252
 1015               		.loc 6 375 12 is_stmt 0 view .LVU253
 1016 02a0 81E0      		ldi r24,lo8(1)
 1017               	.LVL77:
 1018               		.loc 6 375 12 view .LVU254
 1019 02a2 8093 0000 		sts _finished,r24
 376:../../emulator/emulator.c **** 	return 0;
 1020               		.loc 6 376 2 is_stmt 1 view .LVU255
 377:../../emulator/emulator.c **** 	(void)args;
 1021               		.loc 6 377 2 view .LVU256
 378:../../emulator/emulator.c **** }
 1022               		.loc 6 378 1 is_stmt 0 view .LVU257
 1023 02a6 80E0      		ldi r24,0
 1024               	/* epilogue start */
 1025 02a8 0895      		ret
 1026               		.cfi_endproc
 1027               	.LFE17:
 1030               	syscall_event_register:
 1031               	.LVL78:
 1032               	.LFB18:
 379:../../emulator/emulator.c **** 
 380:../../emulator/emulator.c **** /**
 381:../../emulator/emulator.c ****  * @brief Register an event handler
 382:../../emulator/emulator.c ****  *
 383:../../emulator/emulator.c ****  * @param args args[0]: Event Type,
 384:../../emulator/emulator.c ****  *             args[1]: Event Handler Address
 385:../../emulator/emulator.c ****  * @return Non-zero on error
 386:../../emulator/emulator.c ****  */
 387:../../emulator/emulator.c **** static u8 syscall_event_register(u32 *args)
 388:../../emulator/emulator.c **** {
 1033               		.loc 6 388 1 is_stmt 1 view -0
 1034               		.cfi_startproc
 1035               	/* prologue: function */
 1036               	/* frame size = 0 */
 1037               	/* stack size = 0 */
 1038               	.L__stack_usage = 0
 1039               		.loc 6 388 1 is_stmt 0 view .LVU259
 1040 02aa FC01      		movw r30,r24
 389:../../emulator/emulator.c **** 	u32 type, addr;
 1041               		.loc 6 389 2 is_stmt 1 view .LVU260
 390:../../emulator/emulator.c **** 
 391:../../emulator/emulator.c **** 	type = args[0];
 1042               		.loc 6 391 2 view .LVU261
 1043               		.loc 6 391 7 is_stmt 0 view .LVU262
 1044 02ac 8081      		ld r24,Z
 1045 02ae 9181      		ldd r25,Z+1
 1046 02b0 A281      		ldd r26,Z+2
 1047 02b2 B381      		ldd r27,Z+3
 1048               	.LVL79:
 392:../../emulator/emulator.c **** 	addr = args[1];
 1049               		.loc 6 392 2 is_stmt 1 view .LVU263
 393:../../emulator/emulator.c **** 	if(type >= EVENT_COUNT)
 1050               		.loc 6 393 2 view .LVU264
 1051               		.loc 6 393 4 is_stmt 0 view .LVU265
 1052 02b4 8230      		cpi r24,2
 1053 02b6 9105      		cpc r25,__zero_reg__
 1054 02b8 A105      		cpc r26,__zero_reg__
 1055 02ba B105      		cpc r27,__zero_reg__
 1056 02bc 00F4      		brsh .L52
 392:../../emulator/emulator.c **** 	addr = args[1];
 1057               		.loc 6 392 7 view .LVU266
 1058 02be 4481      		ldd r20,Z+4
 1059 02c0 5581      		ldd r21,Z+5
 1060 02c2 6681      		ldd r22,Z+6
 1061 02c4 7781      		ldd r23,Z+7
 394:../../emulator/emulator.c **** 	{
 395:../../emulator/emulator.c **** 		return 1;
 396:../../emulator/emulator.c **** 	}
 397:../../emulator/emulator.c **** 
 398:../../emulator/emulator.c **** 	EMU_LOG(PSTR("Registered Event Type: %"PRIu32" - Addr: %"PRIu32), type, addr);
 1062               		.loc 6 398 79 is_stmt 1 view .LVU267
 399:../../emulator/emulator.c **** 	_emu->Events[type] = addr;
 1063               		.loc 6 399 2 view .LVU268
 1064               		.loc 6 399 21 is_stmt 0 view .LVU269
 1065 02c6 FC01      		movw r30,r24
 1066               	.LVL80:
 1067               		.loc 6 399 21 view .LVU270
 1068 02c8 3396      		adiw r30,3
 1069 02ca EE0F      		lsl r30
 1070 02cc FF1F      		rol r31
 1071 02ce EE0F      		lsl r30
 1072 02d0 FF1F      		rol r31
 1073               	.LVL81:
 1074               		.loc 6 399 21 view .LVU271
 1075 02d2 E050      		subi r30,lo8(-(_tasks))
 1076 02d4 F040      		sbci r31,hi8(-(_tasks))
 1077 02d6 4083      		st Z,r20
 1078 02d8 5183      		std Z+1,r21
 1079 02da 6283      		std Z+2,r22
 1080 02dc 7383      		std Z+3,r23
 1081               	.LVL82:
 400:../../emulator/emulator.c **** 	return 0;
 1082               		.loc 6 400 2 is_stmt 1 view .LVU272
 1083               		.loc 6 400 9 is_stmt 0 view .LVU273
 1084 02de 80E0      		ldi r24,0
 1085 02e0 0895      		ret
 1086               	.LVL83:
 1087               	.L52:
 395:../../emulator/emulator.c **** 	}
 1088               		.loc 6 395 10 view .LVU274
 1089 02e2 81E0      		ldi r24,lo8(1)
 1090               	.LVL84:
 1091               	/* epilogue start */
 401:../../emulator/emulator.c **** }
 1092               		.loc 6 401 1 view .LVU275
 1093 02e4 0895      		ret
 1094               		.cfi_endproc
 1095               	.LFE18:
 1098               	syscall_millis:
 1099               	.LVL85:
 1100               	.LFB19:
 402:../../emulator/emulator.c **** 
 403:../../emulator/emulator.c **** /**
 404:../../emulator/emulator.c ****  * @brief System call to get the number of milliseconds since startup
 405:../../emulator/emulator.c ****  *
 406:../../emulator/emulator.c ****  * @param args args[0]: Return value (milliseconds)
 407:../../emulator/emulator.c ****  * @return Non-zero on error
 408:../../emulator/emulator.c ****  */
 409:../../emulator/emulator.c **** static u8 syscall_millis(u32 *args)
 410:../../emulator/emulator.c **** {
 1101               		.loc 6 410 1 is_stmt 1 view -0
 1102               		.cfi_startproc
 1103               	/* prologue: function */
 1104               	/* frame size = 0 */
 1105               	/* stack size = 0 */
 1106               	.L__stack_usage = 0
 411:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 412:../../emulator/emulator.c **** 	args[0] = env_millis();
 1107               		.loc 6 412 2 view .LVU277
 1108               	.LBB130:
 1109               	.LBI130:
  91:platform.c    **** 
  92:platform.c    **** void env_gfx_rect(u16 x, u16 y, u16 w, u16 h, u32 color)
  93:platform.c    **** {
  94:platform.c    **** 	lcd_rect(x, y, w, h, _abgr_to_rgb565(color));
  95:platform.c    **** }
  96:platform.c    **** 
  97:platform.c    **** void env_gfx_image_rgb565(u16 x, u16 y, u16 w, u16 h, u32 addr)
  98:platform.c    **** {
  99:platform.c    **** 	lcd_image_rgb565(x, y, w, h, addr);
 100:platform.c    **** }
 101:platform.c    **** 
 102:platform.c    **** void env_gfx_image_grayscale(
 103:platform.c    **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, u32 fg, u32 bg)
 104:platform.c    **** {
 105:platform.c    **** 	lcd_image_grayscale(x, y, w, h, addr, fg, bg);
 106:platform.c    **** }
 107:platform.c    **** 
 108:platform.c    **** void env_gfx_image_1bit(
 109:platform.c    **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, u32 fg, u32 bg)
 110:platform.c    **** {
 111:platform.c    **** 	lcd_image_1bit(x, y, w, h, addr,
 112:platform.c    **** 		_abgr_to_rgb565(fg),
 113:platform.c    **** 		_abgr_to_rgb565(bg));
 114:platform.c    **** }
 115:platform.c    **** 
 116:platform.c    **** /* --- SERIAL --- */
 117:platform.c    **** 
 118:platform.c    **** void env_serial_write(const void *data, u32 len)
 119:platform.c    **** {
 120:platform.c    **** 	u32 i;
 121:platform.c    **** 	const char *data8 = data;
 122:platform.c    **** 	for(i = 0; i < len; ++i)
 123:platform.c    **** 	{
 124:platform.c    **** 		serial_tx(data8[i]);
 125:platform.c    **** 	}
 126:platform.c    **** }
 127:platform.c    **** 
 128:platform.c    **** /* --- RANDOM --- */
 129:platform.c    **** 
 130:platform.c    **** u32 env_random_get(void)
 131:platform.c    **** {
 132:platform.c    **** 	return random_get();
 133:platform.c    **** }
 134:platform.c    **** 
 135:platform.c    **** /* --- TIMER --- */
 136:platform.c    **** 
 137:platform.c    **** u32 env_millis(void)
 1110               		.loc 1 137 5 view .LVU278
 138:platform.c    **** {
 139:platform.c    **** 	return millis();
 1111               		.loc 1 139 2 view .LVU279
 1112               	.LBB131:
 1113               	.LBI131:
 1114               		.file 7 "timer/timer.c"
   1:timer/timer.c **** /**
   2:timer/timer.c ****  * @file    timer.c
   3:timer/timer.c ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:timer/timer.c ****  * @version 0.1
   5:timer/timer.c ****  * @date    01.05.2023
   6:timer/timer.c ****  */
   7:timer/timer.c **** 
   8:timer/timer.c **** #include <timer.h>
   9:timer/timer.c **** #include <serial.h>
  10:timer/timer.c **** #include <logger.h>
  11:timer/timer.c **** #include <avr/interrupt.h>
  12:timer/timer.c **** #include <avr/pgmspace.h>
  13:timer/timer.c **** 
  14:timer/timer.c **** /** Millisecond counter */
  15:timer/timer.c **** static volatile u32 _ms;
  16:timer/timer.c **** 
  17:timer/timer.c **** void timer_init(void)
  18:timer/timer.c **** {
  19:timer/timer.c **** 	/* Initialize hardware timers */
  20:timer/timer.c **** 
  21:timer/timer.c **** 	/* CTC Mode */
  22:timer/timer.c **** 	TCCR0A = (1 << WGM01);
  23:timer/timer.c **** 
  24:timer/timer.c **** 	/* Prescaler 64 */
  25:timer/timer.c **** 	TCCR0B |= (1 << CS01) | (1 << CS00);
  26:timer/timer.c **** 
  27:timer/timer.c **** 	/* 16000000 / 64 / 1000 = 250 */
  28:timer/timer.c **** 	OCR0A = 250 - 1;
  29:timer/timer.c **** 
  30:timer/timer.c **** 	/* Enable compare interrupt */
  31:timer/timer.c **** 	TIMSK0 |= (1 << OCIE0A);
  32:timer/timer.c **** 
  33:timer/timer.c **** 	log_boot_P(LOG_INIT, PSTR("Millisecond timer initialized"));
  34:timer/timer.c **** }
  35:timer/timer.c **** 
  36:timer/timer.c **** u32 millis(void)
 1115               		.loc 7 36 5 view .LVU280
 1116               	.LBB132:
  37:timer/timer.c **** {
  38:timer/timer.c **** 	/* Return number of milliseconds since boot */
  39:timer/timer.c **** 	return _ms;
 1117               		.loc 7 39 2 view .LVU281
 1118               		.loc 7 39 9 is_stmt 0 view .LVU282
 1119 02e6 4091 0000 		lds r20,_ms
 1120 02ea 5091 0000 		lds r21,_ms+1
 1121 02ee 6091 0000 		lds r22,_ms+2
 1122 02f2 7091 0000 		lds r23,_ms+3
 1123               	.LBE132:
 1124               	.LBE131:
 1125               	.LBE130:
 1126               		.loc 6 412 10 view .LVU283
 1127 02f6 FC01      		movw r30,r24
 1128 02f8 4083      		st Z,r20
 1129 02fa 5183      		std Z+1,r21
 1130 02fc 6283      		std Z+2,r22
 1131 02fe 7383      		std Z+3,r23
 413:../../emulator/emulator.c **** 	return 0;
 1132               		.loc 6 413 2 is_stmt 1 view .LVU284
 414:../../emulator/emulator.c **** }
 1133               		.loc 6 414 1 is_stmt 0 view .LVU285
 1134 0300 80E0      		ldi r24,0
 1135               	.LVL86:
 1136               	/* epilogue start */
 1137               		.loc 6 414 1 view .LVU286
 1138 0302 0895      		ret
 1139               		.cfi_endproc
 1140               	.LFE19:
 1143               	adc_read.constprop.0:
 1144               	.LFB23:
 1145               		.file 8 "adc/adc.c"
   1:adc/adc.c     **** /**
   2:adc/adc.c     ****  * @file    adc.c
   3:adc/adc.c     ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:adc/adc.c     ****  * @version 0.1
   5:adc/adc.c     ****  * @date    16.05.2023
   6:adc/adc.c     ****  */
   7:adc/adc.c     **** 
   8:adc/adc.c     **** #include <adc.h>
   9:adc/adc.c     **** #include <logger.h>
  10:adc/adc.c     **** #include <avr/io.h>
  11:adc/adc.c     **** #include <avr/pgmspace.h>
  12:adc/adc.c     **** 
  13:adc/adc.c     **** void adc_init(void)
  14:adc/adc.c     **** {
  15:adc/adc.c     **** 	ADMUX = (1 << REFS0);
  16:adc/adc.c     **** 	ADCSRA = (1 << ADPS1) | (1 << ADPS0);
  17:adc/adc.c     **** 	ADCSRA |= (1 << ADEN);
  18:adc/adc.c     **** 	adc_read(ADC_CHANNEL_NOISE);
  19:adc/adc.c     **** 	log_boot_P(LOG_INIT, PSTR("ADC initialized"));
  20:adc/adc.c     **** }
  21:adc/adc.c     **** 
  22:adc/adc.c     **** u16 adc_read(u8 channel)
 1146               		.loc 8 22 5 is_stmt 1 view -0
 1147               		.cfi_startproc
 1148               	/* prologue: function */
 1149               	/* frame size = 0 */
 1150               	/* stack size = 0 */
 1151               	.L__stack_usage = 0
 1152               	.LVL87:
  23:adc/adc.c     **** {
  24:adc/adc.c     **** 	ADMUX = (ADMUX & ~(0x1F)) | (channel & 0x1F);
 1153               		.loc 8 24 11 view .LVU288
 1154 0304 8091 7C00 		lds r24,124
 1155 0308 807E      		andi r24,lo8(-32)
 1156 030a 8560      		ori r24,lo8(5)
 1157               		.loc 8 24 8 view .LVU289
 1158 030c 8093 7C00 		sts 124,r24
  25:adc/adc.c     **** 	ADCSRA |= (1 << ADSC);
 1159               		.loc 8 25 2 view .LVU290
 1160 0310 8091 7A00 		lds r24,122
 1161               		.loc 8 25 9 view .LVU291
 1162 0314 8064      		ori r24,lo8(64)
 1163 0316 8093 7A00 		sts 122,r24
 1164               	.L55:
  26:adc/adc.c     **** 	while (ADCSRA & (1 << ADSC)) {}
 1165               		.loc 8 26 9 view .LVU292
 1166 031a 8091 7A00 		lds r24,122
 1167 031e 86FD      		sbrc r24,6
 1168 0320 00C0      		rjmp .L55
  27:adc/adc.c     **** 	return ADCW;
 1169               		.loc 8 27 9 view .LVU293
 1170 0322 8091 7800 		lds r24,120
 1171 0326 9091 7900 		lds r25,120+1
 1172               	/* epilogue start */
  28:adc/adc.c     **** }
 1173               		.loc 8 28 1 view .LVU294
 1174 032a 0895      		ret
 1175               		.cfi_endproc
 1176               	.LFE23:
 1179               	panic:
 1180               	.LVL88:
 1181               	.LFB24:
 1182               		.file 9 "logger/logger.c"
   1:logger/logger.c **** /**
   2:logger/logger.c ****  * @file    logger.c
   3:logger/logger.c ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:logger/logger.c ****  * @version 0.1
   5:logger/logger.c ****  * @date    16.05.2023
   6:logger/logger.c ****  */
   7:logger/logger.c **** 
   8:logger/logger.c **** #include <logger.h>
   9:logger/logger.c **** #include <serial.h>
  10:logger/logger.c **** #include <lcd.h>
  11:logger/logger.c **** #include <avr/pgmspace.h>
  12:logger/logger.c **** #include <avr/interrupt.h>
  13:logger/logger.c **** #include <stdarg.h>
  14:logger/logger.c **** #include <stdio.h>
  15:logger/logger.c **** #include <ctype.h>
  16:logger/logger.c **** 
  17:logger/logger.c **** /** How many bytes to print per line in a hexdump */
  18:logger/logger.c **** #define DUMP_BYTES_PER_LINE   16
  19:logger/logger.c **** 
  20:logger/logger.c **** /** LCD Log top margin */
  21:logger/logger.c **** #define LOG_Y_OFFSET         120
  22:logger/logger.c **** 
  23:logger/logger.c **** /** LCD Log left margin */
  24:logger/logger.c **** #define LOG_X_OFFSET          10
  25:logger/logger.c **** 
  26:logger/logger.c **** /** LCD advance Y direction */
  27:logger/logger.c **** #define LOG_Y_ADVANCE         10
  28:logger/logger.c **** 
  29:logger/logger.c **** /** LCD Log prefix pixel width */
  30:logger/logger.c **** #define LOG_X_TEXT_OFFSET     49
  31:logger/logger.c **** 
  32:logger/logger.c **** /** Serial Log prefix width */
  33:logger/logger.c **** #define LOG_START_WIDTH        8
  34:logger/logger.c **** 
  35:logger/logger.c **** /** Image Logo X offset */
  36:logger/logger.c **** #define LOGO_X_OFFSET         30
  37:logger/logger.c **** 
  38:logger/logger.c **** /** Image Logo Y Offset */
  39:logger/logger.c **** #define LOGO_Y_OFFSET         50
  40:logger/logger.c **** 
  41:logger/logger.c **** /** Text Logo X Offset */
  42:logger/logger.c **** #define LOGO_TEXT_X_OFFSET    56
  43:logger/logger.c **** 
  44:logger/logger.c **** //! @cond Doxygen_Suppress
  45:logger/logger.c **** 
  46:logger/logger.c **** /** Highlight colors of the various log levels */
  47:logger/logger.c **** const RGB565 _log_color[] PROGMEM =
  48:logger/logger.c **** {
  49:logger/logger.c **** 	COLOR_CYAN,
  50:logger/logger.c **** 	COLOR_GREEN,
  51:logger/logger.c **** 	COLOR_YELLOW,
  52:logger/logger.c **** 	COLOR_RED,
  53:logger/logger.c **** 	COLOR_MAGENTA
  54:logger/logger.c **** };
  55:logger/logger.c **** 
  56:logger/logger.c **** /** Log level [INIT] string */
  57:logger/logger.c **** const char _init[] PROGMEM = "INIT";
  58:logger/logger.c **** 
  59:logger/logger.c **** /** Log level [DEBUG] string */
  60:logger/logger.c **** const char _debug[] PROGMEM = "DEBUG";
  61:logger/logger.c **** 
  62:logger/logger.c **** /** Log level [WARN] string */
  63:logger/logger.c **** const char _warn[] PROGMEM = "WARN";
  64:logger/logger.c **** 
  65:logger/logger.c **** /** Log level [ERROR] string */
  66:logger/logger.c **** const char _error[] PROGMEM = "ERROR";
  67:logger/logger.c **** 
  68:logger/logger.c **** /** Log level [PANIC] string */
  69:logger/logger.c **** const char _panic[] PROGMEM = "PANIC";
  70:logger/logger.c **** 
  71:logger/logger.c **** /** Array of log level strings */
  72:logger/logger.c **** const char *const _log_msg[] PROGMEM =
  73:logger/logger.c **** {
  74:logger/logger.c **** 	_init,
  75:logger/logger.c **** 	_debug,
  76:logger/logger.c **** 	_warn,
  77:logger/logger.c **** 	_error,
  78:logger/logger.c **** 	_panic
  79:logger/logger.c **** };
  80:logger/logger.c **** 
  81:logger/logger.c **** //! @endcond
  82:logger/logger.c **** 
  83:logger/logger.c **** /** Flag that indicates if the LCD has been initialized */
  84:logger/logger.c **** static bool _lcd_initialized;
  85:logger/logger.c **** 
  86:logger/logger.c **** /** Current log y position */
  87:logger/logger.c **** static u16 _log_y = LOG_Y_OFFSET;
  88:logger/logger.c **** 
  89:logger/logger.c **** /**
  90:logger/logger.c ****  * @brief Print a log message on both serial and LCD
  91:logger/logger.c ****  *
  92:logger/logger.c ****  * @param level Log level depending on severity and desired appearance
  93:logger/logger.c ****  * @param msg Message to print
  94:logger/logger.c ****  */
  95:logger/logger.c **** static void _lcd_log(LogLevel level, const char *msg)
  96:logger/logger.c **** {
  97:logger/logger.c **** 	if(level != LOG_EXT)
  98:logger/logger.c **** 	{
  99:logger/logger.c **** 		u8 len;
 100:logger/logger.c **** 		u16 x;
 101:logger/logger.c **** 		const char *level_str;
 102:logger/logger.c **** 
 103:logger/logger.c **** 		if(level != LOG_NONE && level != LOG_OFFSET)
 104:logger/logger.c **** 		{
 105:logger/logger.c **** 			level_str = (const char *)pgm_read_word(&_log_msg[level]);
 106:logger/logger.c **** 
 107:logger/logger.c **** 			serial_tx('[');
 108:logger/logger.c **** 			serial_tx_str_P(level_str);
 109:logger/logger.c **** 			serial_tx(']');
 110:logger/logger.c **** 
 111:logger/logger.c **** 			len = 2 + strlen_P(level_str);
 112:logger/logger.c **** 			while(len < LOG_START_WIDTH)
 113:logger/logger.c **** 			{
 114:logger/logger.c **** 				serial_tx(' ');
 115:logger/logger.c **** 				++len;
 116:logger/logger.c **** 			}
 117:logger/logger.c **** 
 118:logger/logger.c **** 			if(_lcd_initialized)
 119:logger/logger.c **** 			{
 120:logger/logger.c **** 				RGB565 fg;
 121:logger/logger.c **** 
 122:logger/logger.c **** 				fg = pgm_read_word(&_log_color[level]);
 123:logger/logger.c **** 				x = LOG_X_OFFSET;
 124:logger/logger.c **** 				x += lcd_char(x, _log_y, COLOR_WHITE, COLOR_BLACK, '[');
 125:logger/logger.c **** 				x += lcd_string_P(x, _log_y, fg, COLOR_BLACK, level_str);
 126:logger/logger.c **** 				lcd_char(x, _log_y, COLOR_WHITE, COLOR_BLACK, ']');
 127:logger/logger.c **** 			}
 128:logger/logger.c **** 		}
 129:logger/logger.c **** 		else if(level == LOG_OFFSET)
 130:logger/logger.c **** 		{
 131:logger/logger.c **** 			for(len = 0; len < LOG_START_WIDTH; ++len)
 132:logger/logger.c **** 			{
 133:logger/logger.c **** 				serial_tx(' ');
 134:logger/logger.c **** 			}
 135:logger/logger.c **** 		}
 136:logger/logger.c **** 
 137:logger/logger.c **** 		if(_lcd_initialized)
 138:logger/logger.c **** 		{
 139:logger/logger.c **** 			const char *s;
 140:logger/logger.c **** 			char c;
 141:logger/logger.c **** 
 142:logger/logger.c **** 			x = LOG_X_TEXT_OFFSET;
 143:logger/logger.c **** 			if(level == LOG_NONE)
 144:logger/logger.c **** 			{
 145:logger/logger.c **** 				x = 0;
 146:logger/logger.c **** 			}
 147:logger/logger.c **** 
 148:logger/logger.c **** 			s = msg;
 149:logger/logger.c **** 			while((c = *s++))
 150:logger/logger.c **** 			{
 151:logger/logger.c **** 				if(c == '\n')
 152:logger/logger.c **** 				{
 153:logger/logger.c **** 					x = 0;
 154:logger/logger.c **** 					_log_y += LOG_Y_ADVANCE;
 155:logger/logger.c **** 				}
 156:logger/logger.c **** 				else
 157:logger/logger.c **** 				{
 158:logger/logger.c **** 					x += lcd_char(LOG_X_OFFSET + x, _log_y,
 159:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 160:logger/logger.c **** 				}
 161:logger/logger.c **** 			}
 162:logger/logger.c **** 
 163:logger/logger.c **** 			_log_y += LOG_Y_ADVANCE;
 164:logger/logger.c **** 		}
 165:logger/logger.c **** 	}
 166:logger/logger.c **** 
 167:logger/logger.c **** 	serial_tx_str(msg);
 168:logger/logger.c **** }
 169:logger/logger.c **** 
 170:logger/logger.c **** void log_boot_P(LogLevel level, const char *msg, ...)
 171:logger/logger.c **** {
 172:logger/logger.c **** 	char buf[128];
 173:logger/logger.c **** 	va_list v;
 174:logger/logger.c **** 
 175:logger/logger.c **** 	va_start(v, msg);
 176:logger/logger.c **** 	vsnprintf_P(buf, sizeof(buf), msg, v);
 177:logger/logger.c **** 	va_end(v);
 178:logger/logger.c **** 
 179:logger/logger.c **** 	_lcd_log(level, buf);
 180:logger/logger.c **** 	serial_tx('\n');
 181:logger/logger.c **** }
 182:logger/logger.c **** 
 183:logger/logger.c **** void panic(const char *msg, ...)
 184:logger/logger.c **** {
 1183               		.loc 9 184 1 view -0
 1184               		.cfi_startproc
 1185               		.loc 9 184 1 is_stmt 0 view .LVU296
 1186 032c CF93      		push r28
 1187               		.cfi_def_cfa_offset 3
 1188               		.cfi_offset 28, -2
 1189 032e DF93      		push r29
 1190               		.cfi_def_cfa_offset 4
 1191               		.cfi_offset 29, -3
 1192 0330 CDB7      		in r28,__SP_L__
 1193 0332 DEB7      		in r29,__SP_H__
 1194               		.cfi_def_cfa_register 28
 1195 0334 C058      		subi r28,-128
 1196 0336 D109      		sbc r29,__zero_reg__
 1197               		.cfi_def_cfa_offset 132
 1198 0338 0FB6      		in __tmp_reg__,__SREG__
 1199 033a F894      		cli
 1200 033c DEBF      		out __SP_H__,r29
 1201 033e 0FBE      		out __SREG__,__tmp_reg__
 1202 0340 CDBF      		out __SP_L__,r28
 1203               	/* prologue: function */
 1204               	/* frame size = 128 */
 1205               	/* stack size = 130 */
 1206               	.L__stack_usage = 130
 1207 0342 9E01      		movw r18,r28
 1208 0344 2B57      		subi r18,123
 1209 0346 3F4F      		sbci r19,-1
 1210               	.LVL89:
 1211               		.loc 9 184 1 view .LVU297
 1212 0348 F901      		movw r30,r18
 1213 034a 4191      		ld r20,Z+
 1214 034c 5191      		ld r21,Z+
 1215               	.LVL90:
 1216               		.loc 9 184 1 view .LVU298
 1217 034e 9F01      		movw r18,r30
 185:logger/logger.c **** 	char buf[128];
 1218               		.loc 9 185 2 is_stmt 1 view .LVU299
 186:logger/logger.c **** 	va_list v;
 1219               		.loc 9 186 2 view .LVU300
 187:logger/logger.c **** 
 188:logger/logger.c **** 	va_start(v, msg);
 1220               		.loc 9 188 2 view .LVU301
 1221               	.LVL91:
 189:logger/logger.c **** 	vsnprintf_P(buf, sizeof(buf), msg, v);
 1222               		.loc 9 189 2 view .LVU302
 1223 0350 60E8      		ldi r22,lo8(-128)
 1224 0352 70E0      		ldi r23,0
 1225 0354 CE01      		movw r24,r28
 1226 0356 0196      		adiw r24,1
 1227 0358 0E94 0000 		call vsnprintf_P
 1228               	.LVL92:
 190:logger/logger.c **** 	va_end(v);
 1229               		.loc 9 190 2 view .LVU303
 191:logger/logger.c **** 
 192:logger/logger.c **** 	_lcd_log(LOG_PANIC, buf);
 1230               		.loc 9 192 2 view .LVU304
 1231 035c BE01      		movw r22,r28
 1232 035e 6F5F      		subi r22,-1
 1233 0360 7F4F      		sbci r23,-1
 1234 0362 84E0      		ldi r24,lo8(4)
 1235 0364 0E94 0000 		call _lcd_log
 1236               	.LVL93:
 193:logger/logger.c **** 	serial_tx('\n');
 1237               		.loc 9 193 2 view .LVU305
 1238 0368 8AE0      		ldi r24,lo8(10)
 1239 036a 0E94 0000 		call serial_tx
 1240               	.LVL94:
 194:logger/logger.c **** 	strcpy_P(buf, PSTR("\n>>> RESET REQUIRED\n"));
 1241               		.loc 9 194 2 view .LVU306
 1242               		.loc 9 194 16 view .LVU307
 1243               		.loc 9 194 16 view .LVU308
 1244               		.loc 9 194 2 is_stmt 0 view .LVU309
 1245 036e 60E0      		ldi r22,lo8(__c.0.lto_priv.5)
 1246 0370 70E0      		ldi r23,hi8(__c.0.lto_priv.5)
 1247 0372 CE01      		movw r24,r28
 1248 0374 0196      		adiw r24,1
 1249 0376 0E94 0000 		call strcpy_P
 1250               	.LVL95:
 195:logger/logger.c **** 	_lcd_log(LOG_NONE, buf);
 1251               		.loc 9 195 2 is_stmt 1 view .LVU310
 1252 037a BE01      		movw r22,r28
 1253 037c 6F5F      		subi r22,-1
 1254 037e 7F4F      		sbci r23,-1
 1255 0380 86E0      		ldi r24,lo8(6)
 1256 0382 0E94 0000 		call _lcd_log
 1257               	.LVL96:
 196:logger/logger.c **** 
 197:logger/logger.c **** 	/* Disable interrupt */
 198:logger/logger.c **** 	cli();
 1258               		.loc 9 198 2 view .LVU311
 1259               	/* #APP */
 1260               	 ;  198 "logger/logger.c" 1
 1261 0386 F894      		cli
 1262               	 ;  0 "" 2
 1263               	/* #NOAPP */
 1264               	.L58:
 199:logger/logger.c **** 
 200:logger/logger.c **** 	/* Infinite loop */
 201:logger/logger.c **** 	for(;;)
 1265               		.loc 9 201 2 discriminator 1 view .LVU312
 202:logger/logger.c **** 	{
 203:logger/logger.c **** 	}
 1266               		.loc 9 203 2 discriminator 1 view .LVU313
 201:logger/logger.c **** 	{
 1267               		.loc 9 201 2 discriminator 1 view .LVU314
 1268 0388 00C0      		rjmp .L58
 1269               		.cfi_endproc
 1270               	.LFE24:
 1273               	spi_xchg:
 1274               	.LVL97:
 1275               	.LFB25:
  26:spi/spi.c     **** 	u16 cnt = 0;
 1276               		.loc 4 26 1 view -0
 1277               		.cfi_startproc
 1278               	/* prologue: function */
 1279               	/* frame size = 0 */
 1280               	/* stack size = 0 */
 1281               	.L__stack_usage = 0
  27:spi/spi.c     **** 	SPDR = byte;
 1282               		.loc 4 27 2 view .LVU316
  28:spi/spi.c     **** 	while(!(SPSR & (1 << SPIF)))
 1283               		.loc 4 28 2 view .LVU317
  28:spi/spi.c     **** 	while(!(SPSR & (1 << SPIF)))
 1284               		.loc 4 28 7 is_stmt 0 view .LVU318
 1285 038a 8EBD      		out 0x2e,r24
  29:spi/spi.c     **** 	{
 1286               		.loc 4 29 2 is_stmt 1 view .LVU319
  28:spi/spi.c     **** 	while(!(SPSR & (1 << SPIF)))
 1287               		.loc 4 28 7 is_stmt 0 view .LVU320
 1288 038c 80E0      		ldi r24,0
 1289 038e 90E0      		ldi r25,0
 1290               	.LVL98:
 1291               	.L60:
  29:spi/spi.c     **** 	{
 1292               		.loc 4 29 8 is_stmt 1 view .LVU321
 1293 0390 0DB4      		in __tmp_reg__,0x2d
 1294 0392 07FE      		sbrs __tmp_reg__,7
 1295 0394 00C0      		rjmp .L61
  37:spi/spi.c     **** }
 1296               		.loc 4 37 2 view .LVU322
  37:spi/spi.c     **** }
 1297               		.loc 4 37 9 is_stmt 0 view .LVU323
 1298 0396 8EB5      		in r24,0x2e
 1299               	.LVL99:
 1300               	/* epilogue start */
  38:spi/spi.c     **** 
 1301               		.loc 4 38 1 view .LVU324
 1302 0398 0895      		ret
 1303               	.LVL100:
 1304               	.L61:
  31:spi/spi.c     **** 		{
 1305               		.loc 4 31 3 is_stmt 1 view .LVU325
  31:spi/spi.c     **** 		{
 1306               		.loc 4 31 5 is_stmt 0 view .LVU326
 1307 039a 0197      		sbiw r24,1
 1308               	.LVL101:
  31:spi/spi.c     **** 		{
 1309               		.loc 4 31 5 view .LVU327
 1310 039c 0097      		sbiw r24,0
 1311 039e 01F4      		brne .L60
  33:spi/spi.c     **** 		}
 1312               		.loc 4 33 4 is_stmt 1 view .LVU328
  33:spi/spi.c     **** 		}
 1313               		.loc 4 33 10 view .LVU329
  33:spi/spi.c     **** 		}
 1314               		.loc 4 33 10 view .LVU330
  33:spi/spi.c     **** 		}
 1315               		.loc 4 33 4 is_stmt 0 view .LVU331
 1316 03a0 80E0      		ldi r24,lo8(__c.0.lto_priv.4)
 1317 03a2 90E0      		ldi r25,hi8(__c.0.lto_priv.4)
 1318               	.LVL102:
  33:spi/spi.c     **** 		}
 1319               		.loc 4 33 4 view .LVU332
 1320 03a4 9F93      		push r25
 1321               		.cfi_def_cfa_offset 3
 1322               	.LVL103:
  33:spi/spi.c     **** 		}
 1323               		.loc 4 33 4 view .LVU333
 1324 03a6 8F93      		push r24
 1325               		.cfi_def_cfa_offset 4
 1326 03a8 0E94 0000 		call panic
 1327               	.LVL104:
 1328               		.cfi_endproc
 1329               	.LFE25:
 1332               	_xmem_start:
 1333               	.LVL105:
 1334               	.LFB26:
 1335               		.file 10 "xmem/xmem.c"
   1:xmem/xmem.c   **** /**
   2:xmem/xmem.c   ****  * @file    xmem.c
   3:xmem/xmem.c   ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:xmem/xmem.c   ****  * @version 0.1
   5:xmem/xmem.c   ****  * @date    01.05.2023
   6:xmem/xmem.c   ****  */
   7:xmem/xmem.c   **** 
   8:xmem/xmem.c   **** #include <xmem.h>
   9:xmem/xmem.c   **** #include <spi.h>
  10:xmem/xmem.c   **** #include <logger.h>
  11:xmem/xmem.c   **** #include <gpio.h>
  12:xmem/xmem.c   **** #include <avr/io.h>
  13:xmem/xmem.c   **** #include <avr/pgmspace.h>
  14:xmem/xmem.c   **** #include <stdlib.h>
  15:xmem/xmem.c   **** 
  16:xmem/xmem.c   **** /** Do a simple checkerboard memory test. Comment this out to do a more
  17:xmem/xmem.c   ****     thorough memory test using random numbers */
  18:xmem/xmem.c   **** #define MEMTEST_SIMPLE
  19:xmem/xmem.c   **** 
  20:xmem/xmem.c   **** /** How many memory banks there are */
  21:xmem/xmem.c   **** #define BANK_COUNT            3
  22:xmem/xmem.c   **** 
  23:xmem/xmem.c   **** /** The size of each memory bank as a power of two */
  24:xmem/xmem.c   **** #define BANK_SIZE_POT        17
  25:xmem/xmem.c   **** 
  26:xmem/xmem.c   **** /** The size of each memory bank in bytes */
  27:xmem/xmem.c   **** #define BANK_SIZE              0x20000UL
  28:xmem/xmem.c   **** 
  29:xmem/xmem.c   **** /** The interval in bytes at which to do progress updates in a memory test */
  30:xmem/xmem.c   **** #define OUTPUT_INTERVAL        0x2000UL
  31:xmem/xmem.c   **** 
  32:xmem/xmem.c   **** /** Dummy SPI value when receiving */
  33:xmem/xmem.c   **** #define DUMMY                  0xFF
  34:xmem/xmem.c   **** 
  35:xmem/xmem.c   **** /** Random seed for extended memory test */
  36:xmem/xmem.c   **** #define SEED                 42
  37:xmem/xmem.c   **** 
  38:xmem/xmem.c   **** /** Write block command */
  39:xmem/xmem.c   **** #define SRAM_COMMAND_WRITE    2
  40:xmem/xmem.c   **** 
  41:xmem/xmem.c   **** /** Read block command */
  42:xmem/xmem.c   **** #define SRAM_COMMAND_READ     3
  43:xmem/xmem.c   **** 
  44:xmem/xmem.c   **** /* --- PRIVATE --- */
  45:xmem/xmem.c   **** 
  46:xmem/xmem.c   **** /**
  47:xmem/xmem.c   ****  * @brief Start a transmission to the external memory
  48:xmem/xmem.c   ****  *
  49:xmem/xmem.c   ****  * @param bank Memory bank number
  50:xmem/xmem.c   ****  * @param command Read/Write command
  51:xmem/xmem.c   ****  * @param addr Start address
  52:xmem/xmem.c   ****  */
  53:xmem/xmem.c   **** static void _xmem_start(u8 bank, u8 command, u32 addr)
  54:xmem/xmem.c   **** {
 1336               		.loc 10 54 1 is_stmt 1 view -0
 1337               		.cfi_startproc
 1338               		.loc 10 54 1 is_stmt 0 view .LVU335
 1339 03ac CF93      		push r28
 1340               		.cfi_def_cfa_offset 3
 1341               		.cfi_offset 28, -2
 1342 03ae DF93      		push r29
 1343               		.cfi_def_cfa_offset 4
 1344               		.cfi_offset 29, -3
 1345               	/* prologue: function */
 1346               	/* frame size = 0 */
 1347               	/* stack size = 2 */
 1348               	.L__stack_usage = 2
 1349 03b0 E901      		movw r28,r18
  55:xmem/xmem.c   **** 	XMEM_SELECT(bank);
 1350               		.loc 10 55 2 is_stmt 1 view .LVU336
 1351 03b2 95B1      		in r25,0x5
 1352 03b4 41E0      		ldi r20,lo8(1)
 1353 03b6 50E0      		ldi r21,0
 1354 03b8 00C0      		rjmp 2f
 1355               		1:
 1356 03ba 440F      		lsl r20
 1357               		2:
 1358 03bc 8A95      		dec r24
 1359 03be 02F4      		brpl 1b
 1360 03c0 4095      		com r20
 1361 03c2 4923      		and r20,r25
 1362 03c4 45B9      		out 0x5,r20
  56:xmem/xmem.c   **** 	spi_xchg(command);
 1363               		.loc 10 56 2 view .LVU337
 1364 03c6 862F      		mov r24,r22
 1365               	.LVL106:
 1366               		.loc 10 56 2 is_stmt 0 view .LVU338
 1367 03c8 0E94 0000 		call spi_xchg
 1368               	.LVL107:
  57:xmem/xmem.c   **** 	spi_xchg(addr >> 16);
 1369               		.loc 10 57 2 is_stmt 1 view .LVU339
 1370 03cc 80E0      		ldi r24,0
 1371 03ce 0E94 0000 		call spi_xchg
 1372               	.LVL108:
  58:xmem/xmem.c   **** 	spi_xchg(addr >> 8);
 1373               		.loc 10 58 2 view .LVU340
 1374 03d2 8D2F      		mov r24,r29
 1375 03d4 0E94 0000 		call spi_xchg
 1376               	.LVL109:
  59:xmem/xmem.c   **** 	spi_xchg(addr);
 1377               		.loc 10 59 2 view .LVU341
 1378 03d8 8C2F      		mov r24,r28
 1379               	/* epilogue start */
  60:xmem/xmem.c   **** }
 1380               		.loc 10 60 1 is_stmt 0 view .LVU342
 1381 03da DF91      		pop r29
 1382 03dc CF91      		pop r28
  59:xmem/xmem.c   **** 	spi_xchg(addr);
 1383               		.loc 10 59 2 view .LVU343
 1384 03de 0C94 0000 		jmp spi_xchg
 1385               	.LVL110:
 1386               		.cfi_endproc
 1387               	.LFE26:
 1390               	_xmem_read:
 1391               	.LVL111:
 1392               	.LFB27:
  61:xmem/xmem.c   **** 
  62:xmem/xmem.c   **** /**
  63:xmem/xmem.c   ****  * @brief Perform a memory test on the external memoryy
  64:xmem/xmem.c   ****  */
  65:xmem/xmem.c   **** static void _memtest(void)
  66:xmem/xmem.c   **** {
  67:xmem/xmem.c   **** 	u8 bank, w, v;
  68:xmem/xmem.c   **** 	u32 i;
  69:xmem/xmem.c   **** 
  70:xmem/xmem.c   **** 	/* Run checkerboard memory test */
  71:xmem/xmem.c   **** 	log_boot_P(LOG_INIT, PSTR("Starting complete memory test"));
  72:xmem/xmem.c   **** 
  73:xmem/xmem.c   **** 	spi_fast();
  74:xmem/xmem.c   **** 	for(bank = 0; bank < BANK_COUNT; ++bank)
  75:xmem/xmem.c   **** 	{
  76:xmem/xmem.c   **** 		log_boot_P(LOG_INIT, PSTR("Testing memory bank [%02d]"), bank + 1);
  77:xmem/xmem.c   **** 
  78:xmem/xmem.c   **** 		/* Write */
  79:xmem/xmem.c   **** 		log_boot_P(LOG_INIT, PSTR("Writing pattern"));
  80:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_WRITE, 0);
  81:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
  82:xmem/xmem.c   **** 		v = 0xAA;
  83:xmem/xmem.c   **** #else
  84:xmem/xmem.c   **** 		srand(SEED);
  85:xmem/xmem.c   **** #endif
  86:xmem/xmem.c   **** 		for(i = 0; ; ++i)
  87:xmem/xmem.c   **** 		{
  88:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
  89:xmem/xmem.c   **** 			v = ~v;
  90:xmem/xmem.c   **** #else
  91:xmem/xmem.c   **** 			v = rand();
  92:xmem/xmem.c   **** #endif
  93:xmem/xmem.c   **** 			if(i % OUTPUT_INTERVAL == 0)
  94:xmem/xmem.c   **** 			{
  95:xmem/xmem.c   **** 				log_boot_P(LOG_EXT, PSTR("0x%06lX"), i);
  96:xmem/xmem.c   **** 			}
  97:xmem/xmem.c   **** 
  98:xmem/xmem.c   **** 			if(i >= BANK_SIZE)
  99:xmem/xmem.c   **** 			{
 100:xmem/xmem.c   **** 				break;
 101:xmem/xmem.c   **** 			}
 102:xmem/xmem.c   **** 
 103:xmem/xmem.c   **** 			spi_xchg(v);
 104:xmem/xmem.c   **** 		}
 105:xmem/xmem.c   **** 
 106:xmem/xmem.c   **** 		XMEM_DESELECT(bank);
 107:xmem/xmem.c   **** 
 108:xmem/xmem.c   **** 		/* Read */
 109:xmem/xmem.c   **** 		log_boot_P(LOG_INIT, PSTR("Verifying pattern"));
 110:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_READ, 0);
 111:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 112:xmem/xmem.c   **** 		v = 0xAA;
 113:xmem/xmem.c   **** #else
 114:xmem/xmem.c   **** 		srand(SEED);
 115:xmem/xmem.c   **** #endif
 116:xmem/xmem.c   **** 		for(i = 0; ; ++i)
 117:xmem/xmem.c   **** 		{
 118:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 119:xmem/xmem.c   **** 			v = ~v;
 120:xmem/xmem.c   **** #else
 121:xmem/xmem.c   **** 			v = rand();
 122:xmem/xmem.c   **** #endif
 123:xmem/xmem.c   **** 			if(i % OUTPUT_INTERVAL == 0)
 124:xmem/xmem.c   **** 			{
 125:xmem/xmem.c   **** 				log_boot_P(LOG_EXT, PSTR("0x%06lX"), i);
 126:xmem/xmem.c   **** 			}
 127:xmem/xmem.c   **** 
 128:xmem/xmem.c   **** 			if(i >= BANK_SIZE)
 129:xmem/xmem.c   **** 			{
 130:xmem/xmem.c   **** 				break;
 131:xmem/xmem.c   **** 			}
 132:xmem/xmem.c   **** 
 133:xmem/xmem.c   **** 			w = spi_xchg(DUMMY);
 134:xmem/xmem.c   **** 			if(w != v)
 135:xmem/xmem.c   **** 			{
 136:xmem/xmem.c   **** 				XMEM_DESELECT(bank);
 137:xmem/xmem.c   **** 				panic(PSTR(
 138:xmem/xmem.c   **** 					"Memory test failed at address 0x%06lX\n"
 139:xmem/xmem.c   **** 					"         [0x%02X != 0x%02X]"),
 140:xmem/xmem.c   **** 					i, w, v);
 141:xmem/xmem.c   **** 			}
 142:xmem/xmem.c   **** 		}
 143:xmem/xmem.c   **** 
 144:xmem/xmem.c   **** 		XMEM_DESELECT(bank);
 145:xmem/xmem.c   **** 	}
 146:xmem/xmem.c   **** }
 147:xmem/xmem.c   **** 
 148:xmem/xmem.c   **** /**
 149:xmem/xmem.c   ****  * @brief Read data from a memory bank
 150:xmem/xmem.c   ****  *
 151:xmem/xmem.c   ****  * @param bank Bank number
 152:xmem/xmem.c   ****  * @param addr Start address
 153:xmem/xmem.c   ****  * @param data Buffer for the read data
 154:xmem/xmem.c   ****  * @param size Number of bytes to read
 155:xmem/xmem.c   ****  */
 156:xmem/xmem.c   **** static void _xmem_read(u8 bank, u16 addr, void *data, u16 size)
 157:xmem/xmem.c   **** {
 1393               		.loc 10 157 1 is_stmt 1 view -0
 1394               		.cfi_startproc
 1395               		.loc 10 157 1 is_stmt 0 view .LVU345
 1396 03e2 DF92      		push r13
 1397               		.cfi_def_cfa_offset 3
 1398               		.cfi_offset 13, -2
 1399 03e4 EF92      		push r14
 1400               		.cfi_def_cfa_offset 4
 1401               		.cfi_offset 14, -3
 1402 03e6 FF92      		push r15
 1403               		.cfi_def_cfa_offset 5
 1404               		.cfi_offset 15, -4
 1405 03e8 0F93      		push r16
 1406               		.cfi_def_cfa_offset 6
 1407               		.cfi_offset 16, -5
 1408 03ea 1F93      		push r17
 1409               		.cfi_def_cfa_offset 7
 1410               		.cfi_offset 17, -6
 1411 03ec CF93      		push r28
 1412               		.cfi_def_cfa_offset 8
 1413               		.cfi_offset 28, -7
 1414 03ee DF93      		push r29
 1415               		.cfi_def_cfa_offset 9
 1416               		.cfi_offset 29, -8
 1417               	/* prologue: function */
 1418               	/* frame size = 0 */
 1419               	/* stack size = 7 */
 1420               	.L__stack_usage = 7
 1421 03f0 F82E      		mov r15,r24
 1422 03f2 D42E      		mov r13,r20
 1423 03f4 E52E      		mov r14,r21
 1424 03f6 8901      		movw r16,r18
 158:xmem/xmem.c   **** 	u16 i;
 1425               		.loc 10 158 2 is_stmt 1 view .LVU346
 159:xmem/xmem.c   **** 	u8 *data8 = data;
 1426               		.loc 10 159 2 view .LVU347
 1427               	.LVL112:
 160:xmem/xmem.c   **** 	_xmem_start(bank, SRAM_COMMAND_READ, addr);
 1428               		.loc 10 160 2 view .LVU348
 1429 03f8 9B01      		movw r18,r22
 1430               	.LVL113:
 1431               		.loc 10 160 2 is_stmt 0 view .LVU349
 1432 03fa 40E0      		ldi r20,0
 1433 03fc 50E0      		ldi r21,0
 1434               	.LVL114:
 1435               		.loc 10 160 2 view .LVU350
 1436 03fe 63E0      		ldi r22,lo8(3)
 1437               	.LVL115:
 1438               		.loc 10 160 2 view .LVU351
 1439 0400 0E94 0000 		call _xmem_start
 1440               	.LVL116:
 161:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 1441               		.loc 10 161 2 is_stmt 1 view .LVU352
 1442               		.loc 10 161 2 is_stmt 0 view .LVU353
 1443 0404 CD2D      		mov r28,r13
 1444 0406 DE2D      		mov r29,r14
 1445 0408 0C0F      		add r16,r28
 1446 040a 1D1F      		adc r17,r29
 1447               	.LVL117:
 1448               	.L65:
 1449               		.loc 10 161 15 is_stmt 1 discriminator 1 view .LVU354
 1450 040c C017      		cp r28,r16
 1451 040e D107      		cpc r29,r17
 1452 0410 01F4      		brne .L66
 162:xmem/xmem.c   **** 	{
 163:xmem/xmem.c   **** 		data8[i] = spi_xchg(DUMMY);
 164:xmem/xmem.c   **** 	}
 165:xmem/xmem.c   **** 
 166:xmem/xmem.c   **** 	XMEM_DESELECT(bank);
 1453               		.loc 10 166 2 view .LVU355
 1454 0412 85B1      		in r24,0x5
 1455 0414 21E0      		ldi r18,lo8(1)
 1456 0416 30E0      		ldi r19,0
 1457 0418 00C0      		rjmp 2f
 1458               		1:
 1459 041a 220F      		lsl r18
 1460               		2:
 1461 041c FA94      		dec r15
 1462 041e 02F4      		brpl 1b
 1463 0420 822B      		or r24,r18
 1464 0422 85B9      		out 0x5,r24
 1465               	/* epilogue start */
 167:xmem/xmem.c   **** }
 1466               		.loc 10 167 1 is_stmt 0 view .LVU356
 1467 0424 DF91      		pop r29
 1468 0426 CF91      		pop r28
 1469               	.LVL118:
 1470               		.loc 10 167 1 view .LVU357
 1471 0428 1F91      		pop r17
 1472 042a 0F91      		pop r16
 1473 042c FF90      		pop r15
 1474               	.LVL119:
 1475               		.loc 10 167 1 view .LVU358
 1476 042e EF90      		pop r14
 1477 0430 DF90      		pop r13
 1478 0432 0895      		ret
 1479               	.LVL120:
 1480               	.L66:
 163:xmem/xmem.c   **** 	}
 1481               		.loc 10 163 3 is_stmt 1 discriminator 3 view .LVU359
 163:xmem/xmem.c   **** 	}
 1482               		.loc 10 163 14 is_stmt 0 discriminator 3 view .LVU360
 1483 0434 8FEF      		ldi r24,lo8(-1)
 1484 0436 0E94 0000 		call spi_xchg
 1485               	.LVL121:
 163:xmem/xmem.c   **** 	}
 1486               		.loc 10 163 12 discriminator 3 view .LVU361
 1487 043a 8993      		st Y+,r24
 1488               	.LVL122:
 161:xmem/xmem.c   **** 	{
 1489               		.loc 10 161 23 is_stmt 1 discriminator 3 view .LVU362
 161:xmem/xmem.c   **** 	{
 1490               		.loc 10 161 23 is_stmt 0 discriminator 3 view .LVU363
 1491 043c 00C0      		rjmp .L65
 1492               		.cfi_endproc
 1493               	.LFE27:
 1496               	xmem_read:
 1497               	.LVL123:
 1498               	.LFB28:
 168:xmem/xmem.c   **** 
 169:xmem/xmem.c   **** /**
 170:xmem/xmem.c   ****  * @brief Write data to a memory bank
 171:xmem/xmem.c   ****  *
 172:xmem/xmem.c   ****  * @param bank Bank number
 173:xmem/xmem.c   ****  * @param addr Start address
 174:xmem/xmem.c   ****  * @param data Buffer with the data to write
 175:xmem/xmem.c   ****  * @param size Number of bytes to write
 176:xmem/xmem.c   ****  */
 177:xmem/xmem.c   **** static void _xmem_write(u8 bank, u16 addr, const void *data, u16 size)
 178:xmem/xmem.c   **** {
 179:xmem/xmem.c   **** 	u16 i;
 180:xmem/xmem.c   **** 	const u8 *data8 = data;
 181:xmem/xmem.c   **** 	_xmem_start(bank, SRAM_COMMAND_WRITE, addr);
 182:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 183:xmem/xmem.c   **** 	{
 184:xmem/xmem.c   **** 		spi_xchg(data8[i]);
 185:xmem/xmem.c   **** 	}
 186:xmem/xmem.c   **** 
 187:xmem/xmem.c   **** 	XMEM_DESELECT(bank);
 188:xmem/xmem.c   **** }
 189:xmem/xmem.c   **** 
 190:xmem/xmem.c   **** /**
 191:xmem/xmem.c   ****  * @brief Set an area within a memory bank to 0
 192:xmem/xmem.c   ****  *
 193:xmem/xmem.c   ****  * @param bank Bank number
 194:xmem/xmem.c   ****  * @param addr Start address
 195:xmem/xmem.c   ****  * @param value Byte to write
 196:xmem/xmem.c   ****  * @param size Number of bytes to write
 197:xmem/xmem.c   ****  */
 198:xmem/xmem.c   **** static void _xmem_set(u8 bank, u16 addr, u8 value, u16 size)
 199:xmem/xmem.c   **** {
 200:xmem/xmem.c   **** 	u16 i;
 201:xmem/xmem.c   **** 	_xmem_start(bank, SRAM_COMMAND_WRITE, addr);
 202:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 203:xmem/xmem.c   **** 	{
 204:xmem/xmem.c   **** 		spi_xchg(value);
 205:xmem/xmem.c   **** 	}
 206:xmem/xmem.c   **** 
 207:xmem/xmem.c   **** 	XMEM_DESELECT(bank);
 208:xmem/xmem.c   **** }
 209:xmem/xmem.c   **** 
 210:xmem/xmem.c   **** /**
 211:xmem/xmem.c   ****  * @brief Calculate which bank an address falls onto
 212:xmem/xmem.c   ****  *
 213:xmem/xmem.c   ****  * @param addr Full memory address
 214:xmem/xmem.c   ****  * @return Bank number
 215:xmem/xmem.c   ****  */
 216:xmem/xmem.c   **** static u8 _addr_to_bank(u32 addr)
 217:xmem/xmem.c   **** {
 218:xmem/xmem.c   **** 	return addr >> BANK_SIZE_POT;
 219:xmem/xmem.c   **** }
 220:xmem/xmem.c   **** 
 221:xmem/xmem.c   **** /**
 222:xmem/xmem.c   ****  * @brief Calculate the offset from the start of a memory bank for an address
 223:xmem/xmem.c   ****  *
 224:xmem/xmem.c   ****  * @param addr Full memory address
 225:xmem/xmem.c   ****  * @return Bank address
 226:xmem/xmem.c   ****  */
 227:xmem/xmem.c   **** static u16 _addr_bank_offset(u32 addr)
 228:xmem/xmem.c   **** {
 229:xmem/xmem.c   **** 	return addr & (BANK_SIZE - 1);
 230:xmem/xmem.c   **** }
 231:xmem/xmem.c   **** 
 232:xmem/xmem.c   **** /** Internal struct to handle reads and writes across bank boundaries */
 233:xmem/xmem.c   **** typedef struct
 234:xmem/xmem.c   **** {
 235:xmem/xmem.c   **** 	/** First bank to access */
 236:xmem/xmem.c   **** 	u8 BankFirst;
 237:xmem/xmem.c   **** 
 238:xmem/xmem.c   **** 	/** Second bank to access */
 239:xmem/xmem.c   **** 	u8 BankSecond;
 240:xmem/xmem.c   **** 
 241:xmem/xmem.c   **** 	/** Start address of the first part */
 242:xmem/xmem.c   **** 	u16 AddrFirst;
 243:xmem/xmem.c   **** 
 244:xmem/xmem.c   **** 	/** Size of the first part */
 245:xmem/xmem.c   **** 	u16 SizeFirst;
 246:xmem/xmem.c   **** 
 247:xmem/xmem.c   **** 	/** Size of the second part */
 248:xmem/xmem.c   **** 	u16 SizeSecond;
 249:xmem/xmem.c   **** } AddrHelper;
 250:xmem/xmem.c   **** 
 251:xmem/xmem.c   **** /**
 252:xmem/xmem.c   ****  * @brief Calculate which bank will be affected by a memory operation
 253:xmem/xmem.c   ****  *
 254:xmem/xmem.c   ****  * @param addr Start address
 255:xmem/xmem.c   ****  * @param size Number of bytes affected
 256:xmem/xmem.c   ****  * @param h Output information
 257:xmem/xmem.c   ****  */
 258:xmem/xmem.c   **** static void _xmem_overlap(u32 addr, u16 size, AddrHelper *h)
 259:xmem/xmem.c   **** {
 260:xmem/xmem.c   **** 	u32 addr_end;
 261:xmem/xmem.c   **** 
 262:xmem/xmem.c   **** 	h->AddrFirst = _addr_bank_offset(addr);
 263:xmem/xmem.c   **** 	addr_end = addr + size;
 264:xmem/xmem.c   **** 
 265:xmem/xmem.c   **** 	h->BankFirst = _addr_to_bank(addr);
 266:xmem/xmem.c   **** 	h->BankSecond = _addr_to_bank(addr_end);
 267:xmem/xmem.c   **** 	if(h->BankFirst == h->BankSecond)
 268:xmem/xmem.c   **** 	{
 269:xmem/xmem.c   **** 		h->SizeFirst = size;
 270:xmem/xmem.c   **** 	}
 271:xmem/xmem.c   **** 	else
 272:xmem/xmem.c   **** 	{
 273:xmem/xmem.c   **** 		h->SizeSecond = _addr_bank_offset(addr_end);
 274:xmem/xmem.c   **** 		h->SizeFirst = size - h->SizeSecond;
 275:xmem/xmem.c   **** 	}
 276:xmem/xmem.c   **** }
 277:xmem/xmem.c   **** 
 278:xmem/xmem.c   **** /* --- PUBLIC --- */
 279:xmem/xmem.c   **** void xmem_init(void)
 280:xmem/xmem.c   **** {
 281:xmem/xmem.c   **** 	/* Initialize XMEM */
 282:xmem/xmem.c   **** 	log_boot_P(LOG_INIT, PSTR("External memory driver initialized"));
 283:xmem/xmem.c   **** 	_memtest();
 284:xmem/xmem.c   **** }
 285:xmem/xmem.c   **** 
 286:xmem/xmem.c   **** void xmem_read(u32 addr, void *data, u16 size)
 287:xmem/xmem.c   **** {
 1499               		.loc 10 287 1 is_stmt 1 view -0
 1500               		.cfi_startproc
 1501               		.loc 10 287 1 is_stmt 0 view .LVU365
 1502 043e 4F92      		push r4
 1503               		.cfi_def_cfa_offset 3
 1504               		.cfi_offset 4, -2
 1505 0440 5F92      		push r5
 1506               		.cfi_def_cfa_offset 4
 1507               		.cfi_offset 5, -3
 1508 0442 6F92      		push r6
 1509               		.cfi_def_cfa_offset 5
 1510               		.cfi_offset 6, -4
 1511 0444 7F92      		push r7
 1512               		.cfi_def_cfa_offset 6
 1513               		.cfi_offset 7, -5
 1514 0446 8F92      		push r8
 1515               		.cfi_def_cfa_offset 7
 1516               		.cfi_offset 8, -6
 1517 0448 9F92      		push r9
 1518               		.cfi_def_cfa_offset 8
 1519               		.cfi_offset 9, -7
 1520 044a AF92      		push r10
 1521               		.cfi_def_cfa_offset 9
 1522               		.cfi_offset 10, -8
 1523 044c BF92      		push r11
 1524               		.cfi_def_cfa_offset 10
 1525               		.cfi_offset 11, -9
 1526 044e CF92      		push r12
 1527               		.cfi_def_cfa_offset 11
 1528               		.cfi_offset 12, -10
 1529 0450 DF92      		push r13
 1530               		.cfi_def_cfa_offset 12
 1531               		.cfi_offset 13, -11
 1532 0452 EF92      		push r14
 1533               		.cfi_def_cfa_offset 13
 1534               		.cfi_offset 14, -12
 1535 0454 FF92      		push r15
 1536               		.cfi_def_cfa_offset 14
 1537               		.cfi_offset 15, -13
 1538 0456 0F93      		push r16
 1539               		.cfi_def_cfa_offset 15
 1540               		.cfi_offset 16, -14
 1541 0458 1F93      		push r17
 1542               		.cfi_def_cfa_offset 16
 1543               		.cfi_offset 17, -15
 1544 045a CF93      		push r28
 1545               		.cfi_def_cfa_offset 17
 1546               		.cfi_offset 28, -16
 1547 045c DF93      		push r29
 1548               		.cfi_def_cfa_offset 18
 1549               		.cfi_offset 29, -17
 1550               	/* prologue: function */
 1551               	/* frame size = 0 */
 1552               	/* stack size = 16 */
 1553               	.L__stack_usage = 16
 1554 045e 8A01      		movw r16,r20
 1555 0460 E901      		movw r28,r18
 288:xmem/xmem.c   **** 	AddrHelper h;
 1556               		.loc 10 288 2 is_stmt 1 view .LVU366
 289:xmem/xmem.c   **** 	_xmem_overlap(addr, size, &h);
 1557               		.loc 10 289 2 view .LVU367
 1558               	.LVL124:
 1559               	.LBB143:
 1560               	.LBI143:
 258:xmem/xmem.c   **** {
 1561               		.loc 10 258 13 view .LVU368
 1562               	.LBB144:
 260:xmem/xmem.c   **** 
 1563               		.loc 10 260 2 view .LVU369
 262:xmem/xmem.c   **** 	addr_end = addr + size;
 1564               		.loc 10 262 2 view .LVU370
 1565               	.LBB145:
 1566               	.LBI145:
 227:xmem/xmem.c   **** {
 1567               		.loc 10 227 12 view .LVU371
 1568               	.LBB146:
 229:xmem/xmem.c   **** }
 1569               		.loc 10 229 2 view .LVU372
 229:xmem/xmem.c   **** }
 1570               		.loc 10 229 2 is_stmt 0 view .LVU373
 1571               	.LBE146:
 1572               	.LBE145:
 263:xmem/xmem.c   **** 
 1573               		.loc 10 263 2 is_stmt 1 view .LVU374
 263:xmem/xmem.c   **** 
 1574               		.loc 10 263 11 is_stmt 0 view .LVU375
 1575 0462 6B01      		movw r12,r22
 1576 0464 7C01      		movw r14,r24
 1577 0466 C20E      		add r12,r18
 1578 0468 D31E      		adc r13,r19
 1579 046a E11C      		adc r14,__zero_reg__
 1580 046c F11C      		adc r15,__zero_reg__
 1581               	.LVL125:
 265:xmem/xmem.c   **** 	h->BankSecond = _addr_to_bank(addr_end);
 1582               		.loc 10 265 2 is_stmt 1 view .LVU376
 1583               	.LBB147:
 1584               	.LBI147:
 216:xmem/xmem.c   **** {
 1585               		.loc 10 216 11 view .LVU377
 1586               	.LBB148:
 218:xmem/xmem.c   **** }
 1587               		.loc 10 218 2 view .LVU378
 218:xmem/xmem.c   **** }
 1588               		.loc 10 218 14 is_stmt 0 view .LVU379
 1589 046e 2B01      		movw r4,r22
 1590 0470 3C01      		movw r6,r24
 1591 0472 81E1      		ldi r24,17
 1592               		1:
 1593 0474 7694      		lsr r7
 1594 0476 6794      		ror r6
 1595 0478 5794      		ror r5
 1596 047a 4794      		ror r4
 1597 047c 8A95      		dec r24
 1598 047e 01F4      		brne 1b
 1599               	.LVL126:
 218:xmem/xmem.c   **** }
 1600               		.loc 10 218 14 view .LVU380
 1601               	.LBE148:
 1602               	.LBE147:
 266:xmem/xmem.c   **** 	if(h->BankFirst == h->BankSecond)
 1603               		.loc 10 266 2 is_stmt 1 view .LVU381
 1604               	.LBB149:
 1605               	.LBI149:
 216:xmem/xmem.c   **** {
 1606               		.loc 10 216 11 view .LVU382
 1607               	.LBB150:
 218:xmem/xmem.c   **** }
 1608               		.loc 10 218 2 view .LVU383
 218:xmem/xmem.c   **** }
 1609               		.loc 10 218 14 is_stmt 0 view .LVU384
 1610 0480 4601      		movw r8,r12
 1611 0482 5701      		movw r10,r14
 1612 0484 91E1      		ldi r25,17
 1613               		1:
 1614 0486 B694      		lsr r11
 1615 0488 A794      		ror r10
 1616 048a 9794      		ror r9
 1617 048c 8794      		ror r8
 1618 048e 9A95      		dec r25
 1619 0490 01F4      		brne 1b
 1620               	.LVL127:
 218:xmem/xmem.c   **** }
 1621               		.loc 10 218 14 view .LVU385
 1622               	.LBE150:
 1623               	.LBE149:
 267:xmem/xmem.c   **** 	{
 1624               		.loc 10 267 2 is_stmt 1 view .LVU386
 1625               	.LBE144:
 1626               	.LBE143:
 290:xmem/xmem.c   **** 	_xmem_read(h.BankFirst, h.AddrFirst, data, h.SizeFirst);
 1627               		.loc 10 290 2 is_stmt 0 view .LVU387
 1628 0492 842D      		mov r24,r4
 1629               	.LBB154:
 1630               	.LBB153:
 267:xmem/xmem.c   **** 	{
 1631               		.loc 10 267 4 view .LVU388
 1632 0494 8414      		cp r8,r4
 1633 0496 01F0      		breq .L69
 273:xmem/xmem.c   **** 		h->SizeFirst = size - h->SizeSecond;
 1634               		.loc 10 273 3 is_stmt 1 view .LVU389
 1635               	.LBB151:
 1636               	.LBI151:
 227:xmem/xmem.c   **** {
 1637               		.loc 10 227 12 view .LVU390
 1638               	.LBB152:
 229:xmem/xmem.c   **** }
 1639               		.loc 10 229 2 view .LVU391
 1640               	.LVL128:
 229:xmem/xmem.c   **** }
 1641               		.loc 10 229 2 is_stmt 0 view .LVU392
 1642               	.LBE152:
 1643               	.LBE151:
 274:xmem/xmem.c   **** 	}
 1644               		.loc 10 274 3 is_stmt 1 view .LVU393
 274:xmem/xmem.c   **** 	}
 1645               		.loc 10 274 23 is_stmt 0 view .LVU394
 1646 0498 CC19      		sub r28,r12
 1647 049a DD09      		sbc r29,r13
 1648               	.LVL129:
 274:xmem/xmem.c   **** 	}
 1649               		.loc 10 274 23 view .LVU395
 1650               	.LBE153:
 1651               	.LBE154:
 1652               		.loc 10 290 2 is_stmt 1 view .LVU396
 1653 049c 9E01      		movw r18,r28
 1654               	.LVL130:
 1655               		.loc 10 290 2 is_stmt 0 view .LVU397
 1656 049e 0E94 0000 		call _xmem_read
 1657               	.LVL131:
 291:xmem/xmem.c   **** 	if(h.BankSecond != h.BankFirst)
 1658               		.loc 10 291 2 is_stmt 1 view .LVU398
 292:xmem/xmem.c   **** 	{
 293:xmem/xmem.c   **** 		_xmem_read(h.BankSecond, 0, (u8 *)data + h.SizeFirst, h.SizeSecond);
 1659               		.loc 10 293 3 view .LVU399
 1660 04a2 A801      		movw r20,r16
 1661 04a4 4C0F      		add r20,r28
 1662 04a6 5D1F      		adc r21,r29
 1663 04a8 9601      		movw r18,r12
 1664 04aa 60E0      		ldi r22,0
 1665 04ac 70E0      		ldi r23,0
 1666 04ae 882D      		mov r24,r8
 1667               	.LVL132:
 1668               	.L69:
 1669               	/* epilogue start */
 294:xmem/xmem.c   **** 	}
 295:xmem/xmem.c   **** }
 1670               		.loc 10 295 1 is_stmt 0 view .LVU400
 1671 04b0 DF91      		pop r29
 1672 04b2 CF91      		pop r28
 1673 04b4 1F91      		pop r17
 1674 04b6 0F91      		pop r16
 1675               	.LVL133:
 1676               		.loc 10 295 1 view .LVU401
 1677 04b8 FF90      		pop r15
 1678 04ba EF90      		pop r14
 1679 04bc DF90      		pop r13
 1680 04be CF90      		pop r12
 1681 04c0 BF90      		pop r11
 1682 04c2 AF90      		pop r10
 1683 04c4 9F90      		pop r9
 1684 04c6 8F90      		pop r8
 1685 04c8 7F90      		pop r7
 1686 04ca 6F90      		pop r6
 1687 04cc 5F90      		pop r5
 1688 04ce 4F90      		pop r4
 293:xmem/xmem.c   **** 	}
 1689               		.loc 10 293 3 view .LVU402
 1690 04d0 0C94 0000 		jmp _xmem_read
 1691               	.LVL134:
 1692               		.cfi_endproc
 1693               	.LFE28:
 1696               	memory_lw:
 1697               	.LVL135:
 1698               	.LFB30:
 296:../../emulator/emulator.c **** 	u32 value;
 1699               		.loc 6 296 1 is_stmt 1 view -0
 1700               		.cfi_startproc
 296:../../emulator/emulator.c **** 	u32 value;
 1701               		.loc 6 296 1 is_stmt 0 view .LVU404
 1702 04d4 EF92      		push r14
 1703               		.cfi_def_cfa_offset 3
 1704               		.cfi_offset 14, -2
 1705 04d6 FF92      		push r15
 1706               		.cfi_def_cfa_offset 4
 1707               		.cfi_offset 15, -3
 1708 04d8 1F93      		push r17
 1709               		.cfi_def_cfa_offset 5
 1710               		.cfi_offset 17, -4
 1711 04da CF93      		push r28
 1712               		.cfi_def_cfa_offset 6
 1713               		.cfi_offset 28, -5
 1714 04dc DF93      		push r29
 1715               		.cfi_def_cfa_offset 7
 1716               		.cfi_offset 29, -6
 1717 04de CDB7      		in r28,__SP_L__
 1718 04e0 DEB7      		in r29,__SP_H__
 1719               		.cfi_def_cfa_register 28
 1720 04e2 2897      		sbiw r28,8
 1721               		.cfi_def_cfa_offset 15
 1722 04e4 0FB6      		in __tmp_reg__,__SREG__
 1723 04e6 F894      		cli
 1724 04e8 DEBF      		out __SP_H__,r29
 1725 04ea 0FBE      		out __SREG__,__tmp_reg__
 1726 04ec CDBF      		out __SP_L__,r28
 1727               	/* prologue: function */
 1728               	/* frame size = 8 */
 1729               	/* stack size = 13 */
 1730               	.L__stack_usage = 13
 1731 04ee 6D83      		std Y+5,r22
 1732 04f0 7E83      		std Y+6,r23
 1733 04f2 8F83      		std Y+7,r24
 1734 04f4 9887      		std Y+8,r25
 1735 04f6 7A01      		movw r14,r20
 297:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 1736               		.loc 6 297 2 is_stmt 1 view .LVU405
 298:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 1737               		.loc 6 298 2 view .LVU406
 298:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 1738               		.loc 6 298 7 is_stmt 0 view .LVU407
 1739 04f8 8091 0000 		lds r24,_tasks
 1740 04fc 9091 0000 		lds r25,_tasks+1
 1741 0500 A091 0000 		lds r26,_tasks+2
 1742 0504 B091 0000 		lds r27,_tasks+3
 1743 0508 2D81      		ldd r18,Y+5
 1744 050a 3E81      		ldd r19,Y+6
 1745 050c 4F81      		ldd r20,Y+7
 1746 050e 5885      		ldd r21,Y+8
 1747 0510 280F      		add r18,r24
 1748 0512 391F      		adc r19,r25
 1749 0514 4A1F      		adc r20,r26
 1750 0516 5B1F      		adc r21,r27
 1751 0518 2D83      		std Y+5,r18
 1752 051a 3E83      		std Y+6,r19
 1753 051c 4F83      		std Y+7,r20
 1754 051e 5887      		std Y+8,r21
 1755               	.LVL136:
 299:../../emulator/emulator.c **** 	{
 1756               		.loc 6 299 2 is_stmt 1 view .LVU408
 299:../../emulator/emulator.c **** 	{
 1757               		.loc 6 299 5 is_stmt 0 view .LVU409
 1758 0520 24E0      		ldi r18,lo8(4)
 1759 0522 30E0      		ldi r19,0
 1760 0524 40E0      		ldi r20,0
 1761 0526 50E0      		ldi r21,0
 1762               	.LVL137:
 299:../../emulator/emulator.c **** 	{
 1763               		.loc 6 299 5 view .LVU410
 1764 0528 6D81      		ldd r22,Y+5
 1765 052a 7E81      		ldd r23,Y+6
 1766 052c 8F81      		ldd r24,Y+7
 1767 052e 9885      		ldd r25,Y+8
 1768               	.LVL138:
 299:../../emulator/emulator.c **** 	{
 1769               		.loc 6 299 5 view .LVU411
 1770 0530 0E94 0000 		call _memory_check_bounds
 1771               	.LVL139:
 299:../../emulator/emulator.c **** 	{
 1772               		.loc 6 299 5 view .LVU412
 1773 0534 182F      		mov r17,r24
 299:../../emulator/emulator.c **** 	{
 1774               		.loc 6 299 4 view .LVU413
 1775 0536 8111      		cpse r24,__zero_reg__
 1776 0538 00C0      		rjmp .L72
 304:../../emulator/emulator.c **** 	*out = value;
 1777               		.loc 6 304 2 is_stmt 1 view .LVU414
 1778               	.LVL140:
 1779               	.LBB157:
 1780               	.LBI157:
  24:platform.c    **** {
 1781               		.loc 1 24 6 view .LVU415
 1782               	.LBB158:
  26:platform.c    **** }
 1783               		.loc 1 26 2 view .LVU416
 1784 053a 24E0      		ldi r18,lo8(4)
 1785 053c 30E0      		ldi r19,0
 1786 053e AE01      		movw r20,r28
 1787 0540 4F5F      		subi r20,-1
 1788 0542 5F4F      		sbci r21,-1
 1789 0544 6D81      		ldd r22,Y+5
 1790 0546 7E81      		ldd r23,Y+6
 1791 0548 8F81      		ldd r24,Y+7
 1792 054a 9885      		ldd r25,Y+8
 1793 054c 0E94 0000 		call xmem_read
 1794               	.LVL141:
  26:platform.c    **** }
 1795               		.loc 1 26 2 is_stmt 0 view .LVU417
 1796               	.LBE158:
 1797               	.LBE157:
 305:../../emulator/emulator.c **** 	return 0;
 1798               		.loc 6 305 2 is_stmt 1 view .LVU418
 305:../../emulator/emulator.c **** 	return 0;
 1799               		.loc 6 305 7 is_stmt 0 view .LVU419
 1800 0550 8981      		ldd r24,Y+1
 1801 0552 9A81      		ldd r25,Y+2
 1802 0554 AB81      		ldd r26,Y+3
 1803 0556 BC81      		ldd r27,Y+4
 1804 0558 F701      		movw r30,r14
 1805 055a 8083      		st Z,r24
 1806 055c 9183      		std Z+1,r25
 1807 055e A283      		std Z+2,r26
 1808 0560 B383      		std Z+3,r27
 306:../../emulator/emulator.c **** }
 1809               		.loc 6 306 2 is_stmt 1 view .LVU420
 1810               	.L70:
 307:../../emulator/emulator.c **** 
 1811               		.loc 6 307 1 is_stmt 0 view .LVU421
 1812 0562 812F      		mov r24,r17
 1813               	/* epilogue start */
 1814 0564 2896      		adiw r28,8
 1815 0566 0FB6      		in __tmp_reg__,__SREG__
 1816 0568 F894      		cli
 1817 056a DEBF      		out __SP_H__,r29
 1818 056c 0FBE      		out __SREG__,__tmp_reg__
 1819 056e CDBF      		out __SP_L__,r28
 1820 0570 DF91      		pop r29
 1821 0572 CF91      		pop r28
 1822 0574 1F91      		pop r17
 1823 0576 FF90      		pop r15
 1824 0578 EF90      		pop r14
 1825               	.LVL142:
 307:../../emulator/emulator.c **** 
 1826               		.loc 6 307 1 view .LVU422
 1827 057a 0895      		ret
 1828               	.LVL143:
 1829               	.L72:
 301:../../emulator/emulator.c **** 	}
 1830               		.loc 6 301 10 view .LVU423
 1831 057c 11E0      		ldi r17,lo8(1)
 1832 057e 00C0      		rjmp .L70
 1833               		.cfi_endproc
 1834               	.LFE30:
 1837               	syscall_serial_write:
 1838               	.LVL144:
 1839               	.LFB32:
 415:../../emulator/emulator.c **** 
 416:../../emulator/emulator.c **** /**
 417:../../emulator/emulator.c ****  * @brief System call to get a random number
 418:../../emulator/emulator.c ****  *
 419:../../emulator/emulator.c ****  * @param args args[0]: Return value (random number)
 420:../../emulator/emulator.c ****  * @return Non-zero on error
 421:../../emulator/emulator.c ****  */
 422:../../emulator/emulator.c **** static u8 syscall_rand(u32 *args)
 423:../../emulator/emulator.c **** {
 424:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 425:../../emulator/emulator.c **** 	args[0] = env_random_get();
 426:../../emulator/emulator.c **** 	return 0;
 427:../../emulator/emulator.c **** }
 428:../../emulator/emulator.c **** 
 429:../../emulator/emulator.c **** /**
 430:../../emulator/emulator.c ****  * @brief System call to send data over the serial interface
 431:../../emulator/emulator.c ****  *
 432:../../emulator/emulator.c ****  * @param args args[0]: Pointer to string to send
 433:../../emulator/emulator.c ****  *             args[1]: Number of bytes to send
 434:../../emulator/emulator.c ****  * @return Non-zero on error
 435:../../emulator/emulator.c ****  */
 436:../../emulator/emulator.c **** static u8 syscall_serial_write(u32 *args)
 437:../../emulator/emulator.c **** {
 1840               		.loc 6 437 1 is_stmt 1 view -0
 1841               		.cfi_startproc
 1842               		.loc 6 437 1 is_stmt 0 view .LVU425
 1843 0580 4F92      		push r4
 1844               		.cfi_def_cfa_offset 3
 1845               		.cfi_offset 4, -2
 1846 0582 5F92      		push r5
 1847               		.cfi_def_cfa_offset 4
 1848               		.cfi_offset 5, -3
 1849 0584 6F92      		push r6
 1850               		.cfi_def_cfa_offset 5
 1851               		.cfi_offset 6, -4
 1852 0586 7F92      		push r7
 1853               		.cfi_def_cfa_offset 6
 1854               		.cfi_offset 7, -5
 1855 0588 9F92      		push r9
 1856               		.cfi_def_cfa_offset 7
 1857               		.cfi_offset 9, -6
 1858 058a AF92      		push r10
 1859               		.cfi_def_cfa_offset 8
 1860               		.cfi_offset 10, -7
 1861 058c BF92      		push r11
 1862               		.cfi_def_cfa_offset 9
 1863               		.cfi_offset 11, -8
 1864 058e CF92      		push r12
 1865               		.cfi_def_cfa_offset 10
 1866               		.cfi_offset 12, -9
 1867 0590 DF92      		push r13
 1868               		.cfi_def_cfa_offset 11
 1869               		.cfi_offset 13, -10
 1870 0592 EF92      		push r14
 1871               		.cfi_def_cfa_offset 12
 1872               		.cfi_offset 14, -11
 1873 0594 FF92      		push r15
 1874               		.cfi_def_cfa_offset 13
 1875               		.cfi_offset 15, -12
 1876 0596 0F93      		push r16
 1877               		.cfi_def_cfa_offset 14
 1878               		.cfi_offset 16, -13
 1879 0598 1F93      		push r17
 1880               		.cfi_def_cfa_offset 15
 1881               		.cfi_offset 17, -14
 1882 059a CF93      		push r28
 1883               		.cfi_def_cfa_offset 16
 1884               		.cfi_offset 28, -15
 1885 059c DF93      		push r29
 1886               		.cfi_def_cfa_offset 17
 1887               		.cfi_offset 29, -16
 1888 059e CDB7      		in r28,__SP_L__
 1889 05a0 DEB7      		in r29,__SP_H__
 1890               		.cfi_def_cfa_register 28
 1891 05a2 C458      		subi r28,-124
 1892 05a4 D109      		sbc r29,__zero_reg__
 1893               		.cfi_def_cfa_offset 149
 1894 05a6 0FB6      		in __tmp_reg__,__SREG__
 1895 05a8 F894      		cli
 1896 05aa DEBF      		out __SP_H__,r29
 1897 05ac 0FBE      		out __SREG__,__tmp_reg__
 1898 05ae CDBF      		out __SP_L__,r28
 1899               	/* prologue: function */
 1900               	/* frame size = 132 */
 1901               	/* stack size = 147 */
 1902               	.L__stack_usage = 147
 1903 05b0 FC01      		movw r30,r24
 438:../../emulator/emulator.c **** 	u8 buf[128];
 1904               		.loc 6 438 2 is_stmt 1 view .LVU426
 439:../../emulator/emulator.c **** 	u16 cur;
 1905               		.loc 6 439 2 view .LVU427
 440:../../emulator/emulator.c **** 	u32 ptr, len;
 1906               		.loc 6 440 2 view .LVU428
 441:../../emulator/emulator.c **** 
 442:../../emulator/emulator.c **** 	ptr = args[0];
 1907               		.loc 6 442 2 view .LVU429
 1908               		.loc 6 442 6 is_stmt 0 view .LVU430
 1909 05b2 8081      		ld r24,Z
 1910 05b4 9181      		ldd r25,Z+1
 1911 05b6 A281      		ldd r26,Z+2
 1912 05b8 B381      		ldd r27,Z+3
 1913               	.LVL145:
 1914               		.loc 6 442 6 view .LVU431
 1915 05ba CF57      		subi r28,lo8(-129)
 1916 05bc DF4F      		sbci r29,hi8(-129)
 1917 05be 8883      		st Y,r24
 1918 05c0 9983      		std Y+1,r25
 1919 05c2 AA83      		std Y+2,r26
 1920 05c4 BB83      		std Y+3,r27
 1921 05c6 C158      		subi r28,lo8(129)
 1922 05c8 D040      		sbci r29,hi8(129)
 1923               	.LVL146:
 443:../../emulator/emulator.c **** 	len = args[1];
 1924               		.loc 6 443 2 is_stmt 1 view .LVU432
 1925               		.loc 6 443 6 is_stmt 0 view .LVU433
 1926 05ca 4480      		ldd r4,Z+4
 1927 05cc 5580      		ldd r5,Z+5
 1928 05ce 6680      		ldd r6,Z+6
 1929 05d0 7780      		ldd r7,Z+7
 1930               	.LVL147:
 444:../../emulator/emulator.c **** 	if(_memory_check_bounds(ptr, len))
 1931               		.loc 6 444 2 is_stmt 1 view .LVU434
 1932               		.loc 6 444 5 is_stmt 0 view .LVU435
 1933 05d2 A301      		movw r20,r6
 1934 05d4 9201      		movw r18,r4
 1935 05d6 BC01      		movw r22,r24
 1936 05d8 CD01      		movw r24,r26
 1937 05da 0E94 0000 		call _memory_check_bounds
 1938               	.LVL148:
 1939               		.loc 6 444 5 view .LVU436
 1940 05de 982E      		mov r9,r24
 1941               		.loc 6 444 4 view .LVU437
 1942 05e0 8111      		cpse r24,__zero_reg__
 1943 05e2 00C0      		rjmp .L79
 1944               	.LVL149:
 1945               	.L75:
 445:../../emulator/emulator.c **** 	{
 446:../../emulator/emulator.c **** 		return 1;
 447:../../emulator/emulator.c **** 	}
 448:../../emulator/emulator.c **** 
 449:../../emulator/emulator.c **** 	while(len)
 1946               		.loc 6 449 8 is_stmt 1 view .LVU438
 1947 05e4 4114      		cp r4,__zero_reg__
 1948 05e6 5104      		cpc r5,__zero_reg__
 1949 05e8 6104      		cpc r6,__zero_reg__
 1950 05ea 7104      		cpc r7,__zero_reg__
 1951 05ec 01F4      		brne .L78
 1952               	.LVL150:
 1953               	.L73:
 450:../../emulator/emulator.c **** 	{
 451:../../emulator/emulator.c **** 		cur = len > sizeof(buf) ? sizeof(buf) : len;
 452:../../emulator/emulator.c **** 		env_memory_read(ptr, buf, cur);
 453:../../emulator/emulator.c **** 		env_serial_write(buf, cur);
 454:../../emulator/emulator.c **** 		len -= cur;
 455:../../emulator/emulator.c **** 		ptr += cur;
 456:../../emulator/emulator.c **** 	}
 457:../../emulator/emulator.c **** 
 458:../../emulator/emulator.c **** 	return 0;
 459:../../emulator/emulator.c **** }
 1954               		.loc 6 459 1 is_stmt 0 view .LVU439
 1955 05ee 892D      		mov r24,r9
 1956               	/* epilogue start */
 1957 05f0 CC57      		subi r28,124
 1958 05f2 DF4F      		sbci r29,-1
 1959 05f4 0FB6      		in __tmp_reg__,__SREG__
 1960 05f6 F894      		cli
 1961 05f8 DEBF      		out __SP_H__,r29
 1962 05fa 0FBE      		out __SREG__,__tmp_reg__
 1963 05fc CDBF      		out __SP_L__,r28
 1964 05fe DF91      		pop r29
 1965 0600 CF91      		pop r28
 1966 0602 1F91      		pop r17
 1967 0604 0F91      		pop r16
 1968 0606 FF90      		pop r15
 1969 0608 EF90      		pop r14
 1970 060a DF90      		pop r13
 1971 060c CF90      		pop r12
 1972 060e BF90      		pop r11
 1973 0610 AF90      		pop r10
 1974 0612 9F90      		pop r9
 1975 0614 7F90      		pop r7
 1976 0616 6F90      		pop r6
 1977 0618 5F90      		pop r5
 1978 061a 4F90      		pop r4
 1979               	.LVL151:
 1980               		.loc 6 459 1 view .LVU440
 1981 061c 0895      		ret
 1982               	.LVL152:
 1983               	.L78:
 451:../../emulator/emulator.c **** 		env_memory_read(ptr, buf, cur);
 1984               		.loc 6 451 3 is_stmt 1 view .LVU441
 451:../../emulator/emulator.c **** 		env_memory_read(ptr, buf, cur);
 1985               		.loc 6 451 41 is_stmt 0 view .LVU442
 1986 061e 7301      		movw r14,r6
 1987 0620 6201      		movw r12,r4
 1988 0622 91E8      		ldi r25,-127
 1989 0624 4916      		cp r4,r25
 1990 0626 5104      		cpc r5,__zero_reg__
 1991 0628 6104      		cpc r6,__zero_reg__
 1992 062a 7104      		cpc r7,__zero_reg__
 1993 062c 00F0      		brlo .L76
 451:../../emulator/emulator.c **** 		env_memory_read(ptr, buf, cur);
 1994               		.loc 6 451 41 view .LVU443
 1995 062e 90E8      		ldi r25,lo8(-128)
 1996 0630 C92E      		mov r12,r25
 1997 0632 D12C      		mov r13,__zero_reg__
 1998 0634 E12C      		mov r14,__zero_reg__
 1999 0636 F12C      		mov r15,__zero_reg__
 2000               	.L76:
 2001               	.LVL153:
 452:../../emulator/emulator.c **** 		env_serial_write(buf, cur);
 2002               		.loc 6 452 3 is_stmt 1 view .LVU444
 2003               	.LBB163:
 2004               	.LBI163:
  24:platform.c    **** {
 2005               		.loc 1 24 6 view .LVU445
 2006               	.LBB164:
  26:platform.c    **** }
 2007               		.loc 1 26 2 view .LVU446
 2008 0638 9601      		movw r18,r12
 2009 063a AE01      		movw r20,r28
 2010 063c 4F5F      		subi r20,-1
 2011 063e 5F4F      		sbci r21,-1
 2012 0640 CF57      		subi r28,lo8(-129)
 2013 0642 DF4F      		sbci r29,hi8(-129)
 2014 0644 6881      		ld r22,Y
 2015 0646 7981      		ldd r23,Y+1
 2016 0648 8A81      		ldd r24,Y+2
 2017 064a 9B81      		ldd r25,Y+3
 2018 064c C158      		subi r28,lo8(129)
 2019 064e D040      		sbci r29,hi8(129)
 2020 0650 0E94 0000 		call xmem_read
 2021               	.LVL154:
  26:platform.c    **** }
 2022               		.loc 1 26 2 is_stmt 0 view .LVU447
 2023               	.LBE164:
 2024               	.LBE163:
 2025               	.LBB165:
 2026               	.LBB166:
 122:platform.c    **** 	{
 2027               		.loc 1 122 15 is_stmt 1 view .LVU448
 2028 0654 8E01      		movw r16,r28
 2029 0656 0F5F      		subi r16,-1
 2030 0658 1F4F      		sbci r17,-1
 2031 065a 5801      		movw r10,r16
 2032 065c AC0C      		add r10,r12
 2033 065e BD1C      		adc r11,r13
 2034               	.LVL155:
 2035               	.L77:
 124:platform.c    **** 	}
 2036               		.loc 1 124 3 view .LVU449
 2037 0660 D801      		movw r26,r16
 2038 0662 8D91      		ld r24,X+
 2039 0664 8D01      		movw r16,r26
 2040 0666 0E94 0000 		call serial_tx
 2041               	.LVL156:
 122:platform.c    **** 	{
 2042               		.loc 1 122 22 view .LVU450
 122:platform.c    **** 	{
 2043               		.loc 1 122 15 view .LVU451
 2044 066a 0A15      		cp r16,r10
 2045 066c 1B05      		cpc r17,r11
 2046 066e 01F4      		brne .L77
 2047               	.LBE166:
 2048               	.LBE165:
 454:../../emulator/emulator.c **** 		ptr += cur;
 2049               		.loc 6 454 3 view .LVU452
 454:../../emulator/emulator.c **** 		ptr += cur;
 2050               		.loc 6 454 7 is_stmt 0 view .LVU453
 2051 0670 4C18      		sub r4,r12
 2052 0672 5D08      		sbc r5,r13
 2053 0674 6E08      		sbc r6,r14
 2054 0676 7F08      		sbc r7,r15
 2055               	.LVL157:
 455:../../emulator/emulator.c **** 	}
 2056               		.loc 6 455 3 is_stmt 1 view .LVU454
 455:../../emulator/emulator.c **** 	}
 2057               		.loc 6 455 7 is_stmt 0 view .LVU455
 2058 0678 CF57      		subi r28,lo8(-129)
 2059 067a DF4F      		sbci r29,hi8(-129)
 2060 067c 8881      		ld r24,Y
 2061 067e 9981      		ldd r25,Y+1
 2062 0680 AA81      		ldd r26,Y+2
 2063 0682 BB81      		ldd r27,Y+3
 2064 0684 C158      		subi r28,lo8(129)
 2065 0686 D040      		sbci r29,hi8(129)
 2066 0688 8C0D      		add r24,r12
 2067 068a 9D1D      		adc r25,r13
 2068 068c AE1D      		adc r26,r14
 2069 068e BF1D      		adc r27,r15
 2070 0690 CF57      		subi r28,lo8(-129)
 2071 0692 DF4F      		sbci r29,hi8(-129)
 2072 0694 8883      		st Y,r24
 2073 0696 9983      		std Y+1,r25
 2074 0698 AA83      		std Y+2,r26
 2075 069a BB83      		std Y+3,r27
 2076 069c C158      		subi r28,lo8(129)
 2077 069e D040      		sbci r29,hi8(129)
 2078               	.LVL158:
 455:../../emulator/emulator.c **** 	}
 2079               		.loc 6 455 7 view .LVU456
 2080 06a0 00C0      		rjmp .L75
 2081               	.LVL159:
 2082               	.L79:
 446:../../emulator/emulator.c **** 	}
 2083               		.loc 6 446 10 view .LVU457
 2084 06a2 9924      		clr r9
 2085 06a4 9394      		inc r9
 2086 06a6 00C0      		rjmp .L73
 2087               		.cfi_endproc
 2088               	.LFE32:
 2091               	_xmem_write:
 2092               	.LVL160:
 2093               	.LFB34:
 178:xmem/xmem.c   **** 	u16 i;
 2094               		.loc 10 178 1 is_stmt 1 view -0
 2095               		.cfi_startproc
 178:xmem/xmem.c   **** 	u16 i;
 2096               		.loc 10 178 1 is_stmt 0 view .LVU459
 2097 06a8 DF92      		push r13
 2098               		.cfi_def_cfa_offset 3
 2099               		.cfi_offset 13, -2
 2100 06aa EF92      		push r14
 2101               		.cfi_def_cfa_offset 4
 2102               		.cfi_offset 14, -3
 2103 06ac FF92      		push r15
 2104               		.cfi_def_cfa_offset 5
 2105               		.cfi_offset 15, -4
 2106 06ae 0F93      		push r16
 2107               		.cfi_def_cfa_offset 6
 2108               		.cfi_offset 16, -5
 2109 06b0 1F93      		push r17
 2110               		.cfi_def_cfa_offset 7
 2111               		.cfi_offset 17, -6
 2112 06b2 CF93      		push r28
 2113               		.cfi_def_cfa_offset 8
 2114               		.cfi_offset 28, -7
 2115 06b4 DF93      		push r29
 2116               		.cfi_def_cfa_offset 9
 2117               		.cfi_offset 29, -8
 2118               	/* prologue: function */
 2119               	/* frame size = 0 */
 2120               	/* stack size = 7 */
 2121               	.L__stack_usage = 7
 2122 06b6 F82E      		mov r15,r24
 2123 06b8 D42E      		mov r13,r20
 2124 06ba E52E      		mov r14,r21
 2125 06bc 8901      		movw r16,r18
 179:xmem/xmem.c   **** 	const u8 *data8 = data;
 2126               		.loc 10 179 2 is_stmt 1 view .LVU460
 180:xmem/xmem.c   **** 	_xmem_start(bank, SRAM_COMMAND_WRITE, addr);
 2127               		.loc 10 180 2 view .LVU461
 2128               	.LVL161:
 181:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 2129               		.loc 10 181 2 view .LVU462
 2130 06be 9B01      		movw r18,r22
 2131               	.LVL162:
 181:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 2132               		.loc 10 181 2 is_stmt 0 view .LVU463
 2133 06c0 40E0      		ldi r20,0
 2134 06c2 50E0      		ldi r21,0
 2135               	.LVL163:
 181:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 2136               		.loc 10 181 2 view .LVU464
 2137 06c4 62E0      		ldi r22,lo8(2)
 2138               	.LVL164:
 181:xmem/xmem.c   **** 	for(i = 0; i < size; ++i)
 2139               		.loc 10 181 2 view .LVU465
 2140 06c6 0E94 0000 		call _xmem_start
 2141               	.LVL165:
 182:xmem/xmem.c   **** 	{
 2142               		.loc 10 182 2 is_stmt 1 view .LVU466
 182:xmem/xmem.c   **** 	{
 2143               		.loc 10 182 2 is_stmt 0 view .LVU467
 2144 06ca CD2D      		mov r28,r13
 2145 06cc DE2D      		mov r29,r14
 2146 06ce 0C0F      		add r16,r28
 2147 06d0 1D1F      		adc r17,r29
 2148               	.LVL166:
 2149               	.L82:
 182:xmem/xmem.c   **** 	{
 2150               		.loc 10 182 15 is_stmt 1 discriminator 1 view .LVU468
 2151 06d2 C017      		cp r28,r16
 2152 06d4 D107      		cpc r29,r17
 2153 06d6 01F4      		brne .L83
 187:xmem/xmem.c   **** }
 2154               		.loc 10 187 2 view .LVU469
 2155 06d8 85B1      		in r24,0x5
 2156 06da 21E0      		ldi r18,lo8(1)
 2157 06dc 30E0      		ldi r19,0
 2158 06de 00C0      		rjmp 2f
 2159               		1:
 2160 06e0 220F      		lsl r18
 2161               		2:
 2162 06e2 FA94      		dec r15
 2163 06e4 02F4      		brpl 1b
 2164 06e6 822B      		or r24,r18
 2165 06e8 85B9      		out 0x5,r24
 2166               	/* epilogue start */
 188:xmem/xmem.c   **** 
 2167               		.loc 10 188 1 is_stmt 0 view .LVU470
 2168 06ea DF91      		pop r29
 2169 06ec CF91      		pop r28
 2170               	.LVL167:
 188:xmem/xmem.c   **** 
 2171               		.loc 10 188 1 view .LVU471
 2172 06ee 1F91      		pop r17
 2173 06f0 0F91      		pop r16
 2174 06f2 FF90      		pop r15
 2175               	.LVL168:
 188:xmem/xmem.c   **** 
 2176               		.loc 10 188 1 view .LVU472
 2177 06f4 EF90      		pop r14
 2178 06f6 DF90      		pop r13
 2179 06f8 0895      		ret
 2180               	.LVL169:
 2181               	.L83:
 184:xmem/xmem.c   **** 	}
 2182               		.loc 10 184 3 is_stmt 1 discriminator 3 view .LVU473
 2183 06fa 8991      		ld r24,Y+
 2184               	.LVL170:
 184:xmem/xmem.c   **** 	}
 2185               		.loc 10 184 3 is_stmt 0 discriminator 3 view .LVU474
 2186 06fc 0E94 0000 		call spi_xchg
 2187               	.LVL171:
 182:xmem/xmem.c   **** 	{
 2188               		.loc 10 182 23 is_stmt 1 discriminator 3 view .LVU475
 182:xmem/xmem.c   **** 	{
 2189               		.loc 10 182 23 is_stmt 0 discriminator 3 view .LVU476
 2190 0700 00C0      		rjmp .L82
 2191               		.cfi_endproc
 2192               	.LFE34:
 2195               	xmem_write:
 2196               	.LVL172:
 2197               	.LFB35:
 296:xmem/xmem.c   **** 
 297:xmem/xmem.c   **** void xmem_write(u32 addr, const void *data, u16 size)
 298:xmem/xmem.c   **** {
 2198               		.loc 10 298 1 is_stmt 1 view -0
 2199               		.cfi_startproc
 2200               		.loc 10 298 1 is_stmt 0 view .LVU478
 2201 0702 4F92      		push r4
 2202               		.cfi_def_cfa_offset 3
 2203               		.cfi_offset 4, -2
 2204 0704 5F92      		push r5
 2205               		.cfi_def_cfa_offset 4
 2206               		.cfi_offset 5, -3
 2207 0706 6F92      		push r6
 2208               		.cfi_def_cfa_offset 5
 2209               		.cfi_offset 6, -4
 2210 0708 7F92      		push r7
 2211               		.cfi_def_cfa_offset 6
 2212               		.cfi_offset 7, -5
 2213 070a 8F92      		push r8
 2214               		.cfi_def_cfa_offset 7
 2215               		.cfi_offset 8, -6
 2216 070c 9F92      		push r9
 2217               		.cfi_def_cfa_offset 8
 2218               		.cfi_offset 9, -7
 2219 070e AF92      		push r10
 2220               		.cfi_def_cfa_offset 9
 2221               		.cfi_offset 10, -8
 2222 0710 BF92      		push r11
 2223               		.cfi_def_cfa_offset 10
 2224               		.cfi_offset 11, -9
 2225 0712 CF92      		push r12
 2226               		.cfi_def_cfa_offset 11
 2227               		.cfi_offset 12, -10
 2228 0714 DF92      		push r13
 2229               		.cfi_def_cfa_offset 12
 2230               		.cfi_offset 13, -11
 2231 0716 EF92      		push r14
 2232               		.cfi_def_cfa_offset 13
 2233               		.cfi_offset 14, -12
 2234 0718 FF92      		push r15
 2235               		.cfi_def_cfa_offset 14
 2236               		.cfi_offset 15, -13
 2237 071a 0F93      		push r16
 2238               		.cfi_def_cfa_offset 15
 2239               		.cfi_offset 16, -14
 2240 071c 1F93      		push r17
 2241               		.cfi_def_cfa_offset 16
 2242               		.cfi_offset 17, -15
 2243 071e CF93      		push r28
 2244               		.cfi_def_cfa_offset 17
 2245               		.cfi_offset 28, -16
 2246 0720 DF93      		push r29
 2247               		.cfi_def_cfa_offset 18
 2248               		.cfi_offset 29, -17
 2249               	/* prologue: function */
 2250               	/* frame size = 0 */
 2251               	/* stack size = 16 */
 2252               	.L__stack_usage = 16
 2253 0722 8A01      		movw r16,r20
 2254 0724 E901      		movw r28,r18
 299:xmem/xmem.c   **** 	AddrHelper h;
 2255               		.loc 10 299 2 is_stmt 1 view .LVU479
 300:xmem/xmem.c   **** 	_xmem_overlap(addr, size, &h);
 2256               		.loc 10 300 2 view .LVU480
 2257               	.LVL173:
 2258               	.LBB177:
 2259               	.LBI177:
 258:xmem/xmem.c   **** {
 2260               		.loc 10 258 13 view .LVU481
 2261               	.LBB178:
 260:xmem/xmem.c   **** 
 2262               		.loc 10 260 2 view .LVU482
 262:xmem/xmem.c   **** 	addr_end = addr + size;
 2263               		.loc 10 262 2 view .LVU483
 2264               	.LBB179:
 2265               	.LBI179:
 227:xmem/xmem.c   **** {
 2266               		.loc 10 227 12 view .LVU484
 2267               	.LBB180:
 229:xmem/xmem.c   **** }
 2268               		.loc 10 229 2 view .LVU485
 229:xmem/xmem.c   **** }
 2269               		.loc 10 229 2 is_stmt 0 view .LVU486
 2270               	.LBE180:
 2271               	.LBE179:
 263:xmem/xmem.c   **** 
 2272               		.loc 10 263 2 is_stmt 1 view .LVU487
 263:xmem/xmem.c   **** 
 2273               		.loc 10 263 11 is_stmt 0 view .LVU488
 2274 0726 6B01      		movw r12,r22
 2275 0728 7C01      		movw r14,r24
 2276 072a C20E      		add r12,r18
 2277 072c D31E      		adc r13,r19
 2278 072e E11C      		adc r14,__zero_reg__
 2279 0730 F11C      		adc r15,__zero_reg__
 2280               	.LVL174:
 265:xmem/xmem.c   **** 	h->BankSecond = _addr_to_bank(addr_end);
 2281               		.loc 10 265 2 is_stmt 1 view .LVU489
 2282               	.LBB181:
 2283               	.LBI181:
 216:xmem/xmem.c   **** {
 2284               		.loc 10 216 11 view .LVU490
 2285               	.LBB182:
 218:xmem/xmem.c   **** }
 2286               		.loc 10 218 2 view .LVU491
 218:xmem/xmem.c   **** }
 2287               		.loc 10 218 14 is_stmt 0 view .LVU492
 2288 0732 2B01      		movw r4,r22
 2289 0734 3C01      		movw r6,r24
 2290 0736 81E1      		ldi r24,17
 2291               		1:
 2292 0738 7694      		lsr r7
 2293 073a 6794      		ror r6
 2294 073c 5794      		ror r5
 2295 073e 4794      		ror r4
 2296 0740 8A95      		dec r24
 2297 0742 01F4      		brne 1b
 2298               	.LVL175:
 218:xmem/xmem.c   **** }
 2299               		.loc 10 218 14 view .LVU493
 2300               	.LBE182:
 2301               	.LBE181:
 266:xmem/xmem.c   **** 	if(h->BankFirst == h->BankSecond)
 2302               		.loc 10 266 2 is_stmt 1 view .LVU494
 2303               	.LBB183:
 2304               	.LBI183:
 216:xmem/xmem.c   **** {
 2305               		.loc 10 216 11 view .LVU495
 2306               	.LBB184:
 218:xmem/xmem.c   **** }
 2307               		.loc 10 218 2 view .LVU496
 218:xmem/xmem.c   **** }
 2308               		.loc 10 218 14 is_stmt 0 view .LVU497
 2309 0744 4601      		movw r8,r12
 2310 0746 5701      		movw r10,r14
 2311 0748 91E1      		ldi r25,17
 2312               		1:
 2313 074a B694      		lsr r11
 2314 074c A794      		ror r10
 2315 074e 9794      		ror r9
 2316 0750 8794      		ror r8
 2317 0752 9A95      		dec r25
 2318 0754 01F4      		brne 1b
 2319               	.LVL176:
 218:xmem/xmem.c   **** }
 2320               		.loc 10 218 14 view .LVU498
 2321               	.LBE184:
 2322               	.LBE183:
 267:xmem/xmem.c   **** 	{
 2323               		.loc 10 267 2 is_stmt 1 view .LVU499
 2324               	.LBE178:
 2325               	.LBE177:
 301:xmem/xmem.c   **** 	_xmem_write(h.BankFirst, h.AddrFirst, data, h.SizeFirst);
 2326               		.loc 10 301 2 is_stmt 0 view .LVU500
 2327 0756 842D      		mov r24,r4
 2328               	.LBB188:
 2329               	.LBB187:
 267:xmem/xmem.c   **** 	{
 2330               		.loc 10 267 4 view .LVU501
 2331 0758 8414      		cp r8,r4
 2332 075a 01F0      		breq .L86
 273:xmem/xmem.c   **** 		h->SizeFirst = size - h->SizeSecond;
 2333               		.loc 10 273 3 is_stmt 1 view .LVU502
 2334               	.LBB185:
 2335               	.LBI185:
 227:xmem/xmem.c   **** {
 2336               		.loc 10 227 12 view .LVU503
 2337               	.LBB186:
 229:xmem/xmem.c   **** }
 2338               		.loc 10 229 2 view .LVU504
 2339               	.LVL177:
 229:xmem/xmem.c   **** }
 2340               		.loc 10 229 2 is_stmt 0 view .LVU505
 2341               	.LBE186:
 2342               	.LBE185:
 274:xmem/xmem.c   **** 	}
 2343               		.loc 10 274 3 is_stmt 1 view .LVU506
 274:xmem/xmem.c   **** 	}
 2344               		.loc 10 274 23 is_stmt 0 view .LVU507
 2345 075c CC19      		sub r28,r12
 2346 075e DD09      		sbc r29,r13
 2347               	.LVL178:
 274:xmem/xmem.c   **** 	}
 2348               		.loc 10 274 23 view .LVU508
 2349               	.LBE187:
 2350               	.LBE188:
 2351               		.loc 10 301 2 is_stmt 1 view .LVU509
 2352 0760 9E01      		movw r18,r28
 2353               	.LVL179:
 2354               		.loc 10 301 2 is_stmt 0 view .LVU510
 2355 0762 0E94 0000 		call _xmem_write
 2356               	.LVL180:
 302:xmem/xmem.c   **** 	if(h.BankSecond != h.BankFirst)
 2357               		.loc 10 302 2 is_stmt 1 view .LVU511
 303:xmem/xmem.c   **** 	{
 304:xmem/xmem.c   **** 		_xmem_write(h.BankSecond, 0, (const u8 *)data + h.SizeFirst,
 2358               		.loc 10 304 3 view .LVU512
 2359 0766 A801      		movw r20,r16
 2360 0768 4C0F      		add r20,r28
 2361 076a 5D1F      		adc r21,r29
 2362 076c 9601      		movw r18,r12
 2363 076e 60E0      		ldi r22,0
 2364 0770 70E0      		ldi r23,0
 2365 0772 882D      		mov r24,r8
 2366               	.LVL181:
 2367               	.L86:
 2368               	/* epilogue start */
 305:xmem/xmem.c   **** 			h.SizeSecond);
 306:xmem/xmem.c   **** 	}
 307:xmem/xmem.c   **** }
 2369               		.loc 10 307 1 is_stmt 0 view .LVU513
 2370 0774 DF91      		pop r29
 2371 0776 CF91      		pop r28
 2372 0778 1F91      		pop r17
 2373 077a 0F91      		pop r16
 2374               	.LVL182:
 2375               		.loc 10 307 1 view .LVU514
 2376 077c FF90      		pop r15
 2377 077e EF90      		pop r14
 2378 0780 DF90      		pop r13
 2379 0782 CF90      		pop r12
 2380 0784 BF90      		pop r11
 2381 0786 AF90      		pop r10
 2382 0788 9F90      		pop r9
 2383 078a 8F90      		pop r8
 2384 078c 7F90      		pop r7
 2385 078e 6F90      		pop r6
 2386 0790 5F90      		pop r5
 2387 0792 4F90      		pop r4
 304:xmem/xmem.c   **** 			h.SizeSecond);
 2388               		.loc 10 304 3 view .LVU515
 2389 0794 0C94 0000 		jmp _xmem_write
 2390               	.LVL183:
 2391               		.cfi_endproc
 2392               	.LFE35:
 2395               	emulator_next:
 2396               	.LVL184:
 2397               	.LFB36:
 460:../../emulator/emulator.c **** 
 461:../../emulator/emulator.c **** /**
 462:../../emulator/emulator.c ****  * @brief System call to draw a rectangle
 463:../../emulator/emulator.c ****  *
 464:../../emulator/emulator.c ****  * @param args args[0]: X-Coordinate
 465:../../emulator/emulator.c ****  *             args[1]: Y-Coordinate
 466:../../emulator/emulator.c ****  *             args[2]: Width
 467:../../emulator/emulator.c ****  *             args[3]: Height
 468:../../emulator/emulator.c ****  *             args[4]: ABGR Color
 469:../../emulator/emulator.c ****  * @return Non-zero on error
 470:../../emulator/emulator.c ****  */
 471:../../emulator/emulator.c **** static u8 syscall_gfx_rect(u32 *args)
 472:../../emulator/emulator.c **** {
 473:../../emulator/emulator.c **** 	u16 x, y, w, h;
 474:../../emulator/emulator.c **** 	u32 color;
 475:../../emulator/emulator.c **** 
 476:../../emulator/emulator.c **** 	x = args[0];
 477:../../emulator/emulator.c **** 	y = args[1];
 478:../../emulator/emulator.c **** 	w = args[2];
 479:../../emulator/emulator.c **** 	h = args[3];
 480:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 481:../../emulator/emulator.c **** 	{
 482:../../emulator/emulator.c **** 		return 1;
 483:../../emulator/emulator.c **** 	}
 484:../../emulator/emulator.c **** 
 485:../../emulator/emulator.c **** 	color = args[4];
 486:../../emulator/emulator.c **** 	env_gfx_rect(x, y, w, h, color);
 487:../../emulator/emulator.c **** 	return 0;
 488:../../emulator/emulator.c **** }
 489:../../emulator/emulator.c **** 
 490:../../emulator/emulator.c **** /**
 491:../../emulator/emulator.c ****  * @brief System call to draw an RGB565 image
 492:../../emulator/emulator.c ****  *
 493:../../emulator/emulator.c ****  * @param args args[0]: X-Coordinate
 494:../../emulator/emulator.c ****  *             args[1]: Y-Coordinate
 495:../../emulator/emulator.c ****  *             args[2]: Width
 496:../../emulator/emulator.c ****  *             args[3]: Height
 497:../../emulator/emulator.c ****  *             args[4]: Pointer to RGB565 image
 498:../../emulator/emulator.c ****  * @return Non-zero on error
 499:../../emulator/emulator.c ****  */
 500:../../emulator/emulator.c **** static u8 syscall_gfx_image_rgb565(u32 *args)
 501:../../emulator/emulator.c **** {
 502:../../emulator/emulator.c **** 	u32 image, bytes;
 503:../../emulator/emulator.c **** 	u16 x, y, w, h;
 504:../../emulator/emulator.c **** 
 505:../../emulator/emulator.c **** 	x = args[0];
 506:../../emulator/emulator.c **** 	y = args[1];
 507:../../emulator/emulator.c **** 	w = args[2];
 508:../../emulator/emulator.c **** 	h = args[3];
 509:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 510:../../emulator/emulator.c **** 	{
 511:../../emulator/emulator.c **** 		return 1;
 512:../../emulator/emulator.c **** 	}
 513:../../emulator/emulator.c **** 
 514:../../emulator/emulator.c **** 	image = args[4];
 515:../../emulator/emulator.c **** 	bytes = (u32)2 * (u32)w * (u32)h;
 516:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 517:../../emulator/emulator.c **** 	{
 518:../../emulator/emulator.c **** 		return 1;
 519:../../emulator/emulator.c **** 	}
 520:../../emulator/emulator.c **** 
 521:../../emulator/emulator.c **** 	env_gfx_image_rgb565(x, y, w, h, image);
 522:../../emulator/emulator.c **** 	return 0;
 523:../../emulator/emulator.c **** }
 524:../../emulator/emulator.c **** 
 525:../../emulator/emulator.c **** /**
 526:../../emulator/emulator.c ****  * @brief System call to draw a grayscale image
 527:../../emulator/emulator.c ****  *
 528:../../emulator/emulator.c ****  * @param args args[0]: Pointer to rectangle struct
 529:../../emulator/emulator.c ****  *             args[1]: Pointer to grayscale image
 530:../../emulator/emulator.c ****  *             args[2]: ABGR Foreground color
 531:../../emulator/emulator.c ****  *             args[3]: ABGR Background color
 532:../../emulator/emulator.c ****  * @return Non-zero on error
 533:../../emulator/emulator.c ****  */
 534:../../emulator/emulator.c **** static u8 syscall_gfx_image_grayscale(u32 *args)
 535:../../emulator/emulator.c **** {
 536:../../emulator/emulator.c **** 	u16 x, y, w, h;
 537:../../emulator/emulator.c **** 	u32 image, bytes, rect_addr, fg, bg;
 538:../../emulator/emulator.c **** 	Rectangle rect;
 539:../../emulator/emulator.c **** 
 540:../../emulator/emulator.c **** 	rect_addr = args[0];
 541:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 542:../../emulator/emulator.c **** 	{
 543:../../emulator/emulator.c **** 		return 1;
 544:../../emulator/emulator.c **** 	}
 545:../../emulator/emulator.c **** 
 546:../../emulator/emulator.c **** 	env_memory_read(rect_addr, &rect, sizeof(rect));
 547:../../emulator/emulator.c **** 	x = rect.X;
 548:../../emulator/emulator.c **** 	y = rect.Y;
 549:../../emulator/emulator.c **** 	w = rect.W;
 550:../../emulator/emulator.c **** 	h = rect.H;
 551:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 552:../../emulator/emulator.c **** 	{
 553:../../emulator/emulator.c **** 		return 1;
 554:../../emulator/emulator.c **** 	}
 555:../../emulator/emulator.c **** 
 556:../../emulator/emulator.c **** 	image = args[1];
 557:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 558:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 559:../../emulator/emulator.c **** 	{
 560:../../emulator/emulator.c **** 		return 1;
 561:../../emulator/emulator.c **** 	}
 562:../../emulator/emulator.c **** 
 563:../../emulator/emulator.c **** 	fg = args[2];
 564:../../emulator/emulator.c **** 	bg = args[3];
 565:../../emulator/emulator.c **** 	env_gfx_image_grayscale(x, y, w, h, image, fg, bg);
 566:../../emulator/emulator.c **** 	return 0;
 567:../../emulator/emulator.c **** }
 568:../../emulator/emulator.c **** 
 569:../../emulator/emulator.c **** /**
 570:../../emulator/emulator.c ****  * @brief System call to draw a 1-bit-per-pixel image
 571:../../emulator/emulator.c ****  *
 572:../../emulator/emulator.c ****  * @param args args[0]: Pointer to rectangle struct
 573:../../emulator/emulator.c ****  *             args[1]: Pointer to 1bpp image
 574:../../emulator/emulator.c ****  *             args[2]: ABGR Foreground color
 575:../../emulator/emulator.c ****  *             args[3]: ABGR Background color
 576:../../emulator/emulator.c ****  * @return Non-zero on error
 577:../../emulator/emulator.c ****  */
 578:../../emulator/emulator.c **** static u8 syscall_gfx_image_1bit(u32 *args)
 579:../../emulator/emulator.c **** {
 580:../../emulator/emulator.c **** 	u16 x, y, w, h;
 581:../../emulator/emulator.c **** 	u32 image, bytes, rect_addr, fg, bg;
 582:../../emulator/emulator.c **** 	Rectangle rect;
 583:../../emulator/emulator.c **** 
 584:../../emulator/emulator.c **** 	rect_addr = args[0];
 585:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 586:../../emulator/emulator.c **** 	{
 587:../../emulator/emulator.c **** 		return 1;
 588:../../emulator/emulator.c **** 	}
 589:../../emulator/emulator.c **** 
 590:../../emulator/emulator.c **** 	env_memory_read(rect_addr, &rect, sizeof(rect));
 591:../../emulator/emulator.c **** 	x = rect.X;
 592:../../emulator/emulator.c **** 	y = rect.Y;
 593:../../emulator/emulator.c **** 	w = rect.W;
 594:../../emulator/emulator.c **** 	h = rect.H;
 595:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 596:../../emulator/emulator.c **** 	{
 597:../../emulator/emulator.c **** 		return 1;
 598:../../emulator/emulator.c **** 	}
 599:../../emulator/emulator.c **** 
 600:../../emulator/emulator.c **** 	image = args[1];
 601:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 602:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 603:../../emulator/emulator.c **** 	{
 604:../../emulator/emulator.c **** 		return 1;
 605:../../emulator/emulator.c **** 	}
 606:../../emulator/emulator.c **** 
 607:../../emulator/emulator.c **** 	fg = args[2];
 608:../../emulator/emulator.c **** 	bg = args[3];
 609:../../emulator/emulator.c **** 	env_gfx_image_1bit(x, y, w, h, image, fg, bg);
 610:../../emulator/emulator.c **** 	return 0;
 611:../../emulator/emulator.c **** }
 612:../../emulator/emulator.c **** 
 613:../../emulator/emulator.c **** /** System call function pointer array */
 614:../../emulator/emulator.c **** static u8 (*syscalls[])(u32 *) =
 615:../../emulator/emulator.c **** {
 616:../../emulator/emulator.c **** 	syscall_exit,
 617:../../emulator/emulator.c **** 	syscall_finish,
 618:../../emulator/emulator.c **** 	syscall_event_register,
 619:../../emulator/emulator.c **** 
 620:../../emulator/emulator.c **** 	syscall_gfx_rect,
 621:../../emulator/emulator.c **** 	syscall_gfx_image_rgb565,
 622:../../emulator/emulator.c **** 	syscall_gfx_image_grayscale,
 623:../../emulator/emulator.c **** 	syscall_gfx_image_1bit,
 624:../../emulator/emulator.c **** 
 625:../../emulator/emulator.c **** 	syscall_rand,
 626:../../emulator/emulator.c **** 	syscall_serial_write,
 627:../../emulator/emulator.c **** 	syscall_millis
 628:../../emulator/emulator.c **** };
 629:../../emulator/emulator.c **** 
 630:../../emulator/emulator.c **** /**
 631:../../emulator/emulator.c ****  * @brief Perform a system call
 632:../../emulator/emulator.c ****  *
 633:../../emulator/emulator.c ****  * @param id System call ID
 634:../../emulator/emulator.c ****  * @param args System call arguments, return value is placed in args[0]
 635:../../emulator/emulator.c ****  * @return Non-zero on failure
 636:../../emulator/emulator.c ****  */
 637:../../emulator/emulator.c **** static u8 syscall(u32 id, u32 *args)
 638:../../emulator/emulator.c **** {
 639:../../emulator/emulator.c **** 	if(id >= ARRLEN(syscalls))
 640:../../emulator/emulator.c **** 	{
 641:../../emulator/emulator.c **** 		return 1;
 642:../../emulator/emulator.c **** 	}
 643:../../emulator/emulator.c **** 
 644:../../emulator/emulator.c **** 	return syscalls[id](args);
 645:../../emulator/emulator.c **** }
 646:../../emulator/emulator.c **** 
 647:../../emulator/emulator.c **** /* --- EMULATOR --- */
 648:../../emulator/emulator.c **** 
 649:../../emulator/emulator.c **** /**
 650:../../emulator/emulator.c ****  * @brief Execute the next instruction of the emulator
 651:../../emulator/emulator.c ****  *
 652:../../emulator/emulator.c ****  * @param emu The emulator
 653:../../emulator/emulator.c ****  * @return Non-zero on failure
 654:../../emulator/emulator.c ****  */
 655:../../emulator/emulator.c **** static u8 emulator_next(Emulator *emu)
 656:../../emulator/emulator.c **** {
 2398               		.loc 6 656 1 is_stmt 1 view -0
 2399               		.cfi_startproc
 2400               		.loc 6 656 1 is_stmt 0 view .LVU517
 2401 0798 4F92      		push r4
 2402               		.cfi_def_cfa_offset 3
 2403               		.cfi_offset 4, -2
 2404 079a 5F92      		push r5
 2405               		.cfi_def_cfa_offset 4
 2406               		.cfi_offset 5, -3
 2407 079c 6F92      		push r6
 2408               		.cfi_def_cfa_offset 5
 2409               		.cfi_offset 6, -4
 2410 079e 7F92      		push r7
 2411               		.cfi_def_cfa_offset 6
 2412               		.cfi_offset 7, -5
 2413 07a0 8F92      		push r8
 2414               		.cfi_def_cfa_offset 7
 2415               		.cfi_offset 8, -6
 2416 07a2 9F92      		push r9
 2417               		.cfi_def_cfa_offset 8
 2418               		.cfi_offset 9, -7
 2419 07a4 AF92      		push r10
 2420               		.cfi_def_cfa_offset 9
 2421               		.cfi_offset 10, -8
 2422 07a6 BF92      		push r11
 2423               		.cfi_def_cfa_offset 10
 2424               		.cfi_offset 11, -9
 2425 07a8 DF92      		push r13
 2426               		.cfi_def_cfa_offset 11
 2427               		.cfi_offset 13, -10
 2428 07aa EF92      		push r14
 2429               		.cfi_def_cfa_offset 12
 2430               		.cfi_offset 14, -11
 2431 07ac FF92      		push r15
 2432               		.cfi_def_cfa_offset 13
 2433               		.cfi_offset 15, -12
 2434 07ae 0F93      		push r16
 2435               		.cfi_def_cfa_offset 14
 2436               		.cfi_offset 16, -13
 2437 07b0 1F93      		push r17
 2438               		.cfi_def_cfa_offset 15
 2439               		.cfi_offset 17, -14
 2440 07b2 CF93      		push r28
 2441               		.cfi_def_cfa_offset 16
 2442               		.cfi_offset 28, -15
 2443 07b4 DF93      		push r29
 2444               		.cfi_def_cfa_offset 17
 2445               		.cfi_offset 29, -16
 2446 07b6 CDB7      		in r28,__SP_L__
 2447 07b8 DEB7      		in r29,__SP_H__
 2448               		.cfi_def_cfa_register 28
 2449 07ba 2C97      		sbiw r28,12
 2450               		.cfi_def_cfa_offset 29
 2451 07bc 0FB6      		in __tmp_reg__,__SREG__
 2452 07be F894      		cli
 2453 07c0 DEBF      		out __SP_H__,r29
 2454 07c2 0FBE      		out __SREG__,__tmp_reg__
 2455 07c4 CDBF      		out __SP_L__,r28
 2456               	/* prologue: function */
 2457               	/* frame size = 12 */
 2458               	/* stack size = 27 */
 2459               	.L__stack_usage = 27
 2460 07c6 7C01      		movw r14,r24
 657:../../emulator/emulator.c **** 	u32 instr, opcode;
 2461               		.loc 6 657 2 is_stmt 1 view .LVU518
 658:../../emulator/emulator.c **** 	if(memory_lw(emu->PC, &instr))
 2462               		.loc 6 658 2 view .LVU519
 2463               		.loc 6 658 5 is_stmt 0 view .LVU520
 2464 07c8 DC01      		movw r26,r24
 2465 07ca 5496      		adiw r26,20
 2466 07cc 0D91      		ld r16,X+
 2467 07ce 1D91      		ld r17,X+
 2468 07d0 2D91      		ld r18,X+
 2469 07d2 3C91      		ld r19,X
 2470 07d4 5797      		sbiw r26,20+3
 2471 07d6 0987      		std Y+9,r16
 2472 07d8 1A87      		std Y+10,r17
 2473 07da 2B87      		std Y+11,r18
 2474 07dc 3C87      		std Y+12,r19
 2475 07de AE01      		movw r20,r28
 2476 07e0 4B5F      		subi r20,-5
 2477 07e2 5F4F      		sbci r21,-1
 2478 07e4 C901      		movw r24,r18
 2479 07e6 B801      		movw r22,r16
 2480 07e8 0E94 0000 		call memory_lw
 2481               	.LVL185:
 2482               		.loc 6 658 5 view .LVU521
 2483 07ec D82E      		mov r13,r24
 2484               		.loc 6 658 4 view .LVU522
 2485 07ee 8111      		cpse r24,__zero_reg__
 2486 07f0 00C0      		rjmp .L89
 659:../../emulator/emulator.c **** 	{
 660:../../emulator/emulator.c **** 		return 1;
 661:../../emulator/emulator.c **** 	}
 662:../../emulator/emulator.c **** 
 663:../../emulator/emulator.c **** 	/* r0 = Zero Register */
 664:../../emulator/emulator.c **** 	emu->Registers[0] = 0;
 2487               		.loc 6 664 2 is_stmt 1 view .LVU523
 2488               		.loc 6 664 20 is_stmt 0 view .LVU524
 2489 07f2 F701      		movw r30,r14
 2490 07f4 108E      		std Z+24,__zero_reg__
 2491 07f6 118E      		std Z+25,__zero_reg__
 2492 07f8 128E      		std Z+26,__zero_reg__
 2493 07fa 138E      		std Z+27,__zero_reg__
 665:../../emulator/emulator.c **** 
 666:../../emulator/emulator.c **** 	/* bits 7 .. 0 */
 667:../../emulator/emulator.c **** 	opcode = instr & 0x7F;
 2494               		.loc 6 667 2 is_stmt 1 view .LVU525
 2495               		.loc 6 667 17 is_stmt 0 view .LVU526
 2496 07fc 0D81      		ldd r16,Y+5
 2497 07fe 1E81      		ldd r17,Y+6
 2498 0800 2F81      		ldd r18,Y+7
 2499 0802 3885      		ldd r19,Y+8
 2500               	.LVL186:
 668:../../emulator/emulator.c **** 	if((opcode & 0x03) != 0x03)
 2501               		.loc 6 668 2 is_stmt 1 view .LVU527
 2502               		.loc 6 668 13 is_stmt 0 view .LVU528
 2503 0804 D901      		movw r26,r18
 2504 0806 C801      		movw r24,r16
 2505 0808 8370      		andi r24,3
 2506 080a 9927      		clr r25
 2507 080c AA27      		clr r26
 2508 080e BB27      		clr r27
 2509               		.loc 6 668 4 view .LVU529
 2510 0810 0397      		sbiw r24,3
 2511 0812 A105      		cpc r26,__zero_reg__
 2512 0814 B105      		cpc r27,__zero_reg__
 2513 0816 01F0      		breq .+2
 2514 0818 00C0      		rjmp .L89
 669:../../emulator/emulator.c **** 	{
 670:../../emulator/emulator.c **** 		EMU_LOG(PSTR("INVALID"));
 671:../../emulator/emulator.c **** 		return 1;
 672:../../emulator/emulator.c **** 	}
 673:../../emulator/emulator.c **** 
 674:../../emulator/emulator.c **** 	opcode >>= 2;
 2515               		.loc 6 674 2 is_stmt 1 view .LVU530
 2516               	.LVL187:
 675:../../emulator/emulator.c **** 	switch(opcode)
 2517               		.loc 6 675 2 view .LVU531
 674:../../emulator/emulator.c **** 	switch(opcode)
 2518               		.loc 6 674 9 is_stmt 0 view .LVU532
 2519 081a D901      		movw r26,r18
 2520 081c C801      		movw r24,r16
 2521 081e 42E0      		ldi r20,2
 2522               		1:
 2523 0820 B695      		lsr r27
 2524 0822 A795      		ror r26
 2525 0824 9795      		ror r25
 2526 0826 8795      		ror r24
 2527 0828 4A95      		dec r20
 2528 082a 01F4      		brne 1b
 2529 082c 8F71      		andi r24,31
 2530 082e 9927      		clr r25
 2531 0830 AA27      		clr r26
 2532 0832 BB27      		clr r27
 2533               	.LVL188:
 2534               		.loc 6 675 2 view .LVU533
 2535 0834 8D31      		cpi r24,29
 2536 0836 9105      		cpc r25,__zero_reg__
 2537 0838 A105      		cpc r26,__zero_reg__
 2538 083a B105      		cpc r27,__zero_reg__
 2539 083c 00F0      		brlo .+2
 2540 083e 00C0      		rjmp .L89
 2541 0840 FC01      		movw r30,r24
 2542 0842 E050      		subi r30,lo8(-(gs(.L92)))
 2543 0844 F040      		sbci r31,hi8(-(gs(.L92)))
 2544 0846 0C94 0000 		jmp __tablejump2__
 2545               		.section	.jumptables.gcc.emulator_next,"a",@progbits
 2546               		.p2align	1
 2547               	.L92:
 2548 0000 0000      		.word gs(.L101)
 2549 0002 0000      		.word gs(.L89)
 2550 0004 0000      		.word gs(.L89)
 2551 0006 0000      		.word gs(.L89)
 2552 0008 0000      		.word gs(.L100)
 2553 000a 0000      		.word gs(.L99)
 2554 000c 0000      		.word gs(.L89)
 2555 000e 0000      		.word gs(.L89)
 2556 0010 0000      		.word gs(.L98)
 2557 0012 0000      		.word gs(.L89)
 2558 0014 0000      		.word gs(.L89)
 2559 0016 0000      		.word gs(.L89)
 2560 0018 0000      		.word gs(.L97)
 2561 001a 0000      		.word gs(.L96)
 2562 001c 0000      		.word gs(.L89)
 2563 001e 0000      		.word gs(.L89)
 2564 0020 0000      		.word gs(.L89)
 2565 0022 0000      		.word gs(.L89)
 2566 0024 0000      		.word gs(.L89)
 2567 0026 0000      		.word gs(.L89)
 2568 0028 0000      		.word gs(.L89)
 2569 002a 0000      		.word gs(.L89)
 2570 002c 0000      		.word gs(.L89)
 2571 002e 0000      		.word gs(.L89)
 2572 0030 0000      		.word gs(.L95)
 2573 0032 0000      		.word gs(.L94)
 2574 0034 0000      		.word gs(.L89)
 2575 0036 0000      		.word gs(.L93)
 2576 0038 0000      		.word gs(.L91)
 2577               		.text
 2578               	.L91:
 676:../../emulator/emulator.c **** 	{
 677:../../emulator/emulator.c **** 		case OPCODE_ECALL:
 678:../../emulator/emulator.c **** 			if(syscall(emu->Registers[17], &emu->Registers[10]))
 2579               		.loc 6 678 4 is_stmt 1 view .LVU534
 2580               		.loc 6 678 7 is_stmt 0 view .LVU535
 2581 084a F701      		movw r30,r14
 2582 084c E45A      		subi r30,-92
 2583 084e FF4F      		sbci r31,-1
 2584 0850 8081      		ld r24,Z
 2585 0852 9181      		ldd r25,Z+1
 2586 0854 A281      		ldd r26,Z+2
 2587 0856 B381      		ldd r27,Z+3
 2588               	.LVL189:
 2589               	.LBB248:
 2590               	.LBI248:
 637:../../emulator/emulator.c **** {
 2591               		.loc 6 637 11 is_stmt 1 view .LVU536
 2592               	.LBB249:
 639:../../emulator/emulator.c **** 	{
 2593               		.loc 6 639 2 view .LVU537
 639:../../emulator/emulator.c **** 	{
 2594               		.loc 6 639 4 is_stmt 0 view .LVU538
 2595 0858 8A30      		cpi r24,10
 2596 085a 9105      		cpc r25,__zero_reg__
 2597 085c A105      		cpc r26,__zero_reg__
 2598 085e B105      		cpc r27,__zero_reg__
 2599 0860 00F0      		brlo .+2
 2600 0862 00C0      		rjmp .L89
 644:../../emulator/emulator.c **** }
 2601               		.loc 6 644 2 is_stmt 1 view .LVU539
 644:../../emulator/emulator.c **** }
 2602               		.loc 6 644 17 is_stmt 0 view .LVU540
 2603 0864 880F      		lsl r24
 2604 0866 991F      		rol r25
 2605               	.LVL190:
 644:../../emulator/emulator.c **** }
 2606               		.loc 6 644 17 view .LVU541
 2607 0868 FC01      		movw r30,r24
 2608               	.LVL191:
 644:../../emulator/emulator.c **** }
 2609               		.loc 6 644 17 view .LVU542
 2610 086a E050      		subi r30,lo8(-(syscalls))
 2611 086c F040      		sbci r31,hi8(-(syscalls))
 644:../../emulator/emulator.c **** }
 2612               		.loc 6 644 9 view .LVU543
 2613 086e 0190      		ld __tmp_reg__,Z+
 2614 0870 F081      		ld r31,Z
 2615 0872 E02D      		mov r30,__tmp_reg__
 2616 0874 C701      		movw r24,r14
 2617 0876 805C      		subi r24,-64
 2618 0878 9F4F      		sbci r25,-1
 2619               	.LVL192:
 644:../../emulator/emulator.c **** }
 2620               		.loc 6 644 9 view .LVU544
 2621 087a 0995      		icall
 2622               	.LVL193:
 2623               	.L174:
 644:../../emulator/emulator.c **** }
 2624               		.loc 6 644 9 view .LVU545
 2625               	.LBE249:
 2626               	.LBE248:
 2627               	.LBB250:
 679:../../emulator/emulator.c **** 			{
 680:../../emulator/emulator.c **** 				EMU_LOG(PSTR("SYSCALL ERROR"));
 681:../../emulator/emulator.c **** 				return 1;
 682:../../emulator/emulator.c **** 			}
 683:../../emulator/emulator.c **** 			break;
 684:../../emulator/emulator.c **** 
 685:../../emulator/emulator.c **** 		case OPCODE_LOAD:
 686:../../emulator/emulator.c **** 		{
 687:../../emulator/emulator.c **** 			i32 offset;
 688:../../emulator/emulator.c **** 			u32 imm;
 689:../../emulator/emulator.c **** 			u8 rd, rs1, funct3;
 690:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 691:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 692:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 693:../../emulator/emulator.c **** 			imm = (instr >> 20);
 694:../../emulator/emulator.c **** 			offset = sext(12, imm);
 695:../../emulator/emulator.c **** 			switch(funct3)
 696:../../emulator/emulator.c **** 			{
 697:../../emulator/emulator.c **** 				case 0:
 698:../../emulator/emulator.c **** 					/* LB */
 699:../../emulator/emulator.c **** 					EMU_LOG(PSTR("lb r%"PRIu8", r%"PRIu8"%+"PRIi32), rd, rs1, offset);
 700:../../emulator/emulator.c **** 					if(memory_lb(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 701:../../emulator/emulator.c **** 					{
 702:../../emulator/emulator.c **** 						return 1;
 703:../../emulator/emulator.c **** 					}
 704:../../emulator/emulator.c **** 					break;
 705:../../emulator/emulator.c **** 
 706:../../emulator/emulator.c **** 				case 1:
 707:../../emulator/emulator.c **** 					/* LH */
 708:../../emulator/emulator.c **** 					EMU_LOG(PSTR("lh r%"PRIu8", r%"PRIu8"%+"PRIi32), rd, rs1, offset);
 709:../../emulator/emulator.c **** 					if(memory_lh(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 710:../../emulator/emulator.c **** 					{
 711:../../emulator/emulator.c **** 						return 1;
 712:../../emulator/emulator.c **** 					}
 713:../../emulator/emulator.c **** 					break;
 714:../../emulator/emulator.c **** 
 715:../../emulator/emulator.c **** 				case 2:
 716:../../emulator/emulator.c **** 					/* LW */
 717:../../emulator/emulator.c **** 					EMU_LOG(PSTR("lw r%"PRIu8", r%"PRIu8"%+"PRIi32), rd, rs1, offset);
 718:../../emulator/emulator.c **** 					if(memory_lw(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 2628               		.loc 6 718 8 view .LVU546
 2629 087c 8111      		cpse r24,__zero_reg__
 2630 087e 00C0      		rjmp .L89
 2631               	.L110:
 2632               	.LBE250:
 719:../../emulator/emulator.c **** 					{
 720:../../emulator/emulator.c **** 						return 1;
 721:../../emulator/emulator.c **** 					}
 722:../../emulator/emulator.c **** 					break;
 723:../../emulator/emulator.c **** 
 724:../../emulator/emulator.c **** 				case 4:
 725:../../emulator/emulator.c **** 					/* LBU */
 726:../../emulator/emulator.c **** 					EMU_LOG(PSTR("lbu r%"PRIu8", r%"PRIu8"%+"PRIi32), rd, rs1, offset);
 727:../../emulator/emulator.c **** 					if(memory_lbu(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 728:../../emulator/emulator.c **** 					{
 729:../../emulator/emulator.c **** 						return 1;
 730:../../emulator/emulator.c **** 					}
 731:../../emulator/emulator.c **** 					break;
 732:../../emulator/emulator.c **** 
 733:../../emulator/emulator.c **** 				case 5:
 734:../../emulator/emulator.c **** 					/* LHU */
 735:../../emulator/emulator.c **** 					EMU_LOG(PSTR("lhu r%"PRIu8", r%"PRIu8"%+"PRIi32), rd, rs1, offset);
 736:../../emulator/emulator.c **** 					if(memory_lhu(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 737:../../emulator/emulator.c **** 					{
 738:../../emulator/emulator.c **** 						return 1;
 739:../../emulator/emulator.c **** 					}
 740:../../emulator/emulator.c **** 					break;
 741:../../emulator/emulator.c **** 
 742:../../emulator/emulator.c **** 				default:
 743:../../emulator/emulator.c **** 					EMU_LOG(PSTR("INVALID"));
 744:../../emulator/emulator.c **** 					return 1;
 745:../../emulator/emulator.c **** 			}
 746:../../emulator/emulator.c **** 			break;
 747:../../emulator/emulator.c **** 		}
 748:../../emulator/emulator.c **** 
 749:../../emulator/emulator.c **** 		case OPCODE_IMM:
 750:../../emulator/emulator.c **** 		{
 751:../../emulator/emulator.c **** 			u8 rd, rs1, funct3;
 752:../../emulator/emulator.c **** 			u32 imm;
 753:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 754:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 755:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 756:../../emulator/emulator.c **** 			imm = (instr >> 20);
 757:../../emulator/emulator.c **** 			switch(funct3)
 758:../../emulator/emulator.c **** 			{
 759:../../emulator/emulator.c **** 				case 0:
 760:../../emulator/emulator.c **** 					/* ADDI */
 761:../../emulator/emulator.c **** 					imm = sext(12, imm);
 762:../../emulator/emulator.c **** 					EMU_LOG(PSTR("addi r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 763:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] + imm;
 764:../../emulator/emulator.c **** 					break;
 765:../../emulator/emulator.c **** 
 766:../../emulator/emulator.c **** 				case 1:
 767:../../emulator/emulator.c **** 					/* SLLI */
 768:../../emulator/emulator.c **** 					imm &= 0x1F;
 769:../../emulator/emulator.c **** 					EMU_LOG(PSTR("slli r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 770:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] << imm;
 771:../../emulator/emulator.c **** 					break;
 772:../../emulator/emulator.c **** 
 773:../../emulator/emulator.c **** 				case 2:
 774:../../emulator/emulator.c **** 					/* SLTI */
 775:../../emulator/emulator.c **** 					imm = sext(12, imm);
 776:../../emulator/emulator.c **** 					EMU_LOG(PSTR("slti r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 777:../../emulator/emulator.c **** 					emu->Registers[rd] = (i32)emu->Registers[rs1] < (i32)imm;
 778:../../emulator/emulator.c **** 					break;
 779:../../emulator/emulator.c **** 
 780:../../emulator/emulator.c **** 				case 3:
 781:../../emulator/emulator.c **** 					/* SLTIU */
 782:../../emulator/emulator.c **** 					EMU_LOG(PSTR("sltiu r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 783:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] < imm;
 784:../../emulator/emulator.c **** 					break;
 785:../../emulator/emulator.c **** 
 786:../../emulator/emulator.c **** 				case 4:
 787:../../emulator/emulator.c **** 					/* XORI */
 788:../../emulator/emulator.c **** 					imm = sext(12, imm);
 789:../../emulator/emulator.c **** 					EMU_LOG(PSTR("xori r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 790:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] ^ imm;
 791:../../emulator/emulator.c **** 					break;
 792:../../emulator/emulator.c **** 
 793:../../emulator/emulator.c **** 				case 5:
 794:../../emulator/emulator.c **** 					if(imm >> 5)
 795:../../emulator/emulator.c **** 					{
 796:../../emulator/emulator.c **** 						/* SRAI */
 797:../../emulator/emulator.c **** 						imm &= 0x1F;
 798:../../emulator/emulator.c **** 						EMU_LOG(PSTR("srai r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 799:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] >> imm;
 800:../../emulator/emulator.c **** 					}
 801:../../emulator/emulator.c **** 					else
 802:../../emulator/emulator.c **** 					{
 803:../../emulator/emulator.c **** 						/* SRLI */
 804:../../emulator/emulator.c **** 						imm &= 0x1F;
 805:../../emulator/emulator.c **** 						EMU_LOG(PSTR("srli r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 806:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] >> imm;
 807:../../emulator/emulator.c **** 					}
 808:../../emulator/emulator.c **** 					break;
 809:../../emulator/emulator.c **** 
 810:../../emulator/emulator.c **** 				case 6:
 811:../../emulator/emulator.c **** 					/* ORI */
 812:../../emulator/emulator.c **** 					imm = sext(12, imm);
 813:../../emulator/emulator.c **** 					EMU_LOG(PSTR("ori r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 814:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] | imm;
 815:../../emulator/emulator.c **** 					break;
 816:../../emulator/emulator.c **** 
 817:../../emulator/emulator.c **** 				case 7:
 818:../../emulator/emulator.c **** 					/* ANDI */
 819:../../emulator/emulator.c **** 					imm = sext(12, imm);
 820:../../emulator/emulator.c **** 					EMU_LOG(PSTR("andi r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 821:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] & imm;
 822:../../emulator/emulator.c **** 					break;
 823:../../emulator/emulator.c **** 			}
 824:../../emulator/emulator.c **** 			break;
 825:../../emulator/emulator.c **** 		}
 826:../../emulator/emulator.c **** 
 827:../../emulator/emulator.c **** 		case OPCODE_AUIPC:
 828:../../emulator/emulator.c **** 		{
 829:../../emulator/emulator.c **** 			u8 rd;
 830:../../emulator/emulator.c **** 			u32 imm;
 831:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 832:../../emulator/emulator.c **** 			imm = (instr >> 12);
 833:../../emulator/emulator.c **** 			EMU_LOG(PSTR("auipc r%"PRIu8", 0x%08"PRIx32), rd, imm);
 834:../../emulator/emulator.c **** 			emu->Registers[rd] = emu->PC + (imm << 12);
 835:../../emulator/emulator.c **** 			break;
 836:../../emulator/emulator.c **** 		}
 837:../../emulator/emulator.c **** 
 838:../../emulator/emulator.c **** 		case OPCODE_STORE:
 839:../../emulator/emulator.c **** 		{
 840:../../emulator/emulator.c **** 			i32 offset;
 841:../../emulator/emulator.c **** 			u32 imm;
 842:../../emulator/emulator.c **** 			u8 rs1, rs2, funct3;
 843:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 844:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 845:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 846:../../emulator/emulator.c **** 			imm = ((instr & 0xF80) >> 7) | ((instr & 0xFE000000) >> 20);
 847:../../emulator/emulator.c **** 			offset = sext(12, imm);
 848:../../emulator/emulator.c **** 			switch(funct3)
 849:../../emulator/emulator.c **** 			{
 850:../../emulator/emulator.c **** 				case 0:
 851:../../emulator/emulator.c **** 					/* SB */
 852:../../emulator/emulator.c **** 					EMU_LOG(PSTR("sb r%"PRIu8"%+"PRIi32", r%"PRIu8), rs1, offset, rs2);
 853:../../emulator/emulator.c **** 					if(memory_sb(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 854:../../emulator/emulator.c **** 					{
 855:../../emulator/emulator.c **** 						return 1;
 856:../../emulator/emulator.c **** 					}
 857:../../emulator/emulator.c **** 					break;
 858:../../emulator/emulator.c **** 
 859:../../emulator/emulator.c **** 				case 1:
 860:../../emulator/emulator.c **** 					/* SH */
 861:../../emulator/emulator.c **** 					EMU_LOG(PSTR("sh r%"PRIu8"%+"PRIi32", r%"PRIu8), rs1, offset, rs2);
 862:../../emulator/emulator.c **** 					if(memory_sh(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 863:../../emulator/emulator.c **** 					{
 864:../../emulator/emulator.c **** 						return 1;
 865:../../emulator/emulator.c **** 					}
 866:../../emulator/emulator.c **** 					break;
 867:../../emulator/emulator.c **** 
 868:../../emulator/emulator.c **** 				case 2:
 869:../../emulator/emulator.c **** 					/* SW */
 870:../../emulator/emulator.c **** 					EMU_LOG(PSTR("sw r%"PRIu8"%+"PRIi32", r%"PRIu8), rs1, offset, rs2);
 871:../../emulator/emulator.c **** 					if(memory_sw(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 872:../../emulator/emulator.c **** 					{
 873:../../emulator/emulator.c **** 						return 1;
 874:../../emulator/emulator.c **** 					}
 875:../../emulator/emulator.c **** 					break;
 876:../../emulator/emulator.c **** 
 877:../../emulator/emulator.c **** 				default:
 878:../../emulator/emulator.c **** 					EMU_LOG(PSTR("INVALID"));
 879:../../emulator/emulator.c **** 					return 1;
 880:../../emulator/emulator.c **** 			}
 881:../../emulator/emulator.c **** 			break;
 882:../../emulator/emulator.c **** 		}
 883:../../emulator/emulator.c **** 
 884:../../emulator/emulator.c **** 		case OPCODE_REG:
 885:../../emulator/emulator.c **** 		{
 886:../../emulator/emulator.c **** 			u8 rd, rs1, rs2, funct3, funct7;
 887:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 888:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 889:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 890:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 891:../../emulator/emulator.c **** 			funct7 = (instr >> 25);
 892:../../emulator/emulator.c **** 			if(funct7 == 1)
 893:../../emulator/emulator.c **** 			{
 894:../../emulator/emulator.c **** 				/* Multiplication Extension */
 895:../../emulator/emulator.c **** 				switch(funct3)
 896:../../emulator/emulator.c **** 				{
 897:../../emulator/emulator.c **** 					case 0:
 898:../../emulator/emulator.c **** 						/* MUL */
 899:../../emulator/emulator.c **** 						EMU_LOG(PSTR("mul r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 900:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] * (i32)emu->Registers[rs2];
 901:../../emulator/emulator.c **** 						break;
 902:../../emulator/emulator.c **** 
 903:../../emulator/emulator.c **** 					case 1:
 904:../../emulator/emulator.c **** 						/* MULH */
 905:../../emulator/emulator.c **** 						EMU_LOG(PSTR("mulh r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 906:../../emulator/emulator.c **** 						emu->Registers[rd] = ((i64)emu->Registers[rs1] * (i64)emu->Registers[rs2]) >> 32;
 907:../../emulator/emulator.c **** 						break;
 908:../../emulator/emulator.c **** 
 909:../../emulator/emulator.c **** 					case 2:
 910:../../emulator/emulator.c **** 						/* MULHSU */
 911:../../emulator/emulator.c **** 						EMU_LOG(PSTR("mulhsu r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 912:../../emulator/emulator.c **** 						emu->Registers[rd] = ((i64)emu->Registers[rs1] * (u64)emu->Registers[rs2]) >> 32;
 913:../../emulator/emulator.c **** 						break;
 914:../../emulator/emulator.c **** 
 915:../../emulator/emulator.c **** 					case 3:
 916:../../emulator/emulator.c **** 						/* MULHU */
 917:../../emulator/emulator.c **** 						EMU_LOG(PSTR("mulhu r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 918:../../emulator/emulator.c **** 						emu->Registers[rd] = ((u64)emu->Registers[rs1] * (u64)emu->Registers[rs2]) >> 32;
 919:../../emulator/emulator.c **** 						break;
 920:../../emulator/emulator.c **** 
 921:../../emulator/emulator.c **** 					case 4:
 922:../../emulator/emulator.c **** 						/* DIV */
 923:../../emulator/emulator.c **** 						EMU_LOG(PSTR("div r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 924:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] / (i32)emu->Registers[rs2];
 925:../../emulator/emulator.c **** 						break;
 926:../../emulator/emulator.c **** 
 927:../../emulator/emulator.c **** 					case 5:
 928:../../emulator/emulator.c **** 						/* DIVU */
 929:../../emulator/emulator.c **** 						EMU_LOG(PSTR("divu r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 930:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] / emu->Registers[rs2];
 931:../../emulator/emulator.c **** 						break;
 932:../../emulator/emulator.c **** 
 933:../../emulator/emulator.c **** 					case 6:
 934:../../emulator/emulator.c **** 						/* REM */
 935:../../emulator/emulator.c **** 						EMU_LOG(PSTR("rem r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 936:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] % (i32)emu->Registers[rs2];
 937:../../emulator/emulator.c **** 						break;
 938:../../emulator/emulator.c **** 
 939:../../emulator/emulator.c **** 					case 7:
 940:../../emulator/emulator.c **** 						/* REMU */
 941:../../emulator/emulator.c **** 						EMU_LOG(PSTR("remu r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 942:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] % emu->Registers[rs2];
 943:../../emulator/emulator.c **** 						break;
 944:../../emulator/emulator.c **** 				}
 945:../../emulator/emulator.c **** 			}
 946:../../emulator/emulator.c **** 			else
 947:../../emulator/emulator.c **** 			{
 948:../../emulator/emulator.c **** 				switch(funct3)
 949:../../emulator/emulator.c **** 				{
 950:../../emulator/emulator.c **** 					case 0:
 951:../../emulator/emulator.c **** 						if(funct7)
 952:../../emulator/emulator.c **** 						{
 953:../../emulator/emulator.c **** 							/* SUB */
 954:../../emulator/emulator.c **** 							EMU_LOG(PSTR("sub r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 955:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] - emu->Registers[rs2];
 956:../../emulator/emulator.c **** 						}
 957:../../emulator/emulator.c **** 						else
 958:../../emulator/emulator.c **** 						{
 959:../../emulator/emulator.c **** 							/* ADD */
 960:../../emulator/emulator.c **** 							EMU_LOG(PSTR("add r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 961:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] + emu->Registers[rs2];
 962:../../emulator/emulator.c **** 						}
 963:../../emulator/emulator.c **** 						break;
 964:../../emulator/emulator.c **** 
 965:../../emulator/emulator.c **** 					case 1:
 966:../../emulator/emulator.c **** 						/* SLL */
 967:../../emulator/emulator.c **** 						EMU_LOG(PSTR("sll r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 968:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] << (emu->Registers[rs2] & 0x1F);
 969:../../emulator/emulator.c **** 						break;
 970:../../emulator/emulator.c **** 
 971:../../emulator/emulator.c **** 					case 2:
 972:../../emulator/emulator.c **** 						/* SLT */
 973:../../emulator/emulator.c **** 						EMU_LOG(PSTR("slt r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 974:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] < (i32)emu->Registers[rs2];
 975:../../emulator/emulator.c **** 						break;
 976:../../emulator/emulator.c **** 
 977:../../emulator/emulator.c **** 					case 3:
 978:../../emulator/emulator.c **** 						/* SLTU */
 979:../../emulator/emulator.c **** 						EMU_LOG(PSTR("sltu r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 980:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] < emu->Registers[rs2];
 981:../../emulator/emulator.c **** 						break;
 982:../../emulator/emulator.c **** 
 983:../../emulator/emulator.c **** 					case 4:
 984:../../emulator/emulator.c **** 						/* XOR */
 985:../../emulator/emulator.c **** 						EMU_LOG(PSTR("xor r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 986:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] ^ emu->Registers[rs2];
 987:../../emulator/emulator.c **** 						break;
 988:../../emulator/emulator.c **** 
 989:../../emulator/emulator.c **** 					case 5:
 990:../../emulator/emulator.c **** 						if(funct7)
 991:../../emulator/emulator.c **** 						{
 992:../../emulator/emulator.c **** 							/* SRA */
 993:../../emulator/emulator.c **** 							EMU_LOG(PSTR("srl r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
 994:../../emulator/emulator.c **** 							emu->Registers[rd] = (i32)emu->Registers[rs1] >> (emu->Registers[rs2] & 0x1F);
 995:../../emulator/emulator.c **** 						}
 996:../../emulator/emulator.c **** 						else
 997:../../emulator/emulator.c **** 						{
 998:../../emulator/emulator.c **** 							/* SRL */
 999:../../emulator/emulator.c **** 							EMU_LOG(PSTR("sra r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
1000:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] >> (emu->Registers[rs2] & 0x1F);
1001:../../emulator/emulator.c **** 						}
1002:../../emulator/emulator.c **** 						break;
1003:../../emulator/emulator.c **** 
1004:../../emulator/emulator.c **** 					case 6:
1005:../../emulator/emulator.c **** 						/* OR */
1006:../../emulator/emulator.c **** 						EMU_LOG(PSTR("or r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
1007:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] | emu->Registers[rs2];
1008:../../emulator/emulator.c **** 						break;
1009:../../emulator/emulator.c **** 
1010:../../emulator/emulator.c **** 					case 7:
1011:../../emulator/emulator.c **** 						/* AND */
1012:../../emulator/emulator.c **** 						EMU_LOG(PSTR("and r%"PRIu8", r%"PRIu8", r%"PRIu8), rd, rs1, rs2);
1013:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] & emu->Registers[rs2];
1014:../../emulator/emulator.c **** 						break;
1015:../../emulator/emulator.c **** 				}
1016:../../emulator/emulator.c **** 			}
1017:../../emulator/emulator.c **** 			break;
1018:../../emulator/emulator.c **** 		}
1019:../../emulator/emulator.c **** 
1020:../../emulator/emulator.c **** 		case OPCODE_LUI:
1021:../../emulator/emulator.c **** 		{
1022:../../emulator/emulator.c **** 			u8 rd;
1023:../../emulator/emulator.c **** 			u32 imm;
1024:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
1025:../../emulator/emulator.c **** 			imm = (instr >> 12);
1026:../../emulator/emulator.c **** 			EMU_LOG(PSTR("lui r%"PRIu8", 0x%08"PRIx32), rd, imm);
1027:../../emulator/emulator.c **** 			emu->Registers[rd] = (imm << 12);
1028:../../emulator/emulator.c **** 			break;
1029:../../emulator/emulator.c **** 		}
1030:../../emulator/emulator.c **** 
1031:../../emulator/emulator.c **** 		case OPCODE_BRANCH:
1032:../../emulator/emulator.c **** 		{
1033:../../emulator/emulator.c **** 			i32 offset;
1034:../../emulator/emulator.c **** 			u32 imm;
1035:../../emulator/emulator.c **** 			u8 rs1, rs2, funct3;
1036:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
1037:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
1038:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
1039:../../emulator/emulator.c **** 			imm = ((instr & 0xF00) >> 7) |
1040:../../emulator/emulator.c **** 				((instr & 0x7E000000) >> 20) |
1041:../../emulator/emulator.c **** 				((instr & 0x80) << 4) |
1042:../../emulator/emulator.c **** 				((instr & 0x80000000) >> 20);
1043:../../emulator/emulator.c **** 
1044:../../emulator/emulator.c **** 			offset = sext(12, imm);
1045:../../emulator/emulator.c **** 			switch(funct3)
1046:../../emulator/emulator.c **** 			{
1047:../../emulator/emulator.c **** 				case 0:
1048:../../emulator/emulator.c **** 					/* BEQ */
1049:../../emulator/emulator.c **** 					EMU_LOG(PSTR("beq r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1050:../../emulator/emulator.c **** 					if(emu->Registers[rs1] == emu->Registers[rs2])
1051:../../emulator/emulator.c **** 					{
1052:../../emulator/emulator.c **** 						emu->PC += offset;
1053:../../emulator/emulator.c **** 						return 0;
1054:../../emulator/emulator.c **** 					}
1055:../../emulator/emulator.c **** 					break;
1056:../../emulator/emulator.c **** 
1057:../../emulator/emulator.c **** 				case 1:
1058:../../emulator/emulator.c **** 					/* BNE */
1059:../../emulator/emulator.c **** 					EMU_LOG(PSTR("bne r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1060:../../emulator/emulator.c **** 					if(emu->Registers[rs1] != emu->Registers[rs2])
1061:../../emulator/emulator.c **** 					{
1062:../../emulator/emulator.c **** 						emu->PC += offset;
1063:../../emulator/emulator.c **** 						return 0;
1064:../../emulator/emulator.c **** 					}
1065:../../emulator/emulator.c **** 					break;
1066:../../emulator/emulator.c **** 
1067:../../emulator/emulator.c **** 				case 4:
1068:../../emulator/emulator.c **** 					/* BLT */
1069:../../emulator/emulator.c **** 					EMU_LOG(PSTR("blt r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1070:../../emulator/emulator.c **** 					if((i32)emu->Registers[rs1] < (i32)emu->Registers[rs2])
1071:../../emulator/emulator.c **** 					{
1072:../../emulator/emulator.c **** 						emu->PC += offset;
1073:../../emulator/emulator.c **** 						return 0;
1074:../../emulator/emulator.c **** 					}
1075:../../emulator/emulator.c **** 					break;
1076:../../emulator/emulator.c **** 
1077:../../emulator/emulator.c **** 				case 5:
1078:../../emulator/emulator.c **** 					/* BGE */
1079:../../emulator/emulator.c **** 					EMU_LOG(PSTR("bge r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1080:../../emulator/emulator.c **** 					if((i32)emu->Registers[rs1] >= (i32)emu->Registers[rs2])
1081:../../emulator/emulator.c **** 					{
1082:../../emulator/emulator.c **** 						emu->PC += offset;
1083:../../emulator/emulator.c **** 						return 0;
1084:../../emulator/emulator.c **** 					}
1085:../../emulator/emulator.c **** 					break;
1086:../../emulator/emulator.c **** 
1087:../../emulator/emulator.c **** 				case 6:
1088:../../emulator/emulator.c **** 					/* BLTU */
1089:../../emulator/emulator.c **** 					EMU_LOG(PSTR("bltu r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1090:../../emulator/emulator.c **** 					if(emu->Registers[rs1] < emu->Registers[rs2])
1091:../../emulator/emulator.c **** 					{
1092:../../emulator/emulator.c **** 						emu->PC += offset;
1093:../../emulator/emulator.c **** 						return 0;
1094:../../emulator/emulator.c **** 					}
1095:../../emulator/emulator.c **** 					break;
1096:../../emulator/emulator.c **** 
1097:../../emulator/emulator.c **** 				case 7:
1098:../../emulator/emulator.c **** 					/* BGEU */
1099:../../emulator/emulator.c **** 					EMU_LOG(PSTR("bgeu r%"PRIu8", r%"PRIu8", pc%+"PRIi32), rs1, rs2, offset);
1100:../../emulator/emulator.c **** 					if(emu->Registers[rs1] >= emu->Registers[rs2])
1101:../../emulator/emulator.c **** 					{
1102:../../emulator/emulator.c **** 						emu->PC += offset;
1103:../../emulator/emulator.c **** 						return 0;
1104:../../emulator/emulator.c **** 					}
1105:../../emulator/emulator.c **** 					break;
1106:../../emulator/emulator.c **** 
1107:../../emulator/emulator.c **** 				default:
1108:../../emulator/emulator.c **** 					EMU_LOG(PSTR("INVALID"));
1109:../../emulator/emulator.c **** 					return 1;
1110:../../emulator/emulator.c **** 			}
1111:../../emulator/emulator.c **** 			break;
1112:../../emulator/emulator.c **** 		}
1113:../../emulator/emulator.c **** 
1114:../../emulator/emulator.c **** 		case OPCODE_JAL:
1115:../../emulator/emulator.c **** 		{
1116:../../emulator/emulator.c **** 			i32 offset;
1117:../../emulator/emulator.c **** 			u32 imm;
1118:../../emulator/emulator.c **** 			u8 rd;
1119:../../emulator/emulator.c **** 
1120:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
1121:../../emulator/emulator.c **** 
1122:../../emulator/emulator.c **** 			imm = ((instr & 0x80000000) >> 12) |
1123:../../emulator/emulator.c **** 					(instr & 0xFF000) |
1124:../../emulator/emulator.c **** 					((instr & 0x100000) >> 9) |
1125:../../emulator/emulator.c **** 					((instr & 0x7FE00000) >> 20);
1126:../../emulator/emulator.c **** 
1127:../../emulator/emulator.c **** 			offset = sext(20, imm);
1128:../../emulator/emulator.c **** 			EMU_LOG(PSTR("jal r%"PRIu8", pc%+"PRIi32), rd, offset);
1129:../../emulator/emulator.c **** 			emu->Registers[rd] = emu->PC + 4;
1130:../../emulator/emulator.c **** 			emu->PC += offset;
1131:../../emulator/emulator.c **** 			return 0;
1132:../../emulator/emulator.c **** 		}
1133:../../emulator/emulator.c **** 
1134:../../emulator/emulator.c **** 		case OPCODE_JALR:
1135:../../emulator/emulator.c **** 		{
1136:../../emulator/emulator.c **** 			u8 rd, rs1;
1137:../../emulator/emulator.c **** 			i32 offset;
1138:../../emulator/emulator.c **** 			u32 imm;
1139:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
1140:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
1141:../../emulator/emulator.c **** 			imm = (instr >> 20) & ~1;
1142:../../emulator/emulator.c **** 
1143:../../emulator/emulator.c **** 			offset = sext(12, imm);
1144:../../emulator/emulator.c **** 
1145:../../emulator/emulator.c **** 			EMU_LOG(PSTR("jalr r%"PRIu8", r%"PRIu8"%+"PRIi32),
1146:../../emulator/emulator.c **** 				rd, rs1, offset);
1147:../../emulator/emulator.c **** 
1148:../../emulator/emulator.c **** 			emu->Registers[rd] = emu->PC + 4;
1149:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
1150:../../emulator/emulator.c **** 			return 0;
1151:../../emulator/emulator.c **** 		}
1152:../../emulator/emulator.c **** 
1153:../../emulator/emulator.c **** 		default:
1154:../../emulator/emulator.c **** 			EMU_LOG(PSTR("INVALID"));
1155:../../emulator/emulator.c **** 			return 1;
1156:../../emulator/emulator.c **** 	}
1157:../../emulator/emulator.c **** 
1158:../../emulator/emulator.c **** 	emu->PC += 4;
 2633               		.loc 6 1158 2 is_stmt 1 view .LVU547
 2634               		.loc 6 1158 10 is_stmt 0 view .LVU548
 2635 0880 F701      		movw r30,r14
 2636 0882 8489      		ldd r24,Z+20
 2637 0884 9589      		ldd r25,Z+21
 2638 0886 A689      		ldd r26,Z+22
 2639 0888 B789      		ldd r27,Z+23
 2640 088a 0496      		adiw r24,4
 2641 088c A11D      		adc r26,__zero_reg__
 2642 088e B11D      		adc r27,__zero_reg__
1159:../../emulator/emulator.c **** 	return 0;
 2643               		.loc 6 1159 2 is_stmt 1 view .LVU549
 2644               		.loc 6 1159 9 is_stmt 0 view .LVU550
 2645 0890 00C0      		rjmp .L161
 2646               	.LVL194:
 2647               	.L101:
 2648               	.LBB289:
 687:../../emulator/emulator.c **** 			u32 imm;
 2649               		.loc 6 687 4 is_stmt 1 view .LVU551
 688:../../emulator/emulator.c **** 			u8 rd, rs1, funct3;
 2650               		.loc 6 688 4 view .LVU552
 689:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 2651               		.loc 6 689 4 view .LVU553
 690:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 2652               		.loc 6 690 4 view .LVU554
 690:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 2653               		.loc 6 690 16 is_stmt 0 view .LVU555
 2654 0892 D901      		movw r26,r18
 2655 0894 C801      		movw r24,r16
 2656               	.LVL195:
 690:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 2657               		.loc 6 690 16 view .LVU556
 2658 0896 47E0      		ldi r20,7
 2659               		1:
 2660 0898 B695      		lsr r27
 2661 089a A795      		ror r26
 2662 089c 9795      		ror r25
 2663 089e 8795      		ror r24
 2664 08a0 4A95      		dec r20
 2665 08a2 01F4      		brne 1b
 690:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 2666               		.loc 6 690 7 view .LVU557
 2667 08a4 F82F      		mov r31,r24
 2668 08a6 FF71      		andi r31,lo8(31)
 2669 08a8 BF2E      		mov r11,r31
 2670               	.LVL196:
 691:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 2671               		.loc 6 691 4 is_stmt 1 view .LVU558
 691:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 2672               		.loc 6 691 20 is_stmt 0 view .LVU559
 2673 08aa D901      		movw r26,r18
 2674 08ac C801      		movw r24,r16
 2675 08ae 5CE0      		ldi r21,12
 2676               		1:
 2677 08b0 B695      		lsr r27
 2678 08b2 A795      		ror r26
 2679 08b4 9795      		ror r25
 2680 08b6 8795      		ror r24
 2681 08b8 5A95      		dec r21
 2682 08ba 01F4      		brne 1b
 691:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 2683               		.loc 6 691 11 view .LVU560
 2684 08bc 8770      		andi r24,lo8(7)
 2685               	.LVL197:
 692:../../emulator/emulator.c **** 			imm = (instr >> 20);
 2686               		.loc 6 692 4 is_stmt 1 view .LVU561
 692:../../emulator/emulator.c **** 			imm = (instr >> 20);
 2687               		.loc 6 692 17 is_stmt 0 view .LVU562
 2688 08be B901      		movw r22,r18
 2689 08c0 A801      		movw r20,r16
 2690 08c2 EFE0      		ldi r30,15
 2691               		1:
 2692 08c4 7695      		lsr r23
 2693 08c6 6795      		ror r22
 2694 08c8 5795      		ror r21
 2695 08ca 4795      		ror r20
 2696 08cc EA95      		dec r30
 2697 08ce 01F4      		brne 1b
 692:../../emulator/emulator.c **** 			imm = (instr >> 20);
 2698               		.loc 6 692 8 view .LVU563
 2699 08d0 A42F      		mov r26,r20
 2700 08d2 AF71      		andi r26,lo8(31)
 2701               	.LVL198:
 693:../../emulator/emulator.c **** 			offset = sext(12, imm);
 2702               		.loc 6 693 4 is_stmt 1 view .LVU564
 694:../../emulator/emulator.c **** 			switch(funct3)
 2703               		.loc 6 694 4 view .LVU565
 2704               	.LBB251:
 2705               	.LBI251:
 105:../../emulator/emulator.c **** {
 2706               		.loc 6 105 19 view .LVU566
 2707               	.LBB252:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 2708               		.loc 6 107 2 view .LVU567
 108:../../emulator/emulator.c **** }
 2709               		.loc 6 108 2 view .LVU568
 2710               	.LBE252:
 2711               	.LBE251:
 693:../../emulator/emulator.c **** 			offset = sext(12, imm);
 2712               		.loc 6 693 8 is_stmt 0 view .LVU569
 2713 08d4 F4E1      		ldi r31,20
 2714               		1:
 2715 08d6 3695      		lsr r19
 2716 08d8 2795      		ror r18
 2717 08da 1795      		ror r17
 2718 08dc 0795      		ror r16
 2719 08de FA95      		dec r31
 2720 08e0 01F4      		brne 1b
 2721               	.LVL199:
 2722               	.LBB254:
 2723               	.LBB253:
 108:../../emulator/emulator.c **** }
 2724               		.loc 6 108 16 view .LVU570
 2725 08e2 48E0      		ldi r20,8
 2726 08e4 1427      		eor r17,r20
 2727               	.LVL200:
 108:../../emulator/emulator.c **** }
 2728               		.loc 6 108 21 view .LVU571
 2729 08e6 2801      		movw r4,r16
 2730 08e8 3901      		movw r6,r18
 2731 08ea 58E0      		ldi r21,8
 2732 08ec 551A      		sub r5,r21
 2733 08ee 6108      		sbc r6,__zero_reg__
 2734 08f0 7108      		sbc r7,__zero_reg__
 2735               	.LVL201:
 108:../../emulator/emulator.c **** }
 2736               		.loc 6 108 21 view .LVU572
 2737               	.LBE253:
 2738               	.LBE254:
 695:../../emulator/emulator.c **** 			{
 2739               		.loc 6 695 4 is_stmt 1 view .LVU573
 2740 08f2 8230      		cpi r24,lo8(2)
 2741 08f4 01F4      		brne .+2
 2742 08f6 00C0      		rjmp .L103
 2743 08f8 00F0      		brlo .+2
 2744 08fa 00C0      		rjmp .L104
 2745 08fc 4091 0000 		lds r20,_tasks
 2746 0900 5091 0000 		lds r21,_tasks+1
 2747 0904 6091 0000 		lds r22,_tasks+2
 2748 0908 7091 0000 		lds r23,_tasks+3
 2749 090c EA2F      		mov r30,r26
 2750 090e F0E0      		ldi r31,0
 2751 0910 8111      		cpse r24,__zero_reg__
 2752 0912 00C0      		rjmp .L163
 699:../../emulator/emulator.c **** 					if(memory_lb(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 2753               		.loc 6 699 71 view .LVU574
 700:../../emulator/emulator.c **** 					{
 2754               		.loc 6 700 6 view .LVU575
 2755               	.LVL202:
 2756               	.LBB255:
 2757               	.LBI255:
 253:../../emulator/emulator.c **** {
 2758               		.loc 6 253 11 view .LVU576
 2759               	.LBB256:
 255:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 2760               		.loc 6 255 2 view .LVU577
 256:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 2761               		.loc 6 256 2 view .LVU578
 256:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 2762               		.loc 6 256 7 is_stmt 0 view .LVU579
 2763 0914 440D      		add r20,r4
 2764 0916 551D      		adc r21,r5
 2765 0918 661D      		adc r22,r6
 2766 091a 771D      		adc r23,r7
 2767               	.LBE256:
 2768               	.LBE255:
 700:../../emulator/emulator.c **** 					{
 2769               		.loc 6 700 33 view .LVU580
 2770 091c 3696      		adiw r30,6
 2771 091e EE0F      		lsl r30
 2772 0920 FF1F      		rol r31
 2773 0922 EE0F      		lsl r30
 2774 0924 FF1F      		rol r31
 2775 0926 EE0D      		add r30,r14
 2776 0928 FF1D      		adc r31,r15
 2777               	.LBB261:
 2778               	.LBB259:
 256:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 2779               		.loc 6 256 7 view .LVU581
 2780 092a 8081      		ld r24,Z
 2781 092c 9181      		ldd r25,Z+1
 2782 092e A281      		ldd r26,Z+2
 2783 0930 B381      		ldd r27,Z+3
 2784               	.LVL203:
 256:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 2785               		.loc 6 256 7 view .LVU582
 2786 0932 8A01      		movw r16,r20
 2787 0934 9B01      		movw r18,r22
 2788               	.LVL204:
 256:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 2789               		.loc 6 256 7 view .LVU583
 2790 0936 080F      		add r16,r24
 2791 0938 191F      		adc r17,r25
 2792 093a 2A1F      		adc r18,r26
 2793 093c 3B1F      		adc r19,r27
 2794 093e 0987      		std Y+9,r16
 2795 0940 1A87      		std Y+10,r17
 2796 0942 2B87      		std Y+11,r18
 2797 0944 3C87      		std Y+12,r19
 2798               	.LVL205:
 257:../../emulator/emulator.c **** 	{
 2799               		.loc 6 257 2 is_stmt 1 view .LVU584
 257:../../emulator/emulator.c **** 	{
 2800               		.loc 6 257 5 is_stmt 0 view .LVU585
 2801 0946 21E0      		ldi r18,lo8(1)
 2802 0948 30E0      		ldi r19,0
 2803 094a 40E0      		ldi r20,0
 2804 094c 50E0      		ldi r21,0
 2805 094e 6985      		ldd r22,Y+9
 2806 0950 7A85      		ldd r23,Y+10
 2807 0952 8B85      		ldd r24,Y+11
 2808 0954 9C85      		ldd r25,Y+12
 2809 0956 0E94 0000 		call _memory_check_bounds
 2810               	.LVL206:
 257:../../emulator/emulator.c **** 	{
 2811               		.loc 6 257 4 view .LVU586
 2812 095a 8111      		cpse r24,__zero_reg__
 2813 095c 00C0      		rjmp .L89
 262:../../emulator/emulator.c **** 	*out = (i32)value8;
 2814               		.loc 6 262 2 is_stmt 1 view .LVU587
 2815               	.LVL207:
 2816               	.LBB257:
 2817               	.LBI257:
  24:platform.c    **** {
 2818               		.loc 1 24 6 view .LVU588
 2819               	.LBB258:
  26:platform.c    **** }
 2820               		.loc 1 26 2 view .LVU589
 2821 095e 21E0      		ldi r18,lo8(1)
 2822 0960 30E0      		ldi r19,0
 2823 0962 AE01      		movw r20,r28
 2824 0964 4F5F      		subi r20,-1
 2825 0966 5F4F      		sbci r21,-1
 2826 0968 6985      		ldd r22,Y+9
 2827 096a 7A85      		ldd r23,Y+10
 2828 096c 8B85      		ldd r24,Y+11
 2829 096e 9C85      		ldd r25,Y+12
 2830 0970 0E94 0000 		call xmem_read
 2831               	.LVL208:
  26:platform.c    **** }
 2832               		.loc 1 26 2 is_stmt 0 view .LVU590
 2833               	.LBE258:
 2834               	.LBE257:
 263:../../emulator/emulator.c **** 	return 0;
 2835               		.loc 6 263 2 is_stmt 1 view .LVU591
 2836               	.LBE259:
 2837               	.LBE261:
 700:../../emulator/emulator.c **** 					{
 2838               		.loc 6 700 64 is_stmt 0 view .LVU592
 2839 0974 EB2D      		mov r30,r11
 2840 0976 F0E0      		ldi r31,0
 2841               	.LBB262:
 2842               	.LBB260:
 263:../../emulator/emulator.c **** 	return 0;
 2843               		.loc 6 263 7 view .LVU593
 2844 0978 3696      		adiw r30,6
 2845 097a EE0F      		lsl r30
 2846 097c FF1F      		rol r31
 2847 097e EE0F      		lsl r30
 2848 0980 FF1F      		rol r31
 2849 0982 EE0D      		add r30,r14
 2850 0984 FF1D      		adc r31,r15
 263:../../emulator/emulator.c **** 	return 0;
 2851               		.loc 6 263 9 view .LVU594
 2852 0986 8981      		ldd r24,Y+1
 2853 0988 082E      		mov __tmp_reg__,r24
 2854 098a 000C      		lsl r0
 2855 098c 990B      		sbc r25,r25
 2856 098e AA0B      		sbc r26,r26
 2857 0990 BB0B      		sbc r27,r27
 2858               	.LVL209:
 2859               	.L167:
 263:../../emulator/emulator.c **** 	return 0;
 2860               		.loc 6 263 9 view .LVU595
 2861               	.LBE260:
 2862               	.LBE262:
 2863               	.LBE289:
 2864               	.LBB290:
1013:../../emulator/emulator.c **** 						break;
 2865               		.loc 6 1013 26 view .LVU596
 2866 0992 8083      		st Z,r24
 2867 0994 9183      		std Z+1,r25
 2868 0996 A283      		std Z+2,r26
 2869 0998 B383      		std Z+3,r27
1014:../../emulator/emulator.c **** 				}
 2870               		.loc 6 1014 7 is_stmt 1 view .LVU597
 2871 099a 00C0      		rjmp .L110
 2872               	.LVL210:
 2873               	.L104:
1014:../../emulator/emulator.c **** 				}
 2874               		.loc 6 1014 7 is_stmt 0 view .LVU598
 2875               	.LBE290:
 2876               	.LBB291:
 2877 099c 8430      		cpi r24,lo8(4)
 2878 099e 01F4      		brne .+2
 2879 09a0 00C0      		rjmp .L107
 2880 09a2 8530      		cpi r24,lo8(5)
 2881 09a4 01F4      		brne .+2
 2882 09a6 00C0      		rjmp .L108
 2883               	.LVL211:
 2884               	.L89:
1014:../../emulator/emulator.c **** 				}
 2885               		.loc 6 1014 7 view .LVU599
 2886               	.LBE291:
 660:../../emulator/emulator.c **** 	}
 2887               		.loc 6 660 10 view .LVU600
 2888 09a8 DD24      		clr r13
 2889 09aa D394      		inc r13
 2890 09ac 00C0      		rjmp .L87
 2891               	.LVL212:
 2892               	.L163:
 2893               	.LBB292:
 708:../../emulator/emulator.c **** 					if(memory_lh(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 2894               		.loc 6 708 71 is_stmt 1 view .LVU601
 709:../../emulator/emulator.c **** 					{
 2895               		.loc 6 709 6 view .LVU602
 2896               	.LBB263:
 2897               	.LBI263:
 274:../../emulator/emulator.c **** {
 2898               		.loc 6 274 11 view .LVU603
 2899               	.LBB264:
 276:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 2900               		.loc 6 276 2 view .LVU604
 277:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 2901               		.loc 6 277 2 view .LVU605
 277:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 2902               		.loc 6 277 7 is_stmt 0 view .LVU606
 2903 09ae 440D      		add r20,r4
 2904 09b0 551D      		adc r21,r5
 2905 09b2 661D      		adc r22,r6
 2906 09b4 771D      		adc r23,r7
 2907               	.LBE264:
 2908               	.LBE263:
 709:../../emulator/emulator.c **** 					{
 2909               		.loc 6 709 33 view .LVU607
 2910 09b6 3696      		adiw r30,6
 2911 09b8 EE0F      		lsl r30
 2912 09ba FF1F      		rol r31
 2913 09bc EE0F      		lsl r30
 2914 09be FF1F      		rol r31
 2915 09c0 EE0D      		add r30,r14
 2916 09c2 FF1D      		adc r31,r15
 2917               	.LBB269:
 2918               	.LBB267:
 277:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 2919               		.loc 6 277 7 view .LVU608
 2920 09c4 8081      		ld r24,Z
 2921 09c6 9181      		ldd r25,Z+1
 2922 09c8 A281      		ldd r26,Z+2
 2923 09ca B381      		ldd r27,Z+3
 2924               	.LVL213:
 277:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 2925               		.loc 6 277 7 view .LVU609
 2926 09cc 8A01      		movw r16,r20
 2927 09ce 9B01      		movw r18,r22
 2928               	.LVL214:
 277:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 2929               		.loc 6 277 7 view .LVU610
 2930 09d0 080F      		add r16,r24
 2931 09d2 191F      		adc r17,r25
 2932 09d4 2A1F      		adc r18,r26
 2933 09d6 3B1F      		adc r19,r27
 2934 09d8 0987      		std Y+9,r16
 2935 09da 1A87      		std Y+10,r17
 2936 09dc 2B87      		std Y+11,r18
 2937 09de 3C87      		std Y+12,r19
 2938               	.LVL215:
 278:../../emulator/emulator.c **** 	{
 2939               		.loc 6 278 2 is_stmt 1 view .LVU611
 278:../../emulator/emulator.c **** 	{
 2940               		.loc 6 278 5 is_stmt 0 view .LVU612
 2941 09e0 22E0      		ldi r18,lo8(2)
 2942 09e2 30E0      		ldi r19,0
 2943 09e4 40E0      		ldi r20,0
 2944 09e6 50E0      		ldi r21,0
 2945 09e8 6985      		ldd r22,Y+9
 2946 09ea 7A85      		ldd r23,Y+10
 2947 09ec 8B85      		ldd r24,Y+11
 2948 09ee 9C85      		ldd r25,Y+12
 2949 09f0 0E94 0000 		call _memory_check_bounds
 2950               	.LVL216:
 278:../../emulator/emulator.c **** 	{
 2951               		.loc 6 278 4 view .LVU613
 2952 09f4 8111      		cpse r24,__zero_reg__
 2953 09f6 00C0      		rjmp .L89
 283:../../emulator/emulator.c **** 	*out = (i32)value16;
 2954               		.loc 6 283 2 is_stmt 1 view .LVU614
 2955               	.LVL217:
 2956               	.LBB265:
 2957               	.LBI265:
  24:platform.c    **** {
 2958               		.loc 1 24 6 view .LVU615
 2959               	.LBB266:
  26:platform.c    **** }
 2960               		.loc 1 26 2 view .LVU616
 2961 09f8 22E0      		ldi r18,lo8(2)
 2962 09fa 30E0      		ldi r19,0
 2963 09fc AE01      		movw r20,r28
 2964 09fe 4F5F      		subi r20,-1
 2965 0a00 5F4F      		sbci r21,-1
 2966 0a02 6985      		ldd r22,Y+9
 2967 0a04 7A85      		ldd r23,Y+10
 2968 0a06 8B85      		ldd r24,Y+11
 2969 0a08 9C85      		ldd r25,Y+12
 2970 0a0a 0E94 0000 		call xmem_read
 2971               	.LVL218:
  26:platform.c    **** }
 2972               		.loc 1 26 2 is_stmt 0 view .LVU617
 2973               	.LBE266:
 2974               	.LBE265:
 284:../../emulator/emulator.c **** 	return 0;
 2975               		.loc 6 284 2 is_stmt 1 view .LVU618
 2976               	.LBE267:
 2977               	.LBE269:
 709:../../emulator/emulator.c **** 					{
 2978               		.loc 6 709 64 is_stmt 0 view .LVU619
 2979 0a0e EB2D      		mov r30,r11
 2980 0a10 F0E0      		ldi r31,0
 2981               	.LBB270:
 2982               	.LBB268:
 284:../../emulator/emulator.c **** 	return 0;
 2983               		.loc 6 284 7 view .LVU620
 2984 0a12 3696      		adiw r30,6
 2985 0a14 EE0F      		lsl r30
 2986 0a16 FF1F      		rol r31
 2987 0a18 EE0F      		lsl r30
 2988 0a1a FF1F      		rol r31
 2989 0a1c EE0D      		add r30,r14
 2990 0a1e FF1D      		adc r31,r15
 284:../../emulator/emulator.c **** 	return 0;
 2991               		.loc 6 284 9 view .LVU621
 2992 0a20 8981      		ldd r24,Y+1
 2993 0a22 9A81      		ldd r25,Y+2
 2994 0a24 092E      		mov __tmp_reg__,r25
 2995 0a26 000C      		lsl r0
 2996 0a28 AA0B      		sbc r26,r26
 2997 0a2a BB0B      		sbc r27,r27
 2998 0a2c 00C0      		rjmp .L167
 2999               	.LVL219:
 3000               	.L103:
 284:../../emulator/emulator.c **** 	return 0;
 3001               		.loc 6 284 9 view .LVU622
 3002               	.LBE268:
 3003               	.LBE270:
 717:../../emulator/emulator.c **** 					if(memory_lw(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 3004               		.loc 6 717 71 is_stmt 1 view .LVU623
 718:../../emulator/emulator.c **** 					{
 3005               		.loc 6 718 6 view .LVU624
 718:../../emulator/emulator.c **** 					{
 3006               		.loc 6 718 9 is_stmt 0 view .LVU625
 3007 0a2e 46E0      		ldi r20,lo8(6)
 3008 0a30 4B0D      		add r20,r11
 3009 0a32 14E0      		ldi r17,lo8(4)
 3010 0a34 419F      		mul r20,r17
 3011 0a36 A001      		movw r20,r0
 3012 0a38 1124      		clr __zero_reg__
 3013 0a3a 4E0D      		add r20,r14
 3014 0a3c 5F1D      		adc r21,r15
 718:../../emulator/emulator.c **** 					{
 3015               		.loc 6 718 33 view .LVU626
 3016 0a3e B0E0      		ldi r27,0
 3017 0a40 1696      		adiw r26,6
 3018 0a42 AA0F      		lsl r26
 3019 0a44 BB1F      		rol r27
 3020 0a46 AA0F      		lsl r26
 3021 0a48 BB1F      		rol r27
 3022 0a4a AE0D      		add r26,r14
 3023 0a4c BF1D      		adc r27,r15
 718:../../emulator/emulator.c **** 					{
 3024               		.loc 6 718 9 view .LVU627
 3025 0a4e 8D91      		ld r24,X+
 3026 0a50 9D91      		ld r25,X+
 3027 0a52 0D90      		ld __tmp_reg__,X+
 3028 0a54 BC91      		ld r27,X
 3029 0a56 A02D      		mov r26,__tmp_reg__
 3030               	.LVL220:
 718:../../emulator/emulator.c **** 					{
 3031               		.loc 6 718 9 view .LVU628
 3032 0a58 9301      		movw r18,r6
 3033 0a5a 8201      		movw r16,r4
 3034               	.LVL221:
 718:../../emulator/emulator.c **** 					{
 3035               		.loc 6 718 9 view .LVU629
 3036 0a5c 080F      		add r16,r24
 3037 0a5e 191F      		adc r17,r25
 3038 0a60 2A1F      		adc r18,r26
 3039 0a62 3B1F      		adc r19,r27
 3040 0a64 0987      		std Y+9,r16
 3041 0a66 1A87      		std Y+10,r17
 3042 0a68 2B87      		std Y+11,r18
 3043 0a6a 3C87      		std Y+12,r19
 3044 0a6c C901      		movw r24,r18
 3045 0a6e B801      		movw r22,r16
 3046 0a70 0E94 0000 		call memory_lw
 3047               	.LVL222:
 718:../../emulator/emulator.c **** 					{
 3048               		.loc 6 718 9 view .LVU630
 3049 0a74 00C0      		rjmp .L174
 3050               	.LVL223:
 3051               	.L107:
 726:../../emulator/emulator.c **** 					if(memory_lbu(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 3052               		.loc 6 726 72 is_stmt 1 view .LVU631
 727:../../emulator/emulator.c **** 					{
 3053               		.loc 6 727 6 view .LVU632
 3054               	.LBB271:
 3055               	.LBI271:
 316:../../emulator/emulator.c **** {
 3056               		.loc 6 316 11 view .LVU633
 3057               	.LBB272:
 318:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 3058               		.loc 6 318 2 view .LVU634
 319:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3059               		.loc 6 319 2 view .LVU635
 319:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3060               		.loc 6 319 7 is_stmt 0 view .LVU636
 3061 0a76 4091 0000 		lds r20,_tasks
 3062 0a7a 5091 0000 		lds r21,_tasks+1
 3063 0a7e 6091 0000 		lds r22,_tasks+2
 3064 0a82 7091 0000 		lds r23,_tasks+3
 3065 0a86 440D      		add r20,r4
 3066 0a88 551D      		adc r21,r5
 3067 0a8a 661D      		adc r22,r6
 3068 0a8c 771D      		adc r23,r7
 3069               	.LBE272:
 3070               	.LBE271:
 727:../../emulator/emulator.c **** 					{
 3071               		.loc 6 727 34 view .LVU637
 3072 0a8e EA2F      		mov r30,r26
 3073 0a90 F0E0      		ldi r31,0
 3074 0a92 3696      		adiw r30,6
 3075 0a94 EE0F      		lsl r30
 3076 0a96 FF1F      		rol r31
 3077 0a98 EE0F      		lsl r30
 3078 0a9a FF1F      		rol r31
 3079 0a9c EE0D      		add r30,r14
 3080 0a9e FF1D      		adc r31,r15
 3081               	.LBB277:
 3082               	.LBB275:
 319:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3083               		.loc 6 319 7 view .LVU638
 3084 0aa0 8081      		ld r24,Z
 3085 0aa2 9181      		ldd r25,Z+1
 3086 0aa4 A281      		ldd r26,Z+2
 3087 0aa6 B381      		ldd r27,Z+3
 3088               	.LVL224:
 319:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3089               		.loc 6 319 7 view .LVU639
 3090 0aa8 8A01      		movw r16,r20
 3091 0aaa 9B01      		movw r18,r22
 3092               	.LVL225:
 319:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3093               		.loc 6 319 7 view .LVU640
 3094 0aac 080F      		add r16,r24
 3095 0aae 191F      		adc r17,r25
 3096 0ab0 2A1F      		adc r18,r26
 3097 0ab2 3B1F      		adc r19,r27
 3098 0ab4 0987      		std Y+9,r16
 3099 0ab6 1A87      		std Y+10,r17
 3100 0ab8 2B87      		std Y+11,r18
 3101 0aba 3C87      		std Y+12,r19
 3102               	.LVL226:
 320:../../emulator/emulator.c **** 	{
 3103               		.loc 6 320 2 is_stmt 1 view .LVU641
 320:../../emulator/emulator.c **** 	{
 3104               		.loc 6 320 5 is_stmt 0 view .LVU642
 3105 0abc 21E0      		ldi r18,lo8(1)
 3106 0abe 30E0      		ldi r19,0
 3107 0ac0 40E0      		ldi r20,0
 3108 0ac2 50E0      		ldi r21,0
 3109 0ac4 6985      		ldd r22,Y+9
 3110 0ac6 7A85      		ldd r23,Y+10
 3111 0ac8 8B85      		ldd r24,Y+11
 3112 0aca 9C85      		ldd r25,Y+12
 3113 0acc 0E94 0000 		call _memory_check_bounds
 3114               	.LVL227:
 320:../../emulator/emulator.c **** 	{
 3115               		.loc 6 320 4 view .LVU643
 3116 0ad0 8111      		cpse r24,__zero_reg__
 3117 0ad2 00C0      		rjmp .L89
 325:../../emulator/emulator.c **** 	*out = value8;
 3118               		.loc 6 325 2 is_stmt 1 view .LVU644
 3119               	.LVL228:
 3120               	.LBB273:
 3121               	.LBI273:
  24:platform.c    **** {
 3122               		.loc 1 24 6 view .LVU645
 3123               	.LBB274:
  26:platform.c    **** }
 3124               		.loc 1 26 2 view .LVU646
 3125 0ad4 21E0      		ldi r18,lo8(1)
 3126 0ad6 30E0      		ldi r19,0
 3127 0ad8 AE01      		movw r20,r28
 3128 0ada 4F5F      		subi r20,-1
 3129 0adc 5F4F      		sbci r21,-1
 3130 0ade 6985      		ldd r22,Y+9
 3131 0ae0 7A85      		ldd r23,Y+10
 3132 0ae2 8B85      		ldd r24,Y+11
 3133 0ae4 9C85      		ldd r25,Y+12
 3134 0ae6 0E94 0000 		call xmem_read
 3135               	.LVL229:
  26:platform.c    **** }
 3136               		.loc 1 26 2 is_stmt 0 view .LVU647
 3137               	.LBE274:
 3138               	.LBE273:
 326:../../emulator/emulator.c **** 	return 0;
 3139               		.loc 6 326 2 is_stmt 1 view .LVU648
 3140               	.LBE275:
 3141               	.LBE277:
 727:../../emulator/emulator.c **** 					{
 3142               		.loc 6 727 65 is_stmt 0 view .LVU649
 3143 0aea EB2D      		mov r30,r11
 3144 0aec F0E0      		ldi r31,0
 3145               	.LBB278:
 3146               	.LBB276:
 326:../../emulator/emulator.c **** 	return 0;
 3147               		.loc 6 326 7 view .LVU650
 3148 0aee 3696      		adiw r30,6
 3149 0af0 EE0F      		lsl r30
 3150 0af2 FF1F      		rol r31
 3151 0af4 EE0F      		lsl r30
 3152 0af6 FF1F      		rol r31
 3153 0af8 EE0D      		add r30,r14
 3154 0afa FF1D      		adc r31,r15
 3155 0afc 8981      		ldd r24,Y+1
 3156 0afe 90E0      		ldi r25,0
 3157               	.LVL230:
 3158               	.L176:
 326:../../emulator/emulator.c **** 	return 0;
 3159               		.loc 6 326 7 view .LVU651
 3160               	.LBE276:
 3161               	.LBE278:
 3162               	.LBB279:
 3163               	.LBB280:
 347:../../emulator/emulator.c **** 	return 0;
 3164               		.loc 6 347 7 view .LVU652
 3165 0b00 A0E0      		ldi r26,0
 3166 0b02 B0E0      		ldi r27,0
 3167 0b04 00C0      		rjmp .L167
 3168               	.LVL231:
 3169               	.L108:
 347:../../emulator/emulator.c **** 	return 0;
 3170               		.loc 6 347 7 view .LVU653
 3171               	.LBE280:
 3172               	.LBE279:
 735:../../emulator/emulator.c **** 					if(memory_lhu(emu->Registers[rs1] + offset, &emu->Registers[rd]))
 3173               		.loc 6 735 72 is_stmt 1 view .LVU654
 736:../../emulator/emulator.c **** 					{
 3174               		.loc 6 736 6 view .LVU655
 3175               	.LBB286:
 3176               	.LBI279:
 337:../../emulator/emulator.c **** {
 3177               		.loc 6 337 11 view .LVU656
 3178               	.LBB283:
 339:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 3179               		.loc 6 339 2 view .LVU657
 340:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 3180               		.loc 6 340 2 view .LVU658
 340:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 3181               		.loc 6 340 7 is_stmt 0 view .LVU659
 3182 0b06 4091 0000 		lds r20,_tasks
 3183 0b0a 5091 0000 		lds r21,_tasks+1
 3184 0b0e 6091 0000 		lds r22,_tasks+2
 3185 0b12 7091 0000 		lds r23,_tasks+3
 3186 0b16 440D      		add r20,r4
 3187 0b18 551D      		adc r21,r5
 3188 0b1a 661D      		adc r22,r6
 3189 0b1c 771D      		adc r23,r7
 3190               	.LBE283:
 3191               	.LBE286:
 736:../../emulator/emulator.c **** 					{
 3192               		.loc 6 736 34 view .LVU660
 3193 0b1e EA2F      		mov r30,r26
 3194 0b20 F0E0      		ldi r31,0
 3195 0b22 3696      		adiw r30,6
 3196 0b24 EE0F      		lsl r30
 3197 0b26 FF1F      		rol r31
 3198 0b28 EE0F      		lsl r30
 3199 0b2a FF1F      		rol r31
 3200 0b2c EE0D      		add r30,r14
 3201 0b2e FF1D      		adc r31,r15
 3202               	.LBB287:
 3203               	.LBB284:
 340:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 3204               		.loc 6 340 7 view .LVU661
 3205 0b30 8081      		ld r24,Z
 3206 0b32 9181      		ldd r25,Z+1
 3207 0b34 A281      		ldd r26,Z+2
 3208 0b36 B381      		ldd r27,Z+3
 3209               	.LVL232:
 340:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 3210               		.loc 6 340 7 view .LVU662
 3211 0b38 8A01      		movw r16,r20
 3212 0b3a 9B01      		movw r18,r22
 3213               	.LVL233:
 340:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 3214               		.loc 6 340 7 view .LVU663
 3215 0b3c 080F      		add r16,r24
 3216 0b3e 191F      		adc r17,r25
 3217 0b40 2A1F      		adc r18,r26
 3218 0b42 3B1F      		adc r19,r27
 3219 0b44 0987      		std Y+9,r16
 3220 0b46 1A87      		std Y+10,r17
 3221 0b48 2B87      		std Y+11,r18
 3222 0b4a 3C87      		std Y+12,r19
 3223               	.LVL234:
 341:../../emulator/emulator.c **** 	{
 3224               		.loc 6 341 2 is_stmt 1 view .LVU664
 341:../../emulator/emulator.c **** 	{
 3225               		.loc 6 341 5 is_stmt 0 view .LVU665
 3226 0b4c 22E0      		ldi r18,lo8(2)
 3227 0b4e 30E0      		ldi r19,0
 3228 0b50 40E0      		ldi r20,0
 3229 0b52 50E0      		ldi r21,0
 3230 0b54 6985      		ldd r22,Y+9
 3231 0b56 7A85      		ldd r23,Y+10
 3232 0b58 8B85      		ldd r24,Y+11
 3233 0b5a 9C85      		ldd r25,Y+12
 3234 0b5c 0E94 0000 		call _memory_check_bounds
 3235               	.LVL235:
 341:../../emulator/emulator.c **** 	{
 3236               		.loc 6 341 4 view .LVU666
 3237 0b60 8111      		cpse r24,__zero_reg__
 3238 0b62 00C0      		rjmp .L89
 346:../../emulator/emulator.c **** 	*out = value16;
 3239               		.loc 6 346 2 is_stmt 1 view .LVU667
 3240               	.LVL236:
 3241               	.LBB281:
 3242               	.LBI281:
  24:platform.c    **** {
 3243               		.loc 1 24 6 view .LVU668
 3244               	.LBB282:
  26:platform.c    **** }
 3245               		.loc 1 26 2 view .LVU669
 3246 0b64 22E0      		ldi r18,lo8(2)
 3247 0b66 30E0      		ldi r19,0
 3248 0b68 AE01      		movw r20,r28
 3249 0b6a 4F5F      		subi r20,-1
 3250 0b6c 5F4F      		sbci r21,-1
 3251 0b6e 6985      		ldd r22,Y+9
 3252 0b70 7A85      		ldd r23,Y+10
 3253 0b72 8B85      		ldd r24,Y+11
 3254 0b74 9C85      		ldd r25,Y+12
 3255 0b76 0E94 0000 		call xmem_read
 3256               	.LVL237:
  26:platform.c    **** }
 3257               		.loc 1 26 2 is_stmt 0 view .LVU670
 3258               	.LBE282:
 3259               	.LBE281:
 347:../../emulator/emulator.c **** 	return 0;
 3260               		.loc 6 347 2 is_stmt 1 view .LVU671
 3261               	.LBE284:
 3262               	.LBE287:
 736:../../emulator/emulator.c **** 					{
 3263               		.loc 6 736 65 is_stmt 0 view .LVU672
 3264 0b7a EB2D      		mov r30,r11
 3265 0b7c F0E0      		ldi r31,0
 3266               	.LBB288:
 3267               	.LBB285:
 347:../../emulator/emulator.c **** 	return 0;
 3268               		.loc 6 347 7 view .LVU673
 3269 0b7e 3696      		adiw r30,6
 3270 0b80 EE0F      		lsl r30
 3271 0b82 FF1F      		rol r31
 3272 0b84 EE0F      		lsl r30
 3273 0b86 FF1F      		rol r31
 3274 0b88 EE0D      		add r30,r14
 3275 0b8a FF1D      		adc r31,r15
 3276 0b8c 8981      		ldd r24,Y+1
 3277 0b8e 9A81      		ldd r25,Y+2
 3278 0b90 00C0      		rjmp .L176
 3279               	.LVL238:
 3280               	.L100:
 347:../../emulator/emulator.c **** 	return 0;
 3281               		.loc 6 347 7 view .LVU674
 3282               	.LBE285:
 3283               	.LBE288:
 3284               	.LBE292:
 3285               	.LBB293:
 751:../../emulator/emulator.c **** 			u32 imm;
 3286               		.loc 6 751 4 is_stmt 1 view .LVU675
 752:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 3287               		.loc 6 752 4 view .LVU676
 753:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 3288               		.loc 6 753 4 view .LVU677
 754:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3289               		.loc 6 754 4 view .LVU678
 755:../../emulator/emulator.c **** 			imm = (instr >> 20);
 3290               		.loc 6 755 4 view .LVU679
 756:../../emulator/emulator.c **** 			switch(funct3)
 3291               		.loc 6 756 4 view .LVU680
 756:../../emulator/emulator.c **** 			switch(funct3)
 3292               		.loc 6 756 8 is_stmt 0 view .LVU681
 3293 0b92 D901      		movw r26,r18
 3294 0b94 C801      		movw r24,r16
 3295               	.LVL239:
 756:../../emulator/emulator.c **** 			switch(funct3)
 3296               		.loc 6 756 8 view .LVU682
 3297 0b96 44E1      		ldi r20,20
 3298               		1:
 3299 0b98 B695      		lsr r27
 3300 0b9a A795      		ror r26
 3301 0b9c 9795      		ror r25
 3302 0b9e 8795      		ror r24
 3303 0ba0 4A95      		dec r20
 3304 0ba2 01F4      		brne 1b
 3305               	.LVL240:
 757:../../emulator/emulator.c **** 			{
 3306               		.loc 6 757 4 is_stmt 1 view .LVU683
 755:../../emulator/emulator.c **** 			imm = (instr >> 20);
 3307               		.loc 6 755 17 is_stmt 0 view .LVU684
 3308 0ba4 B901      		movw r22,r18
 3309 0ba6 A801      		movw r20,r16
 3310 0ba8 EFE0      		ldi r30,15
 3311               		1:
 3312 0baa 7695      		lsr r23
 3313 0bac 6795      		ror r22
 3314 0bae 5795      		ror r21
 3315 0bb0 4795      		ror r20
 3316 0bb2 EA95      		dec r30
 3317 0bb4 01F4      		brne 1b
 755:../../emulator/emulator.c **** 			imm = (instr >> 20);
 3318               		.loc 6 755 8 view .LVU685
 3319 0bb6 4F71      		andi r20,lo8(31)
 763:../../emulator/emulator.c **** 					break;
 3320               		.loc 6 763 41 view .LVU686
 3321 0bb8 E42F      		mov r30,r20
 3322 0bba F0E0      		ldi r31,0
 3323               	.LBE293:
 3324               	.LBB314:
 700:../../emulator/emulator.c **** 					{
 3325               		.loc 6 700 33 view .LVU687
 3326 0bbc 3696      		adiw r30,6
 3327 0bbe EE0F      		lsl r30
 3328 0bc0 FF1F      		rol r31
 3329 0bc2 EE0F      		lsl r30
 3330 0bc4 FF1F      		rol r31
 3331 0bc6 EE0D      		add r30,r14
 3332 0bc8 FF1D      		adc r31,r15
 3333 0bca 8080      		ld r8,Z
 3334 0bcc 9180      		ldd r9,Z+1
 3335 0bce A280      		ldd r10,Z+2
 3336 0bd0 B380      		ldd r11,Z+3
 3337               	.LBE314:
 3338               	.LBB315:
 753:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 3339               		.loc 6 753 16 view .LVU688
 3340 0bd2 B901      		movw r22,r18
 3341 0bd4 A801      		movw r20,r16
 3342 0bd6 E7E0      		ldi r30,7
 3343               		1:
 3344 0bd8 7695      		lsr r23
 3345 0bda 6795      		ror r22
 3346 0bdc 5795      		ror r21
 3347 0bde 4795      		ror r20
 3348 0be0 EA95      		dec r30
 3349 0be2 01F4      		brne 1b
 753:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 3350               		.loc 6 753 7 view .LVU689
 3351 0be4 4F71      		andi r20,lo8(31)
 763:../../emulator/emulator.c **** 					break;
 3352               		.loc 6 763 20 view .LVU690
 3353 0be6 E42F      		mov r30,r20
 3354 0be8 F0E0      		ldi r31,0
 754:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3355               		.loc 6 754 20 view .LVU691
 3356 0bea B901      		movw r22,r18
 3357 0bec A801      		movw r20,r16
 3358 0bee 032E      		mov r0,r19
 3359 0bf0 3CE0      		ldi r19,12
 3360               		1:
 3361 0bf2 7695      		lsr r23
 3362 0bf4 6795      		ror r22
 3363 0bf6 5795      		ror r21
 3364 0bf8 4795      		ror r20
 3365 0bfa 3A95      		dec r19
 3366 0bfc 01F4      		brne 1b
 3367 0bfe 302D      		mov r19,r0
 754:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3368               		.loc 6 754 11 view .LVU692
 3369 0c00 4770      		andi r20,lo8(7)
 3370 0c02 6FEF      		ldi r22,lo8(-1)
 3371 0c04 640F      		add r22,r20
 3372 0c06 AF01      		movw r20,r30
 3373 0c08 4A5F      		subi r20,-6
 3374 0c0a 5F4F      		sbci r21,-1
 3375 0c0c 6730      		cpi r22,lo8(7)
 3376 0c0e 00F4      		brsh .L114
 3377 0c10 E62F      		mov r30,r22
 3378 0c12 F0E0      		ldi r31,0
 3379 0c14 E050      		subi r30,lo8(-(gs(.L116)))
 3380 0c16 F040      		sbci r31,hi8(-(gs(.L116)))
 3381 0c18 0C94 0000 		jmp __tablejump2__
 3382               		.section	.jumptables.gcc.emulator_next,"a",@progbits
 3383               		.p2align	1
 3384               	.L116:
 3385 003a 0000      		.word gs(.L122)
 3386 003c 0000      		.word gs(.L121)
 3387 003e 0000      		.word gs(.L120)
 3388 0040 0000      		.word gs(.L119)
 3389 0042 0000      		.word gs(.L118)
 3390 0044 0000      		.word gs(.L117)
 3391 0046 0000      		.word gs(.L115)
 3392               		.text
 3393               	.L114:
 761:../../emulator/emulator.c **** 					EMU_LOG(PSTR("addi r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3394               		.loc 6 761 6 is_stmt 1 view .LVU693
 3395               	.LVL241:
 3396               	.LBB294:
 3397               	.LBI294:
 105:../../emulator/emulator.c **** {
 3398               		.loc 6 105 19 view .LVU694
 3399               	.LBB295:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3400               		.loc 6 107 2 view .LVU695
 108:../../emulator/emulator.c **** }
 3401               		.loc 6 108 2 view .LVU696
 108:../../emulator/emulator.c **** }
 3402               		.loc 6 108 2 is_stmt 0 view .LVU697
 3403               	.LBE295:
 3404               	.LBE294:
 762:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] + imm;
 3405               		.loc 6 762 71 is_stmt 1 view .LVU698
 763:../../emulator/emulator.c **** 					break;
 3406               		.loc 6 763 6 view .LVU699
 763:../../emulator/emulator.c **** 					break;
 3407               		.loc 6 763 25 is_stmt 0 view .LVU700
 3408 0c1c FA01      		movw r30,r20
 3409 0c1e EE0F      		lsl r30
 3410 0c20 FF1F      		rol r31
 3411 0c22 EE0F      		lsl r30
 3412 0c24 FF1F      		rol r31
 3413               	.LVL242:
 763:../../emulator/emulator.c **** 					break;
 3414               		.loc 6 763 25 view .LVU701
 3415 0c26 EE0D      		add r30,r14
 3416 0c28 FF1D      		adc r31,r15
 3417               	.LBB297:
 3418               	.LBB296:
 108:../../emulator/emulator.c **** }
 3419               		.loc 6 108 16 view .LVU702
 3420 0c2a 18E0      		ldi r17,8
 3421 0c2c 9127      		eor r25,r17
 3422               	.LVL243:
 108:../../emulator/emulator.c **** }
 3423               		.loc 6 108 21 view .LVU703
 3424 0c2e 9850      		subi r25,8
 3425 0c30 A109      		sbc r26,__zero_reg__
 3426 0c32 B109      		sbc r27,__zero_reg__
 3427               	.LVL244:
 3428               	.L150:
 108:../../emulator/emulator.c **** }
 3429               		.loc 6 108 21 view .LVU704
 3430               	.LBE296:
 3431               	.LBE297:
 3432               	.LBE315:
 3433               	.LBB316:
 960:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] + emu->Registers[rs2];
 3434               		.loc 6 960 72 is_stmt 1 view .LVU705
 961:../../emulator/emulator.c **** 						}
 3435               		.loc 6 961 8 view .LVU706
 961:../../emulator/emulator.c **** 						}
 3436               		.loc 6 961 49 is_stmt 0 view .LVU707
 3437 0c34 880D      		add r24,r8
 3438 0c36 991D      		adc r25,r9
 3439 0c38 AA1D      		adc r26,r10
 3440 0c3a BB1D      		adc r27,r11
 3441 0c3c 00C0      		rjmp .L167
 3442               	.LVL245:
 3443               	.L122:
 961:../../emulator/emulator.c **** 						}
 3444               		.loc 6 961 49 view .LVU708
 3445               	.LBE316:
 3446               	.LBB317:
 768:../../emulator/emulator.c **** 					EMU_LOG(PSTR("slli r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3447               		.loc 6 768 6 is_stmt 1 view .LVU709
 769:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] << imm;
 3448               		.loc 6 769 71 view .LVU710
 770:../../emulator/emulator.c **** 					break;
 3449               		.loc 6 770 6 view .LVU711
 770:../../emulator/emulator.c **** 					break;
 3450               		.loc 6 770 25 is_stmt 0 view .LVU712
 3451 0c3e FA01      		movw r30,r20
 3452 0c40 EE0F      		lsl r30
 3453 0c42 FF1F      		rol r31
 3454 0c44 EE0F      		lsl r30
 3455 0c46 FF1F      		rol r31
 3456 0c48 EE0D      		add r30,r14
 3457 0c4a FF1D      		adc r31,r15
 768:../../emulator/emulator.c **** 					EMU_LOG(PSTR("slli r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3458               		.loc 6 768 10 view .LVU713
 3459 0c4c 8F71      		andi r24,31
 3460 0c4e 9927      		clr r25
 3461 0c50 AA27      		clr r26
 3462 0c52 BB27      		clr r27
 3463               	.LVL246:
 770:../../emulator/emulator.c **** 					break;
 3464               		.loc 6 770 47 view .LVU714
 3465 0c54 00C0      		rjmp 2f
 3466               		1:
 3467 0c56 880C      		lsl r8
 3468 0c58 991C      		rol r9
 3469 0c5a AA1C      		rol r10
 3470 0c5c BB1C      		rol r11
 3471               		2:
 3472 0c5e 8A95      		dec r24
 3473 0c60 02F4      		brpl 1b
 3474               	.LVL247:
 3475               	.L168:
 799:../../emulator/emulator.c **** 					}
 3476               		.loc 6 799 26 view .LVU715
 3477 0c62 8082      		st Z,r8
 3478 0c64 9182      		std Z+1,r9
 3479 0c66 A282      		std Z+2,r10
 3480 0c68 B382      		std Z+3,r11
 3481 0c6a 00C0      		rjmp .L110
 3482               	.LVL248:
 3483               	.L121:
 775:../../emulator/emulator.c **** 					EMU_LOG(PSTR("slti r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3484               		.loc 6 775 6 is_stmt 1 view .LVU716
 3485               	.LBB298:
 3486               	.LBI298:
 105:../../emulator/emulator.c **** {
 3487               		.loc 6 105 19 view .LVU717
 3488               	.LBB299:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3489               		.loc 6 107 2 view .LVU718
 108:../../emulator/emulator.c **** }
 3490               		.loc 6 108 2 view .LVU719
 108:../../emulator/emulator.c **** }
 3491               		.loc 6 108 2 is_stmt 0 view .LVU720
 3492               	.LBE299:
 3493               	.LBE298:
 776:../../emulator/emulator.c **** 					emu->Registers[rd] = (i32)emu->Registers[rs1] < (i32)imm;
 3494               		.loc 6 776 71 is_stmt 1 view .LVU721
 777:../../emulator/emulator.c **** 					break;
 3495               		.loc 6 777 6 view .LVU722
 777:../../emulator/emulator.c **** 					break;
 3496               		.loc 6 777 25 is_stmt 0 view .LVU723
 3497 0c6c FA01      		movw r30,r20
 3498 0c6e EE0F      		lsl r30
 3499 0c70 FF1F      		rol r31
 3500 0c72 EE0F      		lsl r30
 3501 0c74 FF1F      		rol r31
 3502 0c76 EE0D      		add r30,r14
 3503 0c78 FF1D      		adc r31,r15
 3504               	.LBB301:
 3505               	.LBB300:
 108:../../emulator/emulator.c **** }
 3506               		.loc 6 108 16 view .LVU724
 3507 0c7a 28E0      		ldi r18,8
 3508 0c7c 9227      		eor r25,r18
 3509               	.LVL249:
 108:../../emulator/emulator.c **** }
 3510               		.loc 6 108 21 view .LVU725
 3511 0c7e 9850      		subi r25,8
 3512 0c80 A109      		sbc r26,__zero_reg__
 3513 0c82 B109      		sbc r27,__zero_reg__
 3514               	.LVL250:
 108:../../emulator/emulator.c **** }
 3515               		.loc 6 108 21 view .LVU726
 3516               	.LBE300:
 3517               	.LBE301:
 777:../../emulator/emulator.c **** 					break;
 3518               		.loc 6 777 52 view .LVU727
 3519 0c84 41E0      		ldi r20,lo8(1)
 3520 0c86 50E0      		ldi r21,0
 3521 0c88 60E0      		ldi r22,0
 3522 0c8a 70E0      		ldi r23,0
 3523 0c8c 8816      		cp r8,r24
 3524 0c8e 9906      		cpc r9,r25
 3525 0c90 AA06      		cpc r10,r26
 3526 0c92 BB06      		cpc r11,r27
 3527 0c94 04F0      		brlt .L124
 3528               	.L175:
 783:../../emulator/emulator.c **** 					break;
 3529               		.loc 6 783 47 view .LVU728
 3530 0c96 40E0      		ldi r20,0
 3531 0c98 50E0      		ldi r21,0
 3532 0c9a BA01      		movw r22,r20
 3533 0c9c 00C0      		rjmp .L124
 3534               	.L120:
 782:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] < imm;
 3535               		.loc 6 782 72 is_stmt 1 view .LVU729
 783:../../emulator/emulator.c **** 					break;
 3536               		.loc 6 783 6 view .LVU730
 783:../../emulator/emulator.c **** 					break;
 3537               		.loc 6 783 25 is_stmt 0 view .LVU731
 3538 0c9e FA01      		movw r30,r20
 3539 0ca0 EE0F      		lsl r30
 3540 0ca2 FF1F      		rol r31
 3541 0ca4 EE0F      		lsl r30
 3542 0ca6 FF1F      		rol r31
 3543 0ca8 EE0D      		add r30,r14
 3544 0caa FF1D      		adc r31,r15
 783:../../emulator/emulator.c **** 					break;
 3545               		.loc 6 783 47 view .LVU732
 3546 0cac 41E0      		ldi r20,lo8(1)
 3547 0cae 50E0      		ldi r21,0
 3548 0cb0 60E0      		ldi r22,0
 3549 0cb2 70E0      		ldi r23,0
 3550 0cb4 8816      		cp r8,r24
 3551 0cb6 9906      		cpc r9,r25
 3552 0cb8 AA06      		cpc r10,r26
 3553 0cba BB06      		cpc r11,r27
 3554 0cbc 00F4      		brsh .L175
 3555               	.L124:
 783:../../emulator/emulator.c **** 					break;
 3556               		.loc 6 783 25 view .LVU733
 3557 0cbe 4083      		st Z,r20
 3558 0cc0 5183      		std Z+1,r21
 3559 0cc2 6283      		std Z+2,r22
 3560 0cc4 7383      		std Z+3,r23
 784:../../emulator/emulator.c **** 
 3561               		.loc 6 784 6 is_stmt 1 view .LVU734
 3562 0cc6 00C0      		rjmp .L110
 3563               	.L119:
 788:../../emulator/emulator.c **** 					EMU_LOG(PSTR("xori r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 3564               		.loc 6 788 6 view .LVU735
 3565               	.LVL251:
 3566               	.LBB302:
 3567               	.LBI302:
 105:../../emulator/emulator.c **** {
 3568               		.loc 6 105 19 view .LVU736
 3569               	.LBB303:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3570               		.loc 6 107 2 view .LVU737
 108:../../emulator/emulator.c **** }
 3571               		.loc 6 108 2 view .LVU738
 108:../../emulator/emulator.c **** }
 3572               		.loc 6 108 2 is_stmt 0 view .LVU739
 3573               	.LBE303:
 3574               	.LBE302:
 789:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] ^ imm;
 3575               		.loc 6 789 75 is_stmt 1 view .LVU740
 790:../../emulator/emulator.c **** 					break;
 3576               		.loc 6 790 6 view .LVU741
 790:../../emulator/emulator.c **** 					break;
 3577               		.loc 6 790 25 is_stmt 0 view .LVU742
 3578 0cc8 FA01      		movw r30,r20
 3579 0cca EE0F      		lsl r30
 3580 0ccc FF1F      		rol r31
 3581 0cce EE0F      		lsl r30
 3582 0cd0 FF1F      		rol r31
 3583 0cd2 EE0D      		add r30,r14
 3584 0cd4 FF1D      		adc r31,r15
 3585               	.LBB305:
 3586               	.LBB304:
 108:../../emulator/emulator.c **** }
 3587               		.loc 6 108 16 view .LVU743
 3588 0cd6 38E0      		ldi r19,8
 3589 0cd8 9327      		eor r25,r19
 3590               	.LVL252:
 108:../../emulator/emulator.c **** }
 3591               		.loc 6 108 21 view .LVU744
 3592 0cda 9850      		subi r25,8
 3593 0cdc A109      		sbc r26,__zero_reg__
 3594 0cde B109      		sbc r27,__zero_reg__
 3595               	.LVL253:
 3596               	.L177:
 108:../../emulator/emulator.c **** }
 3597               		.loc 6 108 21 view .LVU745
 3598               	.LBE304:
 3599               	.LBE305:
 3600               	.LBE317:
 3601               	.LBB318:
 986:../../emulator/emulator.c **** 						break;
 3602               		.loc 6 986 48 view .LVU746
 3603 0ce0 8825      		eor r24,r8
 3604 0ce2 9925      		eor r25,r9
 3605 0ce4 AA25      		eor r26,r10
 3606 0ce6 BB25      		eor r27,r11
 3607 0ce8 00C0      		rjmp .L167
 3608               	.LVL254:
 3609               	.L118:
 986:../../emulator/emulator.c **** 						break;
 3610               		.loc 6 986 48 view .LVU747
 3611               	.LBE318:
 3612               	.LBB319:
 794:../../emulator/emulator.c **** 					{
 3613               		.loc 6 794 6 is_stmt 1 view .LVU748
 794:../../emulator/emulator.c **** 					{
 3614               		.loc 6 794 13 is_stmt 0 view .LVU749
 3615 0cea E9E1      		ldi r30,25
 3616               		1:
 3617 0cec 3695      		lsr r19
 3618 0cee 2795      		ror r18
 3619 0cf0 1795      		ror r17
 3620 0cf2 0795      		ror r16
 3621 0cf4 EA95      		dec r30
 3622 0cf6 01F4      		brne 1b
 3623               	.LVL255:
 799:../../emulator/emulator.c **** 					}
 3624               		.loc 6 799 26 view .LVU750
 3625 0cf8 FA01      		movw r30,r20
 3626 0cfa EE0F      		lsl r30
 3627 0cfc FF1F      		rol r31
 3628 0cfe EE0F      		lsl r30
 3629 0d00 FF1F      		rol r31
 3630 0d02 EE0D      		add r30,r14
 3631 0d04 FF1D      		adc r31,r15
 794:../../emulator/emulator.c **** 					{
 3632               		.loc 6 794 8 view .LVU751
 3633 0d06 012B      		or r16,r17
 3634 0d08 022B      		or r16,r18
 3635 0d0a 032B      		or r16,r19
 3636 0d0c 01F0      		breq .L125
 797:../../emulator/emulator.c **** 						EMU_LOG(PSTR("srai r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3637               		.loc 6 797 7 is_stmt 1 view .LVU752
 3638               	.LVL256:
 798:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] >> imm;
 3639               		.loc 6 798 72 view .LVU753
 799:../../emulator/emulator.c **** 					}
 3640               		.loc 6 799 7 view .LVU754
 797:../../emulator/emulator.c **** 						EMU_LOG(PSTR("srai r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3641               		.loc 6 797 11 is_stmt 0 view .LVU755
 3642 0d0e 8F71      		andi r24,31
 3643 0d10 9927      		clr r25
 3644 0d12 AA27      		clr r26
 3645 0d14 BB27      		clr r27
 3646               	.LVL257:
 799:../../emulator/emulator.c **** 					}
 3647               		.loc 6 799 53 view .LVU756
 3648 0d16 00C0      		rjmp 2f
 3649               		1:
 3650 0d18 B594      		asr r11
 3651 0d1a A794      		ror r10
 3652 0d1c 9794      		ror r9
 3653 0d1e 8794      		ror r8
 3654               		2:
 3655 0d20 8A95      		dec r24
 3656 0d22 02F4      		brpl 1b
 3657 0d24 00C0      		rjmp .L168
 3658               	.L125:
 804:../../emulator/emulator.c **** 						EMU_LOG(PSTR("srli r%"PRIu8", r%"PRIu8", %"PRIi32), rd, rs1, imm);
 3659               		.loc 6 804 7 is_stmt 1 view .LVU757
 3660               	.LVL258:
 805:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] >> imm;
 3661               		.loc 6 805 72 view .LVU758
 806:../../emulator/emulator.c **** 					}
 3662               		.loc 6 806 7 view .LVU759
 806:../../emulator/emulator.c **** 					}
 3663               		.loc 6 806 48 is_stmt 0 view .LVU760
 3664 0d26 00C0      		rjmp 2f
 3665               		1:
 3666 0d28 B694      		lsr r11
 3667 0d2a A794      		ror r10
 3668 0d2c 9794      		ror r9
 3669 0d2e 8794      		ror r8
 3670               		2:
 3671 0d30 8A95      		dec r24
 3672 0d32 02F4      		brpl 1b
 3673 0d34 00C0      		rjmp .L168
 3674               	.LVL259:
 3675               	.L117:
 812:../../emulator/emulator.c **** 					EMU_LOG(PSTR("ori r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 3676               		.loc 6 812 6 is_stmt 1 view .LVU761
 3677               	.LBB306:
 3678               	.LBI306:
 105:../../emulator/emulator.c **** {
 3679               		.loc 6 105 19 view .LVU762
 3680               	.LBB307:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3681               		.loc 6 107 2 view .LVU763
 108:../../emulator/emulator.c **** }
 3682               		.loc 6 108 2 view .LVU764
 108:../../emulator/emulator.c **** }
 3683               		.loc 6 108 2 is_stmt 0 view .LVU765
 3684               	.LBE307:
 3685               	.LBE306:
 813:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] | imm;
 3686               		.loc 6 813 74 is_stmt 1 view .LVU766
 814:../../emulator/emulator.c **** 					break;
 3687               		.loc 6 814 6 view .LVU767
 814:../../emulator/emulator.c **** 					break;
 3688               		.loc 6 814 25 is_stmt 0 view .LVU768
 3689 0d36 FA01      		movw r30,r20
 3690 0d38 EE0F      		lsl r30
 3691 0d3a FF1F      		rol r31
 3692 0d3c EE0F      		lsl r30
 3693 0d3e FF1F      		rol r31
 3694 0d40 EE0D      		add r30,r14
 3695 0d42 FF1D      		adc r31,r15
 3696               	.LBB309:
 3697               	.LBB308:
 108:../../emulator/emulator.c **** }
 3698               		.loc 6 108 16 view .LVU769
 3699 0d44 48E0      		ldi r20,8
 3700 0d46 9427      		eor r25,r20
 3701               	.LVL260:
 108:../../emulator/emulator.c **** }
 3702               		.loc 6 108 21 view .LVU770
 3703 0d48 9850      		subi r25,8
 3704 0d4a A109      		sbc r26,__zero_reg__
 3705 0d4c B109      		sbc r27,__zero_reg__
 3706               	.LVL261:
 3707               	.L179:
 108:../../emulator/emulator.c **** }
 3708               		.loc 6 108 21 view .LVU771
 3709               	.LBE308:
 3710               	.LBE309:
 3711               	.LBE319:
 3712               	.LBB320:
1007:../../emulator/emulator.c **** 						break;
 3713               		.loc 6 1007 48 view .LVU772
 3714 0d4e 8829      		or r24,r8
 3715 0d50 9929      		or r25,r9
 3716 0d52 AA29      		or r26,r10
 3717 0d54 BB29      		or r27,r11
 3718 0d56 00C0      		rjmp .L167
 3719               	.LVL262:
 3720               	.L115:
1007:../../emulator/emulator.c **** 						break;
 3721               		.loc 6 1007 48 view .LVU773
 3722               	.LBE320:
 3723               	.LBB321:
 819:../../emulator/emulator.c **** 					EMU_LOG(PSTR("andi r%"PRIu8", r%"PRIu8", 0x%08"PRIx32), rd, rs1, imm);
 3724               		.loc 6 819 6 is_stmt 1 view .LVU774
 3725               	.LBB310:
 3726               	.LBI310:
 105:../../emulator/emulator.c **** {
 3727               		.loc 6 105 19 view .LVU775
 3728               	.LBB311:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3729               		.loc 6 107 2 view .LVU776
 108:../../emulator/emulator.c **** }
 3730               		.loc 6 108 2 view .LVU777
 108:../../emulator/emulator.c **** }
 3731               		.loc 6 108 2 is_stmt 0 view .LVU778
 3732               	.LBE311:
 3733               	.LBE310:
 820:../../emulator/emulator.c **** 					emu->Registers[rd] = emu->Registers[rs1] & imm;
 3734               		.loc 6 820 75 is_stmt 1 view .LVU779
 821:../../emulator/emulator.c **** 					break;
 3735               		.loc 6 821 6 view .LVU780
 821:../../emulator/emulator.c **** 					break;
 3736               		.loc 6 821 25 is_stmt 0 view .LVU781
 3737 0d58 FA01      		movw r30,r20
 3738 0d5a EE0F      		lsl r30
 3739 0d5c FF1F      		rol r31
 3740 0d5e EE0F      		lsl r30
 3741 0d60 FF1F      		rol r31
 3742 0d62 EE0D      		add r30,r14
 3743 0d64 FF1D      		adc r31,r15
 3744               	.LBB313:
 3745               	.LBB312:
 108:../../emulator/emulator.c **** }
 3746               		.loc 6 108 16 view .LVU782
 3747 0d66 58E0      		ldi r21,8
 3748 0d68 9527      		eor r25,r21
 3749               	.LVL263:
 108:../../emulator/emulator.c **** }
 3750               		.loc 6 108 21 view .LVU783
 3751 0d6a 9850      		subi r25,8
 3752 0d6c A109      		sbc r26,__zero_reg__
 3753 0d6e B109      		sbc r27,__zero_reg__
 3754               	.LVL264:
 3755               	.L169:
 108:../../emulator/emulator.c **** }
 3756               		.loc 6 108 21 view .LVU784
 3757               	.LBE312:
 3758               	.LBE313:
 3759               	.LBE321:
 3760               	.LBB322:
1013:../../emulator/emulator.c **** 						break;
 3761               		.loc 6 1013 48 view .LVU785
 3762 0d70 8821      		and r24,r8
 3763 0d72 9921      		and r25,r9
 3764 0d74 AA21      		and r26,r10
 3765 0d76 BB21      		and r27,r11
 3766 0d78 00C0      		rjmp .L167
 3767               	.LVL265:
 3768               	.L99:
1013:../../emulator/emulator.c **** 						break;
 3769               		.loc 6 1013 48 view .LVU786
 3770               	.LBE322:
 3771               	.LBB323:
 829:../../emulator/emulator.c **** 			u32 imm;
 3772               		.loc 6 829 4 is_stmt 1 view .LVU787
 830:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 3773               		.loc 6 830 4 view .LVU788
 831:../../emulator/emulator.c **** 			imm = (instr >> 12);
 3774               		.loc 6 831 4 view .LVU789
 832:../../emulator/emulator.c **** 			EMU_LOG(PSTR("auipc r%"PRIu8", 0x%08"PRIx32), rd, imm);
 3775               		.loc 6 832 4 view .LVU790
 833:../../emulator/emulator.c **** 			emu->Registers[rd] = emu->PC + (imm << 12);
 3776               		.loc 6 833 58 view .LVU791
 834:../../emulator/emulator.c **** 			break;
 3777               		.loc 6 834 4 view .LVU792
 831:../../emulator/emulator.c **** 			imm = (instr >> 12);
 3778               		.loc 6 831 16 is_stmt 0 view .LVU793
 3779 0d7a D901      		movw r26,r18
 3780 0d7c C801      		movw r24,r16
 3781               	.LVL266:
 831:../../emulator/emulator.c **** 			imm = (instr >> 12);
 3782               		.loc 6 831 16 view .LVU794
 3783 0d7e 47E0      		ldi r20,7
 3784               		1:
 3785 0d80 B695      		lsr r27
 3786 0d82 A795      		ror r26
 3787 0d84 9795      		ror r25
 3788 0d86 8795      		ror r24
 3789 0d88 4A95      		dec r20
 3790 0d8a 01F4      		brne 1b
 831:../../emulator/emulator.c **** 			imm = (instr >> 12);
 3791               		.loc 6 831 7 view .LVU795
 3792 0d8c 8F71      		andi r24,lo8(31)
 834:../../emulator/emulator.c **** 			break;
 3793               		.loc 6 834 18 view .LVU796
 3794 0d8e E82F      		mov r30,r24
 3795 0d90 F0E0      		ldi r31,0
 834:../../emulator/emulator.c **** 			break;
 3796               		.loc 6 834 23 view .LVU797
 3797 0d92 3696      		adiw r30,6
 3798 0d94 EE0F      		lsl r30
 3799 0d96 FF1F      		rol r31
 3800 0d98 EE0F      		lsl r30
 3801 0d9a FF1F      		rol r31
 3802 0d9c AF01      		movw r20,r30
 3803 0d9e 4E0D      		add r20,r14
 3804 0da0 5F1D      		adc r21,r15
 834:../../emulator/emulator.c **** 			break;
 3805               		.loc 6 834 40 view .LVU798
 3806 0da2 D901      		movw r26,r18
 3807 0da4 C801      		movw r24,r16
 3808 0da6 8827      		clr r24
 3809 0da8 907F      		andi r25,240
 834:../../emulator/emulator.c **** 			break;
 3810               		.loc 6 834 33 view .LVU799
 3811 0daa F701      		movw r30,r14
 3812 0dac 0489      		ldd r16,Z+20
 3813 0dae 1589      		ldd r17,Z+21
 3814 0db0 2689      		ldd r18,Z+22
 3815 0db2 3789      		ldd r19,Z+23
 3816               	.LVL267:
 834:../../emulator/emulator.c **** 			break;
 3817               		.loc 6 834 33 view .LVU800
 3818 0db4 800F      		add r24,r16
 3819 0db6 911F      		adc r25,r17
 3820 0db8 A21F      		adc r26,r18
 3821 0dba B31F      		adc r27,r19
 834:../../emulator/emulator.c **** 			break;
 3822               		.loc 6 834 23 view .LVU801
 3823 0dbc FA01      		movw r30,r20
 3824 0dbe 00C0      		rjmp .L167
 3825               	.LVL268:
 3826               	.L98:
 834:../../emulator/emulator.c **** 			break;
 3827               		.loc 6 834 23 view .LVU802
 3828               	.LBE323:
 3829               	.LBB324:
 840:../../emulator/emulator.c **** 			u32 imm;
 3830               		.loc 6 840 4 is_stmt 1 view .LVU803
 841:../../emulator/emulator.c **** 			u8 rs1, rs2, funct3;
 3831               		.loc 6 841 4 view .LVU804
 842:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 3832               		.loc 6 842 4 view .LVU805
 843:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3833               		.loc 6 843 4 view .LVU806
 843:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3834               		.loc 6 843 20 is_stmt 0 view .LVU807
 3835 0dc0 D901      		movw r26,r18
 3836 0dc2 C801      		movw r24,r16
 3837               	.LVL269:
 843:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3838               		.loc 6 843 20 view .LVU808
 3839 0dc4 ECE0      		ldi r30,12
 3840               		1:
 3841 0dc6 B695      		lsr r27
 3842 0dc8 A795      		ror r26
 3843 0dca 9795      		ror r25
 3844 0dcc 8795      		ror r24
 3845 0dce EA95      		dec r30
 3846 0dd0 01F4      		brne 1b
 843:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 3847               		.loc 6 843 11 view .LVU809
 3848 0dd2 8770      		andi r24,lo8(7)
 3849               	.LVL270:
 844:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 3850               		.loc 6 844 4 is_stmt 1 view .LVU810
 844:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 3851               		.loc 6 844 17 is_stmt 0 view .LVU811
 3852 0dd4 B901      		movw r22,r18
 3853 0dd6 A801      		movw r20,r16
 3854 0dd8 FFE0      		ldi r31,15
 3855               		1:
 3856 0dda 7695      		lsr r23
 3857 0ddc 6795      		ror r22
 3858 0dde 5795      		ror r21
 3859 0de0 4795      		ror r20
 3860 0de2 FA95      		dec r31
 3861 0de4 01F4      		brne 1b
 844:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 3862               		.loc 6 844 8 view .LVU812
 3863 0de6 A42F      		mov r26,r20
 3864 0de8 AF71      		andi r26,lo8(31)
 3865               	.LVL271:
 845:../../emulator/emulator.c **** 			imm = ((instr & 0xF80) >> 7) | ((instr & 0xFE000000) >> 20);
 3866               		.loc 6 845 4 is_stmt 1 view .LVU813
 845:../../emulator/emulator.c **** 			imm = ((instr & 0xF80) >> 7) | ((instr & 0xFE000000) >> 20);
 3867               		.loc 6 845 17 is_stmt 0 view .LVU814
 3868 0dea B901      		movw r22,r18
 3869 0dec A801      		movw r20,r16
 3870 0dee B4E1      		ldi r27,20
 3871               		1:
 3872 0df0 7695      		lsr r23
 3873 0df2 6795      		ror r22
 3874 0df4 5795      		ror r21
 3875 0df6 4795      		ror r20
 3876 0df8 BA95      		dec r27
 3877 0dfa 01F4      		brne 1b
 845:../../emulator/emulator.c **** 			imm = ((instr & 0xF80) >> 7) | ((instr & 0xFE000000) >> 20);
 3878               		.loc 6 845 8 view .LVU815
 3879 0dfc E42F      		mov r30,r20
 3880 0dfe EF71      		andi r30,lo8(31)
 3881               	.LVL272:
 846:../../emulator/emulator.c **** 			offset = sext(12, imm);
 3882               		.loc 6 846 4 is_stmt 1 view .LVU816
 847:../../emulator/emulator.c **** 			switch(funct3)
 3883               		.loc 6 847 4 view .LVU817
 3884               	.LBB325:
 3885               	.LBI325:
 105:../../emulator/emulator.c **** {
 3886               		.loc 6 105 19 view .LVU818
 3887               	.LBB326:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 3888               		.loc 6 107 2 view .LVU819
 108:../../emulator/emulator.c **** }
 3889               		.loc 6 108 2 view .LVU820
 3890               	.LBE326:
 3891               	.LBE325:
 846:../../emulator/emulator.c **** 			offset = sext(12, imm);
 3892               		.loc 6 846 27 is_stmt 0 view .LVU821
 3893 0e00 97E0      		ldi r25,7
 3894               		1:
 3895 0e02 3695      		lsr r19
 3896 0e04 2795      		ror r18
 3897 0e06 1795      		ror r17
 3898 0e08 0795      		ror r16
 3899 0e0a 9A95      		dec r25
 3900 0e0c 01F4      		brne 1b
 3901               	.LVL273:
 846:../../emulator/emulator.c **** 			offset = sext(12, imm);
 3902               		.loc 6 846 27 view .LVU822
 3903 0e0e 0F71      		andi r16,31
 3904 0e10 1127      		clr r17
 3905 0e12 2227      		clr r18
 3906 0e14 3327      		clr r19
 846:../../emulator/emulator.c **** 			offset = sext(12, imm);
 3907               		.loc 6 846 57 view .LVU823
 3908 0e16 407E      		andi r20,224
 3909 0e18 5F70      		andi r21,15
 3910 0e1a 6627      		clr r22
 3911 0e1c 7727      		clr r23
 3912               	.LVL274:
 846:../../emulator/emulator.c **** 			offset = sext(12, imm);
 3913               		.loc 6 846 8 view .LVU824
 3914 0e1e 042B      		or r16,r20
 3915 0e20 152B      		or r17,r21
 3916 0e22 262B      		or r18,r22
 3917 0e24 372B      		or r19,r23
 3918               	.LVL275:
 3919               	.LBB328:
 3920               	.LBB327:
 108:../../emulator/emulator.c **** }
 3921               		.loc 6 108 16 view .LVU825
 3922 0e26 F8E0      		ldi r31,8
 3923 0e28 1F27      		eor r17,r31
 3924               	.LVL276:
 108:../../emulator/emulator.c **** }
 3925               		.loc 6 108 21 view .LVU826
 3926 0e2a 1850      		subi r17,8
 3927 0e2c 2109      		sbc r18,__zero_reg__
 3928 0e2e 3109      		sbc r19,__zero_reg__
 3929               	.LVL277:
 108:../../emulator/emulator.c **** }
 3930               		.loc 6 108 21 view .LVU827
 3931               	.LBE327:
 3932               	.LBE328:
 848:../../emulator/emulator.c **** 			{
 3933               		.loc 6 848 4 is_stmt 1 view .LVU828
 3934 0e30 8130      		cpi r24,lo8(1)
 3935 0e32 01F4      		brne .+2
 3936 0e34 00C0      		rjmp .L126
 3937 0e36 8230      		cpi r24,lo8(2)
 3938 0e38 01F4      		brne .+2
 3939 0e3a 00C0      		rjmp .L127
 3940 0e3c 8111      		cpse r24,__zero_reg__
 3941 0e3e 00C0      		rjmp .L89
 852:../../emulator/emulator.c **** 					if(memory_sb(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 3942               		.loc 6 852 72 view .LVU829
 853:../../emulator/emulator.c **** 					{
 3943               		.loc 6 853 6 view .LVU830
 853:../../emulator/emulator.c **** 					{
 3944               		.loc 6 853 33 is_stmt 0 view .LVU831
 3945 0e40 B0E0      		ldi r27,0
 3946 0e42 1696      		adiw r26,6
 3947               	.LVL278:
 853:../../emulator/emulator.c **** 					{
 3948               		.loc 6 853 33 view .LVU832
 3949 0e44 AA0F      		lsl r26
 3950 0e46 BB1F      		rol r27
 3951 0e48 AA0F      		lsl r26
 3952 0e4a BB1F      		rol r27
 3953 0e4c AE0D      		add r26,r14
 3954 0e4e BF1D      		adc r27,r15
 853:../../emulator/emulator.c **** 					{
 3955               		.loc 6 853 9 view .LVU833
 3956 0e50 8D91      		ld r24,X+
 3957 0e52 9D91      		ld r25,X+
 3958 0e54 0D90      		ld __tmp_reg__,X+
 3959 0e56 BC91      		ld r27,X
 3960 0e58 A02D      		mov r26,__tmp_reg__
 3961               	.LVL279:
 853:../../emulator/emulator.c **** 					{
 3962               		.loc 6 853 9 view .LVU834
 3963 0e5a 800F      		add r24,r16
 3964 0e5c 911F      		adc r25,r17
 3965 0e5e A21F      		adc r26,r18
 3966 0e60 B31F      		adc r27,r19
 3967               	.LVL280:
 3968               	.LBB329:
 3969               	.LBI329:
 193:../../emulator/emulator.c **** {
 3970               		.loc 6 193 11 is_stmt 1 view .LVU835
 3971               	.LBB330:
 195:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 3972               		.loc 6 195 2 view .LVU836
 3973               	.LBE330:
 3974               	.LBE329:
 853:../../emulator/emulator.c **** 					{
 3975               		.loc 6 853 9 is_stmt 0 view .LVU837
 3976 0e62 F0E0      		ldi r31,0
 3977 0e64 3696      		adiw r30,6
 3978               	.LVL281:
 853:../../emulator/emulator.c **** 					{
 3979               		.loc 6 853 9 view .LVU838
 3980 0e66 EE0F      		lsl r30
 3981 0e68 FF1F      		rol r31
 3982 0e6a EE0F      		lsl r30
 3983 0e6c FF1F      		rol r31
 3984 0e6e EE0D      		add r30,r14
 3985 0e70 FF1D      		adc r31,r15
 3986               	.LBB334:
 3987               	.LBB333:
 195:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 3988               		.loc 6 195 14 view .LVU839
 3989 0e72 2081      		ld r18,Z
 3990 0e74 2983      		std Y+1,r18
 196:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3991               		.loc 6 196 2 is_stmt 1 view .LVU840
 196:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 3992               		.loc 6 196 7 is_stmt 0 view .LVU841
 3993 0e76 4091 0000 		lds r20,_tasks
 3994 0e7a 5091 0000 		lds r21,_tasks+1
 3995 0e7e 6091 0000 		lds r22,_tasks+2
 3996 0e82 7091 0000 		lds r23,_tasks+3
 3997 0e86 8C01      		movw r16,r24
 3998 0e88 9D01      		movw r18,r26
 3999               	.LVL282:
 196:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value8)))
 4000               		.loc 6 196 7 view .LVU842
 4001 0e8a 040F      		add r16,r20
 4002 0e8c 151F      		adc r17,r21
 4003 0e8e 261F      		adc r18,r22
 4004 0e90 371F      		adc r19,r23
 4005 0e92 0987      		std Y+9,r16
 4006 0e94 1A87      		std Y+10,r17
 4007 0e96 2B87      		std Y+11,r18
 4008 0e98 3C87      		std Y+12,r19
 4009               	.LVL283:
 197:../../emulator/emulator.c **** 	{
 4010               		.loc 6 197 2 is_stmt 1 view .LVU843
 197:../../emulator/emulator.c **** 	{
 4011               		.loc 6 197 5 is_stmt 0 view .LVU844
 4012 0e9a 21E0      		ldi r18,lo8(1)
 4013 0e9c 30E0      		ldi r19,0
 4014 0e9e 40E0      		ldi r20,0
 4015 0ea0 50E0      		ldi r21,0
 4016 0ea2 6985      		ldd r22,Y+9
 4017 0ea4 7A85      		ldd r23,Y+10
 4018 0ea6 8B85      		ldd r24,Y+11
 4019 0ea8 9C85      		ldd r25,Y+12
 4020 0eaa 0E94 0000 		call _memory_check_bounds
 4021               	.LVL284:
 4022               	.LBB331:
 4023               	.LBB332:
  31:platform.c    **** }
 4024               		.loc 1 31 2 view .LVU845
 4025 0eae 21E0      		ldi r18,lo8(1)
 4026 0eb0 30E0      		ldi r19,0
 4027               	.LBE332:
 4028               	.LBE331:
 197:../../emulator/emulator.c **** 	{
 4029               		.loc 6 197 4 view .LVU846
 4030 0eb2 8111      		cpse r24,__zero_reg__
 4031 0eb4 00C0      		rjmp .L89
 4032               	.LVL285:
 4033               	.L170:
 197:../../emulator/emulator.c **** 	{
 4034               		.loc 6 197 4 view .LVU847
 4035               	.LBE333:
 4036               	.LBE334:
 4037               	.LBB335:
 4038               	.LBB336:
 4039               	.LBB337:
 4040               	.LBB338:
  31:platform.c    **** }
 4041               		.loc 1 31 2 view .LVU848
 4042 0eb6 AE01      		movw r20,r28
 4043 0eb8 4F5F      		subi r20,-1
 4044 0eba 5F4F      		sbci r21,-1
 4045 0ebc 6985      		ldd r22,Y+9
 4046 0ebe 7A85      		ldd r23,Y+10
 4047 0ec0 8B85      		ldd r24,Y+11
 4048 0ec2 9C85      		ldd r25,Y+12
 4049 0ec4 0E94 0000 		call xmem_write
 4050               	.LVL286:
 4051 0ec8 00C0      		rjmp .L110
 4052               	.LVL287:
 4053               	.L126:
  31:platform.c    **** }
 4054               		.loc 1 31 2 view .LVU849
 4055               	.LBE338:
 4056               	.LBE337:
 4057               	.LBE336:
 4058               	.LBE335:
 861:../../emulator/emulator.c **** 					if(memory_sh(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 4059               		.loc 6 861 72 is_stmt 1 view .LVU850
 862:../../emulator/emulator.c **** 					{
 4060               		.loc 6 862 6 view .LVU851
 862:../../emulator/emulator.c **** 					{
 4061               		.loc 6 862 33 is_stmt 0 view .LVU852
 4062 0eca B0E0      		ldi r27,0
 4063 0ecc 1696      		adiw r26,6
 4064               	.LVL288:
 862:../../emulator/emulator.c **** 					{
 4065               		.loc 6 862 33 view .LVU853
 4066 0ece AA0F      		lsl r26
 4067 0ed0 BB1F      		rol r27
 4068 0ed2 AA0F      		lsl r26
 4069 0ed4 BB1F      		rol r27
 4070 0ed6 AE0D      		add r26,r14
 4071 0ed8 BF1D      		adc r27,r15
 862:../../emulator/emulator.c **** 					{
 4072               		.loc 6 862 9 view .LVU854
 4073 0eda 8D91      		ld r24,X+
 4074 0edc 9D91      		ld r25,X+
 4075 0ede 0D90      		ld __tmp_reg__,X+
 4076 0ee0 BC91      		ld r27,X
 4077 0ee2 A02D      		mov r26,__tmp_reg__
 4078               	.LVL289:
 862:../../emulator/emulator.c **** 					{
 4079               		.loc 6 862 9 view .LVU855
 4080 0ee4 800F      		add r24,r16
 4081 0ee6 911F      		adc r25,r17
 4082 0ee8 A21F      		adc r26,r18
 4083 0eea B31F      		adc r27,r19
 4084               	.LVL290:
 4085               	.LBB343:
 4086               	.LBI335:
 213:../../emulator/emulator.c **** {
 4087               		.loc 6 213 11 is_stmt 1 view .LVU856
 4088               	.LBB341:
 215:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 4089               		.loc 6 215 2 view .LVU857
 4090               	.LBE341:
 4091               	.LBE343:
 862:../../emulator/emulator.c **** 					{
 4092               		.loc 6 862 9 is_stmt 0 view .LVU858
 4093 0eec F0E0      		ldi r31,0
 4094 0eee 3696      		adiw r30,6
 4095               	.LVL291:
 862:../../emulator/emulator.c **** 					{
 4096               		.loc 6 862 9 view .LVU859
 4097 0ef0 EE0F      		lsl r30
 4098 0ef2 FF1F      		rol r31
 4099 0ef4 EE0F      		lsl r30
 4100 0ef6 FF1F      		rol r31
 4101 0ef8 EE0D      		add r30,r14
 4102 0efa FF1D      		adc r31,r15
 4103               	.LBB344:
 4104               	.LBB342:
 215:../../emulator/emulator.c **** 	addr += _emu->SegmentStart;
 4105               		.loc 6 215 16 view .LVU860
 4106 0efc 2081      		ld r18,Z
 4107 0efe 3181      		ldd r19,Z+1
 4108 0f00 3A83      		std Y+2,r19
 4109 0f02 2983      		std Y+1,r18
 216:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 4110               		.loc 6 216 2 is_stmt 1 view .LVU861
 216:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 4111               		.loc 6 216 7 is_stmt 0 view .LVU862
 4112 0f04 4091 0000 		lds r20,_tasks
 4113 0f08 5091 0000 		lds r21,_tasks+1
 4114 0f0c 6091 0000 		lds r22,_tasks+2
 4115 0f10 7091 0000 		lds r23,_tasks+3
 4116 0f14 8C01      		movw r16,r24
 4117 0f16 9D01      		movw r18,r26
 4118               	.LVL292:
 216:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value16)))
 4119               		.loc 6 216 7 view .LVU863
 4120 0f18 040F      		add r16,r20
 4121 0f1a 151F      		adc r17,r21
 4122 0f1c 261F      		adc r18,r22
 4123 0f1e 371F      		adc r19,r23
 4124 0f20 0987      		std Y+9,r16
 4125 0f22 1A87      		std Y+10,r17
 4126 0f24 2B87      		std Y+11,r18
 4127 0f26 3C87      		std Y+12,r19
 4128               	.LVL293:
 217:../../emulator/emulator.c **** 	{
 4129               		.loc 6 217 2 is_stmt 1 view .LVU864
 217:../../emulator/emulator.c **** 	{
 4130               		.loc 6 217 5 is_stmt 0 view .LVU865
 4131 0f28 22E0      		ldi r18,lo8(2)
 4132 0f2a 30E0      		ldi r19,0
 4133 0f2c 40E0      		ldi r20,0
 4134 0f2e 50E0      		ldi r21,0
 4135 0f30 6985      		ldd r22,Y+9
 4136 0f32 7A85      		ldd r23,Y+10
 4137 0f34 8B85      		ldd r24,Y+11
 4138 0f36 9C85      		ldd r25,Y+12
 4139 0f38 0E94 0000 		call _memory_check_bounds
 4140               	.LVL294:
 217:../../emulator/emulator.c **** 	{
 4141               		.loc 6 217 4 view .LVU866
 4142 0f3c 8111      		cpse r24,__zero_reg__
 4143 0f3e 00C0      		rjmp .L89
 222:../../emulator/emulator.c **** 	return 0;
 4144               		.loc 6 222 2 is_stmt 1 view .LVU867
 4145               	.LVL295:
 4146               	.LBB340:
 4147               	.LBI337:
  29:platform.c    **** {
 4148               		.loc 1 29 6 view .LVU868
 4149               	.LBB339:
  31:platform.c    **** }
 4150               		.loc 1 31 2 view .LVU869
 4151 0f40 22E0      		ldi r18,lo8(2)
 4152 0f42 30E0      		ldi r19,0
 4153 0f44 00C0      		rjmp .L170
 4154               	.LVL296:
 4155               	.L127:
  31:platform.c    **** }
 4156               		.loc 1 31 2 is_stmt 0 view .LVU870
 4157               	.LBE339:
 4158               	.LBE340:
 4159               	.LBE342:
 4160               	.LBE344:
 870:../../emulator/emulator.c **** 					if(memory_sw(emu->Registers[rs1] + offset, emu->Registers[rs2]))
 4161               		.loc 6 870 72 is_stmt 1 view .LVU871
 871:../../emulator/emulator.c **** 					{
 4162               		.loc 6 871 6 view .LVU872
 871:../../emulator/emulator.c **** 					{
 4163               		.loc 6 871 33 is_stmt 0 view .LVU873
 4164 0f46 B0E0      		ldi r27,0
 4165 0f48 1696      		adiw r26,6
 4166               	.LVL297:
 871:../../emulator/emulator.c **** 					{
 4167               		.loc 6 871 33 view .LVU874
 4168 0f4a AA0F      		lsl r26
 4169 0f4c BB1F      		rol r27
 4170 0f4e AA0F      		lsl r26
 4171 0f50 BB1F      		rol r27
 4172               	.LVL298:
 871:../../emulator/emulator.c **** 					{
 4173               		.loc 6 871 33 view .LVU875
 4174 0f52 AE0D      		add r26,r14
 4175 0f54 BF1D      		adc r27,r15
 871:../../emulator/emulator.c **** 					{
 4176               		.loc 6 871 9 view .LVU876
 4177 0f56 8D91      		ld r24,X+
 4178 0f58 9D91      		ld r25,X+
 4179 0f5a 0D90      		ld __tmp_reg__,X+
 4180 0f5c BC91      		ld r27,X
 4181 0f5e A02D      		mov r26,__tmp_reg__
 4182 0f60 080F      		add r16,r24
 4183 0f62 191F      		adc r17,r25
 4184 0f64 2A1F      		adc r18,r26
 4185 0f66 3B1F      		adc r19,r27
 4186               	.LVL299:
 871:../../emulator/emulator.c **** 					{
 4187               		.loc 6 871 9 view .LVU877
 4188 0f68 F0E0      		ldi r31,0
 4189 0f6a 3696      		adiw r30,6
 4190               	.LVL300:
 871:../../emulator/emulator.c **** 					{
 4191               		.loc 6 871 9 view .LVU878
 4192 0f6c EE0F      		lsl r30
 4193 0f6e FF1F      		rol r31
 4194 0f70 EE0F      		lsl r30
 4195 0f72 FF1F      		rol r31
 4196 0f74 EE0D      		add r30,r14
 4197 0f76 FF1D      		adc r31,r15
 4198 0f78 8081      		ld r24,Z
 4199 0f7a 9181      		ldd r25,Z+1
 4200 0f7c A281      		ldd r26,Z+2
 4201 0f7e B381      		ldd r27,Z+3
 4202 0f80 8983      		std Y+1,r24
 4203 0f82 9A83      		std Y+2,r25
 4204 0f84 AB83      		std Y+3,r26
 4205 0f86 BC83      		std Y+4,r27
 4206               	.LBB345:
 4207               	.LBI345:
 233:../../emulator/emulator.c **** {
 4208               		.loc 6 233 11 is_stmt 1 view .LVU879
 4209               	.LBB346:
 235:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 4210               		.loc 6 235 2 view .LVU880
 235:../../emulator/emulator.c **** 	if(_memory_check_bounds(addr, sizeof(value)))
 4211               		.loc 6 235 7 is_stmt 0 view .LVU881
 4212 0f88 8091 0000 		lds r24,_tasks
 4213 0f8c 9091 0000 		lds r25,_tasks+1
 4214 0f90 A091 0000 		lds r26,_tasks+2
 4215 0f94 B091 0000 		lds r27,_tasks+3
 4216 0f98 B901      		movw r22,r18
 4217 0f9a A801      		movw r20,r16
 4218 0f9c 480F      		add r20,r24
 4219 0f9e 591F      		adc r21,r25
 4220 0fa0 6A1F      		adc r22,r26
 4221 0fa2 7B1F      		adc r23,r27
 4222 0fa4 4987      		std Y+9,r20
 4223 0fa6 5A87      		std Y+10,r21
 4224 0fa8 6B87      		std Y+11,r22
 4225 0faa 7C87      		std Y+12,r23
 4226               	.LVL301:
 236:../../emulator/emulator.c **** 	{
 4227               		.loc 6 236 2 is_stmt 1 view .LVU882
 236:../../emulator/emulator.c **** 	{
 4228               		.loc 6 236 5 is_stmt 0 view .LVU883
 4229 0fac 24E0      		ldi r18,lo8(4)
 4230 0fae 30E0      		ldi r19,0
 4231 0fb0 40E0      		ldi r20,0
 4232 0fb2 50E0      		ldi r21,0
 4233 0fb4 6985      		ldd r22,Y+9
 4234 0fb6 7A85      		ldd r23,Y+10
 4235 0fb8 8B85      		ldd r24,Y+11
 4236 0fba 9C85      		ldd r25,Y+12
 4237 0fbc 0E94 0000 		call _memory_check_bounds
 4238               	.LVL302:
 4239               	.LBB347:
 4240               	.LBB348:
  31:platform.c    **** }
 4241               		.loc 1 31 2 view .LVU884
 4242 0fc0 24E0      		ldi r18,lo8(4)
 4243 0fc2 30E0      		ldi r19,0
 4244               	.LBE348:
 4245               	.LBE347:
 236:../../emulator/emulator.c **** 	{
 4246               		.loc 6 236 4 view .LVU885
 4247 0fc4 8111      		cpse r24,__zero_reg__
 4248 0fc6 00C0      		rjmp .L89
 4249 0fc8 00C0      		rjmp .L170
 4250               	.LVL303:
 4251               	.L97:
 236:../../emulator/emulator.c **** 	{
 4252               		.loc 6 236 4 view .LVU886
 4253               	.LBE346:
 4254               	.LBE345:
 4255               	.LBE324:
 4256               	.LBB349:
 886:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 4257               		.loc 6 886 4 is_stmt 1 view .LVU887
 887:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 4258               		.loc 6 887 4 view .LVU888
 888:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4259               		.loc 6 888 4 view .LVU889
 888:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4260               		.loc 6 888 20 is_stmt 0 view .LVU890
 4261 0fca D901      		movw r26,r18
 4262 0fcc C801      		movw r24,r16
 4263               	.LVL304:
 888:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4264               		.loc 6 888 20 view .LVU891
 4265 0fce 4CE0      		ldi r20,12
 4266               		1:
 4267 0fd0 B695      		lsr r27
 4268 0fd2 A795      		ror r26
 4269 0fd4 9795      		ror r25
 4270 0fd6 8795      		ror r24
 4271 0fd8 4A95      		dec r20
 4272 0fda 01F4      		brne 1b
 888:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4273               		.loc 6 888 11 view .LVU892
 4274 0fdc E82F      		mov r30,r24
 4275 0fde E770      		andi r30,lo8(7)
 4276               	.LVL305:
 889:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4277               		.loc 6 889 4 is_stmt 1 view .LVU893
 890:../../emulator/emulator.c **** 			funct7 = (instr >> 25);
 4278               		.loc 6 890 4 view .LVU894
 891:../../emulator/emulator.c **** 			if(funct7 == 1)
 4279               		.loc 6 891 4 view .LVU895
 891:../../emulator/emulator.c **** 			if(funct7 == 1)
 4280               		.loc 6 891 20 is_stmt 0 view .LVU896
 4281 0fe0 B901      		movw r22,r18
 4282 0fe2 A801      		movw r20,r16
 4283 0fe4 F9E1      		ldi r31,25
 4284               		1:
 4285 0fe6 7695      		lsr r23
 4286 0fe8 6795      		ror r22
 4287 0fea 5795      		ror r21
 4288 0fec 4795      		ror r20
 4289 0fee FA95      		dec r31
 4290 0ff0 01F4      		brne 1b
 4291               	.LVL306:
 892:../../emulator/emulator.c **** 			{
 4292               		.loc 6 892 4 is_stmt 1 view .LVU897
 889:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4293               		.loc 6 889 17 is_stmt 0 view .LVU898
 4294 0ff2 D901      		movw r26,r18
 4295 0ff4 C801      		movw r24,r16
 4296 0ff6 5FE0      		ldi r21,15
 4297               		1:
 4298 0ff8 B695      		lsr r27
 4299 0ffa A795      		ror r26
 4300 0ffc 9795      		ror r25
 4301 0ffe 8795      		ror r24
 4302 1000 5A95      		dec r21
 4303 1002 01F4      		brne 1b
 889:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4304               		.loc 6 889 8 view .LVU899
 4305 1004 8F71      		andi r24,lo8(31)
 900:../../emulator/emulator.c **** 						break;
 4306               		.loc 6 900 47 view .LVU900
 4307 1006 A82F      		mov r26,r24
 4308 1008 B0E0      		ldi r27,0
 4309               	.LBE349:
 4310               	.LBB350:
 700:../../emulator/emulator.c **** 					{
 4311               		.loc 6 700 33 view .LVU901
 4312 100a 1696      		adiw r26,6
 4313 100c AA0F      		lsl r26
 4314 100e BB1F      		rol r27
 4315 1010 AA0F      		lsl r26
 4316 1012 BB1F      		rol r27
 4317 1014 AE0D      		add r26,r14
 4318 1016 BF1D      		adc r27,r15
 4319 1018 6D91      		ld r22,X+
 4320 101a 7D91      		ld r23,X+
 4321 101c 8D91      		ld r24,X+
 4322 101e 9C91      		ld r25,X
 4323 1020 6987      		std Y+9,r22
 4324 1022 7A87      		std Y+10,r23
 4325 1024 8B87      		std Y+11,r24
 4326 1026 9C87      		std Y+12,r25
 4327               	.LBE350:
 4328               	.LBB351:
 890:../../emulator/emulator.c **** 			funct7 = (instr >> 25);
 4329               		.loc 6 890 17 view .LVU902
 4330 1028 D901      		movw r26,r18
 4331 102a C801      		movw r24,r16
 4332 102c 74E1      		ldi r23,20
 4333               		1:
 4334 102e B695      		lsr r27
 4335 1030 A795      		ror r26
 4336 1032 9795      		ror r25
 4337 1034 8795      		ror r24
 4338 1036 7A95      		dec r23
 4339 1038 01F4      		brne 1b
 890:../../emulator/emulator.c **** 			funct7 = (instr >> 25);
 4340               		.loc 6 890 8 view .LVU903
 4341 103a 8F71      		andi r24,lo8(31)
 900:../../emulator/emulator.c **** 						break;
 4342               		.loc 6 900 74 view .LVU904
 4343 103c A82F      		mov r26,r24
 4344 103e B0E0      		ldi r27,0
 4345               	.LBE351:
 4346               	.LBB352:
 853:../../emulator/emulator.c **** 					{
 4347               		.loc 6 853 9 view .LVU905
 4348 1040 1696      		adiw r26,6
 4349 1042 AA0F      		lsl r26
 4350 1044 BB1F      		rol r27
 4351 1046 AA0F      		lsl r26
 4352 1048 BB1F      		rol r27
 4353 104a AE0D      		add r26,r14
 4354 104c BF1D      		adc r27,r15
 4355 104e 8D90      		ld r8,X+
 4356 1050 9D90      		ld r9,X+
 4357 1052 AD90      		ld r10,X+
 4358 1054 BC90      		ld r11,X
 4359               	.LBE352:
 4360               	.LBB353:
 887:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 4361               		.loc 6 887 16 view .LVU906
 4362 1056 A7E0      		ldi r26,7
 4363               		1:
 4364 1058 3695      		lsr r19
 4365 105a 2795      		ror r18
 4366 105c 1795      		ror r17
 4367 105e 0795      		ror r16
 4368 1060 AA95      		dec r26
 4369 1062 01F4      		brne 1b
 4370               	.LVL307:
 887:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 4371               		.loc 6 887 7 view .LVU907
 4372 1064 0F71      		andi r16,lo8(31)
 900:../../emulator/emulator.c **** 						break;
 4373               		.loc 6 900 21 view .LVU908
 4374 1066 10E0      		ldi r17,0
 4375 1068 E150      		subi r30,lo8(-(-1))
 4376               	.LVL308:
 900:../../emulator/emulator.c **** 						break;
 4377               		.loc 6 900 21 view .LVU909
 4378 106a 0A5F      		subi r16,-6
 4379 106c 1F4F      		sbci r17,-1
 892:../../emulator/emulator.c **** 			{
 4380               		.loc 6 892 6 view .LVU910
 4381 106e 4130      		cpi r20,lo8(1)
 4382 1070 01F0      		breq .+2
 4383 1072 00C0      		rjmp .L131
 895:../../emulator/emulator.c **** 				{
 4384               		.loc 6 895 5 is_stmt 1 view .LVU911
 4385 1074 E730      		cpi r30,lo8(7)
 4386 1076 00F4      		brsh .L132
 4387 1078 F0E0      		ldi r31,0
 4388 107a E050      		subi r30,lo8(-(gs(.L134)))
 4389 107c F040      		sbci r31,hi8(-(gs(.L134)))
 4390               	.LVL309:
 895:../../emulator/emulator.c **** 				{
 4391               		.loc 6 895 5 is_stmt 0 view .LVU912
 4392 107e 0C94 0000 		jmp __tablejump2__
 4393               		.section	.jumptables.gcc.emulator_next,"a",@progbits
 4394               		.p2align	1
 4395               	.L134:
 4396 0048 0000      		.word gs(.L140)
 4397 004a 0000      		.word gs(.L139)
 4398 004c 0000      		.word gs(.L138)
 4399 004e 0000      		.word gs(.L137)
 4400 0050 0000      		.word gs(.L136)
 4401 0052 0000      		.word gs(.L135)
 4402 0054 0000      		.word gs(.L133)
 4403               		.text
 4404               	.LVL310:
 4405               	.L132:
 899:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] * (i32)emu->Registers[rs2];
 4406               		.loc 6 899 71 is_stmt 1 view .LVU913
 900:../../emulator/emulator.c **** 						break;
 4407               		.loc 6 900 7 view .LVU914
 900:../../emulator/emulator.c **** 						break;
 4408               		.loc 6 900 26 is_stmt 0 view .LVU915
 4409 1082 F801      		movw r30,r16
 4410               	.LVL311:
 900:../../emulator/emulator.c **** 						break;
 4411               		.loc 6 900 26 view .LVU916
 4412 1084 EE0F      		lsl r30
 4413 1086 FF1F      		rol r31
 4414 1088 EE0F      		lsl r30
 4415 108a FF1F      		rol r31
 4416 108c EE0D      		add r30,r14
 4417 108e FF1D      		adc r31,r15
 900:../../emulator/emulator.c **** 						break;
 4418               		.loc 6 900 53 view .LVU917
 4419 1090 2985      		ldd r18,Y+9
 4420 1092 3A85      		ldd r19,Y+10
 4421 1094 4B85      		ldd r20,Y+11
 4422 1096 5C85      		ldd r21,Y+12
 4423 1098 C501      		movw r24,r10
 4424 109a B401      		movw r22,r8
 4425 109c 0E94 0000 		call __mulsi3
 4426               	.L172:
 936:../../emulator/emulator.c **** 						break;
 4427               		.loc 6 936 53 view .LVU918
 4428 10a0 6083      		st Z,r22
 4429 10a2 7183      		std Z+1,r23
 4430 10a4 8283      		std Z+2,r24
 4431 10a6 9383      		std Z+3,r25
 937:../../emulator/emulator.c **** 
 4432               		.loc 6 937 7 is_stmt 1 view .LVU919
 4433 10a8 00C0      		rjmp .L110
 4434               	.L140:
 905:../../emulator/emulator.c **** 						emu->Registers[rd] = ((i64)emu->Registers[rs1] * (i64)emu->Registers[rs2]) >> 32;
 4435               		.loc 6 905 72 view .LVU920
 906:../../emulator/emulator.c **** 						break;
 4436               		.loc 6 906 7 view .LVU921
 906:../../emulator/emulator.c **** 						break;
 4437               		.loc 6 906 26 is_stmt 0 view .LVU922
 4438 10aa 3801      		movw r6,r16
 4439 10ac 660C      		lsl r6
 4440 10ae 771C      		rol r7
 4441 10b0 660C      		lsl r6
 4442 10b2 771C      		rol r7
 4443 10b4 6E0C      		add r6,r14
 4444 10b6 7F1C      		adc r7,r15
 906:../../emulator/emulator.c **** 						break;
 4445               		.loc 6 906 54 view .LVU923
 4446 10b8 6985      		ldd r22,Y+9
 4447 10ba 7A85      		ldd r23,Y+10
 4448 10bc 8B85      		ldd r24,Y+11
 4449 10be 9C85      		ldd r25,Y+12
 4450 10c0 A501      		movw r20,r10
 4451 10c2 9401      		movw r18,r8
 4452 10c4 0E94 0000 		call __umulsidi3
 906:../../emulator/emulator.c **** 						break;
 4453               		.loc 6 906 82 view .LVU924
 4454 10c8 00E2      		ldi r16,lo8(32)
 4455 10ca 0E94 0000 		call __ashrdi3
 4456               	.L171:
 918:../../emulator/emulator.c **** 						break;
 4457               		.loc 6 918 26 view .LVU925
 4458 10ce D301      		movw r26,r6
 4459 10d0 2C93      		st X,r18
 4460 10d2 1196      		adiw r26,1
 4461 10d4 3C93      		st X,r19
 4462 10d6 1197      		sbiw r26,1
 4463 10d8 1296      		adiw r26,2
 4464 10da 4C93      		st X,r20
 4465 10dc 1297      		sbiw r26,2
 4466 10de 1396      		adiw r26,3
 4467 10e0 5C93      		st X,r21
 919:../../emulator/emulator.c **** 
 4468               		.loc 6 919 7 is_stmt 1 view .LVU926
 4469 10e2 00C0      		rjmp .L110
 4470               	.L139:
 911:../../emulator/emulator.c **** 						emu->Registers[rd] = ((i64)emu->Registers[rs1] * (u64)emu->Registers[rs2]) >> 32;
 4471               		.loc 6 911 74 view .LVU927
 912:../../emulator/emulator.c **** 						break;
 4472               		.loc 6 912 7 view .LVU928
 912:../../emulator/emulator.c **** 						break;
 4473               		.loc 6 912 26 is_stmt 0 view .LVU929
 4474 10e4 3801      		movw r6,r16
 4475 10e6 660C      		lsl r6
 4476 10e8 771C      		rol r7
 4477 10ea 660C      		lsl r6
 4478 10ec 771C      		rol r7
 4479 10ee 6E0C      		add r6,r14
 4480 10f0 7F1C      		adc r7,r15
 912:../../emulator/emulator.c **** 						break;
 4481               		.loc 6 912 54 view .LVU930
 4482 10f2 6985      		ldd r22,Y+9
 4483 10f4 7A85      		ldd r23,Y+10
 4484 10f6 8B85      		ldd r24,Y+11
 4485 10f8 9C85      		ldd r25,Y+12
 4486 10fa A501      		movw r20,r10
 4487 10fc 9401      		movw r18,r8
 4488 10fe 0E94 0000 		call __umulsidi3
 912:../../emulator/emulator.c **** 						break;
 4489               		.loc 6 912 82 view .LVU931
 4490 1102 00E2      		ldi r16,lo8(32)
 4491 1104 0E94 0000 		call __lshrdi3
 912:../../emulator/emulator.c **** 						break;
 4492               		.loc 6 912 26 view .LVU932
 4493 1108 F301      		movw r30,r6
 4494 110a 2083      		st Z,r18
 4495 110c 3183      		std Z+1,r19
 4496 110e 4283      		std Z+2,r20
 4497 1110 5383      		std Z+3,r21
 913:../../emulator/emulator.c **** 
 4498               		.loc 6 913 7 is_stmt 1 view .LVU933
 4499 1112 00C0      		rjmp .L110
 4500               	.L138:
 917:../../emulator/emulator.c **** 						emu->Registers[rd] = ((u64)emu->Registers[rs1] * (u64)emu->Registers[rs2]) >> 32;
 4501               		.loc 6 917 73 view .LVU934
 918:../../emulator/emulator.c **** 						break;
 4502               		.loc 6 918 7 view .LVU935
 918:../../emulator/emulator.c **** 						break;
 4503               		.loc 6 918 26 is_stmt 0 view .LVU936
 4504 1114 3801      		movw r6,r16
 4505 1116 660C      		lsl r6
 4506 1118 771C      		rol r7
 4507 111a 660C      		lsl r6
 4508 111c 771C      		rol r7
 4509 111e 6E0C      		add r6,r14
 4510 1120 7F1C      		adc r7,r15
 918:../../emulator/emulator.c **** 						break;
 4511               		.loc 6 918 54 view .LVU937
 4512 1122 6985      		ldd r22,Y+9
 4513 1124 7A85      		ldd r23,Y+10
 4514 1126 8B85      		ldd r24,Y+11
 4515 1128 9C85      		ldd r25,Y+12
 4516 112a A501      		movw r20,r10
 4517 112c 9401      		movw r18,r8
 4518 112e 0E94 0000 		call __umulsidi3
 918:../../emulator/emulator.c **** 						break;
 4519               		.loc 6 918 82 view .LVU938
 4520 1132 00E2      		ldi r16,lo8(32)
 4521 1134 0E94 0000 		call __lshrdi3
 4522 1138 00C0      		rjmp .L171
 4523               	.L137:
 923:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] / (i32)emu->Registers[rs2];
 4524               		.loc 6 923 71 is_stmt 1 view .LVU939
 924:../../emulator/emulator.c **** 						break;
 4525               		.loc 6 924 7 view .LVU940
 924:../../emulator/emulator.c **** 						break;
 4526               		.loc 6 924 26 is_stmt 0 view .LVU941
 4527 113a 000F      		lsl r16
 4528 113c 111F      		rol r17
 4529 113e 000F      		lsl r16
 4530 1140 111F      		rol r17
 4531 1142 0E0D      		add r16,r14
 4532 1144 1F1D      		adc r17,r15
 924:../../emulator/emulator.c **** 						break;
 4533               		.loc 6 924 53 view .LVU942
 4534 1146 6985      		ldd r22,Y+9
 4535 1148 7A85      		ldd r23,Y+10
 4536 114a 8B85      		ldd r24,Y+11
 4537 114c 9C85      		ldd r25,Y+12
 4538 114e A501      		movw r20,r10
 4539 1150 9401      		movw r18,r8
 4540 1152 0E94 0000 		call __divmodsi4
 924:../../emulator/emulator.c **** 						break;
 4541               		.loc 6 924 26 view .LVU943
 4542 1156 F801      		movw r30,r16
 4543 1158 2083      		st Z,r18
 4544 115a 3183      		std Z+1,r19
 4545 115c 4283      		std Z+2,r20
 4546 115e 5383      		std Z+3,r21
 925:../../emulator/emulator.c **** 
 4547               		.loc 6 925 7 is_stmt 1 view .LVU944
 4548 1160 00C0      		rjmp .L110
 4549               	.L136:
 929:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] / emu->Registers[rs2];
 4550               		.loc 6 929 72 view .LVU945
 930:../../emulator/emulator.c **** 						break;
 4551               		.loc 6 930 7 view .LVU946
 930:../../emulator/emulator.c **** 						break;
 4552               		.loc 6 930 26 is_stmt 0 view .LVU947
 4553 1162 000F      		lsl r16
 4554 1164 111F      		rol r17
 4555 1166 000F      		lsl r16
 4556 1168 111F      		rol r17
 4557 116a 0E0D      		add r16,r14
 4558 116c 1F1D      		adc r17,r15
 930:../../emulator/emulator.c **** 						break;
 4559               		.loc 6 930 48 view .LVU948
 4560 116e 6985      		ldd r22,Y+9
 4561 1170 7A85      		ldd r23,Y+10
 4562 1172 8B85      		ldd r24,Y+11
 4563 1174 9C85      		ldd r25,Y+12
 4564 1176 A501      		movw r20,r10
 4565 1178 9401      		movw r18,r8
 4566 117a 0E94 0000 		call __udivmodsi4
 930:../../emulator/emulator.c **** 						break;
 4567               		.loc 6 930 26 view .LVU949
 4568 117e D801      		movw r26,r16
 4569 1180 2D93      		st X+,r18
 4570 1182 3D93      		st X+,r19
 4571 1184 4D93      		st X+,r20
 4572 1186 5C93      		st X,r21
 4573 1188 1397      		sbiw r26,3
 931:../../emulator/emulator.c **** 
 4574               		.loc 6 931 7 is_stmt 1 view .LVU950
 4575 118a 00C0      		rjmp .L110
 4576               	.L135:
 935:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] % (i32)emu->Registers[rs2];
 4577               		.loc 6 935 71 view .LVU951
 936:../../emulator/emulator.c **** 						break;
 4578               		.loc 6 936 7 view .LVU952
 936:../../emulator/emulator.c **** 						break;
 4579               		.loc 6 936 26 is_stmt 0 view .LVU953
 4580 118c 000F      		lsl r16
 4581 118e 111F      		rol r17
 4582 1190 000F      		lsl r16
 4583 1192 111F      		rol r17
 4584 1194 0E0D      		add r16,r14
 4585 1196 1F1D      		adc r17,r15
 936:../../emulator/emulator.c **** 						break;
 4586               		.loc 6 936 53 view .LVU954
 4587 1198 6985      		ldd r22,Y+9
 4588 119a 7A85      		ldd r23,Y+10
 4589 119c 8B85      		ldd r24,Y+11
 4590 119e 9C85      		ldd r25,Y+12
 4591 11a0 A501      		movw r20,r10
 4592 11a2 9401      		movw r18,r8
 4593 11a4 0E94 0000 		call __divmodsi4
 4594 11a8 F801      		movw r30,r16
 4595 11aa 00C0      		rjmp .L172
 4596               	.L133:
 941:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] % emu->Registers[rs2];
 4597               		.loc 6 941 72 is_stmt 1 view .LVU955
 942:../../emulator/emulator.c **** 						break;
 4598               		.loc 6 942 7 view .LVU956
 942:../../emulator/emulator.c **** 						break;
 4599               		.loc 6 942 26 is_stmt 0 view .LVU957
 4600 11ac 000F      		lsl r16
 4601 11ae 111F      		rol r17
 4602 11b0 000F      		lsl r16
 4603 11b2 111F      		rol r17
 4604 11b4 0E0D      		add r16,r14
 4605 11b6 1F1D      		adc r17,r15
 942:../../emulator/emulator.c **** 						break;
 4606               		.loc 6 942 48 view .LVU958
 4607 11b8 6985      		ldd r22,Y+9
 4608 11ba 7A85      		ldd r23,Y+10
 4609 11bc 8B85      		ldd r24,Y+11
 4610 11be 9C85      		ldd r25,Y+12
 4611 11c0 A501      		movw r20,r10
 4612 11c2 9401      		movw r18,r8
 4613 11c4 0E94 0000 		call __udivmodsi4
 4614 11c8 D801      		movw r26,r16
 4615 11ca 6D93      		st X+,r22
 4616 11cc 7D93      		st X+,r23
 4617 11ce 8D93      		st X+,r24
 4618 11d0 9C93      		st X,r25
 4619 11d2 1397      		sbiw r26,3
 943:../../emulator/emulator.c **** 				}
 4620               		.loc 6 943 7 is_stmt 1 view .LVU959
 4621 11d4 00C0      		rjmp .L110
 4622               	.LVL312:
 4623               	.L131:
 948:../../emulator/emulator.c **** 				{
 4624               		.loc 6 948 5 view .LVU960
 4625 11d6 E730      		cpi r30,lo8(7)
 4626 11d8 00F4      		brsh .L141
 4627 11da F0E0      		ldi r31,0
 4628 11dc E050      		subi r30,lo8(-(gs(.L143)))
 4629 11de F040      		sbci r31,hi8(-(gs(.L143)))
 4630               	.LVL313:
 948:../../emulator/emulator.c **** 				{
 4631               		.loc 6 948 5 is_stmt 0 view .LVU961
 4632 11e0 0C94 0000 		jmp __tablejump2__
 4633               		.section	.jumptables.gcc.emulator_next,"a",@progbits
 4634               		.p2align	1
 4635               	.L143:
 4636 0056 0000      		.word gs(.L149)
 4637 0058 0000      		.word gs(.L148)
 4638 005a 0000      		.word gs(.L147)
 4639 005c 0000      		.word gs(.L146)
 4640 005e 0000      		.word gs(.L145)
 4641 0060 0000      		.word gs(.L144)
 4642 0062 0000      		.word gs(.L142)
 4643               		.text
 4644               	.LVL314:
 4645               	.L141:
 951:../../emulator/emulator.c **** 						{
 4646               		.loc 6 951 7 is_stmt 1 view .LVU962
 955:../../emulator/emulator.c **** 						}
 4647               		.loc 6 955 27 is_stmt 0 view .LVU963
 4648 11e4 F801      		movw r30,r16
 4649               	.LVL315:
 955:../../emulator/emulator.c **** 						}
 4650               		.loc 6 955 27 view .LVU964
 4651 11e6 EE0F      		lsl r30
 4652 11e8 FF1F      		rol r31
 4653 11ea EE0F      		lsl r30
 4654 11ec FF1F      		rol r31
 4655 11ee EE0D      		add r30,r14
 4656 11f0 FF1D      		adc r31,r15
 955:../../emulator/emulator.c **** 						}
 4657               		.loc 6 955 49 view .LVU965
 4658 11f2 8985      		ldd r24,Y+9
 4659 11f4 9A85      		ldd r25,Y+10
 4660 11f6 AB85      		ldd r26,Y+11
 4661 11f8 BC85      		ldd r27,Y+12
 951:../../emulator/emulator.c **** 						{
 4662               		.loc 6 951 9 view .LVU966
 4663 11fa 4423      		tst r20
 4664 11fc 01F4      		brne .+2
 4665 11fe 00C0      		rjmp .L150
 954:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] - emu->Registers[rs2];
 4666               		.loc 6 954 72 is_stmt 1 view .LVU967
 955:../../emulator/emulator.c **** 						}
 4667               		.loc 6 955 8 view .LVU968
 955:../../emulator/emulator.c **** 						}
 4668               		.loc 6 955 49 is_stmt 0 view .LVU969
 4669 1200 8819      		sub r24,r8
 4670 1202 9909      		sbc r25,r9
 4671 1204 AA09      		sbc r26,r10
 4672 1206 BB09      		sbc r27,r11
 4673 1208 00C0      		rjmp .L167
 4674               	.L149:
 967:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] << (emu->Registers[rs2] & 0x1F);
 4675               		.loc 6 967 71 is_stmt 1 view .LVU970
 968:../../emulator/emulator.c **** 						break;
 4676               		.loc 6 968 7 view .LVU971
 968:../../emulator/emulator.c **** 						break;
 4677               		.loc 6 968 26 is_stmt 0 view .LVU972
 4678 120a F801      		movw r30,r16
 4679 120c EE0F      		lsl r30
 4680 120e FF1F      		rol r31
 4681 1210 EE0F      		lsl r30
 4682 1212 FF1F      		rol r31
 4683 1214 EE0D      		add r30,r14
 4684 1216 FF1D      		adc r31,r15
 968:../../emulator/emulator.c **** 						break;
 4685               		.loc 6 968 72 view .LVU973
 4686 1218 BFE1      		ldi r27,31
 4687 121a 8B22      		and r8,r27
 4688 121c 9924      		clr r9
 968:../../emulator/emulator.c **** 						break;
 4689               		.loc 6 968 48 view .LVU974
 4690 121e 8985      		ldd r24,Y+9
 4691 1220 9A85      		ldd r25,Y+10
 4692 1222 AB85      		ldd r26,Y+11
 4693 1224 BC85      		ldd r27,Y+12
 4694 1226 00C0      		rjmp 2f
 4695               		1:
 4696 1228 880F      		lsl r24
 4697 122a 991F      		rol r25
 4698 122c AA1F      		rol r26
 4699 122e BB1F      		rol r27
 4700               		2:
 4701 1230 8A94      		dec r8
 4702 1232 02F4      		brpl 1b
 4703 1234 00C0      		rjmp .L167
 4704               	.L148:
 973:../../emulator/emulator.c **** 						emu->Registers[rd] = (i32)emu->Registers[rs1] < (i32)emu->Registers[rs2];
 4705               		.loc 6 973 71 is_stmt 1 view .LVU975
 974:../../emulator/emulator.c **** 						break;
 4706               		.loc 6 974 7 view .LVU976
 974:../../emulator/emulator.c **** 						break;
 4707               		.loc 6 974 26 is_stmt 0 view .LVU977
 4708 1236 F801      		movw r30,r16
 4709 1238 EE0F      		lsl r30
 4710 123a FF1F      		rol r31
 4711 123c EE0F      		lsl r30
 4712 123e FF1F      		rol r31
 4713 1240 EE0D      		add r30,r14
 4714 1242 FF1D      		adc r31,r15
 974:../../emulator/emulator.c **** 						break;
 4715               		.loc 6 974 53 view .LVU978
 4716 1244 81E0      		ldi r24,lo8(1)
 4717 1246 90E0      		ldi r25,0
 4718 1248 A0E0      		ldi r26,0
 4719 124a B0E0      		ldi r27,0
 4720 124c 0985      		ldd r16,Y+9
 4721 124e 1A85      		ldd r17,Y+10
 4722 1250 2B85      		ldd r18,Y+11
 4723 1252 3C85      		ldd r19,Y+12
 4724 1254 0815      		cp r16,r8
 4725 1256 1905      		cpc r17,r9
 4726 1258 2A05      		cpc r18,r10
 4727 125a 3B05      		cpc r19,r11
 4728 125c 04F4      		brge .+2
 4729 125e 00C0      		rjmp .L167
 4730               	.L178:
 980:../../emulator/emulator.c **** 						break;
 4731               		.loc 6 980 48 view .LVU979
 4732 1260 80E0      		ldi r24,0
 4733 1262 90E0      		ldi r25,0
 4734 1264 DC01      		movw r26,r24
 4735 1266 00C0      		rjmp .L167
 4736               	.L147:
 979:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] < emu->Registers[rs2];
 4737               		.loc 6 979 72 is_stmt 1 view .LVU980
 980:../../emulator/emulator.c **** 						break;
 4738               		.loc 6 980 7 view .LVU981
 980:../../emulator/emulator.c **** 						break;
 4739               		.loc 6 980 26 is_stmt 0 view .LVU982
 4740 1268 F801      		movw r30,r16
 4741 126a EE0F      		lsl r30
 4742 126c FF1F      		rol r31
 4743 126e EE0F      		lsl r30
 4744 1270 FF1F      		rol r31
 4745 1272 EE0D      		add r30,r14
 4746 1274 FF1D      		adc r31,r15
 980:../../emulator/emulator.c **** 						break;
 4747               		.loc 6 980 48 view .LVU983
 4748 1276 81E0      		ldi r24,lo8(1)
 4749 1278 90E0      		ldi r25,0
 4750 127a A0E0      		ldi r26,0
 4751 127c B0E0      		ldi r27,0
 4752 127e 2985      		ldd r18,Y+9
 4753 1280 3A85      		ldd r19,Y+10
 4754 1282 4B85      		ldd r20,Y+11
 4755 1284 5C85      		ldd r21,Y+12
 4756 1286 2815      		cp r18,r8
 4757 1288 3905      		cpc r19,r9
 4758 128a 4A05      		cpc r20,r10
 4759 128c 5B05      		cpc r21,r11
 4760 128e 00F4      		brsh .+2
 4761 1290 00C0      		rjmp .L167
 4762 1292 00C0      		rjmp .L178
 4763               	.L146:
 985:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] ^ emu->Registers[rs2];
 4764               		.loc 6 985 71 is_stmt 1 view .LVU984
 986:../../emulator/emulator.c **** 						break;
 4765               		.loc 6 986 7 view .LVU985
 986:../../emulator/emulator.c **** 						break;
 4766               		.loc 6 986 26 is_stmt 0 view .LVU986
 4767 1294 F801      		movw r30,r16
 4768 1296 EE0F      		lsl r30
 4769 1298 FF1F      		rol r31
 4770 129a EE0F      		lsl r30
 4771 129c FF1F      		rol r31
 4772 129e EE0D      		add r30,r14
 4773 12a0 FF1D      		adc r31,r15
 986:../../emulator/emulator.c **** 						break;
 4774               		.loc 6 986 48 view .LVU987
 4775 12a2 8985      		ldd r24,Y+9
 4776 12a4 9A85      		ldd r25,Y+10
 4777 12a6 AB85      		ldd r26,Y+11
 4778 12a8 BC85      		ldd r27,Y+12
 4779 12aa 00C0      		rjmp .L177
 4780               	.L145:
 990:../../emulator/emulator.c **** 						{
 4781               		.loc 6 990 7 is_stmt 1 view .LVU988
 994:../../emulator/emulator.c **** 						}
 4782               		.loc 6 994 78 is_stmt 0 view .LVU989
 4783 12ac 3FE1      		ldi r19,31
 4784 12ae 8322      		and r8,r19
 4785 12b0 9924      		clr r9
 994:../../emulator/emulator.c **** 						}
 4786               		.loc 6 994 27 view .LVU990
 4787 12b2 F801      		movw r30,r16
 4788 12b4 EE0F      		lsl r30
 4789 12b6 FF1F      		rol r31
 4790 12b8 EE0F      		lsl r30
 4791 12ba FF1F      		rol r31
 4792 12bc EE0D      		add r30,r14
 4793 12be FF1D      		adc r31,r15
 994:../../emulator/emulator.c **** 						}
 4794               		.loc 6 994 54 view .LVU991
 4795 12c0 8985      		ldd r24,Y+9
 4796 12c2 9A85      		ldd r25,Y+10
 4797 12c4 AB85      		ldd r26,Y+11
 4798 12c6 BC85      		ldd r27,Y+12
 990:../../emulator/emulator.c **** 						{
 4799               		.loc 6 990 9 view .LVU992
 4800 12c8 4423      		tst r20
 4801 12ca 01F0      		breq .L153
 993:../../emulator/emulator.c **** 							emu->Registers[rd] = (i32)emu->Registers[rs1] >> (emu->Registers[rs2] & 0x1F);
 4802               		.loc 6 993 72 is_stmt 1 view .LVU993
 994:../../emulator/emulator.c **** 						}
 4803               		.loc 6 994 8 view .LVU994
 994:../../emulator/emulator.c **** 						}
 4804               		.loc 6 994 54 is_stmt 0 view .LVU995
 4805 12cc 00C0      		rjmp 2f
 4806               		1:
 4807 12ce B595      		asr r27
 4808 12d0 A795      		ror r26
 4809 12d2 9795      		ror r25
 4810 12d4 8795      		ror r24
 4811               		2:
 4812 12d6 8A94      		dec r8
 4813 12d8 02F4      		brpl 1b
 4814 12da 00C0      		rjmp .L167
 4815               	.L153:
 999:../../emulator/emulator.c **** 							emu->Registers[rd] = emu->Registers[rs1] >> (emu->Registers[rs2] & 0x1F);
 4816               		.loc 6 999 72 is_stmt 1 view .LVU996
1000:../../emulator/emulator.c **** 						}
 4817               		.loc 6 1000 8 view .LVU997
1000:../../emulator/emulator.c **** 						}
 4818               		.loc 6 1000 49 is_stmt 0 view .LVU998
 4819 12dc 00C0      		rjmp 2f
 4820               		1:
 4821 12de B695      		lsr r27
 4822 12e0 A795      		ror r26
 4823 12e2 9795      		ror r25
 4824 12e4 8795      		ror r24
 4825               		2:
 4826 12e6 8A94      		dec r8
 4827 12e8 02F4      		brpl 1b
 4828 12ea 00C0      		rjmp .L167
 4829               	.L144:
1006:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] | emu->Registers[rs2];
 4830               		.loc 6 1006 70 is_stmt 1 view .LVU999
1007:../../emulator/emulator.c **** 						break;
 4831               		.loc 6 1007 7 view .LVU1000
1007:../../emulator/emulator.c **** 						break;
 4832               		.loc 6 1007 26 is_stmt 0 view .LVU1001
 4833 12ec F801      		movw r30,r16
 4834 12ee EE0F      		lsl r30
 4835 12f0 FF1F      		rol r31
 4836 12f2 EE0F      		lsl r30
 4837 12f4 FF1F      		rol r31
 4838 12f6 EE0D      		add r30,r14
 4839 12f8 FF1D      		adc r31,r15
1007:../../emulator/emulator.c **** 						break;
 4840               		.loc 6 1007 48 view .LVU1002
 4841 12fa 8985      		ldd r24,Y+9
 4842 12fc 9A85      		ldd r25,Y+10
 4843 12fe AB85      		ldd r26,Y+11
 4844 1300 BC85      		ldd r27,Y+12
 4845 1302 00C0      		rjmp .L179
 4846               	.L142:
1012:../../emulator/emulator.c **** 						emu->Registers[rd] = emu->Registers[rs1] & emu->Registers[rs2];
 4847               		.loc 6 1012 71 is_stmt 1 view .LVU1003
1013:../../emulator/emulator.c **** 						break;
 4848               		.loc 6 1013 7 view .LVU1004
1013:../../emulator/emulator.c **** 						break;
 4849               		.loc 6 1013 26 is_stmt 0 view .LVU1005
 4850 1304 F801      		movw r30,r16
 4851 1306 EE0F      		lsl r30
 4852 1308 FF1F      		rol r31
 4853 130a EE0F      		lsl r30
 4854 130c FF1F      		rol r31
 4855 130e EE0D      		add r30,r14
 4856 1310 FF1D      		adc r31,r15
1013:../../emulator/emulator.c **** 						break;
 4857               		.loc 6 1013 48 view .LVU1006
 4858 1312 8985      		ldd r24,Y+9
 4859 1314 9A85      		ldd r25,Y+10
 4860 1316 AB85      		ldd r26,Y+11
 4861 1318 BC85      		ldd r27,Y+12
 4862 131a 00C0      		rjmp .L169
 4863               	.LVL316:
 4864               	.L96:
1013:../../emulator/emulator.c **** 						break;
 4865               		.loc 6 1013 48 view .LVU1007
 4866               	.LBE353:
 4867               	.LBB354:
1022:../../emulator/emulator.c **** 			u32 imm;
 4868               		.loc 6 1022 4 is_stmt 1 view .LVU1008
1023:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 4869               		.loc 6 1023 4 view .LVU1009
1024:../../emulator/emulator.c **** 			imm = (instr >> 12);
 4870               		.loc 6 1024 4 view .LVU1010
1025:../../emulator/emulator.c **** 			EMU_LOG(PSTR("lui r%"PRIu8", 0x%08"PRIx32), rd, imm);
 4871               		.loc 6 1025 4 view .LVU1011
1026:../../emulator/emulator.c **** 			emu->Registers[rd] = (imm << 12);
 4872               		.loc 6 1026 56 view .LVU1012
1027:../../emulator/emulator.c **** 			break;
 4873               		.loc 6 1027 4 view .LVU1013
1024:../../emulator/emulator.c **** 			imm = (instr >> 12);
 4874               		.loc 6 1024 16 is_stmt 0 view .LVU1014
 4875 131c D901      		movw r26,r18
 4876 131e C801      		movw r24,r16
 4877               	.LVL317:
1024:../../emulator/emulator.c **** 			imm = (instr >> 12);
 4878               		.loc 6 1024 16 view .LVU1015
 4879 1320 F7E0      		ldi r31,7
 4880               		1:
 4881 1322 B695      		lsr r27
 4882 1324 A795      		ror r26
 4883 1326 9795      		ror r25
 4884 1328 8795      		ror r24
 4885 132a FA95      		dec r31
 4886 132c 01F4      		brne 1b
1024:../../emulator/emulator.c **** 			imm = (instr >> 12);
 4887               		.loc 6 1024 7 view .LVU1016
 4888 132e 8F71      		andi r24,lo8(31)
1027:../../emulator/emulator.c **** 			break;
 4889               		.loc 6 1027 18 view .LVU1017
 4890 1330 E82F      		mov r30,r24
 4891 1332 F0E0      		ldi r31,0
1027:../../emulator/emulator.c **** 			break;
 4892               		.loc 6 1027 23 view .LVU1018
 4893 1334 3696      		adiw r30,6
 4894 1336 EE0F      		lsl r30
 4895 1338 FF1F      		rol r31
 4896 133a EE0F      		lsl r30
 4897 133c FF1F      		rol r31
 4898 133e EE0D      		add r30,r14
 4899 1340 FF1D      		adc r31,r15
1027:../../emulator/emulator.c **** 			break;
 4900               		.loc 6 1027 30 view .LVU1019
 4901 1342 0027      		clr r16
 4902 1344 107F      		andi r17,240
 4903               	.LVL318:
1027:../../emulator/emulator.c **** 			break;
 4904               		.loc 6 1027 23 view .LVU1020
 4905 1346 0083      		st Z,r16
 4906 1348 1183      		std Z+1,r17
 4907 134a 2283      		std Z+2,r18
 4908 134c 3383      		std Z+3,r19
1028:../../emulator/emulator.c **** 		}
 4909               		.loc 6 1028 4 is_stmt 1 view .LVU1021
 4910 134e 00C0      		rjmp .L110
 4911               	.LVL319:
 4912               	.L95:
1028:../../emulator/emulator.c **** 		}
 4913               		.loc 6 1028 4 is_stmt 0 view .LVU1022
 4914               	.LBE354:
 4915               	.LBB355:
1033:../../emulator/emulator.c **** 			u32 imm;
 4916               		.loc 6 1033 4 is_stmt 1 view .LVU1023
1034:../../emulator/emulator.c **** 			u8 rs1, rs2, funct3;
 4917               		.loc 6 1034 4 view .LVU1024
1035:../../emulator/emulator.c **** 			funct3 = (instr >> 12) & 0x07;
 4918               		.loc 6 1035 4 view .LVU1025
1036:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4919               		.loc 6 1036 4 view .LVU1026
1036:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4920               		.loc 6 1036 20 is_stmt 0 view .LVU1027
 4921 1350 D901      		movw r26,r18
 4922 1352 C801      		movw r24,r16
 4923               	.LVL320:
1036:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4924               		.loc 6 1036 20 view .LVU1028
 4925 1354 4CE0      		ldi r20,12
 4926               		1:
 4927 1356 B695      		lsr r27
 4928 1358 A795      		ror r26
 4929 135a 9795      		ror r25
 4930 135c 8795      		ror r24
 4931 135e 4A95      		dec r20
 4932 1360 01F4      		brne 1b
1036:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 4933               		.loc 6 1036 11 view .LVU1029
 4934 1362 8770      		andi r24,lo8(7)
 4935               	.LVL321:
1037:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4936               		.loc 6 1037 4 is_stmt 1 view .LVU1030
1037:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4937               		.loc 6 1037 17 is_stmt 0 view .LVU1031
 4938 1364 B901      		movw r22,r18
 4939 1366 A801      		movw r20,r16
 4940 1368 EFE0      		ldi r30,15
 4941               		1:
 4942 136a 7695      		lsr r23
 4943 136c 6795      		ror r22
 4944 136e 5795      		ror r21
 4945 1370 4795      		ror r20
 4946 1372 EA95      		dec r30
 4947 1374 01F4      		brne 1b
1037:../../emulator/emulator.c **** 			rs2 = (instr >> 20) & 0x1F;
 4948               		.loc 6 1037 8 view .LVU1032
 4949 1376 B42F      		mov r27,r20
 4950 1378 BF71      		andi r27,lo8(31)
 4951               	.LVL322:
1038:../../emulator/emulator.c **** 			imm = ((instr & 0xF00) >> 7) |
 4952               		.loc 6 1038 4 is_stmt 1 view .LVU1033
1038:../../emulator/emulator.c **** 			imm = ((instr & 0xF00) >> 7) |
 4953               		.loc 6 1038 17 is_stmt 0 view .LVU1034
 4954 137a 4801      		movw r8,r16
 4955 137c 5901      		movw r10,r18
 4956 137e F4E1      		ldi r31,20
 4957               		1:
 4958 1380 B694      		lsr r11
 4959 1382 A794      		ror r10
 4960 1384 9794      		ror r9
 4961 1386 8794      		ror r8
 4962 1388 FA95      		dec r31
 4963 138a 01F4      		brne 1b
1038:../../emulator/emulator.c **** 			imm = ((instr & 0xF00) >> 7) |
 4964               		.loc 6 1038 8 view .LVU1035
 4965 138c A82D      		mov r26,r8
 4966 138e AF71      		andi r26,lo8(31)
 4967               	.LVL323:
1039:../../emulator/emulator.c **** 				((instr & 0x7E000000) >> 20) |
 4968               		.loc 6 1039 4 is_stmt 1 view .LVU1036
1044:../../emulator/emulator.c **** 			switch(funct3)
 4969               		.loc 6 1044 4 view .LVU1037
 4970               	.LBB356:
 4971               	.LBI356:
 105:../../emulator/emulator.c **** {
 4972               		.loc 6 105 19 view .LVU1038
 4973               	.LBB357:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 4974               		.loc 6 107 2 view .LVU1039
 108:../../emulator/emulator.c **** }
 4975               		.loc 6 108 2 view .LVU1040
 4976               	.LBE357:
 4977               	.LBE356:
1039:../../emulator/emulator.c **** 				((instr & 0x7E000000) >> 20) |
 4978               		.loc 6 1039 27 is_stmt 0 view .LVU1041
 4979 1390 B901      		movw r22,r18
 4980 1392 A801      		movw r20,r16
 4981 1394 97E0      		ldi r25,7
 4982               		1:
 4983 1396 7695      		lsr r23
 4984 1398 6795      		ror r22
 4985 139a 5795      		ror r21
 4986 139c 4795      		ror r20
 4987 139e 9A95      		dec r25
 4988 13a0 01F4      		brne 1b
 4989 13a2 4E71      		andi r20,30
 4990 13a4 5527      		clr r21
 4991 13a6 6627      		clr r22
 4992 13a8 7727      		clr r23
1040:../../emulator/emulator.c **** 				((instr & 0x80) << 4) |
 4993               		.loc 6 1040 27 view .LVU1042
 4994 13aa 2401      		movw r4,r8
 4995 13ac 3501      		movw r6,r10
 4996 13ae 90EE      		ldi r25,224
 4997 13b0 4922      		and r4,r25
 4998 13b2 97E0      		ldi r25,7
 4999 13b4 5922      		and r5,r25
 5000 13b6 6624      		clr r6
 5001 13b8 7724      		clr r7
1039:../../emulator/emulator.c **** 				((instr & 0x7E000000) >> 20) |
 5002               		.loc 6 1039 33 view .LVU1043
 5003 13ba 4429      		or r20,r4
 5004 13bc 5529      		or r21,r5
 5005 13be 6629      		or r22,r6
 5006 13c0 7729      		or r23,r7
1041:../../emulator/emulator.c **** 				((instr & 0x80000000) >> 20);
 5007               		.loc 6 1041 21 view .LVU1044
 5008 13c2 E4E0      		ldi r30,4
 5009               		1:
 5010 13c4 000F      		lsl r16
 5011 13c6 111F      		rol r17
 5012 13c8 221F      		rol r18
 5013 13ca 331F      		rol r19
 5014 13cc EA95      		dec r30
 5015 13ce 01F4      		brne 1b
 5016               	.LVL324:
1041:../../emulator/emulator.c **** 				((instr & 0x80000000) >> 20);
 5017               		.loc 6 1041 21 view .LVU1045
 5018 13d0 0027      		clr r16
 5019 13d2 1870      		andi r17,8
 5020 13d4 2227      		clr r18
 5021 13d6 3327      		clr r19
1040:../../emulator/emulator.c **** 				((instr & 0x80) << 4) |
 5022               		.loc 6 1040 34 view .LVU1046
 5023 13d8 042B      		or r16,r20
 5024 13da 152B      		or r17,r21
 5025 13dc 262B      		or r18,r22
 5026 13de 372B      		or r19,r23
1042:../../emulator/emulator.c **** 
 5027               		.loc 6 1042 27 view .LVU1047
 5028 13e0 8824      		clr r8
 5029 13e2 E8E0      		ldi r30,8
 5030 13e4 9E22      		and r9,r30
 5031 13e6 AA24      		clr r10
 5032 13e8 BB24      		clr r11
 5033               	.LVL325:
1039:../../emulator/emulator.c **** 				((instr & 0x7E000000) >> 20) |
 5034               		.loc 6 1039 8 view .LVU1048
 5035 13ea 0829      		or r16,r8
 5036 13ec 1929      		or r17,r9
 5037 13ee 2A29      		or r18,r10
 5038 13f0 3B29      		or r19,r11
 5039               	.LBB359:
 5040               	.LBB358:
 108:../../emulator/emulator.c **** }
 5041               		.loc 6 108 16 view .LVU1049
 5042 13f2 F8E0      		ldi r31,8
 5043 13f4 1F27      		eor r17,r31
 108:../../emulator/emulator.c **** }
 5044               		.loc 6 108 21 view .LVU1050
 5045 13f6 1850      		subi r17,8
 5046 13f8 2109      		sbc r18,__zero_reg__
 5047 13fa 3109      		sbc r19,__zero_reg__
 5048               	.LVL326:
 108:../../emulator/emulator.c **** }
 5049               		.loc 6 108 21 view .LVU1051
 5050               	.LBE358:
 5051               	.LBE359:
1045:../../emulator/emulator.c **** 			{
 5052               		.loc 6 1045 4 is_stmt 1 view .LVU1052
 5053 13fc 8530      		cpi r24,lo8(5)
 5054 13fe 01F4      		brne .+2
 5055 1400 00C0      		rjmp .L154
 5056 1402 00F0      		brlo .+2
 5057 1404 00C0      		rjmp .L155
 5058 1406 8130      		cpi r24,lo8(1)
 5059 1408 01F4      		brne .+2
 5060 140a 00C0      		rjmp .L156
 5061 140c 8430      		cpi r24,lo8(4)
 5062 140e 01F4      		brne .+2
 5063 1410 00C0      		rjmp .L157
 5064 1412 8111      		cpse r24,__zero_reg__
 5065 1414 00C0      		rjmp .L89
1049:../../emulator/emulator.c **** 					if(emu->Registers[rs1] == emu->Registers[rs2])
 5066               		.loc 6 1049 77 view .LVU1053
1050:../../emulator/emulator.c **** 					{
 5067               		.loc 6 1050 6 view .LVU1054
 5068               	.LBE355:
 5069               	.LBB360:
 834:../../emulator/emulator.c **** 			break;
 5070               		.loc 6 834 28 is_stmt 0 view .LVU1055
 5071 1416 F701      		movw r30,r14
 5072 1418 4489      		ldd r20,Z+20
 5073 141a 5589      		ldd r21,Z+21
 5074 141c 6689      		ldd r22,Z+22
 5075 141e 7789      		ldd r23,Z+23
 5076               	.LBE360:
 5077               	.LBB361:
1050:../../emulator/emulator.c **** 					{
 5078               		.loc 6 1050 23 view .LVU1056
 5079 1420 EB2F      		mov r30,r27
 5080 1422 F0E0      		ldi r31,0
 5081 1424 3696      		adiw r30,6
 5082 1426 EE0F      		lsl r30
 5083 1428 FF1F      		rol r31
 5084 142a EE0F      		lsl r30
 5085 142c FF1F      		rol r31
 5086 142e EE0D      		add r30,r14
 5087 1430 FF1D      		adc r31,r15
1050:../../emulator/emulator.c **** 					{
 5088               		.loc 6 1050 46 view .LVU1057
 5089 1432 B0E0      		ldi r27,0
 5090               	.LVL327:
1050:../../emulator/emulator.c **** 					{
 5091               		.loc 6 1050 46 view .LVU1058
 5092 1434 1696      		adiw r26,6
 5093               	.LVL328:
1050:../../emulator/emulator.c **** 					{
 5094               		.loc 6 1050 46 view .LVU1059
 5095 1436 AA0F      		lsl r26
 5096 1438 BB1F      		rol r27
 5097 143a AA0F      		lsl r26
 5098 143c BB1F      		rol r27
 5099               	.LVL329:
1050:../../emulator/emulator.c **** 					{
 5100               		.loc 6 1050 46 view .LVU1060
 5101 143e AE0D      		add r26,r14
 5102 1440 BF1D      		adc r27,r15
1050:../../emulator/emulator.c **** 					{
 5103               		.loc 6 1050 8 view .LVU1061
 5104 1442 8080      		ld r8,Z
 5105 1444 9180      		ldd r9,Z+1
 5106 1446 A280      		ldd r10,Z+2
 5107 1448 B380      		ldd r11,Z+3
 5108 144a 8D91      		ld r24,X+
 5109 144c 9D91      		ld r25,X+
 5110 144e 0D90      		ld __tmp_reg__,X+
 5111 1450 BC91      		ld r27,X
 5112 1452 A02D      		mov r26,__tmp_reg__
 5113 1454 8816      		cp r8,r24
 5114 1456 9906      		cpc r9,r25
 5115 1458 AA06      		cpc r10,r26
 5116 145a BB06      		cpc r11,r27
 5117 145c 01F0      		breq .+2
 5118 145e 00C0      		rjmp .L110
 5119               	.L165:
1062:../../emulator/emulator.c **** 						return 0;
 5120               		.loc 6 1062 7 is_stmt 1 view .LVU1062
1062:../../emulator/emulator.c **** 						return 0;
 5121               		.loc 6 1062 15 is_stmt 0 view .LVU1063
 5122 1460 D901      		movw r26,r18
 5123 1462 C801      		movw r24,r16
 5124 1464 840F      		add r24,r20
 5125 1466 951F      		adc r25,r21
 5126 1468 A61F      		adc r26,r22
 5127 146a B71F      		adc r27,r23
1063:../../emulator/emulator.c **** 					}
 5128               		.loc 6 1063 7 is_stmt 1 view .LVU1064
 5129               	.LVL330:
 5130               	.L161:
1062:../../emulator/emulator.c **** 						return 0;
 5131               		.loc 6 1062 15 is_stmt 0 view .LVU1065
 5132 146c F701      		movw r30,r14
 5133 146e 848B      		std Z+20,r24
 5134 1470 958B      		std Z+21,r25
 5135 1472 A68B      		std Z+22,r26
 5136 1474 B78B      		std Z+23,r27
 5137               	.LVL331:
 5138               	.L87:
1062:../../emulator/emulator.c **** 						return 0;
 5139               		.loc 6 1062 15 view .LVU1066
 5140               	.LBE361:
1160:../../emulator/emulator.c **** }
 5141               		.loc 6 1160 1 view .LVU1067
 5142 1476 8D2D      		mov r24,r13
 5143               	/* epilogue start */
 5144 1478 2C96      		adiw r28,12
 5145 147a 0FB6      		in __tmp_reg__,__SREG__
 5146 147c F894      		cli
 5147 147e DEBF      		out __SP_H__,r29
 5148 1480 0FBE      		out __SREG__,__tmp_reg__
 5149 1482 CDBF      		out __SP_L__,r28
 5150 1484 DF91      		pop r29
 5151 1486 CF91      		pop r28
 5152 1488 1F91      		pop r17
 5153 148a 0F91      		pop r16
 5154 148c FF90      		pop r15
 5155 148e EF90      		pop r14
 5156               	.LVL332:
 5157               		.loc 6 1160 1 view .LVU1068
 5158 1490 DF90      		pop r13
 5159 1492 BF90      		pop r11
 5160 1494 AF90      		pop r10
 5161 1496 9F90      		pop r9
 5162 1498 8F90      		pop r8
 5163 149a 7F90      		pop r7
 5164 149c 6F90      		pop r6
 5165 149e 5F90      		pop r5
 5166 14a0 4F90      		pop r4
 5167 14a2 0895      		ret
 5168               	.LVL333:
 5169               	.L155:
 5170               		.loc 6 1160 1 view .LVU1069
 5171 14a4 F701      		movw r30,r14
 5172 14a6 4489      		ldd r20,Z+20
 5173 14a8 5589      		ldd r21,Z+21
 5174 14aa 6689      		ldd r22,Z+22
 5175 14ac 7789      		ldd r23,Z+23
 5176 14ae EB2F      		mov r30,r27
 5177 14b0 F0E0      		ldi r31,0
 5178 14b2 B0E0      		ldi r27,0
 5179               	.LVL334:
 5180               	.LBB362:
 5181               		.loc 6 1160 1 view .LVU1070
 5182 14b4 8630      		cpi r24,lo8(6)
 5183 14b6 01F0      		breq .+2
 5184 14b8 00C0      		rjmp .L164
1089:../../emulator/emulator.c **** 					if(emu->Registers[rs1] < emu->Registers[rs2])
 5185               		.loc 6 1089 78 is_stmt 1 view .LVU1071
1090:../../emulator/emulator.c **** 					{
 5186               		.loc 6 1090 6 view .LVU1072
1090:../../emulator/emulator.c **** 					{
 5187               		.loc 6 1090 23 is_stmt 0 view .LVU1073
 5188 14ba 3696      		adiw r30,6
 5189               	.LVL335:
1090:../../emulator/emulator.c **** 					{
 5190               		.loc 6 1090 23 view .LVU1074
 5191 14bc EE0F      		lsl r30
 5192 14be FF1F      		rol r31
 5193 14c0 EE0F      		lsl r30
 5194 14c2 FF1F      		rol r31
 5195               	.LVL336:
1090:../../emulator/emulator.c **** 					{
 5196               		.loc 6 1090 23 view .LVU1075
 5197 14c4 EE0D      		add r30,r14
 5198 14c6 FF1D      		adc r31,r15
1090:../../emulator/emulator.c **** 					{
 5199               		.loc 6 1090 45 view .LVU1076
 5200 14c8 1696      		adiw r26,6
 5201               	.LVL337:
1090:../../emulator/emulator.c **** 					{
 5202               		.loc 6 1090 45 view .LVU1077
 5203 14ca AA0F      		lsl r26
 5204 14cc BB1F      		rol r27
 5205 14ce AA0F      		lsl r26
 5206 14d0 BB1F      		rol r27
 5207 14d2 AE0D      		add r26,r14
 5208 14d4 BF1D      		adc r27,r15
1090:../../emulator/emulator.c **** 					{
 5209               		.loc 6 1090 8 view .LVU1078
 5210 14d6 8080      		ld r8,Z
 5211 14d8 9180      		ldd r9,Z+1
 5212 14da A280      		ldd r10,Z+2
 5213 14dc B380      		ldd r11,Z+3
 5214 14de 8D91      		ld r24,X+
 5215 14e0 9D91      		ld r25,X+
 5216 14e2 0D90      		ld __tmp_reg__,X+
 5217 14e4 BC91      		ld r27,X
 5218 14e6 A02D      		mov r26,__tmp_reg__
 5219 14e8 8816      		cp r8,r24
 5220 14ea 9906      		cpc r9,r25
 5221 14ec AA06      		cpc r10,r26
 5222 14ee BB06      		cpc r11,r27
 5223 14f0 00F0      		brlo .+2
 5224 14f2 00C0      		rjmp .L110
 5225 14f4 00C0      		rjmp .L165
 5226               	.LVL338:
 5227               	.L156:
1059:../../emulator/emulator.c **** 					if(emu->Registers[rs1] != emu->Registers[rs2])
 5228               		.loc 6 1059 77 is_stmt 1 view .LVU1079
1060:../../emulator/emulator.c **** 					{
 5229               		.loc 6 1060 6 view .LVU1080
 5230               	.LBE362:
 5231               	.LBB363:
 834:../../emulator/emulator.c **** 			break;
 5232               		.loc 6 834 28 is_stmt 0 view .LVU1081
 5233 14f6 F701      		movw r30,r14
 5234 14f8 4489      		ldd r20,Z+20
 5235 14fa 5589      		ldd r21,Z+21
 5236 14fc 6689      		ldd r22,Z+22
 5237 14fe 7789      		ldd r23,Z+23
 5238               	.LBE363:
 5239               	.LBB364:
1060:../../emulator/emulator.c **** 					{
 5240               		.loc 6 1060 23 view .LVU1082
 5241 1500 EB2F      		mov r30,r27
 5242 1502 F0E0      		ldi r31,0
 5243 1504 3696      		adiw r30,6
 5244 1506 EE0F      		lsl r30
 5245 1508 FF1F      		rol r31
 5246 150a EE0F      		lsl r30
 5247 150c FF1F      		rol r31
 5248 150e EE0D      		add r30,r14
 5249 1510 FF1D      		adc r31,r15
1060:../../emulator/emulator.c **** 					{
 5250               		.loc 6 1060 46 view .LVU1083
 5251 1512 B0E0      		ldi r27,0
 5252               	.LVL339:
1060:../../emulator/emulator.c **** 					{
 5253               		.loc 6 1060 46 view .LVU1084
 5254 1514 1696      		adiw r26,6
 5255               	.LVL340:
1060:../../emulator/emulator.c **** 					{
 5256               		.loc 6 1060 46 view .LVU1085
 5257 1516 AA0F      		lsl r26
 5258 1518 BB1F      		rol r27
 5259 151a AA0F      		lsl r26
 5260 151c BB1F      		rol r27
 5261               	.LVL341:
1060:../../emulator/emulator.c **** 					{
 5262               		.loc 6 1060 46 view .LVU1086
 5263 151e AE0D      		add r26,r14
 5264 1520 BF1D      		adc r27,r15
1060:../../emulator/emulator.c **** 					{
 5265               		.loc 6 1060 8 view .LVU1087
 5266 1522 8080      		ld r8,Z
 5267 1524 9180      		ldd r9,Z+1
 5268 1526 A280      		ldd r10,Z+2
 5269 1528 B380      		ldd r11,Z+3
 5270 152a 8D91      		ld r24,X+
 5271 152c 9D91      		ld r25,X+
 5272 152e 0D90      		ld __tmp_reg__,X+
 5273 1530 BC91      		ld r27,X
 5274 1532 A02D      		mov r26,__tmp_reg__
 5275 1534 8816      		cp r8,r24
 5276 1536 9906      		cpc r9,r25
 5277 1538 AA06      		cpc r10,r26
 5278 153a BB06      		cpc r11,r27
 5279 153c 01F4      		brne .+2
 5280 153e 00C0      		rjmp .L110
 5281 1540 00C0      		rjmp .L165
 5282               	.LVL342:
 5283               	.L157:
1069:../../emulator/emulator.c **** 					if((i32)emu->Registers[rs1] < (i32)emu->Registers[rs2])
 5284               		.loc 6 1069 77 is_stmt 1 view .LVU1088
1070:../../emulator/emulator.c **** 					{
 5285               		.loc 6 1070 6 view .LVU1089
 5286               	.LBE364:
 5287               	.LBB365:
 834:../../emulator/emulator.c **** 			break;
 5288               		.loc 6 834 28 is_stmt 0 view .LVU1090
 5289 1542 F701      		movw r30,r14
 5290 1544 4489      		ldd r20,Z+20
 5291 1546 5589      		ldd r21,Z+21
 5292 1548 6689      		ldd r22,Z+22
 5293 154a 7789      		ldd r23,Z+23
 5294               	.LBE365:
 5295               	.LBB366:
1070:../../emulator/emulator.c **** 					{
 5296               		.loc 6 1070 28 view .LVU1091
 5297 154c EB2F      		mov r30,r27
 5298 154e F0E0      		ldi r31,0
 5299 1550 3696      		adiw r30,6
 5300 1552 EE0F      		lsl r30
 5301 1554 FF1F      		rol r31
 5302 1556 EE0F      		lsl r30
 5303 1558 FF1F      		rol r31
 5304 155a EE0D      		add r30,r14
 5305 155c FF1D      		adc r31,r15
1070:../../emulator/emulator.c **** 					{
 5306               		.loc 6 1070 55 view .LVU1092
 5307 155e B0E0      		ldi r27,0
 5308               	.LVL343:
1070:../../emulator/emulator.c **** 					{
 5309               		.loc 6 1070 55 view .LVU1093
 5310 1560 1696      		adiw r26,6
 5311               	.LVL344:
1070:../../emulator/emulator.c **** 					{
 5312               		.loc 6 1070 55 view .LVU1094
 5313 1562 AA0F      		lsl r26
 5314 1564 BB1F      		rol r27
 5315 1566 AA0F      		lsl r26
 5316 1568 BB1F      		rol r27
 5317               	.LVL345:
1070:../../emulator/emulator.c **** 					{
 5318               		.loc 6 1070 55 view .LVU1095
 5319 156a AE0D      		add r26,r14
 5320 156c BF1D      		adc r27,r15
1070:../../emulator/emulator.c **** 					{
 5321               		.loc 6 1070 8 view .LVU1096
 5322 156e 8080      		ld r8,Z
 5323 1570 9180      		ldd r9,Z+1
 5324 1572 A280      		ldd r10,Z+2
 5325 1574 B380      		ldd r11,Z+3
 5326 1576 8D91      		ld r24,X+
 5327 1578 9D91      		ld r25,X+
 5328 157a 0D90      		ld __tmp_reg__,X+
 5329 157c BC91      		ld r27,X
 5330 157e A02D      		mov r26,__tmp_reg__
 5331 1580 8816      		cp r8,r24
 5332 1582 9906      		cpc r9,r25
 5333 1584 AA06      		cpc r10,r26
 5334 1586 BB06      		cpc r11,r27
 5335 1588 04F0      		brlt .+2
 5336 158a 00C0      		rjmp .L110
 5337 158c 00C0      		rjmp .L165
 5338               	.LVL346:
 5339               	.L154:
1079:../../emulator/emulator.c **** 					if((i32)emu->Registers[rs1] >= (i32)emu->Registers[rs2])
 5340               		.loc 6 1079 77 is_stmt 1 view .LVU1097
1080:../../emulator/emulator.c **** 					{
 5341               		.loc 6 1080 6 view .LVU1098
 5342               	.LBE366:
 5343               	.LBB367:
 834:../../emulator/emulator.c **** 			break;
 5344               		.loc 6 834 28 is_stmt 0 view .LVU1099
 5345 158e F701      		movw r30,r14
 5346 1590 4489      		ldd r20,Z+20
 5347 1592 5589      		ldd r21,Z+21
 5348 1594 6689      		ldd r22,Z+22
 5349 1596 7789      		ldd r23,Z+23
 5350               	.LBE367:
 5351               	.LBB368:
1080:../../emulator/emulator.c **** 					{
 5352               		.loc 6 1080 28 view .LVU1100
 5353 1598 EB2F      		mov r30,r27
 5354 159a F0E0      		ldi r31,0
 5355 159c 3696      		adiw r30,6
 5356 159e EE0F      		lsl r30
 5357 15a0 FF1F      		rol r31
 5358 15a2 EE0F      		lsl r30
 5359 15a4 FF1F      		rol r31
 5360               	.LVL347:
1080:../../emulator/emulator.c **** 					{
 5361               		.loc 6 1080 28 view .LVU1101
 5362 15a6 EE0D      		add r30,r14
 5363 15a8 FF1D      		adc r31,r15
1080:../../emulator/emulator.c **** 					{
 5364               		.loc 6 1080 56 view .LVU1102
 5365 15aa B0E0      		ldi r27,0
 5366 15ac 1696      		adiw r26,6
 5367               	.LVL348:
1080:../../emulator/emulator.c **** 					{
 5368               		.loc 6 1080 56 view .LVU1103
 5369 15ae AA0F      		lsl r26
 5370 15b0 BB1F      		rol r27
 5371 15b2 AA0F      		lsl r26
 5372 15b4 BB1F      		rol r27
 5373               	.LVL349:
1080:../../emulator/emulator.c **** 					{
 5374               		.loc 6 1080 56 view .LVU1104
 5375 15b6 AE0D      		add r26,r14
 5376 15b8 BF1D      		adc r27,r15
1080:../../emulator/emulator.c **** 					{
 5377               		.loc 6 1080 8 view .LVU1105
 5378 15ba 8080      		ld r8,Z
 5379 15bc 9180      		ldd r9,Z+1
 5380 15be A280      		ldd r10,Z+2
 5381 15c0 B380      		ldd r11,Z+3
 5382 15c2 8D91      		ld r24,X+
 5383 15c4 9D91      		ld r25,X+
 5384 15c6 0D90      		ld __tmp_reg__,X+
 5385 15c8 BC91      		ld r27,X
 5386 15ca A02D      		mov r26,__tmp_reg__
 5387 15cc 8816      		cp r8,r24
 5388 15ce 9906      		cpc r9,r25
 5389 15d0 AA06      		cpc r10,r26
 5390 15d2 BB06      		cpc r11,r27
 5391 15d4 04F4      		brge .+2
 5392 15d6 00C0      		rjmp .L110
 5393 15d8 00C0      		rjmp .L165
 5394               	.LVL350:
 5395               	.L164:
1099:../../emulator/emulator.c **** 					if(emu->Registers[rs1] >= emu->Registers[rs2])
 5396               		.loc 6 1099 78 is_stmt 1 view .LVU1106
1100:../../emulator/emulator.c **** 					{
 5397               		.loc 6 1100 6 view .LVU1107
1100:../../emulator/emulator.c **** 					{
 5398               		.loc 6 1100 23 is_stmt 0 view .LVU1108
 5399 15da 3696      		adiw r30,6
 5400               	.LVL351:
1100:../../emulator/emulator.c **** 					{
 5401               		.loc 6 1100 23 view .LVU1109
 5402 15dc EE0F      		lsl r30
 5403 15de FF1F      		rol r31
 5404 15e0 EE0F      		lsl r30
 5405 15e2 FF1F      		rol r31
 5406               	.LVL352:
1100:../../emulator/emulator.c **** 					{
 5407               		.loc 6 1100 23 view .LVU1110
 5408 15e4 EE0D      		add r30,r14
 5409 15e6 FF1D      		adc r31,r15
1100:../../emulator/emulator.c **** 					{
 5410               		.loc 6 1100 46 view .LVU1111
 5411 15e8 1696      		adiw r26,6
 5412               	.LVL353:
1100:../../emulator/emulator.c **** 					{
 5413               		.loc 6 1100 46 view .LVU1112
 5414 15ea AA0F      		lsl r26
 5415 15ec BB1F      		rol r27
 5416 15ee AA0F      		lsl r26
 5417 15f0 BB1F      		rol r27
 5418 15f2 AE0D      		add r26,r14
 5419 15f4 BF1D      		adc r27,r15
1100:../../emulator/emulator.c **** 					{
 5420               		.loc 6 1100 8 view .LVU1113
 5421 15f6 8080      		ld r8,Z
 5422 15f8 9180      		ldd r9,Z+1
 5423 15fa A280      		ldd r10,Z+2
 5424 15fc B380      		ldd r11,Z+3
 5425 15fe 8D91      		ld r24,X+
 5426 1600 9D91      		ld r25,X+
 5427 1602 0D90      		ld __tmp_reg__,X+
 5428 1604 BC91      		ld r27,X
 5429 1606 A02D      		mov r26,__tmp_reg__
 5430 1608 8816      		cp r8,r24
 5431 160a 9906      		cpc r9,r25
 5432 160c AA06      		cpc r10,r26
 5433 160e BB06      		cpc r11,r27
 5434 1610 00F4      		brsh .+2
 5435 1612 00C0      		rjmp .L110
 5436 1614 00C0      		rjmp .L165
 5437               	.LVL354:
 5438               	.L93:
1100:../../emulator/emulator.c **** 					{
 5439               		.loc 6 1100 8 view .LVU1114
 5440               	.LBE368:
 5441               	.LBB369:
1116:../../emulator/emulator.c **** 			u32 imm;
 5442               		.loc 6 1116 4 is_stmt 1 view .LVU1115
1117:../../emulator/emulator.c **** 			u8 rd;
 5443               		.loc 6 1117 4 view .LVU1116
1118:../../emulator/emulator.c **** 
 5444               		.loc 6 1118 4 view .LVU1117
1120:../../emulator/emulator.c **** 
 5445               		.loc 6 1120 4 view .LVU1118
1122:../../emulator/emulator.c **** 					(instr & 0xFF000) |
 5446               		.loc 6 1122 4 view .LVU1119
1127:../../emulator/emulator.c **** 			EMU_LOG(PSTR("jal r%"PRIu8", pc%+"PRIi32), rd, offset);
 5447               		.loc 6 1127 4 view .LVU1120
 5448               	.LBB370:
 5449               	.LBI370:
 105:../../emulator/emulator.c **** {
 5450               		.loc 6 105 19 view .LVU1121
 5451               	.LBB371:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 5452               		.loc 6 107 2 view .LVU1122
 108:../../emulator/emulator.c **** }
 5453               		.loc 6 108 2 view .LVU1123
 108:../../emulator/emulator.c **** }
 5454               		.loc 6 108 2 is_stmt 0 view .LVU1124
 5455               	.LBE371:
 5456               	.LBE370:
1128:../../emulator/emulator.c **** 			emu->Registers[rd] = emu->PC + 4;
 5457               		.loc 6 1128 58 is_stmt 1 view .LVU1125
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5458               		.loc 6 1129 4 view .LVU1126
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5459               		.loc 6 1129 28 is_stmt 0 view .LVU1127
 5460 1616 D701      		movw r26,r14
 5461 1618 5496      		adiw r26,20
 5462 161a 4D91      		ld r20,X+
 5463 161c 5D91      		ld r21,X+
 5464 161e 6D91      		ld r22,X+
 5465 1620 7C91      		ld r23,X
 5466 1622 5797      		sbiw r26,20+3
1120:../../emulator/emulator.c **** 
 5467               		.loc 6 1120 16 view .LVU1128
 5468 1624 D901      		movw r26,r18
 5469 1626 C801      		movw r24,r16
 5470               	.LVL355:
1120:../../emulator/emulator.c **** 
 5471               		.loc 6 1120 16 view .LVU1129
 5472 1628 E7E0      		ldi r30,7
 5473               		1:
 5474 162a B695      		lsr r27
 5475 162c A795      		ror r26
 5476 162e 9795      		ror r25
 5477 1630 8795      		ror r24
 5478 1632 EA95      		dec r30
 5479 1634 01F4      		brne 1b
1120:../../emulator/emulator.c **** 
 5480               		.loc 6 1120 7 view .LVU1130
 5481 1636 8F71      		andi r24,lo8(31)
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5482               		.loc 6 1129 18 view .LVU1131
 5483 1638 E82F      		mov r30,r24
 5484 163a F0E0      		ldi r31,0
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5485               		.loc 6 1129 23 view .LVU1132
 5486 163c 3696      		adiw r30,6
 5487 163e EE0F      		lsl r30
 5488 1640 FF1F      		rol r31
 5489 1642 EE0F      		lsl r30
 5490 1644 FF1F      		rol r31
 5491 1646 EE0D      		add r30,r14
 5492 1648 FF1D      		adc r31,r15
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5493               		.loc 6 1129 33 view .LVU1133
 5494 164a DB01      		movw r26,r22
 5495 164c CA01      		movw r24,r20
 5496 164e 0496      		adiw r24,4
 5497 1650 A11D      		adc r26,__zero_reg__
 5498 1652 B11D      		adc r27,__zero_reg__
1129:../../emulator/emulator.c **** 			emu->PC += offset;
 5499               		.loc 6 1129 23 view .LVU1134
 5500 1654 8083      		st Z,r24
 5501 1656 9183      		std Z+1,r25
 5502 1658 A283      		std Z+2,r26
 5503 165a B383      		std Z+3,r27
1130:../../emulator/emulator.c **** 			return 0;
 5504               		.loc 6 1130 4 is_stmt 1 view .LVU1135
1122:../../emulator/emulator.c **** 					(instr & 0xFF000) |
 5505               		.loc 6 1122 32 is_stmt 0 view .LVU1136
 5506 165c D901      		movw r26,r18
 5507 165e C801      		movw r24,r16
 5508 1660 ECE0      		ldi r30,12
 5509               		1:
 5510 1662 B695      		lsr r27
 5511 1664 A795      		ror r26
 5512 1666 9795      		ror r25
 5513 1668 8795      		ror r24
 5514 166a EA95      		dec r30
 5515 166c 01F4      		brne 1b
 5516               	.LVL356:
1122:../../emulator/emulator.c **** 					(instr & 0xFF000) |
 5517               		.loc 6 1122 32 view .LVU1137
 5518 166e 8827      		clr r24
 5519 1670 9927      		clr r25
 5520 1672 A870      		andi r26,8
 5521 1674 BB27      		clr r27
 5522               	.LVL357:
1124:../../emulator/emulator.c **** 					((instr & 0x7FE00000) >> 20);
 5523               		.loc 6 1124 26 view .LVU1138
 5524 1676 4801      		movw r8,r16
 5525 1678 5901      		movw r10,r18
 5526 167a F9E0      		ldi r31,9
 5527               		1:
 5528 167c B694      		lsr r11
 5529 167e A794      		ror r10
 5530 1680 9794      		ror r9
 5531 1682 8794      		ror r8
 5532 1684 FA95      		dec r31
 5533 1686 01F4      		brne 1b
 5534               	.LVL358:
1124:../../emulator/emulator.c **** 					((instr & 0x7FE00000) >> 20);
 5535               		.loc 6 1124 26 view .LVU1139
 5536 1688 8824      		clr r8
 5537 168a E8E0      		ldi r30,8
 5538 168c 9E22      		and r9,r30
 5539 168e AA24      		clr r10
 5540 1690 BB24      		clr r11
 5541               	.LVL359:
1123:../../emulator/emulator.c **** 					((instr & 0x100000) >> 9) |
 5542               		.loc 6 1123 24 view .LVU1140
 5543 1692 8829      		or r24,r8
 5544 1694 9929      		or r25,r9
 5545 1696 AA29      		or r26,r10
 5546 1698 BB29      		or r27,r11
 5547               	.LVL360:
1123:../../emulator/emulator.c **** 					((instr & 0x100000) >> 9) |
 5548               		.loc 6 1123 13 view .LVU1141
 5549 169a 4801      		movw r8,r16
 5550 169c 5901      		movw r10,r18
 5551 169e 8824      		clr r8
 5552 16a0 F0EF      		ldi r31,240
 5553 16a2 9F22      		and r9,r31
 5554 16a4 FFE0      		ldi r31,15
 5555 16a6 AF22      		and r10,r31
 5556 16a8 BB24      		clr r11
 5557               	.LVL361:
1123:../../emulator/emulator.c **** 					((instr & 0x100000) >> 9) |
 5558               		.loc 6 1123 24 view .LVU1142
 5559 16aa 8829      		or r24,r8
 5560 16ac 9929      		or r25,r9
 5561 16ae AA29      		or r26,r10
 5562 16b0 BB29      		or r27,r11
 5563               	.LVL362:
1125:../../emulator/emulator.c **** 
 5564               		.loc 6 1125 28 view .LVU1143
 5565 16b2 E4E1      		ldi r30,20
 5566               		1:
 5567 16b4 3695      		lsr r19
 5568 16b6 2795      		ror r18
 5569 16b8 1795      		ror r17
 5570 16ba 0795      		ror r16
 5571 16bc EA95      		dec r30
 5572 16be 01F4      		brne 1b
 5573               	.LVL363:
1125:../../emulator/emulator.c **** 
 5574               		.loc 6 1125 28 view .LVU1144
 5575 16c0 0E7F      		andi r16,254
 5576 16c2 1770      		andi r17,7
 5577 16c4 2227      		clr r18
 5578 16c6 3327      		clr r19
 5579               	.LVL364:
1122:../../emulator/emulator.c **** 					(instr & 0xFF000) |
 5580               		.loc 6 1122 8 view .LVU1145
 5581 16c8 802B      		or r24,r16
 5582 16ca 912B      		or r25,r17
 5583 16cc A22B      		or r26,r18
 5584 16ce B32B      		or r27,r19
 5585               	.LBB373:
 5586               	.LBB372:
 108:../../emulator/emulator.c **** }
 5587               		.loc 6 108 16 view .LVU1146
 5588 16d0 8C01      		movw r16,r24
 5589 16d2 9D01      		movw r18,r26
 5590 16d4 E8E0      		ldi r30,8
 5591 16d6 2E27      		eor r18,r30
 5592               	.LBE372:
 5593               	.LBE373:
1130:../../emulator/emulator.c **** 			return 0;
 5594               		.loc 6 1130 12 view .LVU1147
 5595 16d8 DB01      		movw r26,r22
 5596 16da CA01      		movw r24,r20
 5597 16dc 1897      		sbiw r26,8
 5598               	.LVL365:
 5599               	.L166:
1130:../../emulator/emulator.c **** 			return 0;
 5600               		.loc 6 1130 12 view .LVU1148
 5601               	.LBE369:
 5602               	.LBB374:
1149:../../emulator/emulator.c **** 			return 0;
 5603               		.loc 6 1149 34 view .LVU1149
 5604 16de 800F      		add r24,r16
 5605 16e0 911F      		adc r25,r17
 5606 16e2 A21F      		adc r26,r18
 5607 16e4 B31F      		adc r27,r19
1150:../../emulator/emulator.c **** 		}
 5608               		.loc 6 1150 4 is_stmt 1 view .LVU1150
1150:../../emulator/emulator.c **** 		}
 5609               		.loc 6 1150 11 is_stmt 0 view .LVU1151
 5610 16e6 00C0      		rjmp .L161
 5611               	.LVL366:
 5612               	.L94:
1136:../../emulator/emulator.c **** 			i32 offset;
 5613               		.loc 6 1136 4 is_stmt 1 view .LVU1152
1137:../../emulator/emulator.c **** 			u32 imm;
 5614               		.loc 6 1137 4 view .LVU1153
1138:../../emulator/emulator.c **** 			rd = (instr >> 7) & 0x1F;
 5615               		.loc 6 1138 4 view .LVU1154
1139:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 5616               		.loc 6 1139 4 view .LVU1155
1140:../../emulator/emulator.c **** 			imm = (instr >> 20) & ~1;
 5617               		.loc 6 1140 4 view .LVU1156
1141:../../emulator/emulator.c **** 
 5618               		.loc 6 1141 4 view .LVU1157
1143:../../emulator/emulator.c **** 
 5619               		.loc 6 1143 4 view .LVU1158
 5620               	.LBB375:
 5621               	.LBI375:
 105:../../emulator/emulator.c **** {
 5622               		.loc 6 105 19 view .LVU1159
 5623               	.LBB376:
 107:../../emulator/emulator.c **** 	return (value ^ m) - m;
 5624               		.loc 6 107 2 view .LVU1160
 108:../../emulator/emulator.c **** }
 5625               		.loc 6 108 2 view .LVU1161
 108:../../emulator/emulator.c **** }
 5626               		.loc 6 108 2 is_stmt 0 view .LVU1162
 5627               	.LBE376:
 5628               	.LBE375:
1146:../../emulator/emulator.c **** 
 5629               		.loc 6 1146 21 is_stmt 1 view .LVU1163
1148:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
 5630               		.loc 6 1148 4 view .LVU1164
1139:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 5631               		.loc 6 1139 16 is_stmt 0 view .LVU1165
 5632 16e8 D901      		movw r26,r18
 5633 16ea C801      		movw r24,r16
 5634               	.LVL367:
1139:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 5635               		.loc 6 1139 16 view .LVU1166
 5636 16ec 47E0      		ldi r20,7
 5637               		1:
 5638 16ee B695      		lsr r27
 5639 16f0 A795      		ror r26
 5640 16f2 9795      		ror r25
 5641 16f4 8795      		ror r24
 5642 16f6 4A95      		dec r20
 5643 16f8 01F4      		brne 1b
1139:../../emulator/emulator.c **** 			rs1 = (instr >> 15) & 0x1F;
 5644               		.loc 6 1139 7 view .LVU1167
 5645 16fa 8F71      		andi r24,lo8(31)
1148:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
 5646               		.loc 6 1148 18 view .LVU1168
 5647 16fc E82F      		mov r30,r24
 5648 16fe F0E0      		ldi r31,0
1148:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
 5649               		.loc 6 1148 23 view .LVU1169
 5650 1700 3696      		adiw r30,6
 5651 1702 EE0F      		lsl r30
 5652 1704 FF1F      		rol r31
 5653 1706 EE0F      		lsl r30
 5654 1708 FF1F      		rol r31
 5655 170a AF01      		movw r20,r30
 5656 170c 4E0D      		add r20,r14
 5657 170e 5F1D      		adc r21,r15
1148:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
 5658               		.loc 6 1148 33 view .LVU1170
 5659 1710 F701      		movw r30,r14
 5660 1712 8489      		ldd r24,Z+20
 5661 1714 9589      		ldd r25,Z+21
 5662 1716 A689      		ldd r26,Z+22
 5663 1718 B789      		ldd r27,Z+23
 5664 171a 0496      		adiw r24,4
 5665 171c A11D      		adc r26,__zero_reg__
 5666 171e B11D      		adc r27,__zero_reg__
1148:../../emulator/emulator.c **** 			emu->PC = emu->Registers[rs1] + offset;
 5667               		.loc 6 1148 23 view .LVU1171
 5668 1720 FA01      		movw r30,r20
 5669 1722 8083      		st Z,r24
 5670 1724 9183      		std Z+1,r25
 5671 1726 A283      		std Z+2,r26
 5672 1728 B383      		std Z+3,r27
1149:../../emulator/emulator.c **** 			return 0;
 5673               		.loc 6 1149 4 is_stmt 1 view .LVU1172
1140:../../emulator/emulator.c **** 			imm = (instr >> 20) & ~1;
 5674               		.loc 6 1140 17 is_stmt 0 view .LVU1173
 5675 172a D901      		movw r26,r18
 5676 172c C801      		movw r24,r16
 5677 172e 6FE0      		ldi r22,15
 5678               		1:
 5679 1730 B695      		lsr r27
 5680 1732 A795      		ror r26
 5681 1734 9795      		ror r25
 5682 1736 8795      		ror r24
 5683 1738 6A95      		dec r22
 5684 173a 01F4      		brne 1b
1140:../../emulator/emulator.c **** 			imm = (instr >> 20) & ~1;
 5685               		.loc 6 1140 8 view .LVU1174
 5686 173c 8F71      		andi r24,lo8(31)
1149:../../emulator/emulator.c **** 			return 0;
 5687               		.loc 6 1149 28 view .LVU1175
 5688 173e E82F      		mov r30,r24
 5689 1740 F0E0      		ldi r31,0
 5690 1742 3696      		adiw r30,6
 5691 1744 EE0F      		lsl r30
 5692 1746 FF1F      		rol r31
 5693 1748 EE0F      		lsl r30
 5694 174a FF1F      		rol r31
 5695 174c EE0D      		add r30,r14
 5696 174e FF1D      		adc r31,r15
1141:../../emulator/emulator.c **** 
 5697               		.loc 6 1141 17 view .LVU1176
 5698 1750 A4E1      		ldi r26,20
 5699               		1:
 5700 1752 3695      		lsr r19
 5701 1754 2795      		ror r18
 5702 1756 1795      		ror r17
 5703 1758 0795      		ror r16
 5704 175a AA95      		dec r26
 5705 175c 01F4      		brne 1b
 5706               	.LVL368:
1141:../../emulator/emulator.c **** 
 5707               		.loc 6 1141 8 view .LVU1177
 5708 175e 0E7F      		andi r16,254
 5709               	.LVL369:
 5710               	.LBB378:
 5711               	.LBB377:
 108:../../emulator/emulator.c **** }
 5712               		.loc 6 108 16 view .LVU1178
 5713 1760 48E0      		ldi r20,8
 5714 1762 1427      		eor r17,r20
 5715               	.LVL370:
 108:../../emulator/emulator.c **** }
 5716               		.loc 6 108 21 view .LVU1179
 5717 1764 1850      		subi r17,8
 5718 1766 2109      		sbc r18,__zero_reg__
 5719 1768 3109      		sbc r19,__zero_reg__
 5720               	.LVL371:
 108:../../emulator/emulator.c **** }
 5721               		.loc 6 108 21 view .LVU1180
 5722               	.LBE377:
 5723               	.LBE378:
1149:../../emulator/emulator.c **** 			return 0;
 5724               		.loc 6 1149 34 view .LVU1181
 5725 176a 8081      		ld r24,Z
 5726 176c 9181      		ldd r25,Z+1
 5727 176e A281      		ldd r26,Z+2
 5728 1770 B381      		ldd r27,Z+3
 5729 1772 00C0      		rjmp .L166
 5730               	.LBE374:
 5731               		.cfi_endproc
 5732               	.LFE36:
 5735               	_lcd_write_reg:
 5736               	.LVL372:
 5737               	.LFB46:
 164:lcd/lcd.c     **** 	LCD_DC_0;
 5738               		.loc 2 164 1 is_stmt 1 view -0
 5739               		.cfi_startproc
 5740               	/* prologue: function */
 5741               	/* frame size = 0 */
 5742               	/* stack size = 0 */
 5743               	.L__stack_usage = 0
 165:lcd/lcd.c     **** 	LCD_CS_0;
 5744               		.loc 2 165 2 view .LVU1183
 5745 1774 4198      		cbi 0x8,1
 166:lcd/lcd.c     **** 	spi_xchg(reg);
 5746               		.loc 2 166 2 view .LVU1184
 5747 1776 4098      		cbi 0x8,0
 167:lcd/lcd.c     **** 	LCD_CS_1;
 5748               		.loc 2 167 2 view .LVU1185
 5749 1778 0E94 0000 		call spi_xchg
 5750               	.LVL373:
 168:lcd/lcd.c     **** }
 5751               		.loc 2 168 2 view .LVU1186
 5752 177c 409A      		sbi 0x8,0
 5753               	/* epilogue start */
 169:lcd/lcd.c     **** 
 5754               		.loc 2 169 1 is_stmt 0 view .LVU1187
 5755 177e 0895      		ret
 5756               		.cfi_endproc
 5757               	.LFE46:
 5760               	_lcd_write_data:
 5761               	.LVL374:
 5762               	.LFB47:
 177:lcd/lcd.c     **** 	LCD_DC_1;
 5763               		.loc 2 177 1 is_stmt 1 view -0
 5764               		.cfi_startproc
 177:lcd/lcd.c     **** 	LCD_DC_1;
 5765               		.loc 2 177 1 is_stmt 0 view .LVU1189
 5766 1780 CF93      		push r28
 5767               		.cfi_def_cfa_offset 3
 5768               		.cfi_offset 28, -2
 5769               	/* prologue: function */
 5770               	/* frame size = 0 */
 5771               	/* stack size = 1 */
 5772               	.L__stack_usage = 1
 5773 1782 C82F      		mov r28,r24
 178:lcd/lcd.c     **** 	LCD_CS_0;
 5774               		.loc 2 178 2 is_stmt 1 view .LVU1190
 5775 1784 419A      		sbi 0x8,1
 179:lcd/lcd.c     **** 	spi_xchg(0);
 5776               		.loc 2 179 2 view .LVU1191
 5777 1786 4098      		cbi 0x8,0
 180:lcd/lcd.c     **** 	spi_xchg(data);
 5778               		.loc 2 180 2 view .LVU1192
 5779 1788 80E0      		ldi r24,0
 5780               	.LVL375:
 180:lcd/lcd.c     **** 	spi_xchg(data);
 5781               		.loc 2 180 2 is_stmt 0 view .LVU1193
 5782 178a 0E94 0000 		call spi_xchg
 5783               	.LVL376:
 181:lcd/lcd.c     **** 	LCD_CS_1;
 5784               		.loc 2 181 2 is_stmt 1 view .LVU1194
 5785 178e 8C2F      		mov r24,r28
 5786 1790 0E94 0000 		call spi_xchg
 5787               	.LVL377:
 182:lcd/lcd.c     **** }
 5788               		.loc 2 182 2 view .LVU1195
 5789 1794 409A      		sbi 0x8,0
 5790               	/* epilogue start */
 183:lcd/lcd.c     **** 
 5791               		.loc 2 183 1 is_stmt 0 view .LVU1196
 5792 1796 CF91      		pop r28
 5793               	.LVL378:
 183:lcd/lcd.c     **** 
 5794               		.loc 2 183 1 view .LVU1197
 5795 1798 0895      		ret
 5796               		.cfi_endproc
 5797               	.LFE47:
 5800               	_lcd_window_start:
 5801               	.LVL379:
 5802               	.LFB48:
 194:lcd/lcd.c     **** 	u16 x_end, y_end;
 5803               		.loc 2 194 1 is_stmt 1 view -0
 5804               		.cfi_startproc
 194:lcd/lcd.c     **** 	u16 x_end, y_end;
 5805               		.loc 2 194 1 is_stmt 0 view .LVU1199
 5806 179a CF92      		push r12
 5807               		.cfi_def_cfa_offset 3
 5808               		.cfi_offset 12, -2
 5809 179c DF92      		push r13
 5810               		.cfi_def_cfa_offset 4
 5811               		.cfi_offset 13, -3
 5812 179e EF92      		push r14
 5813               		.cfi_def_cfa_offset 5
 5814               		.cfi_offset 14, -4
 5815 17a0 FF92      		push r15
 5816               		.cfi_def_cfa_offset 6
 5817               		.cfi_offset 15, -5
 5818 17a2 0F93      		push r16
 5819               		.cfi_def_cfa_offset 7
 5820               		.cfi_offset 16, -6
 5821 17a4 1F93      		push r17
 5822               		.cfi_def_cfa_offset 8
 5823               		.cfi_offset 17, -7
 5824 17a6 CF93      		push r28
 5825               		.cfi_def_cfa_offset 9
 5826               		.cfi_offset 28, -8
 5827 17a8 DF93      		push r29
 5828               		.cfi_def_cfa_offset 10
 5829               		.cfi_offset 29, -9
 5830               	/* prologue: function */
 5831               	/* frame size = 0 */
 5832               	/* stack size = 8 */
 5833               	.L__stack_usage = 8
 5834 17aa 6C01      		movw r12,r24
 5835 17ac 7B01      		movw r14,r22
 195:lcd/lcd.c     **** 
 5836               		.loc 2 195 2 is_stmt 1 view .LVU1200
 197:lcd/lcd.c     **** 	y_end = y + h - 1;
 5837               		.loc 2 197 2 view .LVU1201
 197:lcd/lcd.c     **** 	y_end = y + h - 1;
 5838               		.loc 2 197 8 is_stmt 0 view .LVU1202
 5839 17ae 8A01      		movw r16,r20
 5840 17b0 0150      		subi r16,1
 5841 17b2 1109      		sbc r17,__zero_reg__
 5842 17b4 080F      		add r16,r24
 5843 17b6 191F      		adc r17,r25
 5844               	.LVL380:
 198:lcd/lcd.c     **** 
 5845               		.loc 2 198 2 is_stmt 1 view .LVU1203
 198:lcd/lcd.c     **** 
 5846               		.loc 2 198 8 is_stmt 0 view .LVU1204
 5847 17b8 E901      		movw r28,r18
 5848 17ba 2197      		sbiw r28,1
 5849 17bc C60F      		add r28,r22
 5850 17be D71F      		adc r29,r23
 5851               	.LVL381:
 200:lcd/lcd.c     **** 
 5852               		.loc 2 200 2 is_stmt 1 view .LVU1205
 5853 17c0 0E94 0000 		call spi_fast
 5854               	.LVL382:
 202:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
 5855               		.loc 2 202 2 view .LVU1206
 5856 17c4 8AE2      		ldi r24,lo8(42)
 5857 17c6 0E94 0000 		call _lcd_write_reg
 5858               	.LVL383:
 203:lcd/lcd.c     **** 	_lcd_write_data(x);
 5859               		.loc 2 203 2 view .LVU1207
 5860 17ca 8D2D      		mov r24,r13
 5861 17cc 0E94 0000 		call _lcd_write_data
 5862               	.LVL384:
 204:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
 5863               		.loc 2 204 2 view .LVU1208
 5864 17d0 8C2D      		mov r24,r12
 5865 17d2 0E94 0000 		call _lcd_write_data
 5866               	.LVL385:
 205:lcd/lcd.c     **** 	_lcd_write_data(x_end);
 5867               		.loc 2 205 2 view .LVU1209
 5868 17d6 812F      		mov r24,r17
 5869 17d8 0E94 0000 		call _lcd_write_data
 5870               	.LVL386:
 206:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
 5871               		.loc 2 206 2 view .LVU1210
 5872 17dc 802F      		mov r24,r16
 5873 17de 0E94 0000 		call _lcd_write_data
 5874               	.LVL387:
 207:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
 5875               		.loc 2 207 2 view .LVU1211
 5876 17e2 8BE2      		ldi r24,lo8(43)
 5877 17e4 0E94 0000 		call _lcd_write_reg
 5878               	.LVL388:
 208:lcd/lcd.c     **** 	_lcd_write_data(y);
 5879               		.loc 2 208 2 view .LVU1212
 5880 17e8 8F2D      		mov r24,r15
 5881 17ea 0E94 0000 		call _lcd_write_data
 5882               	.LVL389:
 209:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
 5883               		.loc 2 209 2 view .LVU1213
 5884 17ee 8E2D      		mov r24,r14
 5885 17f0 0E94 0000 		call _lcd_write_data
 5886               	.LVL390:
 210:lcd/lcd.c     **** 	_lcd_write_data(y_end);
 5887               		.loc 2 210 2 view .LVU1214
 5888 17f4 8D2F      		mov r24,r29
 5889 17f6 0E94 0000 		call _lcd_write_data
 5890               	.LVL391:
 211:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
 5891               		.loc 2 211 2 view .LVU1215
 5892 17fa 8C2F      		mov r24,r28
 5893 17fc 0E94 0000 		call _lcd_write_data
 5894               	.LVL392:
 212:lcd/lcd.c     **** 	LCD_DC_1;
 5895               		.loc 2 212 2 view .LVU1216
 5896 1800 8CE2      		ldi r24,lo8(44)
 5897 1802 0E94 0000 		call _lcd_write_reg
 5898               	.LVL393:
 213:lcd/lcd.c     **** 	LCD_CS_0;
 5899               		.loc 2 213 2 view .LVU1217
 5900 1806 419A      		sbi 0x8,1
 214:lcd/lcd.c     **** }
 5901               		.loc 2 214 2 view .LVU1218
 5902 1808 4098      		cbi 0x8,0
 5903               	/* epilogue start */
 215:lcd/lcd.c     **** 
 5904               		.loc 2 215 1 is_stmt 0 view .LVU1219
 5905 180a DF91      		pop r29
 5906 180c CF91      		pop r28
 5907               	.LVL394:
 215:lcd/lcd.c     **** 
 5908               		.loc 2 215 1 view .LVU1220
 5909 180e 1F91      		pop r17
 5910 1810 0F91      		pop r16
 5911               	.LVL395:
 215:lcd/lcd.c     **** 
 5912               		.loc 2 215 1 view .LVU1221
 5913 1812 FF90      		pop r15
 5914 1814 EF90      		pop r14
 5915               	.LVL396:
 215:lcd/lcd.c     **** 
 5916               		.loc 2 215 1 view .LVU1222
 5917 1816 DF90      		pop r13
 5918 1818 CF90      		pop r12
 5919               	.LVL397:
 215:lcd/lcd.c     **** 
 5920               		.loc 2 215 1 view .LVU1223
 5921 181a 0895      		ret
 5922               		.cfi_endproc
 5923               	.LFE48:
 5926               	_lcd_pixel:
 5927               	.LVL398:
 5928               	.LFB49:
 223:lcd/lcd.c     **** 	spi_xchg(data >> 8);
 5929               		.loc 2 223 1 is_stmt 1 view -0
 5930               		.cfi_startproc
 223:lcd/lcd.c     **** 	spi_xchg(data >> 8);
 5931               		.loc 2 223 1 is_stmt 0 view .LVU1225
 5932 181c CF93      		push r28
 5933               		.cfi_def_cfa_offset 3
 5934               		.cfi_offset 28, -2
 5935               	/* prologue: function */
 5936               	/* frame size = 0 */
 5937               	/* stack size = 1 */
 5938               	.L__stack_usage = 1
 5939 181e C82F      		mov r28,r24
 5940 1820 892F      		mov r24,r25
 5941               	.LVL399:
 224:lcd/lcd.c     **** 	spi_xchg(data);
 5942               		.loc 2 224 2 is_stmt 1 view .LVU1226
 5943 1822 0E94 0000 		call spi_xchg
 5944               	.LVL400:
 225:lcd/lcd.c     **** }
 5945               		.loc 2 225 2 view .LVU1227
 5946 1826 8C2F      		mov r24,r28
 5947               	/* epilogue start */
 226:lcd/lcd.c     **** 
 5948               		.loc 2 226 1 is_stmt 0 view .LVU1228
 5949 1828 CF91      		pop r28
 225:lcd/lcd.c     **** }
 5950               		.loc 2 225 2 view .LVU1229
 5951 182a 0C94 0000 		jmp spi_xchg
 5952               	.LVL401:
 5953               		.cfi_endproc
 5954               	.LFE49:
 5957               	syscall_gfx_rect:
 5958               	.LVL402:
 5959               	.LFB50:
 472:../../emulator/emulator.c **** 	u16 x, y, w, h;
 5960               		.loc 6 472 1 is_stmt 1 view -0
 5961               		.cfi_startproc
 472:../../emulator/emulator.c **** 	u16 x, y, w, h;
 5962               		.loc 6 472 1 is_stmt 0 view .LVU1231
 5963 182e 7F92      		push r7
 5964               		.cfi_def_cfa_offset 3
 5965               		.cfi_offset 7, -2
 5966 1830 8F92      		push r8
 5967               		.cfi_def_cfa_offset 4
 5968               		.cfi_offset 8, -3
 5969 1832 9F92      		push r9
 5970               		.cfi_def_cfa_offset 5
 5971               		.cfi_offset 9, -4
 5972 1834 AF92      		push r10
 5973               		.cfi_def_cfa_offset 6
 5974               		.cfi_offset 10, -5
 5975 1836 BF92      		push r11
 5976               		.cfi_def_cfa_offset 7
 5977               		.cfi_offset 11, -6
 5978 1838 CF92      		push r12
 5979               		.cfi_def_cfa_offset 8
 5980               		.cfi_offset 12, -7
 5981 183a DF92      		push r13
 5982               		.cfi_def_cfa_offset 9
 5983               		.cfi_offset 13, -8
 5984 183c EF92      		push r14
 5985               		.cfi_def_cfa_offset 10
 5986               		.cfi_offset 14, -9
 5987 183e FF92      		push r15
 5988               		.cfi_def_cfa_offset 11
 5989               		.cfi_offset 15, -10
 5990 1840 0F93      		push r16
 5991               		.cfi_def_cfa_offset 12
 5992               		.cfi_offset 16, -11
 5993 1842 1F93      		push r17
 5994               		.cfi_def_cfa_offset 13
 5995               		.cfi_offset 17, -12
 5996 1844 CF93      		push r28
 5997               		.cfi_def_cfa_offset 14
 5998               		.cfi_offset 28, -13
 5999 1846 DF93      		push r29
 6000               		.cfi_def_cfa_offset 15
 6001               		.cfi_offset 29, -14
 6002 1848 00D0      		rcall .
 6003 184a 00D0      		rcall .
 6004               		.cfi_def_cfa_offset 19
 6005 184c CDB7      		in r28,__SP_L__
 6006 184e DEB7      		in r29,__SP_H__
 6007               		.cfi_def_cfa_register 28
 6008               	/* prologue: function */
 6009               	/* frame size = 4 */
 6010               	/* stack size = 17 */
 6011               	.L__stack_usage = 17
 6012 1850 8983      		std Y+1,r24
 6013 1852 9A83      		std Y+2,r25
 473:../../emulator/emulator.c **** 	u32 color;
 6014               		.loc 6 473 2 is_stmt 1 view .LVU1232
 474:../../emulator/emulator.c **** 
 6015               		.loc 6 474 2 view .LVU1233
 476:../../emulator/emulator.c **** 	y = args[1];
 6016               		.loc 6 476 2 view .LVU1234
 476:../../emulator/emulator.c **** 	y = args[1];
 6017               		.loc 6 476 4 is_stmt 0 view .LVU1235
 6018 1854 A981      		ldd r26,Y+1
 6019 1856 BA81      		ldd r27,Y+2
 6020 1858 AD90      		ld r10,X+
 6021 185a BC90      		ld r11,X
 6022 185c 1197      		sbiw r26,1
 6023               	.LVL403:
 477:../../emulator/emulator.c **** 	w = args[2];
 6024               		.loc 6 477 2 is_stmt 1 view .LVU1236
 477:../../emulator/emulator.c **** 	w = args[2];
 6025               		.loc 6 477 4 is_stmt 0 view .LVU1237
 6026 185e 1496      		adiw r26,4
 6027 1860 8D90      		ld r8,X+
 6028 1862 9C90      		ld r9,X
 6029 1864 1597      		sbiw r26,4+1
 6030               	.LVL404:
 478:../../emulator/emulator.c **** 	h = args[3];
 6031               		.loc 6 478 2 is_stmt 1 view .LVU1238
 478:../../emulator/emulator.c **** 	h = args[3];
 6032               		.loc 6 478 4 is_stmt 0 view .LVU1239
 6033 1866 1896      		adiw r26,8
 6034 1868 CD90      		ld r12,X+
 6035 186a DC90      		ld r13,X
 6036 186c 1997      		sbiw r26,8+1
 6037               	.LVL405:
 479:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 6038               		.loc 6 479 2 is_stmt 1 view .LVU1240
 479:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 6039               		.loc 6 479 4 is_stmt 0 view .LVU1241
 6040 186e 1C96      		adiw r26,12
 6041 1870 ED90      		ld r14,X+
 6042 1872 FC90      		ld r15,X
 6043               	.LVL406:
 480:../../emulator/emulator.c **** 	{
 6044               		.loc 6 480 2 is_stmt 1 view .LVU1242
 480:../../emulator/emulator.c **** 	{
 6045               		.loc 6 480 5 is_stmt 0 view .LVU1243
 6046 1874 9701      		movw r18,r14
 6047 1876 A601      		movw r20,r12
 6048 1878 B401      		movw r22,r8
 6049 187a C501      		movw r24,r10
 6050               	.LVL407:
 480:../../emulator/emulator.c **** 	{
 6051               		.loc 6 480 5 view .LVU1244
 6052 187c 0E94 0000 		call _gfx_check_bounds
 6053               	.LVL408:
 6054 1880 182F      		mov r17,r24
 480:../../emulator/emulator.c **** 	{
 6055               		.loc 6 480 4 view .LVU1245
 6056 1882 8111      		cpse r24,__zero_reg__
 6057 1884 00C0      		rjmp .L189
 485:../../emulator/emulator.c **** 	env_gfx_rect(x, y, w, h, color);
 6058               		.loc 6 485 2 is_stmt 1 view .LVU1246
 6059               	.LVL409:
 486:../../emulator/emulator.c **** 	return 0;
 6060               		.loc 6 486 2 view .LVU1247
 6061               	.LBB383:
 6062               	.LBI383:
  92:platform.c    **** {
 6063               		.loc 1 92 6 view .LVU1248
 6064               	.LBB384:
  94:platform.c    **** }
 6065               		.loc 1 94 2 view .LVU1249
 6066 1886 A981      		ldd r26,Y+1
 6067 1888 BA81      		ldd r27,Y+2
 6068 188a 5096      		adiw r26,16
 6069 188c 8D91      		ld r24,X+
 6070 188e 9D91      		ld r25,X+
 6071 1890 0D90      		ld __tmp_reg__,X+
 6072 1892 BC91      		ld r27,X
 6073 1894 A02D      		mov r26,__tmp_reg__
 6074 1896 8983      		std Y+1,r24
 6075 1898 9A83      		std Y+2,r25
 6076 189a AB83      		std Y+3,r26
 6077 189c BC83      		std Y+4,r27
 6078               	.LVL410:
  94:platform.c    **** }
 6079               		.loc 1 94 2 is_stmt 0 view .LVU1250
 6080 189e BC01      		movw r22,r24
 6081 18a0 CD01      		movw r24,r26
 6082 18a2 0E94 0000 		call _abgr_to_rgb565
 6083               	.LVL411:
  94:platform.c    **** }
 6084               		.loc 1 94 2 view .LVU1251
 6085 18a6 082F      		mov r16,r24
 6086 18a8 792E      		mov r7,r25
 6087               	.LVL412:
 6088               	.LBB385:
 6089               	.LBI385:
 416:lcd/lcd.c     **** {
 6090               		.loc 2 416 6 is_stmt 1 view .LVU1252
 6091               	.LBB386:
 418:lcd/lcd.c     **** 
 6092               		.loc 2 418 2 view .LVU1253
 420:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 6093               		.loc 2 420 2 view .LVU1254
 6094 18aa 9701      		movw r18,r14
 6095 18ac A601      		movw r20,r12
 6096 18ae B401      		movw r22,r8
 6097 18b0 C501      		movw r24,r10
 6098 18b2 0E94 0000 		call _lcd_window_start
 6099               	.LVL413:
 421:lcd/lcd.c     **** 	{
 6100               		.loc 2 421 2 view .LVU1255
 421:lcd/lcd.c     **** 	{
 6101               		.loc 2 421 9 is_stmt 0 view .LVU1256
 6102 18b6 1A82      		std Y+2,__zero_reg__
 6103 18b8 1982      		std Y+1,__zero_reg__
 6104               	.LVL414:
 6105               	.L186:
 421:lcd/lcd.c     **** 	{
 6106               		.loc 2 421 17 is_stmt 1 view .LVU1257
 6107 18ba 8981      		ldd r24,Y+1
 6108 18bc 9A81      		ldd r25,Y+2
 6109 18be E816      		cp r14,r24
 6110 18c0 F906      		cpc r15,r25
 6111 18c2 01F4      		brne .L190
 429:lcd/lcd.c     **** }
 6112               		.loc 2 429 2 view .LVU1258
 6113 18c4 0E94 0000 		call _lcd_window_end
 6114               	.LVL415:
 6115               	.L184:
 429:lcd/lcd.c     **** }
 6116               		.loc 2 429 2 is_stmt 0 view .LVU1259
 6117               	.LBE386:
 6118               	.LBE385:
 6119               	.LBE384:
 6120               	.LBE383:
 488:../../emulator/emulator.c **** 
 6121               		.loc 6 488 1 view .LVU1260
 6122 18c8 812F      		mov r24,r17
 6123               	/* epilogue start */
 6124 18ca 0F90      		pop __tmp_reg__
 6125 18cc 0F90      		pop __tmp_reg__
 6126 18ce 0F90      		pop __tmp_reg__
 6127 18d0 0F90      		pop __tmp_reg__
 6128 18d2 DF91      		pop r29
 6129 18d4 CF91      		pop r28
 6130 18d6 1F91      		pop r17
 6131 18d8 0F91      		pop r16
 6132 18da FF90      		pop r15
 6133 18dc EF90      		pop r14
 6134               	.LVL416:
 488:../../emulator/emulator.c **** 
 6135               		.loc 6 488 1 view .LVU1261
 6136 18de DF90      		pop r13
 6137 18e0 CF90      		pop r12
 6138               	.LVL417:
 488:../../emulator/emulator.c **** 
 6139               		.loc 6 488 1 view .LVU1262
 6140 18e2 BF90      		pop r11
 6141 18e4 AF90      		pop r10
 6142 18e6 9F90      		pop r9
 6143 18e8 8F90      		pop r8
 6144               	.LVL418:
 488:../../emulator/emulator.c **** 
 6145               		.loc 6 488 1 view .LVU1263
 6146 18ea 7F90      		pop r7
 6147 18ec 0895      		ret
 6148               	.LVL419:
 6149               	.L187:
 6150               	.LBB390:
 6151               	.LBB389:
 6152               	.LBB388:
 6153               	.LBB387:
 425:lcd/lcd.c     **** 		}
 6154               		.loc 2 425 4 is_stmt 1 view .LVU1264
 6155 18ee 802F      		mov r24,r16
 6156 18f0 972D      		mov r25,r7
 6157 18f2 0E94 0000 		call _lcd_pixel
 6158               	.LVL420:
 423:lcd/lcd.c     **** 		{
 6159               		.loc 2 423 23 view .LVU1265
 6160 18f6 BFEF      		ldi r27,-1
 6161 18f8 AB1A      		sub r10,r27
 6162 18fa BB0A      		sbc r11,r27
 6163               	.LVL421:
 6164               	.L188:
 423:lcd/lcd.c     **** 		{
 6165               		.loc 2 423 18 view .LVU1266
 6166 18fc CA14      		cp r12,r10
 6167 18fe DB04      		cpc r13,r11
 6168 1900 01F4      		brne .L187
 421:lcd/lcd.c     **** 	{
 6169               		.loc 2 421 22 view .LVU1267
 6170 1902 E981      		ldd r30,Y+1
 6171 1904 FA81      		ldd r31,Y+2
 6172 1906 3196      		adiw r30,1
 6173 1908 FA83      		std Y+2,r31
 6174 190a E983      		std Y+1,r30
 6175               	.LVL422:
 421:lcd/lcd.c     **** 	{
 6176               		.loc 2 421 22 is_stmt 0 view .LVU1268
 6177 190c 00C0      		rjmp .L186
 6178               	.LVL423:
 6179               	.L190:
 423:lcd/lcd.c     **** 		{
 6180               		.loc 2 423 10 view .LVU1269
 6181 190e A12C      		mov r10,__zero_reg__
 6182 1910 B12C      		mov r11,__zero_reg__
 6183 1912 00C0      		rjmp .L188
 6184               	.LVL424:
 6185               	.L189:
 423:lcd/lcd.c     **** 		{
 6186               		.loc 2 423 10 view .LVU1270
 6187               	.LBE387:
 6188               	.LBE388:
 6189               	.LBE389:
 6190               	.LBE390:
 482:../../emulator/emulator.c **** 	}
 6191               		.loc 6 482 10 view .LVU1271
 6192 1914 11E0      		ldi r17,lo8(1)
 6193 1916 00C0      		rjmp .L184
 6194               		.cfi_endproc
 6195               	.LFE50:
 6198               	lcd_logo_P:
 6199               	.LVL425:
 6200               	.LFB53:
 435:lcd/lcd.c     **** }
 436:lcd/lcd.c     **** 
 437:lcd/lcd.c     **** void lcd_logo_P(u16 x, u16 y, u16 w, u16 h, const u8 *image)
 438:lcd/lcd.c     **** {
 6201               		.loc 2 438 1 is_stmt 1 view -0
 6202               		.cfi_startproc
 6203               		.loc 2 438 1 is_stmt 0 view .LVU1273
 6204 1918 6F92      		push r6
 6205               		.cfi_def_cfa_offset 3
 6206               		.cfi_offset 6, -2
 6207 191a 7F92      		push r7
 6208               		.cfi_def_cfa_offset 4
 6209               		.cfi_offset 7, -3
 6210 191c 8F92      		push r8
 6211               		.cfi_def_cfa_offset 5
 6212               		.cfi_offset 8, -4
 6213 191e 9F92      		push r9
 6214               		.cfi_def_cfa_offset 6
 6215               		.cfi_offset 9, -5
 6216 1920 AF92      		push r10
 6217               		.cfi_def_cfa_offset 7
 6218               		.cfi_offset 10, -6
 6219 1922 BF92      		push r11
 6220               		.cfi_def_cfa_offset 8
 6221               		.cfi_offset 11, -7
 6222 1924 CF92      		push r12
 6223               		.cfi_def_cfa_offset 9
 6224               		.cfi_offset 12, -8
 6225 1926 DF92      		push r13
 6226               		.cfi_def_cfa_offset 10
 6227               		.cfi_offset 13, -9
 6228 1928 EF92      		push r14
 6229               		.cfi_def_cfa_offset 11
 6230               		.cfi_offset 14, -10
 6231 192a FF92      		push r15
 6232               		.cfi_def_cfa_offset 12
 6233               		.cfi_offset 15, -11
 6234 192c 0F93      		push r16
 6235               		.cfi_def_cfa_offset 13
 6236               		.cfi_offset 16, -12
 6237 192e 1F93      		push r17
 6238               		.cfi_def_cfa_offset 14
 6239               		.cfi_offset 17, -13
 6240 1930 CF93      		push r28
 6241               		.cfi_def_cfa_offset 15
 6242               		.cfi_offset 28, -14
 6243 1932 DF93      		push r29
 6244               		.cfi_def_cfa_offset 16
 6245               		.cfi_offset 29, -15
 6246               	/* prologue: function */
 6247               	/* frame size = 0 */
 6248               	/* stack size = 14 */
 6249               	.L__stack_usage = 14
 6250 1934 EA01      		movw r28,r20
 6251 1936 7901      		movw r14,r18
 6252 1938 5801      		movw r10,r16
 439:lcd/lcd.c     **** 	u16 w0, h0;
 6253               		.loc 2 439 2 is_stmt 1 view .LVU1274
 440:lcd/lcd.c     **** 
 441:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 6254               		.loc 2 441 2 view .LVU1275
 6255 193a 0E94 0000 		call _lcd_window_start
 6256               	.LVL426:
 442:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 6257               		.loc 2 442 2 view .LVU1276
 6258               		.loc 2 442 17 view .LVU1277
 441:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 6259               		.loc 2 441 2 is_stmt 0 view .LVU1278
 6260 193e C12C      		mov r12,__zero_reg__
 6261 1940 D12C      		mov r13,__zero_reg__
 6262               		.loc 2 442 9 view .LVU1279
 6263 1942 812C      		mov r8,__zero_reg__
 6264 1944 912C      		mov r9,__zero_reg__
 6265               	.LVL427:
 6266               	.L192:
 443:lcd/lcd.c     **** 	{
 444:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 6267               		.loc 2 444 18 is_stmt 1 view .LVU1280
 6268               		.loc 2 444 10 is_stmt 0 view .LVU1281
 6269 1946 00E0      		ldi r16,0
 6270 1948 10E0      		ldi r17,0
 6271               	.LBB391:
 445:lcd/lcd.c     **** 		{
 446:lcd/lcd.c     **** 			_lcd_pixel(lcd_color(pgm_read_byte(&image[h0 * w + w0]), 0, 0));
 6272               		.loc 2 446 25 view .LVU1282
 6273 194a 3501      		movw r6,r10
 6274 194c 6C0C      		add r6,r12
 6275 194e 7D1C      		adc r7,r13
 6276               	.LVL428:
 6277               	.L193:
 6278               		.loc 2 446 25 view .LVU1283
 6279               	.LBE391:
 6280               		.loc 2 446 4 is_stmt 1 discriminator 3 view .LVU1284
 6281               	.LBB392:
 6282               		.loc 2 446 25 discriminator 3 view .LVU1285
 6283               		.loc 2 446 25 discriminator 3 view .LVU1286
 6284               		.loc 2 446 25 discriminator 3 view .LVU1287
 6285 1950 F301      		movw r30,r6
 6286 1952 E00F      		add r30,r16
 6287 1954 F11F      		adc r31,r17
 6288               	/* #APP */
 6289               	 ;  446 "lcd/lcd.c" 1
 6290 1956 8491      		lpm r24, Z
 6291               		
 6292               	 ;  0 "" 2
 6293               	.LVL429:
 6294               		.loc 2 446 25 discriminator 3 view .LVU1288
 6295               		.loc 2 446 25 is_stmt 0 discriminator 3 view .LVU1289
 6296               	/* #NOAPP */
 6297               	.LBE392:
 6298               	.LBB393:
 6299               	.LBI393:
 432:lcd/lcd.c     **** {
 6300               		.loc 2 432 8 is_stmt 1 discriminator 3 view .LVU1290
 6301               	.LBB394:
 434:lcd/lcd.c     **** }
 6302               		.loc 2 434 2 discriminator 3 view .LVU1291
 434:lcd/lcd.c     **** }
 6303               		.loc 2 434 21 is_stmt 0 discriminator 3 view .LVU1292
 6304 1958 90E0      		ldi r25,0
 6305 195a 982F      		mov r25,r24
 6306 195c 8827      		clr r24
 6307               	.LVL430:
 434:lcd/lcd.c     **** }
 6308               		.loc 2 434 21 discriminator 3 view .LVU1293
 6309               	.LBE394:
 6310               	.LBE393:
 6311               		.loc 2 446 4 discriminator 3 view .LVU1294
 6312 195e 8827      		clr r24
 6313 1960 987F      		andi r25,248
 6314 1962 0E94 0000 		call _lcd_pixel
 6315               	.LVL431:
 444:lcd/lcd.c     **** 		{
 6316               		.loc 2 444 23 is_stmt 1 discriminator 3 view .LVU1295
 6317 1966 0F5F      		subi r16,-1
 6318 1968 1F4F      		sbci r17,-1
 6319               	.LVL432:
 444:lcd/lcd.c     **** 		{
 6320               		.loc 2 444 18 discriminator 3 view .LVU1296
 6321 196a C017      		cp r28,r16
 6322 196c D107      		cpc r29,r17
 6323 196e 01F4      		brne .L193
 442:lcd/lcd.c     **** 	{
 6324               		.loc 2 442 22 discriminator 2 view .LVU1297
 6325 1970 8FEF      		ldi r24,-1
 6326 1972 881A      		sub r8,r24
 6327 1974 980A      		sbc r9,r24
 6328               	.LVL433:
 442:lcd/lcd.c     **** 	{
 6329               		.loc 2 442 17 discriminator 2 view .LVU1298
 6330 1976 CC0E      		add r12,r28
 6331 1978 DD1E      		adc r13,r29
 6332               	.LVL434:
 442:lcd/lcd.c     **** 	{
 6333               		.loc 2 442 17 is_stmt 0 discriminator 2 view .LVU1299
 6334 197a E814      		cp r14,r8
 6335 197c F904      		cpc r15,r9
 6336 197e 01F4      		brne .L192
 447:lcd/lcd.c     **** 		}
 448:lcd/lcd.c     **** 	}
 449:lcd/lcd.c     **** 
 450:lcd/lcd.c     **** 	_lcd_window_end();
 6337               		.loc 2 450 2 is_stmt 1 view .LVU1300
 6338               	/* epilogue start */
 451:lcd/lcd.c     **** }
 6339               		.loc 2 451 1 is_stmt 0 view .LVU1301
 6340 1980 DF91      		pop r29
 6341 1982 CF91      		pop r28
 6342               	.LVL435:
 6343               		.loc 2 451 1 view .LVU1302
 6344 1984 1F91      		pop r17
 6345 1986 0F91      		pop r16
 6346               	.LVL436:
 6347               		.loc 2 451 1 view .LVU1303
 6348 1988 FF90      		pop r15
 6349 198a EF90      		pop r14
 6350               	.LVL437:
 6351               		.loc 2 451 1 view .LVU1304
 6352 198c DF90      		pop r13
 6353 198e CF90      		pop r12
 6354 1990 BF90      		pop r11
 6355 1992 AF90      		pop r10
 6356               	.LVL438:
 6357               		.loc 2 451 1 view .LVU1305
 6358 1994 9F90      		pop r9
 6359 1996 8F90      		pop r8
 6360               	.LVL439:
 6361               		.loc 2 451 1 view .LVU1306
 6362 1998 7F90      		pop r7
 6363 199a 6F90      		pop r6
 450:lcd/lcd.c     **** }
 6364               		.loc 2 450 2 view .LVU1307
 6365 199c 0C94 0000 		jmp _lcd_window_end
 6366               	.LVL440:
 6367               		.cfi_endproc
 6368               	.LFE53:
 6371               	lcd_image_rgb565:
 6372               	.LVL441:
 6373               	.LFB54:
 452:lcd/lcd.c     **** 
 453:lcd/lcd.c     **** u8 lcd_char(u16 x, u16 y, RGB565 fg, RGB565 bg, char c)
 454:lcd/lcd.c     **** {
 455:lcd/lcd.c     **** 	u8 w0, h0;
 456:lcd/lcd.c     **** 	const u8 *start;
 457:lcd/lcd.c     **** 
 458:lcd/lcd.c     **** 	start = _font5x7 + (c - 32) * FONT_WIDTH;
 459:lcd/lcd.c     **** 
 460:lcd/lcd.c     **** 	_lcd_window_start(x, y, FONT_WIDTH, FONT_HEIGHT);
 461:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 462:lcd/lcd.c     **** 	{
 463:lcd/lcd.c     **** 		for(w0 = 0; w0 < FONT_WIDTH; ++w0)
 464:lcd/lcd.c     **** 		{
 465:lcd/lcd.c     **** 			_lcd_pixel(((pgm_read_byte(start + w0) >> h0) & 1) ? fg : bg);
 466:lcd/lcd.c     **** 		}
 467:lcd/lcd.c     **** 	}
 468:lcd/lcd.c     **** 
 469:lcd/lcd.c     **** 	_lcd_window_end();
 470:lcd/lcd.c     **** 	return FONT_WIDTH + 1;
 471:lcd/lcd.c     **** }
 472:lcd/lcd.c     **** 
 473:lcd/lcd.c     **** u16 lcd_string(u16 x, u16 y, RGB565 fg, RGB565 bg, const char *s)
 474:lcd/lcd.c     **** {
 475:lcd/lcd.c     **** 	u16 i;
 476:lcd/lcd.c     **** 	char c;
 477:lcd/lcd.c     **** 
 478:lcd/lcd.c     **** 	i = 0;
 479:lcd/lcd.c     **** 	while((c = *s++))
 480:lcd/lcd.c     **** 	{
 481:lcd/lcd.c     **** 		i += lcd_char(x + i, y, fg, bg, c);
 482:lcd/lcd.c     **** 	}
 483:lcd/lcd.c     **** 
 484:lcd/lcd.c     **** 	return i;
 485:lcd/lcd.c     **** }
 486:lcd/lcd.c     **** 
 487:lcd/lcd.c     **** u16 lcd_string_P(u16 x, u16 y, RGB565 fg, RGB565 bg, const char *s)
 488:lcd/lcd.c     **** {
 489:lcd/lcd.c     **** 	u16 i;
 490:lcd/lcd.c     **** 	char c;
 491:lcd/lcd.c     **** 
 492:lcd/lcd.c     **** 	i = 0;
 493:lcd/lcd.c     **** 	while((c = pgm_read_byte(s++)))
 494:lcd/lcd.c     **** 	{
 495:lcd/lcd.c     **** 		i += lcd_char(x + i, y, fg, bg, c);
 496:lcd/lcd.c     **** 	}
 497:lcd/lcd.c     **** 
 498:lcd/lcd.c     **** 	return i;
 499:lcd/lcd.c     **** }
 500:lcd/lcd.c     **** 
 501:lcd/lcd.c     **** void lcd_image_rgb565(u16 x, u16 y, u16 w, u16 h, u32 addr)
 502:lcd/lcd.c     **** {
 6374               		.loc 2 502 1 is_stmt 1 view -0
 6375               		.cfi_startproc
 6376               		.loc 2 502 1 is_stmt 0 view .LVU1309
 6377 19a0 2F92      		push r2
 6378               		.cfi_def_cfa_offset 3
 6379               		.cfi_offset 2, -2
 6380 19a2 3F92      		push r3
 6381               		.cfi_def_cfa_offset 4
 6382               		.cfi_offset 3, -3
 6383 19a4 4F92      		push r4
 6384               		.cfi_def_cfa_offset 5
 6385               		.cfi_offset 4, -4
 6386 19a6 5F92      		push r5
 6387               		.cfi_def_cfa_offset 6
 6388               		.cfi_offset 5, -5
 6389 19a8 6F92      		push r6
 6390               		.cfi_def_cfa_offset 7
 6391               		.cfi_offset 6, -6
 6392 19aa 7F92      		push r7
 6393               		.cfi_def_cfa_offset 8
 6394               		.cfi_offset 7, -7
 6395 19ac 8F92      		push r8
 6396               		.cfi_def_cfa_offset 9
 6397               		.cfi_offset 8, -8
 6398 19ae 9F92      		push r9
 6399               		.cfi_def_cfa_offset 10
 6400               		.cfi_offset 9, -9
 6401 19b0 AF92      		push r10
 6402               		.cfi_def_cfa_offset 11
 6403               		.cfi_offset 10, -10
 6404 19b2 BF92      		push r11
 6405               		.cfi_def_cfa_offset 12
 6406               		.cfi_offset 11, -11
 6407 19b4 CF92      		push r12
 6408               		.cfi_def_cfa_offset 13
 6409               		.cfi_offset 12, -12
 6410 19b6 DF92      		push r13
 6411               		.cfi_def_cfa_offset 14
 6412               		.cfi_offset 13, -13
 6413 19b8 EF92      		push r14
 6414               		.cfi_def_cfa_offset 15
 6415               		.cfi_offset 14, -14
 6416 19ba FF92      		push r15
 6417               		.cfi_def_cfa_offset 16
 6418               		.cfi_offset 15, -15
 6419 19bc 0F93      		push r16
 6420               		.cfi_def_cfa_offset 17
 6421               		.cfi_offset 16, -16
 6422 19be 1F93      		push r17
 6423               		.cfi_def_cfa_offset 18
 6424               		.cfi_offset 17, -17
 6425 19c0 CF93      		push r28
 6426               		.cfi_def_cfa_offset 19
 6427               		.cfi_offset 28, -18
 6428 19c2 DF93      		push r29
 6429               		.cfi_def_cfa_offset 20
 6430               		.cfi_offset 29, -19
 6431 19c4 CDB7      		in r28,__SP_L__
 6432 19c6 DEB7      		in r29,__SP_H__
 6433               		.cfi_def_cfa_register 28
 6434 19c8 CA58      		subi r28,-118
 6435 19ca D240      		sbci r29,2
 6436               		.cfi_def_cfa_offset 670
 6437 19cc 0FB6      		in __tmp_reg__,__SREG__
 6438 19ce F894      		cli
 6439 19d0 DEBF      		out __SP_H__,r29
 6440 19d2 0FBE      		out __SREG__,__tmp_reg__
 6441 19d4 CDBF      		out __SP_L__,r28
 6442               	/* prologue: function */
 6443               	/* frame size = 650 */
 6444               	/* stack size = 668 */
 6445               	.L__stack_usage = 668
 6446 19d6 6C01      		movw r12,r24
 6447 19d8 5A01      		movw r10,r20
 6448 19da CD57      		subi r28,lo8(-643)
 6449 19dc DD4F      		sbci r29,hi8(-643)
 6450 19de E882      		st Y,r14
 6451 19e0 C358      		subi r28,lo8(643)
 6452 19e2 D240      		sbci r29,hi8(643)
 6453 19e4 CC57      		subi r28,lo8(-644)
 6454 19e6 DD4F      		sbci r29,hi8(-644)
 6455 19e8 F882      		st Y,r15
 6456 19ea C458      		subi r28,lo8(644)
 6457 19ec D240      		sbci r29,hi8(644)
 6458 19ee CB57      		subi r28,lo8(-645)
 6459 19f0 DD4F      		sbci r29,hi8(-645)
 6460 19f2 0883      		st Y,r16
 6461 19f4 C558      		subi r28,lo8(645)
 6462 19f6 D240      		sbci r29,hi8(645)
 6463 19f8 CA57      		subi r28,lo8(-646)
 6464 19fa DD4F      		sbci r29,hi8(-646)
 6465 19fc 1883      		st Y,r17
 6466 19fe C658      		subi r28,lo8(646)
 6467 1a00 D240      		sbci r29,hi8(646)
 503:lcd/lcd.c     **** 	u16 x0, y0, stride;
 6468               		.loc 2 503 2 is_stmt 1 view .LVU1310
 504:lcd/lcd.c     **** 	u16 *ci, image[LCD_WIDTH];
 6469               		.loc 2 504 2 view .LVU1311
 505:lcd/lcd.c     **** 
 506:lcd/lcd.c     **** 	stride = w * sizeof(RGB565);
 6470               		.loc 2 506 2 view .LVU1312
 6471               		.loc 2 506 9 is_stmt 0 view .LVU1313
 6472 1a02 3A01      		movw r6,r20
 6473 1a04 660C      		lsl r6
 6474 1a06 771C      		rol r7
 6475               	.LVL442:
 507:lcd/lcd.c     **** 	for(y0 = y; y0 < y + h; ++y0)
 6476               		.loc 2 507 2 is_stmt 1 view .LVU1314
 6477               		.loc 2 507 9 is_stmt 0 view .LVU1315
 6478 1a08 8B01      		movw r16,r22
 6479               		.loc 2 507 21 view .LVU1316
 6480 1a0a CB01      		movw r24,r22
 6481 1a0c 820F      		add r24,r18
 6482 1a0e 931F      		adc r25,r19
 6483 1a10 C957      		subi r28,lo8(-647)
 6484 1a12 DD4F      		sbci r29,hi8(-647)
 6485 1a14 9983      		std Y+1,r25
 6486 1a16 8883      		st Y,r24
 6487 1a18 C758      		subi r28,lo8(647)
 6488 1a1a D240      		sbci r29,hi8(647)
 508:lcd/lcd.c     **** 	{
 509:lcd/lcd.c     **** 		xmem_read(addr, image, stride);
 6489               		.loc 2 509 3 view .LVU1317
 6490 1a1c DE01      		movw r26,r28
 6491 1a1e 1196      		adiw r26,1
 6492 1a20 CF57      		subi r28,lo8(-641)
 6493 1a22 DD4F      		sbci r29,hi8(-641)
 6494 1a24 B983      		std Y+1,r27
 6495 1a26 A883      		st Y,r26
 6496 1a28 C158      		subi r28,lo8(641)
 6497 1a2a D240      		sbci r29,hi8(641)
 510:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 511:lcd/lcd.c     **** 		ci = image;
 512:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 6498               		.loc 2 512 22 view .LVU1318
 6499 1a2c FA01      		movw r30,r20
 6500 1a2e EC0D      		add r30,r12
 6501 1a30 FD1D      		adc r31,r13
 6502 1a32 C757      		subi r28,lo8(-649)
 6503 1a34 DD4F      		sbci r29,hi8(-649)
 6504 1a36 F983      		std Y+1,r31
 6505 1a38 E883      		st Y,r30
 6506 1a3a C958      		subi r28,lo8(649)
 6507 1a3c D240      		sbci r29,hi8(649)
 513:lcd/lcd.c     **** 		{
 514:lcd/lcd.c     **** 			_lcd_pixel(*ci++);
 515:lcd/lcd.c     **** 		}
 516:lcd/lcd.c     **** 
 517:lcd/lcd.c     **** 		_lcd_window_end();
 518:lcd/lcd.c     **** 		addr += stride;
 6508               		.loc 2 518 8 view .LVU1319
 6509 1a3e 1301      		movw r2,r6
 6510 1a40 412C      		mov r4,__zero_reg__
 6511 1a42 512C      		mov r5,__zero_reg__
 6512               	.LVL443:
 6513               	.L197:
 507:lcd/lcd.c     **** 	{
 6514               		.loc 2 507 17 is_stmt 1 discriminator 1 view .LVU1320
 6515 1a44 C957      		subi r28,lo8(-647)
 6516 1a46 DD4F      		sbci r29,hi8(-647)
 6517 1a48 A881      		ld r26,Y
 6518 1a4a B981      		ldd r27,Y+1
 6519 1a4c C758      		subi r28,lo8(647)
 6520 1a4e D240      		sbci r29,hi8(647)
 6521 1a50 0A17      		cp r16,r26
 6522 1a52 1B07      		cpc r17,r27
 6523 1a54 00F0      		brlo .L200
 6524               	/* epilogue start */
 519:lcd/lcd.c     **** 	}
 520:lcd/lcd.c     **** }
 6525               		.loc 2 520 1 is_stmt 0 view .LVU1321
 6526 1a56 C657      		subi r28,118
 6527 1a58 DD4F      		sbci r29,-3
 6528 1a5a 0FB6      		in __tmp_reg__,__SREG__
 6529 1a5c F894      		cli
 6530 1a5e DEBF      		out __SP_H__,r29
 6531 1a60 0FBE      		out __SREG__,__tmp_reg__
 6532 1a62 CDBF      		out __SP_L__,r28
 6533 1a64 DF91      		pop r29
 6534 1a66 CF91      		pop r28
 6535 1a68 1F91      		pop r17
 6536 1a6a 0F91      		pop r16
 6537               	.LVL444:
 6538               		.loc 2 520 1 view .LVU1322
 6539 1a6c FF90      		pop r15
 6540 1a6e EF90      		pop r14
 6541 1a70 DF90      		pop r13
 6542 1a72 CF90      		pop r12
 6543               	.LVL445:
 6544               		.loc 2 520 1 view .LVU1323
 6545 1a74 BF90      		pop r11
 6546 1a76 AF90      		pop r10
 6547               	.LVL446:
 6548               		.loc 2 520 1 view .LVU1324
 6549 1a78 9F90      		pop r9
 6550 1a7a 8F90      		pop r8
 6551 1a7c 7F90      		pop r7
 6552 1a7e 6F90      		pop r6
 6553               	.LVL447:
 6554               		.loc 2 520 1 view .LVU1325
 6555 1a80 5F90      		pop r5
 6556 1a82 4F90      		pop r4
 6557 1a84 3F90      		pop r3
 6558 1a86 2F90      		pop r2
 6559               	.LVL448:
 6560               		.loc 2 520 1 view .LVU1326
 6561 1a88 0895      		ret
 6562               	.LVL449:
 6563               	.L200:
 509:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 6564               		.loc 2 509 3 is_stmt 1 view .LVU1327
 6565 1a8a 9301      		movw r18,r6
 6566 1a8c AE01      		movw r20,r28
 6567 1a8e 4F5F      		subi r20,-1
 6568 1a90 5F4F      		sbci r21,-1
 6569 1a92 CD57      		subi r28,lo8(-643)
 6570 1a94 DD4F      		sbci r29,hi8(-643)
 6571 1a96 6881      		ld r22,Y
 6572 1a98 7981      		ldd r23,Y+1
 6573 1a9a 8A81      		ldd r24,Y+2
 6574 1a9c 9B81      		ldd r25,Y+3
 6575 1a9e C358      		subi r28,lo8(643)
 6576 1aa0 D240      		sbci r29,hi8(643)
 6577 1aa2 0E94 0000 		call xmem_read
 6578               	.LVL450:
 510:lcd/lcd.c     **** 		ci = image;
 6579               		.loc 2 510 3 view .LVU1328
 6580 1aa6 21E0      		ldi r18,lo8(1)
 6581 1aa8 30E0      		ldi r19,0
 6582 1aaa A501      		movw r20,r10
 6583 1aac B801      		movw r22,r16
 6584 1aae C601      		movw r24,r12
 6585 1ab0 0E94 0000 		call _lcd_window_start
 6586               	.LVL451:
 511:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 6587               		.loc 2 511 3 view .LVU1329
 512:lcd/lcd.c     **** 		{
 6588               		.loc 2 512 3 view .LVU1330
 512:lcd/lcd.c     **** 		{
 6589               		.loc 2 512 10 is_stmt 0 view .LVU1331
 6590 1ab4 4601      		movw r8,r12
 511:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 6591               		.loc 2 511 6 view .LVU1332
 6592 1ab6 CF57      		subi r28,lo8(-641)
 6593 1ab8 DD4F      		sbci r29,hi8(-641)
 6594 1aba 8881      		ld r24,Y
 6595 1abc C158      		subi r28,lo8(641)
 6596 1abe D240      		sbci r29,hi8(641)
 6597 1ac0 CE57      		subi r28,lo8(-642)
 6598 1ac2 DD4F      		sbci r29,hi8(-642)
 6599 1ac4 9881      		ld r25,Y
 6600 1ac6 C258      		subi r28,lo8(642)
 6601 1ac8 D240      		sbci r29,hi8(642)
 6602               	.LVL452:
 6603               	.L198:
 512:lcd/lcd.c     **** 		{
 6604               		.loc 2 512 18 is_stmt 1 discriminator 1 view .LVU1333
 6605 1aca C757      		subi r28,lo8(-649)
 6606 1acc DD4F      		sbci r29,hi8(-649)
 6607 1ace E881      		ld r30,Y
 6608 1ad0 F981      		ldd r31,Y+1
 6609 1ad2 C958      		subi r28,lo8(649)
 6610 1ad4 D240      		sbci r29,hi8(649)
 6611 1ad6 8E16      		cp r8,r30
 6612 1ad8 9F06      		cpc r9,r31
 6613 1ada 00F0      		brlo .L199
 517:lcd/lcd.c     **** 		addr += stride;
 6614               		.loc 2 517 3 discriminator 2 view .LVU1334
 6615 1adc 0E94 0000 		call _lcd_window_end
 6616               	.LVL453:
 518:lcd/lcd.c     **** 	}
 6617               		.loc 2 518 3 discriminator 2 view .LVU1335
 518:lcd/lcd.c     **** 	}
 6618               		.loc 2 518 8 is_stmt 0 discriminator 2 view .LVU1336
 6619 1ae0 CD57      		subi r28,lo8(-643)
 6620 1ae2 DD4F      		sbci r29,hi8(-643)
 6621 1ae4 8881      		ld r24,Y
 6622 1ae6 9981      		ldd r25,Y+1
 6623 1ae8 AA81      		ldd r26,Y+2
 6624 1aea BB81      		ldd r27,Y+3
 6625 1aec C358      		subi r28,lo8(643)
 6626 1aee D240      		sbci r29,hi8(643)
 6627 1af0 820D      		add r24,r2
 6628 1af2 931D      		adc r25,r3
 6629 1af4 A41D      		adc r26,r4
 6630 1af6 B51D      		adc r27,r5
 6631 1af8 CD57      		subi r28,lo8(-643)
 6632 1afa DD4F      		sbci r29,hi8(-643)
 6633 1afc 8883      		st Y,r24
 6634 1afe 9983      		std Y+1,r25
 6635 1b00 AA83      		std Y+2,r26
 6636 1b02 BB83      		std Y+3,r27
 6637 1b04 C358      		subi r28,lo8(643)
 6638 1b06 D240      		sbci r29,hi8(643)
 6639               	.LVL454:
 507:lcd/lcd.c     **** 	{
 6640               		.loc 2 507 26 is_stmt 1 discriminator 2 view .LVU1337
 6641 1b08 0F5F      		subi r16,-1
 6642 1b0a 1F4F      		sbci r17,-1
 6643               	.LVL455:
 507:lcd/lcd.c     **** 	{
 6644               		.loc 2 507 26 is_stmt 0 discriminator 2 view .LVU1338
 6645 1b0c 00C0      		rjmp .L197
 6646               	.LVL456:
 6647               	.L199:
 514:lcd/lcd.c     **** 		}
 6648               		.loc 2 514 4 is_stmt 1 discriminator 3 view .LVU1339
 514:lcd/lcd.c     **** 		}
 6649               		.loc 2 514 4 is_stmt 0 discriminator 3 view .LVU1340
 6650 1b0e DC01      		movw r26,r24
 6651 1b10 8D91      		ld r24,X+
 6652 1b12 9D91      		ld r25,X+
 6653               	.LVL457:
 514:lcd/lcd.c     **** 		}
 6654               		.loc 2 514 4 discriminator 3 view .LVU1341
 6655 1b14 7D01      		movw r14,r26
 6656 1b16 0E94 0000 		call _lcd_pixel
 6657               	.LVL458:
 512:lcd/lcd.c     **** 		{
 6658               		.loc 2 512 27 is_stmt 1 discriminator 3 view .LVU1342
 6659 1b1a BFEF      		ldi r27,-1
 6660 1b1c 8B1A      		sub r8,r27
 6661 1b1e 9B0A      		sbc r9,r27
 6662               	.LVL459:
 514:lcd/lcd.c     **** 		}
 6663               		.loc 2 514 18 is_stmt 0 discriminator 3 view .LVU1343
 6664 1b20 C701      		movw r24,r14
 6665 1b22 00C0      		rjmp .L198
 6666               		.cfi_endproc
 6667               	.LFE54:
 6670               	syscall_gfx_image_rgb565:
 6671               	.LVL460:
 6672               	.LFB55:
 501:../../emulator/emulator.c **** 	u32 image, bytes;
 6673               		.loc 6 501 1 is_stmt 1 view -0
 6674               		.cfi_startproc
 501:../../emulator/emulator.c **** 	u32 image, bytes;
 6675               		.loc 6 501 1 is_stmt 0 view .LVU1345
 6676 1b24 2F92      		push r2
 6677               		.cfi_def_cfa_offset 3
 6678               		.cfi_offset 2, -2
 6679 1b26 3F92      		push r3
 6680               		.cfi_def_cfa_offset 4
 6681               		.cfi_offset 3, -3
 6682 1b28 4F92      		push r4
 6683               		.cfi_def_cfa_offset 5
 6684               		.cfi_offset 4, -4
 6685 1b2a 5F92      		push r5
 6686               		.cfi_def_cfa_offset 6
 6687               		.cfi_offset 5, -5
 6688 1b2c 6F92      		push r6
 6689               		.cfi_def_cfa_offset 7
 6690               		.cfi_offset 6, -6
 6691 1b2e 7F92      		push r7
 6692               		.cfi_def_cfa_offset 8
 6693               		.cfi_offset 7, -7
 6694 1b30 8F92      		push r8
 6695               		.cfi_def_cfa_offset 9
 6696               		.cfi_offset 8, -8
 6697 1b32 9F92      		push r9
 6698               		.cfi_def_cfa_offset 10
 6699               		.cfi_offset 9, -9
 6700 1b34 AF92      		push r10
 6701               		.cfi_def_cfa_offset 11
 6702               		.cfi_offset 10, -10
 6703 1b36 BF92      		push r11
 6704               		.cfi_def_cfa_offset 12
 6705               		.cfi_offset 11, -11
 6706 1b38 CF92      		push r12
 6707               		.cfi_def_cfa_offset 13
 6708               		.cfi_offset 12, -12
 6709 1b3a DF92      		push r13
 6710               		.cfi_def_cfa_offset 14
 6711               		.cfi_offset 13, -13
 6712 1b3c EF92      		push r14
 6713               		.cfi_def_cfa_offset 15
 6714               		.cfi_offset 14, -14
 6715 1b3e FF92      		push r15
 6716               		.cfi_def_cfa_offset 16
 6717               		.cfi_offset 15, -15
 6718 1b40 0F93      		push r16
 6719               		.cfi_def_cfa_offset 17
 6720               		.cfi_offset 16, -16
 6721 1b42 1F93      		push r17
 6722               		.cfi_def_cfa_offset 18
 6723               		.cfi_offset 17, -17
 6724 1b44 CF93      		push r28
 6725               		.cfi_def_cfa_offset 19
 6726               		.cfi_offset 28, -18
 6727 1b46 DF93      		push r29
 6728               		.cfi_def_cfa_offset 20
 6729               		.cfi_offset 29, -19
 6730 1b48 CDB7      		in r28,__SP_L__
 6731 1b4a DEB7      		in r29,__SP_H__
 6732               		.cfi_def_cfa_register 28
 6733 1b4c 2897      		sbiw r28,8
 6734               		.cfi_def_cfa_offset 28
 6735 1b4e 0FB6      		in __tmp_reg__,__SREG__
 6736 1b50 F894      		cli
 6737 1b52 DEBF      		out __SP_H__,r29
 6738 1b54 0FBE      		out __SREG__,__tmp_reg__
 6739 1b56 CDBF      		out __SP_L__,r28
 6740               	/* prologue: function */
 6741               	/* frame size = 8 */
 6742               	/* stack size = 26 */
 6743               	.L__stack_usage = 26
 6744 1b58 8983      		std Y+1,r24
 6745 1b5a 9A83      		std Y+2,r25
 502:../../emulator/emulator.c **** 	u16 x, y, w, h;
 6746               		.loc 6 502 2 is_stmt 1 view .LVU1346
 503:../../emulator/emulator.c **** 
 6747               		.loc 6 503 2 view .LVU1347
 505:../../emulator/emulator.c **** 	y = args[1];
 6748               		.loc 6 505 2 view .LVU1348
 505:../../emulator/emulator.c **** 	y = args[1];
 6749               		.loc 6 505 4 is_stmt 0 view .LVU1349
 6750 1b5c A981      		ldd r26,Y+1
 6751 1b5e BA81      		ldd r27,Y+2
 6752 1b60 2D90      		ld r2,X+
 6753 1b62 3C90      		ld r3,X
 6754 1b64 1197      		sbiw r26,1
 6755               	.LVL461:
 506:../../emulator/emulator.c **** 	w = args[2];
 6756               		.loc 6 506 2 is_stmt 1 view .LVU1350
 506:../../emulator/emulator.c **** 	w = args[2];
 6757               		.loc 6 506 4 is_stmt 0 view .LVU1351
 6758 1b66 1496      		adiw r26,4
 6759 1b68 CD90      		ld r12,X+
 6760 1b6a DC90      		ld r13,X
 6761 1b6c 1597      		sbiw r26,4+1
 6762               	.LVL462:
 507:../../emulator/emulator.c **** 	h = args[3];
 6763               		.loc 6 507 2 is_stmt 1 view .LVU1352
 507:../../emulator/emulator.c **** 	h = args[3];
 6764               		.loc 6 507 10 is_stmt 0 view .LVU1353
 6765 1b6e 1896      		adiw r26,8
 6766 1b70 8D90      		ld r8,X+
 6767 1b72 9D90      		ld r9,X+
 6768 1b74 AD90      		ld r10,X+
 6769 1b76 BC90      		ld r11,X
 6770 1b78 1B97      		sbiw r26,8+3
 6771               	.LVL463:
 508:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 6772               		.loc 6 508 2 is_stmt 1 view .LVU1354
 508:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 6773               		.loc 6 508 10 is_stmt 0 view .LVU1355
 6774 1b7a 1C96      		adiw r26,12
 6775 1b7c 4D90      		ld r4,X+
 6776 1b7e 5D90      		ld r5,X+
 6777 1b80 6D90      		ld r6,X+
 6778 1b82 7C90      		ld r7,X
 6779 1b84 1F97      		sbiw r26,12+3
 6780               	.LVL464:
 509:../../emulator/emulator.c **** 	{
 6781               		.loc 6 509 2 is_stmt 1 view .LVU1356
 509:../../emulator/emulator.c **** 	{
 6782               		.loc 6 509 5 is_stmt 0 view .LVU1357
 6783 1b86 9201      		movw r18,r4
 6784 1b88 A401      		movw r20,r8
 6785 1b8a B601      		movw r22,r12
 6786 1b8c C101      		movw r24,r2
 6787               	.LVL465:
 509:../../emulator/emulator.c **** 	{
 6788               		.loc 6 509 5 view .LVU1358
 6789 1b8e 0E94 0000 		call _gfx_check_bounds
 6790               	.LVL466:
 509:../../emulator/emulator.c **** 	{
 6791               		.loc 6 509 4 view .LVU1359
 6792 1b92 8111      		cpse r24,__zero_reg__
 6793 1b94 00C0      		rjmp .L203
 514:../../emulator/emulator.c **** 	bytes = (u32)2 * (u32)w * (u32)h;
 6794               		.loc 6 514 2 is_stmt 1 view .LVU1360
 514:../../emulator/emulator.c **** 	bytes = (u32)2 * (u32)w * (u32)h;
 6795               		.loc 6 514 8 is_stmt 0 view .LVU1361
 6796 1b96 A981      		ldd r26,Y+1
 6797 1b98 BA81      		ldd r27,Y+2
 6798 1b9a 5096      		adiw r26,16
 6799 1b9c 8D91      		ld r24,X+
 6800 1b9e 9D91      		ld r25,X+
 6801 1ba0 0D90      		ld __tmp_reg__,X+
 6802 1ba2 BC91      		ld r27,X
 6803 1ba4 A02D      		mov r26,__tmp_reg__
 6804 1ba6 8D83      		std Y+5,r24
 6805 1ba8 9E83      		std Y+6,r25
 6806 1baa AF83      		std Y+7,r26
 6807 1bac B887      		std Y+8,r27
 6808               	.LVL467:
 515:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 6809               		.loc 6 515 2 is_stmt 1 view .LVU1362
 516:../../emulator/emulator.c **** 	{
 6810               		.loc 6 516 2 view .LVU1363
 515:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 6811               		.loc 6 515 26 is_stmt 0 view .LVU1364
 6812 1bae A501      		movw r20,r10
 6813 1bb0 9401      		movw r18,r8
 6814 1bb2 4427      		clr r20
 6815 1bb4 5527      		clr r21
 6816 1bb6 D301      		movw r26,r6
 6817 1bb8 C201      		movw r24,r4
 6818               	.LVL468:
 515:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 6819               		.loc 6 515 26 view .LVU1365
 6820 1bba AA27      		clr r26
 6821 1bbc BB27      		clr r27
 6822 1bbe BC01      		movw r22,r24
 6823 1bc0 CD01      		movw r24,r26
 6824 1bc2 0E94 0000 		call __mulsi3
 6825               	.LVL469:
 515:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 6826               		.loc 6 515 26 view .LVU1366
 6827 1bc6 6983      		std Y+1,r22
 6828 1bc8 7A83      		std Y+2,r23
 6829 1bca 8B83      		std Y+3,r24
 6830 1bcc 9C83      		std Y+4,r25
 6831               	.LVL470:
 515:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 6832               		.loc 6 515 8 view .LVU1367
 6833 1bce 9B01      		movw r18,r22
 6834 1bd0 AC01      		movw r20,r24
 6835 1bd2 220F      		lsl r18
 6836 1bd4 331F      		rol r19
 6837 1bd6 441F      		rol r20
 6838 1bd8 551F      		rol r21
 6839               	.LVL471:
 516:../../emulator/emulator.c **** 	{
 6840               		.loc 6 516 5 view .LVU1368
 6841 1bda 6D81      		ldd r22,Y+5
 6842 1bdc 7E81      		ldd r23,Y+6
 6843 1bde 8F81      		ldd r24,Y+7
 6844 1be0 9885      		ldd r25,Y+8
 6845 1be2 0E94 0000 		call _memory_check_bounds
 6846               	.LVL472:
 516:../../emulator/emulator.c **** 	{
 6847               		.loc 6 516 5 view .LVU1369
 6848 1be6 8983      		std Y+1,r24
 516:../../emulator/emulator.c **** 	{
 6849               		.loc 6 516 4 view .LVU1370
 6850 1be8 8111      		cpse r24,__zero_reg__
 6851 1bea 00C0      		rjmp .L204
 521:../../emulator/emulator.c **** 	return 0;
 6852               		.loc 6 521 2 is_stmt 1 view .LVU1371
 6853               	.LVL473:
 6854               	.LBB397:
 6855               	.LBI397:
  97:platform.c    **** {
 6856               		.loc 1 97 6 view .LVU1372
 6857               	.LBB398:
  99:platform.c    **** }
 6858               		.loc 1 99 2 view .LVU1373
 6859 1bec ED80      		ldd r14,Y+5
 6860 1bee FE80      		ldd r15,Y+6
 6861 1bf0 0F81      		ldd r16,Y+7
 6862 1bf2 1885      		ldd r17,Y+8
 6863 1bf4 9201      		movw r18,r4
 6864 1bf6 A401      		movw r20,r8
 6865 1bf8 B601      		movw r22,r12
 6866 1bfa C101      		movw r24,r2
 6867 1bfc 0E94 0000 		call lcd_image_rgb565
 6868               	.LVL474:
 6869               	.L201:
  99:platform.c    **** }
 6870               		.loc 1 99 2 is_stmt 0 view .LVU1374
 6871               	.LBE398:
 6872               	.LBE397:
 523:../../emulator/emulator.c **** 
 6873               		.loc 6 523 1 view .LVU1375
 6874 1c00 8981      		ldd r24,Y+1
 6875               	/* epilogue start */
 6876 1c02 2896      		adiw r28,8
 6877 1c04 0FB6      		in __tmp_reg__,__SREG__
 6878 1c06 F894      		cli
 6879 1c08 DEBF      		out __SP_H__,r29
 6880 1c0a 0FBE      		out __SREG__,__tmp_reg__
 6881 1c0c CDBF      		out __SP_L__,r28
 6882 1c0e DF91      		pop r29
 6883 1c10 CF91      		pop r28
 6884 1c12 1F91      		pop r17
 6885 1c14 0F91      		pop r16
 6886 1c16 FF90      		pop r15
 6887 1c18 EF90      		pop r14
 6888 1c1a DF90      		pop r13
 6889 1c1c CF90      		pop r12
 6890               	.LVL475:
 523:../../emulator/emulator.c **** 
 6891               		.loc 6 523 1 view .LVU1376
 6892 1c1e BF90      		pop r11
 6893 1c20 AF90      		pop r10
 6894 1c22 9F90      		pop r9
 6895 1c24 8F90      		pop r8
 6896               	.LVL476:
 523:../../emulator/emulator.c **** 
 6897               		.loc 6 523 1 view .LVU1377
 6898 1c26 7F90      		pop r7
 6899 1c28 6F90      		pop r6
 6900 1c2a 5F90      		pop r5
 6901 1c2c 4F90      		pop r4
 6902               	.LVL477:
 523:../../emulator/emulator.c **** 
 6903               		.loc 6 523 1 view .LVU1378
 6904 1c2e 3F90      		pop r3
 6905 1c30 2F90      		pop r2
 6906               	.LVL478:
 523:../../emulator/emulator.c **** 
 6907               		.loc 6 523 1 view .LVU1379
 6908 1c32 0895      		ret
 6909               	.LVL479:
 6910               	.L203:
 511:../../emulator/emulator.c **** 	}
 6911               		.loc 6 511 10 view .LVU1380
 6912 1c34 91E0      		ldi r25,lo8(1)
 6913 1c36 9983      		std Y+1,r25
 6914 1c38 00C0      		rjmp .L201
 6915               	.LVL480:
 6916               	.L204:
 511:../../emulator/emulator.c **** 	}
 6917               		.loc 6 511 10 view .LVU1381
 6918 1c3a A1E0      		ldi r26,lo8(1)
 6919 1c3c A983      		std Y+1,r26
 6920 1c3e 00C0      		rjmp .L201
 6921               		.cfi_endproc
 6922               	.LFE55:
 6925               	lcd_image_grayscale:
 6926               	.LVL481:
 6927               	.LFB57:
 521:lcd/lcd.c     **** 
 522:lcd/lcd.c     **** /**
 523:lcd/lcd.c     ****  * @brief Extract red channel from ABGR color
 524:lcd/lcd.c     ****  *
 525:lcd/lcd.c     ****  * @param color ABGR Color
 526:lcd/lcd.c     ****  * @return Red value
 527:lcd/lcd.c     ****  */
 528:lcd/lcd.c     **** static inline u8 _abgr_r(u32 color) { return (color >> 24) & 0xFF; }
 529:lcd/lcd.c     **** 
 530:lcd/lcd.c     **** /**
 531:lcd/lcd.c     ****  * @brief Extract green channel from ABGR color
 532:lcd/lcd.c     ****  *
 533:lcd/lcd.c     ****  * @param color ABGR Color
 534:lcd/lcd.c     ****  * @return Green value
 535:lcd/lcd.c     ****  */
 536:lcd/lcd.c     **** static inline u8 _abgr_g(u32 color) { return (color >> 16) & 0xFF; }
 537:lcd/lcd.c     **** 
 538:lcd/lcd.c     **** /**
 539:lcd/lcd.c     ****  * @brief Extract blue channel from ABGR color
 540:lcd/lcd.c     ****  *
 541:lcd/lcd.c     ****  * @param color ABGR Color
 542:lcd/lcd.c     ****  * @return Blue value
 543:lcd/lcd.c     ****  */
 544:lcd/lcd.c     **** static inline u8 _abgr_b(u32 color) { return (color >>  8) & 0xFF; }
 545:lcd/lcd.c     **** 
 546:lcd/lcd.c     **** /**
 547:lcd/lcd.c     ****  * @brief Mix two colors according to a ratio. A ratio of 255 means 100% of
 548:lcd/lcd.c     ****  *        the first color and 0% of the second color will be mixed together.
 549:lcd/lcd.c     ****  *
 550:lcd/lcd.c     ****  * @param color1 First ABGR color
 551:lcd/lcd.c     ****  * @param color2 Second ABGR color
 552:lcd/lcd.c     ****  * @param ratio Merge ratio from 0-255
 553:lcd/lcd.c     ****  * @return Merged RGB565 color value
 554:lcd/lcd.c     ****  */
 555:lcd/lcd.c     **** static RGB565 _color_merge(u32 color1, u32 color2, u16 ratio)
 556:lcd/lcd.c     **** {
 557:lcd/lcd.c     **** 	u8 r1, g1, b1, r2, g2, b2;
 558:lcd/lcd.c     **** 
 559:lcd/lcd.c     **** 	r1 = _abgr_r(color1);
 560:lcd/lcd.c     **** 	g1 = _abgr_g(color1);
 561:lcd/lcd.c     **** 	b1 = _abgr_b(color1);
 562:lcd/lcd.c     **** 
 563:lcd/lcd.c     **** 	r2 = _abgr_r(color2);
 564:lcd/lcd.c     **** 	g2 = _abgr_g(color2);
 565:lcd/lcd.c     **** 	b2 = _abgr_b(color2);
 566:lcd/lcd.c     **** 
 567:lcd/lcd.c     **** 	return lcd_color(
 568:lcd/lcd.c     **** 		(r1 * ratio + r2 * (255 - ratio)) / 255,
 569:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 570:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 571:lcd/lcd.c     **** }
 572:lcd/lcd.c     **** 
 573:lcd/lcd.c     **** void lcd_image_grayscale(
 574:lcd/lcd.c     **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, u32 fg, u32 bg)
 575:lcd/lcd.c     **** {
 6928               		.loc 2 575 1 is_stmt 1 view -0
 6929               		.cfi_startproc
 6930               		.loc 2 575 1 is_stmt 0 view .LVU1383
 6931 1c40 2F92      		push r2
 6932               		.cfi_def_cfa_offset 3
 6933               		.cfi_offset 2, -2
 6934 1c42 3F92      		push r3
 6935               		.cfi_def_cfa_offset 4
 6936               		.cfi_offset 3, -3
 6937 1c44 4F92      		push r4
 6938               		.cfi_def_cfa_offset 5
 6939               		.cfi_offset 4, -4
 6940 1c46 5F92      		push r5
 6941               		.cfi_def_cfa_offset 6
 6942               		.cfi_offset 5, -5
 6943 1c48 6F92      		push r6
 6944               		.cfi_def_cfa_offset 7
 6945               		.cfi_offset 6, -6
 6946 1c4a 7F92      		push r7
 6947               		.cfi_def_cfa_offset 8
 6948               		.cfi_offset 7, -7
 6949 1c4c 8F92      		push r8
 6950               		.cfi_def_cfa_offset 9
 6951               		.cfi_offset 8, -8
 6952 1c4e 9F92      		push r9
 6953               		.cfi_def_cfa_offset 10
 6954               		.cfi_offset 9, -9
 6955 1c50 AF92      		push r10
 6956               		.cfi_def_cfa_offset 11
 6957               		.cfi_offset 10, -10
 6958 1c52 BF92      		push r11
 6959               		.cfi_def_cfa_offset 12
 6960               		.cfi_offset 11, -11
 6961 1c54 CF92      		push r12
 6962               		.cfi_def_cfa_offset 13
 6963               		.cfi_offset 12, -12
 6964 1c56 DF92      		push r13
 6965               		.cfi_def_cfa_offset 14
 6966               		.cfi_offset 13, -13
 6967 1c58 EF92      		push r14
 6968               		.cfi_def_cfa_offset 15
 6969               		.cfi_offset 14, -14
 6970 1c5a FF92      		push r15
 6971               		.cfi_def_cfa_offset 16
 6972               		.cfi_offset 15, -15
 6973 1c5c 0F93      		push r16
 6974               		.cfi_def_cfa_offset 17
 6975               		.cfi_offset 16, -16
 6976 1c5e 1F93      		push r17
 6977               		.cfi_def_cfa_offset 18
 6978               		.cfi_offset 17, -17
 6979 1c60 CF93      		push r28
 6980               		.cfi_def_cfa_offset 19
 6981               		.cfi_offset 28, -18
 6982 1c62 DF93      		push r29
 6983               		.cfi_def_cfa_offset 20
 6984               		.cfi_offset 29, -19
 6985 1c64 CDB7      		in r28,__SP_L__
 6986 1c66 DEB7      		in r29,__SP_H__
 6987               		.cfi_def_cfa_register 28
 6988 1c68 CA55      		subi r28,90
 6989 1c6a D140      		sbci r29,1
 6990               		.cfi_def_cfa_offset 366
 6991 1c6c 0FB6      		in __tmp_reg__,__SREG__
 6992 1c6e F894      		cli
 6993 1c70 DEBF      		out __SP_H__,r29
 6994 1c72 0FBE      		out __SREG__,__tmp_reg__
 6995 1c74 CDBF      		out __SP_L__,r28
 6996               	/* prologue: function */
 6997               	/* frame size = 346 */
 6998               	/* stack size = 364 */
 6999               	.L__stack_usage = 364
 7000 1c76 1C01      		movw r2,r24
 7001 1c78 3A01      		movw r6,r20
 7002 1c7a CD5B      		subi r28,lo8(-323)
 7003 1c7c DE4F      		sbci r29,hi8(-323)
 7004 1c7e E882      		st Y,r14
 7005 1c80 C354      		subi r28,lo8(323)
 7006 1c82 D140      		sbci r29,hi8(323)
 7007 1c84 CC5B      		subi r28,lo8(-324)
 7008 1c86 DE4F      		sbci r29,hi8(-324)
 7009 1c88 F882      		st Y,r15
 7010 1c8a C454      		subi r28,lo8(324)
 7011 1c8c D140      		sbci r29,hi8(324)
 7012 1c8e CB5B      		subi r28,lo8(-325)
 7013 1c90 DE4F      		sbci r29,hi8(-325)
 7014 1c92 0883      		st Y,r16
 7015 1c94 C554      		subi r28,lo8(325)
 7016 1c96 D140      		sbci r29,hi8(325)
 7017 1c98 CA5B      		subi r28,lo8(-326)
 7018 1c9a DE4F      		sbci r29,hi8(-326)
 7019 1c9c 1883      		st Y,r17
 7020 1c9e C654      		subi r28,lo8(326)
 7021 1ca0 D140      		sbci r29,hi8(326)
 7022 1ca2 8A2C      		mov r8,r10
 7023 1ca4 9B2C      		mov r9,r11
 7024 1ca6 5601      		movw r10,r12
 7025               	.LVL482:
 7026               		.loc 2 575 1 view .LVU1384
 7027 1ca8 C159      		subi r28,lo8(-367)
 7028 1caa DE4F      		sbci r29,hi8(-367)
 7029 1cac 8881      		ld r24,Y
 7030 1cae 9981      		ldd r25,Y+1
 7031 1cb0 AA81      		ldd r26,Y+2
 7032 1cb2 BB81      		ldd r27,Y+3
 7033 1cb4 CF56      		subi r28,lo8(367)
 7034 1cb6 D140      		sbci r29,hi8(367)
 7035               	.LVL483:
 576:lcd/lcd.c     **** 	u16 x0, y0;
 7036               		.loc 2 576 2 is_stmt 1 view .LVU1385
 577:lcd/lcd.c     **** 	u8 *ci, image[LCD_WIDTH];
 7037               		.loc 2 577 2 view .LVU1386
 578:lcd/lcd.c     **** 
 579:lcd/lcd.c     **** 	for(y0 = y; y0 < y + h; ++y0)
 7038               		.loc 2 579 2 view .LVU1387
 7039               	.LBB415:
 7040               	.LBB416:
 570:lcd/lcd.c     **** }
 7041               		.loc 2 570 7 is_stmt 0 view .LVU1388
 7042 1cb8 492D      		mov r20,r9
 7043               	.LVL484:
 570:lcd/lcd.c     **** }
 7044               		.loc 2 570 7 view .LVU1389
 7045 1cba 50E0      		ldi r21,0
 7046 1cbc C55B      		subi r28,lo8(-331)
 7047 1cbe DE4F      		sbci r29,hi8(-331)
 7048 1cc0 5983      		std Y+1,r21
 7049 1cc2 4883      		st Y,r20
 7050 1cc4 CB54      		subi r28,lo8(331)
 7051 1cc6 D140      		sbci r29,hi8(331)
 570:lcd/lcd.c     **** }
 7052               		.loc 2 570 20 view .LVU1390
 7053 1cc8 E92F      		mov r30,r25
 7054 1cca F0E0      		ldi r31,0
 7055 1ccc C35B      		subi r28,lo8(-333)
 7056 1cce DE4F      		sbci r29,hi8(-333)
 7057 1cd0 F983      		std Y+1,r31
 7058 1cd2 E883      		st Y,r30
 7059 1cd4 CD54      		subi r28,lo8(333)
 7060 1cd6 D140      		sbci r29,hi8(333)
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7061               		.loc 2 569 7 view .LVU1391
 7062 1cd8 4C2D      		mov r20,r12
 7063 1cda 50E0      		ldi r21,0
 7064 1cdc C15B      		subi r28,lo8(-335)
 7065 1cde DE4F      		sbci r29,hi8(-335)
 7066 1ce0 5983      		std Y+1,r21
 7067 1ce2 4883      		st Y,r20
 7068 1ce4 CF54      		subi r28,lo8(335)
 7069 1ce6 D140      		sbci r29,hi8(335)
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7070               		.loc 2 569 20 view .LVU1392
 7071 1ce8 EA2F      		mov r30,r26
 7072 1cea F0E0      		ldi r31,0
 7073 1cec CF5A      		subi r28,lo8(-337)
 7074 1cee DE4F      		sbci r29,hi8(-337)
 7075 1cf0 F983      		std Y+1,r31
 7076 1cf2 E883      		st Y,r30
 7077 1cf4 C155      		subi r28,lo8(337)
 7078 1cf6 D140      		sbci r29,hi8(337)
 7079               	.LBB417:
 7080               	.LBB418:
 528:lcd/lcd.c     **** 
 7081               		.loc 2 528 60 view .LVU1393
 7082 1cf8 8B2C      		mov r8,r11
 7083 1cfa 9924      		clr r9
 7084 1cfc AA24      		clr r10
 7085 1cfe BB24      		clr r11
 7086               	.LBE418:
 7087               	.LBE417:
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7088               		.loc 2 568 7 view .LVU1394
 7089 1d00 CD5A      		subi r28,lo8(-339)
 7090 1d02 DE4F      		sbci r29,hi8(-339)
 7091 1d04 9982      		std Y+1,r9
 7092 1d06 8882      		st Y,r8
 7093 1d08 C355      		subi r28,lo8(339)
 7094 1d0a D140      		sbci r29,hi8(339)
 7095               	.LBB420:
 7096               	.LBB421:
 528:lcd/lcd.c     **** 
 7097               		.loc 2 528 60 view .LVU1395
 7098 1d0c 8B2F      		mov r24,r27
 7099 1d0e 9927      		clr r25
 7100 1d10 AA27      		clr r26
 7101 1d12 BB27      		clr r27
 7102               	.LBE421:
 7103               	.LBE420:
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7104               		.loc 2 568 20 view .LVU1396
 7105 1d14 CB5A      		subi r28,lo8(-341)
 7106 1d16 DE4F      		sbci r29,hi8(-341)
 7107 1d18 9983      		std Y+1,r25
 7108 1d1a 8883      		st Y,r24
 7109 1d1c C555      		subi r28,lo8(341)
 7110 1d1e D140      		sbci r29,hi8(341)
 7111               	.LBE416:
 7112               	.LBE415:
 7113               		.loc 2 579 9 view .LVU1397
 7114 1d20 8B01      		movw r16,r22
 7115               		.loc 2 579 21 view .LVU1398
 7116 1d22 AB01      		movw r20,r22
 7117 1d24 420F      		add r20,r18
 7118 1d26 531F      		adc r21,r19
 7119 1d28 C95A      		subi r28,lo8(-343)
 7120 1d2a DE4F      		sbci r29,hi8(-343)
 7121 1d2c 5983      		std Y+1,r21
 7122 1d2e 4883      		st Y,r20
 7123 1d30 C755      		subi r28,lo8(343)
 7124 1d32 D140      		sbci r29,hi8(343)
 580:lcd/lcd.c     **** 	{
 581:lcd/lcd.c     **** 		xmem_read(addr, image, w);
 7125               		.loc 2 581 3 view .LVU1399
 7126 1d34 BE01      		movw r22,r28
 7127               	.LVL485:
 7128               		.loc 2 581 3 view .LVU1400
 7129 1d36 6F5F      		subi r22,-1
 7130 1d38 7F4F      		sbci r23,-1
 7131 1d3a CF5B      		subi r28,lo8(-321)
 7132 1d3c DE4F      		sbci r29,hi8(-321)
 7133 1d3e 7983      		std Y+1,r23
 7134 1d40 6883      		st Y,r22
 7135 1d42 C154      		subi r28,lo8(321)
 7136 1d44 D140      		sbci r29,hi8(321)
 582:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 583:lcd/lcd.c     **** 		ci = image;
 584:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 7137               		.loc 2 584 22 view .LVU1401
 7138 1d46 C301      		movw r24,r6
 7139 1d48 820D      		add r24,r2
 7140 1d4a 931D      		adc r25,r3
 7141 1d4c C75A      		subi r28,lo8(-345)
 7142 1d4e DE4F      		sbci r29,hi8(-345)
 7143 1d50 9983      		std Y+1,r25
 7144 1d52 8883      		st Y,r24
 7145 1d54 C955      		subi r28,lo8(345)
 7146 1d56 D140      		sbci r29,hi8(345)
 7147               	.LBB443:
 7148               	.LBB441:
 570:lcd/lcd.c     **** }
 7149               		.loc 2 570 27 view .LVU1402
 7150 1d58 4424      		clr r4
 7151 1d5a 4A94      		dec r4
 7152 1d5c 512C      		mov r5,__zero_reg__
 7153               	.LBE441:
 7154               	.LBE443:
 585:lcd/lcd.c     **** 		{
 586:lcd/lcd.c     **** 			_lcd_pixel(_color_merge(fg, bg, *ci++));
 587:lcd/lcd.c     **** 		}
 588:lcd/lcd.c     **** 
 589:lcd/lcd.c     **** 		_lcd_window_end();
 590:lcd/lcd.c     **** 		addr += w;
 7155               		.loc 2 590 8 view .LVU1403
 7156 1d5e 4301      		movw r8,r6
 7157 1d60 A12C      		mov r10,__zero_reg__
 7158 1d62 B12C      		mov r11,__zero_reg__
 7159               	.LVL486:
 7160               	.L206:
 579:lcd/lcd.c     **** 	{
 7161               		.loc 2 579 17 is_stmt 1 discriminator 1 view .LVU1404
 7162 1d64 C95A      		subi r28,lo8(-343)
 7163 1d66 DE4F      		sbci r29,hi8(-343)
 7164 1d68 A881      		ld r26,Y
 7165 1d6a B981      		ldd r27,Y+1
 7166 1d6c C755      		subi r28,lo8(343)
 7167 1d6e D140      		sbci r29,hi8(343)
 7168 1d70 0A17      		cp r16,r26
 7169 1d72 1B07      		cpc r17,r27
 7170 1d74 00F0      		brlo .L209
 7171               	/* epilogue start */
 591:lcd/lcd.c     **** 	}
 592:lcd/lcd.c     **** }
 7172               		.loc 2 592 1 is_stmt 0 view .LVU1405
 7173 1d76 C65A      		subi r28,-90
 7174 1d78 DE4F      		sbci r29,-2
 7175 1d7a 0FB6      		in __tmp_reg__,__SREG__
 7176 1d7c F894      		cli
 7177 1d7e DEBF      		out __SP_H__,r29
 7178 1d80 0FBE      		out __SREG__,__tmp_reg__
 7179 1d82 CDBF      		out __SP_L__,r28
 7180 1d84 DF91      		pop r29
 7181 1d86 CF91      		pop r28
 7182 1d88 1F91      		pop r17
 7183 1d8a 0F91      		pop r16
 7184               	.LVL487:
 7185               		.loc 2 592 1 view .LVU1406
 7186 1d8c FF90      		pop r15
 7187 1d8e EF90      		pop r14
 7188 1d90 DF90      		pop r13
 7189 1d92 CF90      		pop r12
 7190 1d94 BF90      		pop r11
 7191 1d96 AF90      		pop r10
 7192 1d98 9F90      		pop r9
 7193 1d9a 8F90      		pop r8
 7194 1d9c 7F90      		pop r7
 7195 1d9e 6F90      		pop r6
 7196               	.LVL488:
 7197               		.loc 2 592 1 view .LVU1407
 7198 1da0 5F90      		pop r5
 7199 1da2 4F90      		pop r4
 7200 1da4 3F90      		pop r3
 7201 1da6 2F90      		pop r2
 7202               	.LVL489:
 7203               		.loc 2 592 1 view .LVU1408
 7204 1da8 0895      		ret
 7205               	.LVL490:
 7206               	.L209:
 581:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 7207               		.loc 2 581 3 is_stmt 1 view .LVU1409
 7208 1daa 9301      		movw r18,r6
 7209 1dac AE01      		movw r20,r28
 7210 1dae 4F5F      		subi r20,-1
 7211 1db0 5F4F      		sbci r21,-1
 7212 1db2 CD5B      		subi r28,lo8(-323)
 7213 1db4 DE4F      		sbci r29,hi8(-323)
 7214 1db6 6881      		ld r22,Y
 7215 1db8 7981      		ldd r23,Y+1
 7216 1dba 8A81      		ldd r24,Y+2
 7217 1dbc 9B81      		ldd r25,Y+3
 7218 1dbe C354      		subi r28,lo8(323)
 7219 1dc0 D140      		sbci r29,hi8(323)
 7220 1dc2 0E94 0000 		call xmem_read
 7221               	.LVL491:
 582:lcd/lcd.c     **** 		ci = image;
 7222               		.loc 2 582 3 view .LVU1410
 7223 1dc6 21E0      		ldi r18,lo8(1)
 7224 1dc8 30E0      		ldi r19,0
 7225 1dca A301      		movw r20,r6
 7226 1dcc B801      		movw r22,r16
 7227 1dce C101      		movw r24,r2
 7228 1dd0 0E94 0000 		call _lcd_window_start
 7229               	.LVL492:
 583:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 7230               		.loc 2 583 3 view .LVU1411
 584:lcd/lcd.c     **** 		{
 7231               		.loc 2 584 3 view .LVU1412
 584:lcd/lcd.c     **** 		{
 7232               		.loc 2 584 10 is_stmt 0 view .LVU1413
 7233 1dd4 6101      		movw r12,r2
 583:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 7234               		.loc 2 583 6 view .LVU1414
 7235 1dd6 CF5B      		subi r28,lo8(-321)
 7236 1dd8 DE4F      		sbci r29,hi8(-321)
 7237 1dda 8881      		ld r24,Y
 7238 1ddc C154      		subi r28,lo8(321)
 7239 1dde D140      		sbci r29,hi8(321)
 7240 1de0 CE5B      		subi r28,lo8(-322)
 7241 1de2 DE4F      		sbci r29,hi8(-322)
 7242 1de4 9881      		ld r25,Y
 7243 1de6 C254      		subi r28,lo8(322)
 7244 1de8 D140      		sbci r29,hi8(322)
 7245               	.LVL493:
 7246               	.L207:
 584:lcd/lcd.c     **** 		{
 7247               		.loc 2 584 18 is_stmt 1 discriminator 1 view .LVU1415
 7248 1dea C75A      		subi r28,lo8(-345)
 7249 1dec DE4F      		sbci r29,hi8(-345)
 7250 1dee 6881      		ld r22,Y
 7251 1df0 7981      		ldd r23,Y+1
 7252 1df2 C955      		subi r28,lo8(345)
 7253 1df4 D140      		sbci r29,hi8(345)
 7254 1df6 C616      		cp r12,r22
 7255 1df8 D706      		cpc r13,r23
 7256 1dfa 00F0      		brlo .L208
 589:lcd/lcd.c     **** 		addr += w;
 7257               		.loc 2 589 3 discriminator 2 view .LVU1416
 7258 1dfc 0E94 0000 		call _lcd_window_end
 7259               	.LVL494:
 590:lcd/lcd.c     **** 	}
 7260               		.loc 2 590 3 discriminator 2 view .LVU1417
 590:lcd/lcd.c     **** 	}
 7261               		.loc 2 590 8 is_stmt 0 discriminator 2 view .LVU1418
 7262 1e00 CD5B      		subi r28,lo8(-323)
 7263 1e02 DE4F      		sbci r29,hi8(-323)
 7264 1e04 8881      		ld r24,Y
 7265 1e06 9981      		ldd r25,Y+1
 7266 1e08 AA81      		ldd r26,Y+2
 7267 1e0a BB81      		ldd r27,Y+3
 7268 1e0c C354      		subi r28,lo8(323)
 7269 1e0e D140      		sbci r29,hi8(323)
 7270 1e10 880D      		add r24,r8
 7271 1e12 991D      		adc r25,r9
 7272 1e14 AA1D      		adc r26,r10
 7273 1e16 BB1D      		adc r27,r11
 7274 1e18 CD5B      		subi r28,lo8(-323)
 7275 1e1a DE4F      		sbci r29,hi8(-323)
 7276 1e1c 8883      		st Y,r24
 7277 1e1e 9983      		std Y+1,r25
 7278 1e20 AA83      		std Y+2,r26
 7279 1e22 BB83      		std Y+3,r27
 7280 1e24 C354      		subi r28,lo8(323)
 7281 1e26 D140      		sbci r29,hi8(323)
 7282               	.LVL495:
 579:lcd/lcd.c     **** 	{
 7283               		.loc 2 579 26 is_stmt 1 discriminator 2 view .LVU1419
 7284 1e28 0F5F      		subi r16,-1
 7285 1e2a 1F4F      		sbci r17,-1
 7286               	.LVL496:
 579:lcd/lcd.c     **** 	{
 7287               		.loc 2 579 26 is_stmt 0 discriminator 2 view .LVU1420
 7288 1e2c 00C0      		rjmp .L206
 7289               	.LVL497:
 7290               	.L208:
 586:lcd/lcd.c     **** 		}
 7291               		.loc 2 586 4 is_stmt 1 discriminator 3 view .LVU1421
 586:lcd/lcd.c     **** 		}
 7292               		.loc 2 586 39 is_stmt 0 discriminator 3 view .LVU1422
 7293 1e2e C95B      		subi r28,lo8(-327)
 7294 1e30 DE4F      		sbci r29,hi8(-327)
 7295 1e32 8883      		st Y,r24
 7296 1e34 C754      		subi r28,lo8(327)
 7297 1e36 D140      		sbci r29,hi8(327)
 7298 1e38 C85B      		subi r28,lo8(-328)
 7299 1e3a DE4F      		sbci r29,hi8(-328)
 7300 1e3c 9883      		st Y,r25
 7301 1e3e C854      		subi r28,lo8(328)
 7302 1e40 D140      		sbci r29,hi8(328)
 7303               	.LVL498:
 586:lcd/lcd.c     **** 		}
 7304               		.loc 2 586 4 discriminator 3 view .LVU1423
 7305 1e42 C95B      		subi r28,lo8(-327)
 7306 1e44 DE4F      		sbci r29,hi8(-327)
 7307 1e46 A881      		ld r26,Y
 7308 1e48 B981      		ldd r27,Y+1
 7309 1e4a C754      		subi r28,lo8(327)
 7310 1e4c D140      		sbci r29,hi8(327)
 7311 1e4e 2D91      		ld r18,X+
 7312               	.LVL499:
 586:lcd/lcd.c     **** 		}
 7313               		.loc 2 586 4 discriminator 3 view .LVU1424
 7314 1e50 C95B      		subi r28,lo8(-327)
 7315 1e52 DE4F      		sbci r29,hi8(-327)
 7316 1e54 B983      		std Y+1,r27
 7317 1e56 A883      		st Y,r26
 7318 1e58 C754      		subi r28,lo8(327)
 7319 1e5a D140      		sbci r29,hi8(327)
 7320 1e5c 30E0      		ldi r19,0
 7321               	.LVL500:
 7322               	.LBB444:
 7323               	.LBI415:
 555:lcd/lcd.c     **** {
 7324               		.loc 2 555 15 is_stmt 1 discriminator 3 view .LVU1425
 7325               	.LBB442:
 557:lcd/lcd.c     **** 
 7326               		.loc 2 557 2 discriminator 3 view .LVU1426
 559:lcd/lcd.c     **** 	g1 = _abgr_g(color1);
 7327               		.loc 2 559 2 discriminator 3 view .LVU1427
 7328               	.LBB423:
 7329               	.LBI417:
 528:lcd/lcd.c     **** 
 7330               		.loc 2 528 18 discriminator 3 view .LVU1428
 7331               	.LBB419:
 528:lcd/lcd.c     **** 
 7332               		.loc 2 528 39 discriminator 3 view .LVU1429
 528:lcd/lcd.c     **** 
 7333               		.loc 2 528 39 is_stmt 0 discriminator 3 view .LVU1430
 7334               	.LBE419:
 7335               	.LBE423:
 560:lcd/lcd.c     **** 	b1 = _abgr_b(color1);
 7336               		.loc 2 560 2 is_stmt 1 discriminator 3 view .LVU1431
 7337               	.LBB424:
 7338               	.LBI424:
 536:lcd/lcd.c     **** 
 7339               		.loc 2 536 18 discriminator 3 view .LVU1432
 7340               	.LBB425:
 536:lcd/lcd.c     **** 
 7341               		.loc 2 536 39 discriminator 3 view .LVU1433
 536:lcd/lcd.c     **** 
 7342               		.loc 2 536 39 is_stmt 0 discriminator 3 view .LVU1434
 7343               	.LBE425:
 7344               	.LBE424:
 561:lcd/lcd.c     **** 
 7345               		.loc 2 561 2 is_stmt 1 discriminator 3 view .LVU1435
 7346               	.LBB426:
 7347               	.LBI426:
 544:lcd/lcd.c     **** 
 7348               		.loc 2 544 18 discriminator 3 view .LVU1436
 7349               	.LBB427:
 544:lcd/lcd.c     **** 
 7350               		.loc 2 544 39 discriminator 3 view .LVU1437
 544:lcd/lcd.c     **** 
 7351               		.loc 2 544 39 is_stmt 0 discriminator 3 view .LVU1438
 7352               	.LBE427:
 7353               	.LBE426:
 563:lcd/lcd.c     **** 	g2 = _abgr_g(color2);
 7354               		.loc 2 563 2 is_stmt 1 discriminator 3 view .LVU1439
 7355               	.LBB428:
 7356               	.LBI420:
 528:lcd/lcd.c     **** 
 7357               		.loc 2 528 18 discriminator 3 view .LVU1440
 7358               	.LBB422:
 528:lcd/lcd.c     **** 
 7359               		.loc 2 528 39 discriminator 3 view .LVU1441
 528:lcd/lcd.c     **** 
 7360               		.loc 2 528 39 is_stmt 0 discriminator 3 view .LVU1442
 7361               	.LBE422:
 7362               	.LBE428:
 564:lcd/lcd.c     **** 	b2 = _abgr_b(color2);
 7363               		.loc 2 564 2 is_stmt 1 discriminator 3 view .LVU1443
 7364               	.LBB429:
 7365               	.LBI429:
 536:lcd/lcd.c     **** 
 7366               		.loc 2 536 18 discriminator 3 view .LVU1444
 7367               	.LBB430:
 536:lcd/lcd.c     **** 
 7368               		.loc 2 536 39 discriminator 3 view .LVU1445
 536:lcd/lcd.c     **** 
 7369               		.loc 2 536 39 is_stmt 0 discriminator 3 view .LVU1446
 7370               	.LBE430:
 7371               	.LBE429:
 565:lcd/lcd.c     **** 
 7372               		.loc 2 565 2 is_stmt 1 discriminator 3 view .LVU1447
 7373               	.LBB431:
 7374               	.LBI431:
 544:lcd/lcd.c     **** 
 7375               		.loc 2 544 18 discriminator 3 view .LVU1448
 7376               	.LBB432:
 544:lcd/lcd.c     **** 
 7377               		.loc 2 544 39 discriminator 3 view .LVU1449
 544:lcd/lcd.c     **** 
 7378               		.loc 2 544 39 is_stmt 0 discriminator 3 view .LVU1450
 7379               	.LBE432:
 7380               	.LBE431:
 567:lcd/lcd.c     **** 		(r1 * ratio + r2 * (255 - ratio)) / 255,
 7381               		.loc 2 567 2 is_stmt 1 discriminator 3 view .LVU1451
 570:lcd/lcd.c     **** }
 7382               		.loc 2 570 27 is_stmt 0 discriminator 3 view .LVU1452
 7383 1e5e F201      		movw r30,r4
 7384 1e60 E21B      		sub r30,r18
 7385 1e62 F30B      		sbc r31,r19
 7386               	.LVL501:
 7387               	.LBB433:
 7388               	.LBI433:
 432:lcd/lcd.c     **** {
 7389               		.loc 2 432 8 is_stmt 1 discriminator 3 view .LVU1453
 7390               	.LBB434:
 434:lcd/lcd.c     **** }
 7391               		.loc 2 434 2 discriminator 3 view .LVU1454
 434:lcd/lcd.c     **** }
 7392               		.loc 2 434 2 is_stmt 0 discriminator 3 view .LVU1455
 7393               	.LBE434:
 7394               	.LBE433:
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7395               		.loc 2 569 7 discriminator 3 view .LVU1456
 7396 1e64 C15B      		subi r28,lo8(-335)
 7397 1e66 DE4F      		sbci r29,hi8(-335)
 7398 1e68 4881      		ld r20,Y
 7399 1e6a 5981      		ldd r21,Y+1
 7400 1e6c CF54      		subi r28,lo8(335)
 7401 1e6e D140      		sbci r29,hi8(335)
 7402 1e70 249F      		mul r18,r20
 7403 1e72 C001      		movw r24,r0
 7404 1e74 259F      		mul r18,r21
 7405 1e76 900D      		add r25,r0
 7406 1e78 349F      		mul r19,r20
 7407 1e7a 900D      		add r25,r0
 7408 1e7c 1124      		clr r1
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7409               		.loc 2 569 20 discriminator 3 view .LVU1457
 7410 1e7e CF5A      		subi r28,lo8(-337)
 7411 1e80 DE4F      		sbci r29,hi8(-337)
 7412 1e82 6881      		ld r22,Y
 7413 1e84 7981      		ldd r23,Y+1
 7414 1e86 C155      		subi r28,lo8(337)
 7415 1e88 D140      		sbci r29,hi8(337)
 7416 1e8a E69F      		mul r30,r22
 7417 1e8c A001      		movw r20,r0
 7418 1e8e E79F      		mul r30,r23
 7419 1e90 500D      		add r21,r0
 7420 1e92 F69F      		mul r31,r22
 7421 1e94 500D      		add r21,r0
 7422 1e96 1124      		clr r1
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7423               		.loc 2 569 15 discriminator 3 view .LVU1458
 7424 1e98 840F      		add r24,r20
 7425 1e9a 951F      		adc r25,r21
 569:lcd/lcd.c     **** 		(b1 * ratio + b2 * (255 - ratio)) / 255);
 7426               		.loc 2 569 37 discriminator 3 view .LVU1459
 7427 1e9c B201      		movw r22,r4
 7428 1e9e 0E94 0000 		call __udivmodhi4
 7429               	.LVL502:
 7430               	.LBB438:
 7431               	.LBB435:
 434:lcd/lcd.c     **** }
 7432               		.loc 2 434 41 discriminator 3 view .LVU1460
 7433 1ea2 83E0      		ldi r24,3
 7434               		1:
 7435 1ea4 660F      		lsl r22
 7436 1ea6 771F      		rol r23
 7437 1ea8 8A95      		dec r24
 7438 1eaa 01F4      		brne 1b
 7439 1eac 7B01      		movw r14,r22
 7440 1eae 80EE      		ldi r24,224
 7441 1eb0 E822      		and r14,r24
 7442 1eb2 87E0      		ldi r24,7
 7443 1eb4 F822      		and r15,r24
 7444               	.LBE435:
 7445               	.LBE438:
 570:lcd/lcd.c     **** }
 7446               		.loc 2 570 7 discriminator 3 view .LVU1461
 7447 1eb6 C55B      		subi r28,lo8(-331)
 7448 1eb8 DE4F      		sbci r29,hi8(-331)
 7449 1eba A881      		ld r26,Y
 7450 1ebc B981      		ldd r27,Y+1
 7451 1ebe CB54      		subi r28,lo8(331)
 7452 1ec0 D140      		sbci r29,hi8(331)
 7453 1ec2 2A9F      		mul r18,r26
 7454 1ec4 C001      		movw r24,r0
 7455 1ec6 2B9F      		mul r18,r27
 7456 1ec8 900D      		add r25,r0
 7457 1eca 3A9F      		mul r19,r26
 7458 1ecc 900D      		add r25,r0
 7459 1ece 1124      		clr r1
 570:lcd/lcd.c     **** }
 7460               		.loc 2 570 20 discriminator 3 view .LVU1462
 7461 1ed0 C35B      		subi r28,lo8(-333)
 7462 1ed2 DE4F      		sbci r29,hi8(-333)
 7463 1ed4 6881      		ld r22,Y
 7464 1ed6 7981      		ldd r23,Y+1
 7465 1ed8 CD54      		subi r28,lo8(333)
 7466 1eda D140      		sbci r29,hi8(333)
 7467 1edc 6E9F      		mul r22,r30
 7468 1ede A001      		movw r20,r0
 7469 1ee0 6F9F      		mul r22,r31
 7470 1ee2 500D      		add r21,r0
 7471 1ee4 7E9F      		mul r23,r30
 7472 1ee6 500D      		add r21,r0
 7473 1ee8 1124      		clr r1
 570:lcd/lcd.c     **** }
 7474               		.loc 2 570 15 discriminator 3 view .LVU1463
 7475 1eea 840F      		add r24,r20
 7476 1eec 951F      		adc r25,r21
 570:lcd/lcd.c     **** }
 7477               		.loc 2 570 37 discriminator 3 view .LVU1464
 7478 1eee B201      		movw r22,r4
 7479 1ef0 0E94 0000 		call __udivmodhi4
 7480               	.LBB439:
 7481               	.LBB436:
 434:lcd/lcd.c     **** }
 7482               		.loc 2 434 52 discriminator 3 view .LVU1465
 7483 1ef4 6695      		lsr r22
 7484 1ef6 6695      		lsr r22
 7485 1ef8 6695      		lsr r22
 434:lcd/lcd.c     **** }
 7486               		.loc 2 434 47 discriminator 3 view .LVU1466
 7487 1efa E62A      		or r14,r22
 7488               	.LBE436:
 7489               	.LBE439:
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7490               		.loc 2 568 7 discriminator 3 view .LVU1467
 7491 1efc CD5A      		subi r28,lo8(-339)
 7492 1efe DE4F      		sbci r29,hi8(-339)
 7493 1f00 A881      		ld r26,Y
 7494 1f02 B981      		ldd r27,Y+1
 7495 1f04 C355      		subi r28,lo8(339)
 7496 1f06 D140      		sbci r29,hi8(339)
 7497 1f08 2A9F      		mul r18,r26
 7498 1f0a C001      		movw r24,r0
 7499 1f0c 2B9F      		mul r18,r27
 7500 1f0e 900D      		add r25,r0
 7501 1f10 3A9F      		mul r19,r26
 7502 1f12 900D      		add r25,r0
 7503 1f14 1124      		clr r1
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7504               		.loc 2 568 20 discriminator 3 view .LVU1468
 7505 1f16 CB5A      		subi r28,lo8(-341)
 7506 1f18 DE4F      		sbci r29,hi8(-341)
 7507 1f1a 4881      		ld r20,Y
 7508 1f1c 5981      		ldd r21,Y+1
 7509 1f1e C555      		subi r28,lo8(341)
 7510 1f20 D140      		sbci r29,hi8(341)
 7511 1f22 E49F      		mul r30,r20
 7512 1f24 9001      		movw r18,r0
 7513 1f26 E59F      		mul r30,r21
 7514 1f28 300D      		add r19,r0
 7515 1f2a F49F      		mul r31,r20
 7516 1f2c 300D      		add r19,r0
 7517 1f2e 1124      		clr r1
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7518               		.loc 2 568 15 discriminator 3 view .LVU1469
 7519 1f30 820F      		add r24,r18
 7520 1f32 931F      		adc r25,r19
 568:lcd/lcd.c     **** 		(g1 * ratio + g2 * (255 - ratio)) / 255,
 7521               		.loc 2 568 37 discriminator 3 view .LVU1470
 7522 1f34 B201      		movw r22,r4
 7523 1f36 0E94 0000 		call __udivmodhi4
 7524               	.LBB440:
 7525               	.LBB437:
 434:lcd/lcd.c     **** }
 7526               		.loc 2 434 21 discriminator 3 view .LVU1471
 7527 1f3a C65B      		subi r28,lo8(-330)
 7528 1f3c DE4F      		sbci r29,hi8(-330)
 7529 1f3e 6883      		st Y,r22
 7530 1f40 CA54      		subi r28,lo8(330)
 7531 1f42 D140      		sbci r29,hi8(330)
 7532 1f44 C75B      		subi r28,lo8(-329)
 7533 1f46 DE4F      		sbci r29,hi8(-329)
 7534 1f48 1882      		st Y,__zero_reg__
 7535 1f4a C954      		subi r28,lo8(329)
 7536 1f4c D140      		sbci r29,hi8(329)
 7537 1f4e C75B      		subi r28,lo8(-329)
 7538 1f50 DE4F      		sbci r29,hi8(-329)
 7539 1f52 8881      		ld r24,Y
 7540 1f54 9981      		ldd r25,Y+1
 7541 1f56 C954      		subi r28,lo8(329)
 7542 1f58 D140      		sbci r29,hi8(329)
 7543 1f5a 8827      		clr r24
 7544 1f5c 987F      		andi r25,248
 7545               	.LBE437:
 7546               	.LBE440:
 7547               	.LBE442:
 7548               	.LBE444:
 586:lcd/lcd.c     **** 		}
 7549               		.loc 2 586 4 discriminator 3 view .LVU1472
 7550 1f5e 8E29      		or r24,r14
 7551 1f60 9F29      		or r25,r15
 7552 1f62 0E94 0000 		call _lcd_pixel
 7553               	.LVL503:
 584:lcd/lcd.c     **** 		{
 7554               		.loc 2 584 27 is_stmt 1 discriminator 3 view .LVU1473
 7555 1f66 5FEF      		ldi r21,-1
 7556 1f68 C51A      		sub r12,r21
 7557 1f6a D50A      		sbc r13,r21
 7558               	.LVL504:
 586:lcd/lcd.c     **** 		}
 7559               		.loc 2 586 39 is_stmt 0 discriminator 3 view .LVU1474
 7560 1f6c C95B      		subi r28,lo8(-327)
 7561 1f6e DE4F      		sbci r29,hi8(-327)
 7562 1f70 8881      		ld r24,Y
 7563 1f72 C754      		subi r28,lo8(327)
 7564 1f74 D140      		sbci r29,hi8(327)
 7565 1f76 C85B      		subi r28,lo8(-328)
 7566 1f78 DE4F      		sbci r29,hi8(-328)
 7567 1f7a 9881      		ld r25,Y
 7568 1f7c C854      		subi r28,lo8(328)
 7569 1f7e D140      		sbci r29,hi8(328)
 7570 1f80 00C0      		rjmp .L207
 7571               		.cfi_endproc
 7572               	.LFE57:
 7575               	syscall_gfx_image_grayscale:
 7576               	.LVL505:
 7577               	.LFB59:
 535:../../emulator/emulator.c **** 	u16 x, y, w, h;
 7578               		.loc 6 535 1 is_stmt 1 view -0
 7579               		.cfi_startproc
 535:../../emulator/emulator.c **** 	u16 x, y, w, h;
 7580               		.loc 6 535 1 is_stmt 0 view .LVU1476
 7581 1f82 2F92      		push r2
 7582               		.cfi_def_cfa_offset 3
 7583               		.cfi_offset 2, -2
 7584 1f84 3F92      		push r3
 7585               		.cfi_def_cfa_offset 4
 7586               		.cfi_offset 3, -3
 7587 1f86 4F92      		push r4
 7588               		.cfi_def_cfa_offset 5
 7589               		.cfi_offset 4, -4
 7590 1f88 5F92      		push r5
 7591               		.cfi_def_cfa_offset 6
 7592               		.cfi_offset 5, -5
 7593 1f8a 6F92      		push r6
 7594               		.cfi_def_cfa_offset 7
 7595               		.cfi_offset 6, -6
 7596 1f8c 7F92      		push r7
 7597               		.cfi_def_cfa_offset 8
 7598               		.cfi_offset 7, -7
 7599 1f8e 8F92      		push r8
 7600               		.cfi_def_cfa_offset 9
 7601               		.cfi_offset 8, -8
 7602 1f90 9F92      		push r9
 7603               		.cfi_def_cfa_offset 10
 7604               		.cfi_offset 9, -9
 7605 1f92 AF92      		push r10
 7606               		.cfi_def_cfa_offset 11
 7607               		.cfi_offset 10, -10
 7608 1f94 BF92      		push r11
 7609               		.cfi_def_cfa_offset 12
 7610               		.cfi_offset 11, -11
 7611 1f96 CF92      		push r12
 7612               		.cfi_def_cfa_offset 13
 7613               		.cfi_offset 12, -12
 7614 1f98 DF92      		push r13
 7615               		.cfi_def_cfa_offset 14
 7616               		.cfi_offset 13, -13
 7617 1f9a EF92      		push r14
 7618               		.cfi_def_cfa_offset 15
 7619               		.cfi_offset 14, -14
 7620 1f9c FF92      		push r15
 7621               		.cfi_def_cfa_offset 16
 7622               		.cfi_offset 15, -15
 7623 1f9e 0F93      		push r16
 7624               		.cfi_def_cfa_offset 17
 7625               		.cfi_offset 16, -16
 7626 1fa0 1F93      		push r17
 7627               		.cfi_def_cfa_offset 18
 7628               		.cfi_offset 17, -17
 7629 1fa2 CF93      		push r28
 7630               		.cfi_def_cfa_offset 19
 7631               		.cfi_offset 28, -18
 7632 1fa4 DF93      		push r29
 7633               		.cfi_def_cfa_offset 20
 7634               		.cfi_offset 29, -19
 7635 1fa6 CDB7      		in r28,__SP_L__
 7636 1fa8 DEB7      		in r29,__SP_H__
 7637               		.cfi_def_cfa_register 28
 7638 1faa 6C97      		sbiw r28,28
 7639               		.cfi_def_cfa_offset 48
 7640 1fac 0FB6      		in __tmp_reg__,__SREG__
 7641 1fae F894      		cli
 7642 1fb0 DEBF      		out __SP_H__,r29
 7643 1fb2 0FBE      		out __SREG__,__tmp_reg__
 7644 1fb4 CDBF      		out __SP_L__,r28
 7645               	/* prologue: function */
 7646               	/* frame size = 28 */
 7647               	/* stack size = 46 */
 7648               	.L__stack_usage = 46
 7649 1fb6 8C01      		movw r16,r24
 536:../../emulator/emulator.c **** 	u32 image, bytes, rect_addr, fg, bg;
 7650               		.loc 6 536 2 is_stmt 1 view .LVU1477
 537:../../emulator/emulator.c **** 	Rectangle rect;
 7651               		.loc 6 537 2 view .LVU1478
 538:../../emulator/emulator.c **** 
 7652               		.loc 6 538 2 view .LVU1479
 540:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7653               		.loc 6 540 2 view .LVU1480
 540:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7654               		.loc 6 540 12 is_stmt 0 view .LVU1481
 7655 1fb8 DC01      		movw r26,r24
 7656 1fba 8D91      		ld r24,X+
 7657 1fbc 9D91      		ld r25,X+
 7658 1fbe 0D90      		ld __tmp_reg__,X+
 7659 1fc0 BC91      		ld r27,X
 7660 1fc2 A02D      		mov r26,__tmp_reg__
 7661               	.LVL506:
 540:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7662               		.loc 6 540 12 view .LVU1482
 7663 1fc4 8D8B      		std Y+21,r24
 7664 1fc6 9E8B      		std Y+22,r25
 7665 1fc8 AF8B      		std Y+23,r26
 7666 1fca B88F      		std Y+24,r27
 7667               	.LVL507:
 541:../../emulator/emulator.c **** 	{
 7668               		.loc 6 541 2 is_stmt 1 view .LVU1483
 541:../../emulator/emulator.c **** 	{
 7669               		.loc 6 541 5 is_stmt 0 view .LVU1484
 7670 1fcc 20E1      		ldi r18,lo8(16)
 7671 1fce 30E0      		ldi r19,0
 7672 1fd0 40E0      		ldi r20,0
 7673 1fd2 50E0      		ldi r21,0
 7674 1fd4 BC01      		movw r22,r24
 7675 1fd6 CD01      		movw r24,r26
 7676 1fd8 0E94 0000 		call _memory_check_bounds
 7677               	.LVL508:
 541:../../emulator/emulator.c **** 	{
 7678               		.loc 6 541 4 view .LVU1485
 7679 1fdc 8823      		tst r24
 7680 1fde 01F0      		breq .L211
 7681               	.L213:
 543:../../emulator/emulator.c **** 	}
 7682               		.loc 6 543 10 view .LVU1486
 7683 1fe0 B1E0      		ldi r27,lo8(1)
 7684 1fe2 B98B      		std Y+17,r27
 7685               	.L210:
 567:../../emulator/emulator.c **** 
 7686               		.loc 6 567 1 view .LVU1487
 7687 1fe4 8989      		ldd r24,Y+17
 7688               	/* epilogue start */
 7689 1fe6 6C96      		adiw r28,28
 7690 1fe8 0FB6      		in __tmp_reg__,__SREG__
 7691 1fea F894      		cli
 7692 1fec DEBF      		out __SP_H__,r29
 7693 1fee 0FBE      		out __SREG__,__tmp_reg__
 7694 1ff0 CDBF      		out __SP_L__,r28
 7695 1ff2 DF91      		pop r29
 7696 1ff4 CF91      		pop r28
 7697 1ff6 1F91      		pop r17
 7698 1ff8 0F91      		pop r16
 7699               	.LVL509:
 567:../../emulator/emulator.c **** 
 7700               		.loc 6 567 1 view .LVU1488
 7701 1ffa FF90      		pop r15
 7702 1ffc EF90      		pop r14
 7703 1ffe DF90      		pop r13
 7704 2000 CF90      		pop r12
 7705 2002 BF90      		pop r11
 7706 2004 AF90      		pop r10
 7707 2006 9F90      		pop r9
 7708 2008 8F90      		pop r8
 7709 200a 7F90      		pop r7
 7710 200c 6F90      		pop r6
 7711 200e 5F90      		pop r5
 7712 2010 4F90      		pop r4
 7713 2012 3F90      		pop r3
 7714 2014 2F90      		pop r2
 7715 2016 0895      		ret
 7716               	.LVL510:
 7717               	.L211:
 546:../../emulator/emulator.c **** 	x = rect.X;
 7718               		.loc 6 546 2 is_stmt 1 view .LVU1489
 7719               	.LBB449:
 7720               	.LBI449:
  24:platform.c    **** {
 7721               		.loc 1 24 6 view .LVU1490
 7722               	.LBB450:
  26:platform.c    **** }
 7723               		.loc 1 26 2 view .LVU1491
 7724 2018 20E1      		ldi r18,lo8(16)
 7725 201a 30E0      		ldi r19,0
 7726 201c AE01      		movw r20,r28
 7727 201e 4F5F      		subi r20,-1
 7728 2020 5F4F      		sbci r21,-1
 7729 2022 6D89      		ldd r22,Y+21
 7730 2024 7E89      		ldd r23,Y+22
 7731 2026 8F89      		ldd r24,Y+23
 7732 2028 988D      		ldd r25,Y+24
 7733 202a 0E94 0000 		call xmem_read
 7734               	.LVL511:
  26:platform.c    **** }
 7735               		.loc 1 26 2 is_stmt 0 view .LVU1492
 7736               	.LBE450:
 7737               	.LBE449:
 547:../../emulator/emulator.c **** 	y = rect.Y;
 7738               		.loc 6 547 2 is_stmt 1 view .LVU1493
 547:../../emulator/emulator.c **** 	y = rect.Y;
 7739               		.loc 6 547 4 is_stmt 0 view .LVU1494
 7740 202e 2980      		ldd r2,Y+1
 7741 2030 3A80      		ldd r3,Y+2
 7742               	.LVL512:
 548:../../emulator/emulator.c **** 	w = rect.W;
 7743               		.loc 6 548 2 is_stmt 1 view .LVU1495
 548:../../emulator/emulator.c **** 	w = rect.W;
 7744               		.loc 6 548 4 is_stmt 0 view .LVU1496
 7745 2032 8D80      		ldd r8,Y+5
 7746 2034 9E80      		ldd r9,Y+6
 7747               	.LVL513:
 549:../../emulator/emulator.c **** 	h = rect.H;
 7748               		.loc 6 549 2 is_stmt 1 view .LVU1497
 549:../../emulator/emulator.c **** 	h = rect.H;
 7749               		.loc 6 549 10 is_stmt 0 view .LVU1498
 7750 2036 4984      		ldd r4,Y+9
 7751 2038 5A84      		ldd r5,Y+10
 7752 203a 6B84      		ldd r6,Y+11
 7753 203c 7C84      		ldd r7,Y+12
 7754               	.LVL514:
 550:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 7755               		.loc 6 550 2 is_stmt 1 view .LVU1499
 550:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 7756               		.loc 6 550 10 is_stmt 0 view .LVU1500
 7757 203e 8D85      		ldd r24,Y+13
 7758 2040 9E85      		ldd r25,Y+14
 7759 2042 AF85      		ldd r26,Y+15
 7760 2044 B889      		ldd r27,Y+16
 7761 2046 8D8B      		std Y+21,r24
 7762 2048 9E8B      		std Y+22,r25
 7763 204a AF8B      		std Y+23,r26
 7764 204c B88F      		std Y+24,r27
 7765               	.LVL515:
 551:../../emulator/emulator.c **** 	{
 7766               		.loc 6 551 2 is_stmt 1 view .LVU1501
 551:../../emulator/emulator.c **** 	{
 7767               		.loc 6 551 5 is_stmt 0 view .LVU1502
 7768 204e 2D89      		ldd r18,Y+21
 7769 2050 3E89      		ldd r19,Y+22
 7770 2052 A201      		movw r20,r4
 7771 2054 B401      		movw r22,r8
 7772 2056 C101      		movw r24,r2
 7773 2058 0E94 0000 		call _gfx_check_bounds
 7774               	.LVL516:
 551:../../emulator/emulator.c **** 	{
 7775               		.loc 6 551 4 view .LVU1503
 7776 205c 8111      		cpse r24,__zero_reg__
 7777 205e 00C0      		rjmp .L213
 556:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 7778               		.loc 6 556 2 is_stmt 1 view .LVU1504
 556:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 7779               		.loc 6 556 8 is_stmt 0 view .LVU1505
 7780 2060 D801      		movw r26,r16
 7781 2062 1496      		adiw r26,4
 7782 2064 8D91      		ld r24,X+
 7783 2066 9D91      		ld r25,X+
 7784 2068 0D90      		ld __tmp_reg__,X+
 7785 206a BC91      		ld r27,X
 7786 206c A02D      		mov r26,__tmp_reg__
 7787 206e 898F      		std Y+25,r24
 7788 2070 9A8F      		std Y+26,r25
 7789 2072 AB8F      		std Y+27,r26
 7790 2074 BC8F      		std Y+28,r27
 7791               	.LVL517:
 557:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 7792               		.loc 6 557 2 is_stmt 1 view .LVU1506
 558:../../emulator/emulator.c **** 	{
 7793               		.loc 6 558 2 view .LVU1507
 557:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 7794               		.loc 6 557 8 is_stmt 0 view .LVU1508
 7795 2076 A301      		movw r20,r6
 7796 2078 9201      		movw r18,r4
 7797 207a 4427      		clr r20
 7798 207c 5527      		clr r21
 7799 207e 8D89      		ldd r24,Y+21
 7800 2080 9E89      		ldd r25,Y+22
 7801 2082 AF89      		ldd r26,Y+23
 7802 2084 B88D      		ldd r27,Y+24
 7803               	.LVL518:
 557:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 7804               		.loc 6 557 8 view .LVU1509
 7805 2086 AA27      		clr r26
 7806 2088 BB27      		clr r27
 7807 208a BC01      		movw r22,r24
 7808 208c CD01      		movw r24,r26
 7809 208e 0E94 0000 		call __mulsi3
 7810               	.LVL519:
 557:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 7811               		.loc 6 557 8 view .LVU1510
 7812 2092 698B      		std Y+17,r22
 7813 2094 7A8B      		std Y+18,r23
 7814 2096 8B8B      		std Y+19,r24
 7815 2098 9C8B      		std Y+20,r25
 558:../../emulator/emulator.c **** 	{
 7816               		.loc 6 558 5 view .LVU1511
 7817 209a 9B01      		movw r18,r22
 7818 209c AC01      		movw r20,r24
 7819 209e 698D      		ldd r22,Y+25
 7820 20a0 7A8D      		ldd r23,Y+26
 7821 20a2 8B8D      		ldd r24,Y+27
 7822 20a4 9C8D      		ldd r25,Y+28
 7823               	.LVL520:
 558:../../emulator/emulator.c **** 	{
 7824               		.loc 6 558 5 view .LVU1512
 7825 20a6 0E94 0000 		call _memory_check_bounds
 7826               	.LVL521:
 558:../../emulator/emulator.c **** 	{
 7827               		.loc 6 558 5 view .LVU1513
 7828 20aa 898B      		std Y+17,r24
 7829               	.LVL522:
 558:../../emulator/emulator.c **** 	{
 7830               		.loc 6 558 4 view .LVU1514
 7831 20ac 8111      		cpse r24,__zero_reg__
 7832 20ae 00C0      		rjmp .L213
 563:../../emulator/emulator.c **** 	bg = args[3];
 7833               		.loc 6 563 2 is_stmt 1 view .LVU1515
 7834               	.LVL523:
 564:../../emulator/emulator.c **** 	env_gfx_image_grayscale(x, y, w, h, image, fg, bg);
 7835               		.loc 6 564 2 view .LVU1516
 565:../../emulator/emulator.c **** 	return 0;
 7836               		.loc 6 565 2 view .LVU1517
 7837               	.LBB451:
 7838               	.LBI451:
 102:platform.c    **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, u32 fg, u32 bg)
 7839               		.loc 1 102 6 view .LVU1518
 7840               	.LBB452:
 105:platform.c    **** }
 7841               		.loc 1 105 2 view .LVU1519
 7842 20b0 D801      		movw r26,r16
 7843 20b2 1896      		adiw r26,8
 7844 20b4 AD90      		ld r10,X+
 7845 20b6 BD90      		ld r11,X+
 7846 20b8 CD90      		ld r12,X+
 7847 20ba DC90      		ld r13,X
 7848 20bc 1B97      		sbiw r26,8+3
 7849 20be 1F96      		adiw r26,15
 7850 20c0 8C91      		ld r24,X
 7851 20c2 1F97      		sbiw r26,15
 7852 20c4 8F93      		push r24
 7853               	.LVL524:
 105:platform.c    **** }
 7854               		.loc 1 105 2 is_stmt 0 view .LVU1520
 7855 20c6 1E96      		adiw r26,14
 7856 20c8 8C91      		ld r24,X
 7857 20ca 1E97      		sbiw r26,14
 7858 20cc 8F93      		push r24
 7859 20ce 1D96      		adiw r26,13
 7860 20d0 8C91      		ld r24,X
 7861 20d2 1D97      		sbiw r26,13
 7862 20d4 8F93      		push r24
 7863 20d6 1C96      		adiw r26,12
 7864 20d8 8C91      		ld r24,X
 7865 20da 8F93      		push r24
 7866 20dc E98C      		ldd r14,Y+25
 7867 20de FA8C      		ldd r15,Y+26
 7868 20e0 0B8D      		ldd r16,Y+27
 7869 20e2 1C8D      		ldd r17,Y+28
 7870 20e4 2D89      		ldd r18,Y+21
 7871 20e6 3E89      		ldd r19,Y+22
 7872 20e8 A201      		movw r20,r4
 7873 20ea B401      		movw r22,r8
 7874 20ec C101      		movw r24,r2
 7875 20ee 0E94 0000 		call lcd_image_grayscale
 7876               	.LVL525:
 106:platform.c    **** 
 7877               		.loc 1 106 1 view .LVU1521
 7878 20f2 0F90      		pop __tmp_reg__
 7879 20f4 0F90      		pop __tmp_reg__
 7880 20f6 0F90      		pop __tmp_reg__
 7881 20f8 0F90      		pop __tmp_reg__
 7882               	.LVL526:
 106:platform.c    **** 
 7883               		.loc 1 106 1 view .LVU1522
 7884 20fa 00C0      		rjmp .L210
 7885               	.LBE452:
 7886               	.LBE451:
 7887               		.cfi_endproc
 7888               	.LFE59:
 7891               	syscall_gfx_image_1bit:
 7892               	.LVL527:
 7893               	.LFB61:
 579:../../emulator/emulator.c **** 	u16 x, y, w, h;
 7894               		.loc 6 579 1 is_stmt 1 view -0
 7895               		.cfi_startproc
 579:../../emulator/emulator.c **** 	u16 x, y, w, h;
 7896               		.loc 6 579 1 is_stmt 0 view .LVU1524
 7897 20fc 2F92      		push r2
 7898               		.cfi_def_cfa_offset 3
 7899               		.cfi_offset 2, -2
 7900 20fe 3F92      		push r3
 7901               		.cfi_def_cfa_offset 4
 7902               		.cfi_offset 3, -3
 7903 2100 4F92      		push r4
 7904               		.cfi_def_cfa_offset 5
 7905               		.cfi_offset 4, -4
 7906 2102 5F92      		push r5
 7907               		.cfi_def_cfa_offset 6
 7908               		.cfi_offset 5, -5
 7909 2104 6F92      		push r6
 7910               		.cfi_def_cfa_offset 7
 7911               		.cfi_offset 6, -6
 7912 2106 7F92      		push r7
 7913               		.cfi_def_cfa_offset 8
 7914               		.cfi_offset 7, -7
 7915 2108 8F92      		push r8
 7916               		.cfi_def_cfa_offset 9
 7917               		.cfi_offset 8, -8
 7918 210a 9F92      		push r9
 7919               		.cfi_def_cfa_offset 10
 7920               		.cfi_offset 9, -9
 7921 210c AF92      		push r10
 7922               		.cfi_def_cfa_offset 11
 7923               		.cfi_offset 10, -10
 7924 210e BF92      		push r11
 7925               		.cfi_def_cfa_offset 12
 7926               		.cfi_offset 11, -11
 7927 2110 CF92      		push r12
 7928               		.cfi_def_cfa_offset 13
 7929               		.cfi_offset 12, -12
 7930 2112 DF92      		push r13
 7931               		.cfi_def_cfa_offset 14
 7932               		.cfi_offset 13, -13
 7933 2114 EF92      		push r14
 7934               		.cfi_def_cfa_offset 15
 7935               		.cfi_offset 14, -14
 7936 2116 FF92      		push r15
 7937               		.cfi_def_cfa_offset 16
 7938               		.cfi_offset 15, -15
 7939 2118 0F93      		push r16
 7940               		.cfi_def_cfa_offset 17
 7941               		.cfi_offset 16, -16
 7942 211a 1F93      		push r17
 7943               		.cfi_def_cfa_offset 18
 7944               		.cfi_offset 17, -17
 7945 211c CF93      		push r28
 7946               		.cfi_def_cfa_offset 19
 7947               		.cfi_offset 28, -18
 7948 211e DF93      		push r29
 7949               		.cfi_def_cfa_offset 20
 7950               		.cfi_offset 29, -19
 7951 2120 CDB7      		in r28,__SP_L__
 7952 2122 DEB7      		in r29,__SP_H__
 7953               		.cfi_def_cfa_register 28
 7954 2124 CD54      		subi r28,77
 7955 2126 D109      		sbc r29,__zero_reg__
 7956               		.cfi_def_cfa_offset 97
 7957 2128 0FB6      		in __tmp_reg__,__SREG__
 7958 212a F894      		cli
 7959 212c DEBF      		out __SP_H__,r29
 7960 212e 0FBE      		out __SREG__,__tmp_reg__
 7961 2130 CDBF      		out __SP_L__,r28
 7962               	/* prologue: function */
 7963               	/* frame size = 77 */
 7964               	/* stack size = 95 */
 7965               	.L__stack_usage = 95
 7966 2132 8C01      		movw r16,r24
 580:../../emulator/emulator.c **** 	u32 image, bytes, rect_addr, fg, bg;
 7967               		.loc 6 580 2 is_stmt 1 view .LVU1525
 581:../../emulator/emulator.c **** 	Rectangle rect;
 7968               		.loc 6 581 2 view .LVU1526
 582:../../emulator/emulator.c **** 
 7969               		.loc 6 582 2 view .LVU1527
 584:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7970               		.loc 6 584 2 view .LVU1528
 584:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7971               		.loc 6 584 12 is_stmt 0 view .LVU1529
 7972 2134 DC01      		movw r26,r24
 7973 2136 8D91      		ld r24,X+
 7974 2138 9D91      		ld r25,X+
 7975 213a 0D90      		ld __tmp_reg__,X+
 7976 213c BC91      		ld r27,X
 7977 213e A02D      		mov r26,__tmp_reg__
 7978               	.LVL528:
 584:../../emulator/emulator.c **** 	if(_memory_check_bounds(rect_addr, sizeof(rect)))
 7979               		.loc 6 584 12 view .LVU1530
 7980 2140 8BAF      		std Y+59,r24
 7981 2142 9CAF      		std Y+60,r25
 7982 2144 ADAF      		std Y+61,r26
 7983 2146 BEAF      		std Y+62,r27
 7984               	.LVL529:
 585:../../emulator/emulator.c **** 	{
 7985               		.loc 6 585 2 is_stmt 1 view .LVU1531
 585:../../emulator/emulator.c **** 	{
 7986               		.loc 6 585 5 is_stmt 0 view .LVU1532
 7987 2148 20E1      		ldi r18,lo8(16)
 7988 214a 30E0      		ldi r19,0
 7989 214c 40E0      		ldi r20,0
 7990 214e 50E0      		ldi r21,0
 7991 2150 BC01      		movw r22,r24
 7992 2152 CD01      		movw r24,r26
 7993 2154 0E94 0000 		call _memory_check_bounds
 7994               	.LVL530:
 585:../../emulator/emulator.c **** 	{
 7995               		.loc 6 585 4 view .LVU1533
 7996 2158 8823      		tst r24
 7997 215a 01F0      		breq .L215
 7998               	.L217:
 587:../../emulator/emulator.c **** 	}
 7999               		.loc 6 587 10 view .LVU1534
 8000 215c 7724      		clr r7
 8001 215e 7394      		inc r7
 8002               	.LVL531:
 8003               	.L214:
 611:../../emulator/emulator.c **** 
 8004               		.loc 6 611 1 view .LVU1535
 8005 2160 872D      		mov r24,r7
 8006               	/* epilogue start */
 8007 2162 C35B      		subi r28,-77
 8008 2164 DF4F      		sbci r29,-1
 8009 2166 0FB6      		in __tmp_reg__,__SREG__
 8010 2168 F894      		cli
 8011 216a DEBF      		out __SP_H__,r29
 8012 216c 0FBE      		out __SREG__,__tmp_reg__
 8013 216e CDBF      		out __SP_L__,r28
 8014 2170 DF91      		pop r29
 8015 2172 CF91      		pop r28
 8016 2174 1F91      		pop r17
 8017 2176 0F91      		pop r16
 8018 2178 FF90      		pop r15
 8019 217a EF90      		pop r14
 8020 217c DF90      		pop r13
 8021 217e CF90      		pop r12
 8022 2180 BF90      		pop r11
 8023 2182 AF90      		pop r10
 8024 2184 9F90      		pop r9
 8025 2186 8F90      		pop r8
 8026 2188 7F90      		pop r7
 8027 218a 6F90      		pop r6
 8028 218c 5F90      		pop r5
 8029 218e 4F90      		pop r4
 8030 2190 3F90      		pop r3
 8031 2192 2F90      		pop r2
 8032 2194 0895      		ret
 8033               	.LVL532:
 8034               	.L215:
 590:../../emulator/emulator.c **** 	x = rect.X;
 8035               		.loc 6 590 2 is_stmt 1 view .LVU1536
 8036               	.LBB459:
 8037               	.LBI459:
  24:platform.c    **** {
 8038               		.loc 1 24 6 view .LVU1537
 8039               	.LBB460:
  26:platform.c    **** }
 8040               		.loc 1 26 2 view .LVU1538
 8041 2196 20E1      		ldi r18,lo8(16)
 8042 2198 30E0      		ldi r19,0
 8043 219a AE01      		movw r20,r28
 8044 219c 475D      		subi r20,-41
 8045 219e 5F4F      		sbci r21,-1
 8046 21a0 6BAD      		ldd r22,Y+59
 8047 21a2 7CAD      		ldd r23,Y+60
 8048 21a4 8DAD      		ldd r24,Y+61
 8049 21a6 9EAD      		ldd r25,Y+62
 8050 21a8 0E94 0000 		call xmem_read
 8051               	.LVL533:
  26:platform.c    **** }
 8052               		.loc 1 26 2 is_stmt 0 view .LVU1539
 8053               	.LBE460:
 8054               	.LBE459:
 591:../../emulator/emulator.c **** 	y = rect.Y;
 8055               		.loc 6 591 2 is_stmt 1 view .LVU1540
 591:../../emulator/emulator.c **** 	y = rect.Y;
 8056               		.loc 6 591 4 is_stmt 0 view .LVU1541
 8057 21ac A9A4      		ldd r10,Y+41
 8058 21ae BAA4      		ldd r11,Y+42
 8059               	.LVL534:
 592:../../emulator/emulator.c **** 	w = rect.W;
 8060               		.loc 6 592 2 is_stmt 1 view .LVU1542
 592:../../emulator/emulator.c **** 	w = rect.W;
 8061               		.loc 6 592 4 is_stmt 0 view .LVU1543
 8062 21b0 9DA4      		ldd r9,Y+45
 8063 21b2 8EA4      		ldd r8,Y+46
 8064               	.LVL535:
 593:../../emulator/emulator.c **** 	h = rect.H;
 8065               		.loc 6 593 2 is_stmt 1 view .LVU1544
 593:../../emulator/emulator.c **** 	h = rect.H;
 8066               		.loc 6 593 10 is_stmt 0 view .LVU1545
 8067 21b4 C9A8      		ldd r12,Y+49
 8068 21b6 DAA8      		ldd r13,Y+50
 8069 21b8 EBA8      		ldd r14,Y+51
 8070 21ba FCA8      		ldd r15,Y+52
 593:../../emulator/emulator.c **** 	h = rect.H;
 8071               		.loc 6 593 4 view .LVU1546
 8072 21bc 2996      		adiw r28,71-62
 8073 21be DFAE      		std Y+63,r13
 8074 21c0 CEAE      		std Y+62,r12
 8075 21c2 2997      		sbiw r28,71-62
 8076               	.LVL536:
 594:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 8077               		.loc 6 594 2 is_stmt 1 view .LVU1547
 594:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 8078               		.loc 6 594 10 is_stmt 0 view .LVU1548
 8079 21c4 4DA8      		ldd r4,Y+53
 8080 21c6 5EA8      		ldd r5,Y+54
 8081 21c8 6FA8      		ldd r6,Y+55
 8082 21ca 78AC      		ldd r7,Y+56
 594:../../emulator/emulator.c **** 	if(_gfx_check_bounds(x, y, w, h))
 8083               		.loc 6 594 4 view .LVU1549
 8084 21cc 1201      		movw r2,r4
 8085               	.LVL537:
 595:../../emulator/emulator.c **** 	{
 8086               		.loc 6 595 2 is_stmt 1 view .LVU1550
 595:../../emulator/emulator.c **** 	{
 8087               		.loc 6 595 5 is_stmt 0 view .LVU1551
 8088 21ce 9201      		movw r18,r4
 8089 21d0 A601      		movw r20,r12
 8090 21d2 692D      		mov r22,r9
 8091 21d4 782D      		mov r23,r8
 8092 21d6 C501      		movw r24,r10
 8093 21d8 0E94 0000 		call _gfx_check_bounds
 8094               	.LVL538:
 595:../../emulator/emulator.c **** 	{
 8095               		.loc 6 595 4 view .LVU1552
 8096 21dc 8111      		cpse r24,__zero_reg__
 8097 21de 00C0      		rjmp .L217
 600:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 8098               		.loc 6 600 2 is_stmt 1 view .LVU1553
 600:../../emulator/emulator.c **** 	bytes = (u32)w * (u32)h;
 8099               		.loc 6 600 8 is_stmt 0 view .LVU1554
 8100 21e0 D801      		movw r26,r16
 8101 21e2 1496      		adiw r26,4
 8102 21e4 8D91      		ld r24,X+
 8103 21e6 9D91      		ld r25,X+
 8104 21e8 0D90      		ld __tmp_reg__,X+
 8105 21ea BC91      		ld r27,X
 8106 21ec A02D      		mov r26,__tmp_reg__
 8107 21ee 8BAF      		std Y+59,r24
 8108 21f0 9CAF      		std Y+60,r25
 8109 21f2 ADAF      		std Y+61,r26
 8110 21f4 BEAF      		std Y+62,r27
 8111               	.LVL539:
 601:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 8112               		.loc 6 601 2 is_stmt 1 view .LVU1555
 602:../../emulator/emulator.c **** 	{
 8113               		.loc 6 602 2 view .LVU1556
 601:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 8114               		.loc 6 601 19 is_stmt 0 view .LVU1557
 8115 21f6 D301      		movw r26,r6
 8116 21f8 C201      		movw r24,r4
 8117               	.LVL540:
 601:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 8118               		.loc 6 601 19 view .LVU1558
 8119 21fa AA27      		clr r26
 8120 21fc BB27      		clr r27
 601:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 8121               		.loc 6 601 8 view .LVU1559
 8122 21fe A701      		movw r20,r14
 8123 2200 9601      		movw r18,r12
 8124 2202 4427      		clr r20
 8125 2204 5527      		clr r21
 8126 2206 BC01      		movw r22,r24
 8127 2208 CD01      		movw r24,r26
 8128 220a 0E94 0000 		call __mulsi3
 8129               	.LVL541:
 601:../../emulator/emulator.c **** 	if(_memory_check_bounds(image, bytes))
 8130               		.loc 6 601 8 view .LVU1560
 8131 220e 2396      		adiw r28,63-60
 8132 2210 6CAF      		std Y+60,r22
 8133 2212 7DAF      		std Y+61,r23
 8134 2214 8EAF      		std Y+62,r24
 8135 2216 9FAF      		std Y+63,r25
 8136 2218 2397      		sbiw r28,63-60
 602:../../emulator/emulator.c **** 	{
 8137               		.loc 6 602 5 view .LVU1561
 8138 221a 9B01      		movw r18,r22
 8139 221c AC01      		movw r20,r24
 8140 221e 6BAD      		ldd r22,Y+59
 8141 2220 7CAD      		ldd r23,Y+60
 8142 2222 8DAD      		ldd r24,Y+61
 8143 2224 9EAD      		ldd r25,Y+62
 8144 2226 0E94 0000 		call _memory_check_bounds
 8145               	.LVL542:
 602:../../emulator/emulator.c **** 	{
 8146               		.loc 6 602 5 view .LVU1562
 8147 222a 782E      		mov r7,r24
 602:../../emulator/emulator.c **** 	{
 8148               		.loc 6 602 4 view .LVU1563
 8149 222c 8111      		cpse r24,__zero_reg__
 8150 222e 00C0      		rjmp .L217
 607:../../emulator/emulator.c **** 	bg = args[3];
 8151               		.loc 6 607 2 is_stmt 1 view .LVU1564
 607:../../emulator/emulator.c **** 	bg = args[3];
 8152               		.loc 6 607 5 is_stmt 0 view .LVU1565
 8153 2230 D801      		movw r26,r16
 8154 2232 1896      		adiw r26,8
 8155 2234 8D91      		ld r24,X+
 8156 2236 9D91      		ld r25,X+
 8157 2238 0D90      		ld __tmp_reg__,X+
 8158 223a BC91      		ld r27,X
 8159 223c A02D      		mov r26,__tmp_reg__
 8160 223e 2396      		adiw r28,63-60
 8161 2240 8CAF      		std Y+60,r24
 8162 2242 9DAF      		std Y+61,r25
 8163 2244 AEAF      		std Y+62,r26
 8164 2246 BFAF      		std Y+63,r27
 8165 2248 2397      		sbiw r28,63-60
 8166               	.LVL543:
 608:../../emulator/emulator.c **** 	env_gfx_image_1bit(x, y, w, h, image, fg, bg);
 8167               		.loc 6 608 2 is_stmt 1 view .LVU1566
 609:../../emulator/emulator.c **** 	return 0;
 8168               		.loc 6 609 2 view .LVU1567
 8169               	.LBB461:
 8170               	.LBI461:
 108:platform.c    **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, u32 fg, u32 bg)
 8171               		.loc 1 108 6 view .LVU1568
 8172               	.LBB462:
 111:platform.c    **** 		_abgr_to_rgb565(fg),
 8173               		.loc 1 111 2 view .LVU1569
 8174 224a D801      		movw r26,r16
 8175 224c 1C96      		adiw r26,12
 8176 224e 8D91      		ld r24,X+
 8177 2250 9D91      		ld r25,X+
 8178 2252 0D90      		ld __tmp_reg__,X+
 8179 2254 BC91      		ld r27,X
 8180 2256 A02D      		mov r26,__tmp_reg__
 8181               	.LVL544:
 111:platform.c    **** 		_abgr_to_rgb565(fg),
 8182               		.loc 1 111 2 is_stmt 0 view .LVU1570
 8183 2258 2796      		adiw r28,67-60
 8184 225a 8CAF      		std Y+60,r24
 8185 225c 9DAF      		std Y+61,r25
 8186 225e AEAF      		std Y+62,r26
 8187 2260 BFAF      		std Y+63,r27
 8188 2262 2797      		sbiw r28,67-60
 8189 2264 BC01      		movw r22,r24
 8190 2266 CD01      		movw r24,r26
 8191 2268 0E94 0000 		call _abgr_to_rgb565
 8192               	.LVL545:
 111:platform.c    **** 		_abgr_to_rgb565(fg),
 8193               		.loc 1 111 2 view .LVU1571
 8194 226c 2D96      		adiw r28,76-63
 8195 226e 8FAF      		std Y+63,r24
 8196 2270 2D97      		sbiw r28,76-63
 8197 2272 2E96      		adiw r28,77-63
 8198 2274 9FAF      		std Y+63,r25
 8199 2276 2E97      		sbiw r28,77-63
 8200 2278 2396      		adiw r28,63-60
 8201 227a 6CAD      		ldd r22,Y+60
 8202 227c 7DAD      		ldd r23,Y+61
 8203 227e 8EAD      		ldd r24,Y+62
 8204 2280 9FAD      		ldd r25,Y+63
 8205 2282 2397      		sbiw r28,63-60
 8206 2284 0E94 0000 		call _abgr_to_rgb565
 8207               	.LVL546:
 8208 2288 582E      		mov r5,r24
 8209 228a 492E      		mov r4,r25
 8210               	.LVL547:
 8211               	.LBB463:
 8212               	.LBI463:
 593:lcd/lcd.c     **** 
 594:lcd/lcd.c     **** void lcd_image_1bit(
 8213               		.loc 2 594 6 is_stmt 1 view .LVU1572
 8214               	.LBB464:
 595:lcd/lcd.c     **** 	u16 x, u16 y, u16 w, u16 h, u32 addr, RGB565 fg, RGB565 bg)
 596:lcd/lcd.c     **** {
 597:lcd/lcd.c     **** 	u8 byte, stride, bit_mask;
 8215               		.loc 2 597 2 view .LVU1573
 598:lcd/lcd.c     **** 	u16 x0, y0;
 8216               		.loc 2 598 2 view .LVU1574
 599:lcd/lcd.c     **** 	u8 *ci, image[LCD_WIDTH / 8];
 8217               		.loc 2 599 2 view .LVU1575
 600:lcd/lcd.c     **** 
 601:lcd/lcd.c     **** 	stride = (w + 7) / 8;
 8218               		.loc 2 601 2 view .LVU1576
 8219               		.loc 2 601 14 is_stmt 0 view .LVU1577
 8220 228c C601      		movw r24,r12
 8221 228e 0796      		adiw r24,7
 8222               		.loc 2 601 19 view .LVU1578
 8223 2290 23E0      		ldi r18,3
 8224               		1:
 8225 2292 9695      		lsr r25
 8226 2294 8795      		ror r24
 8227 2296 2A95      		dec r18
 8228 2298 01F4      		brne 1b
 8229               	.LVL548:
 602:lcd/lcd.c     **** 	for(y0 = y; y0 < y + h; ++y0)
 8230               		.loc 2 602 2 is_stmt 1 view .LVU1579
 8231               		.loc 2 602 9 is_stmt 0 view .LVU1580
 8232 229a 092D      		mov r16,r9
 8233               	.LVL549:
 8234               		.loc 2 602 9 view .LVU1581
 8235 229c 182D      		mov r17,r8
 8236               		.loc 2 602 21 view .LVU1582
 8237 229e F801      		movw r30,r16
 8238 22a0 E20D      		add r30,r2
 8239 22a2 F31D      		adc r31,r3
 8240 22a4 2196      		adiw r28,63-62
 8241 22a6 FFAF      		std Y+63,r31
 8242 22a8 EEAF      		std Y+62,r30
 8243 22aa 2197      		sbiw r28,63-62
 8244               	.LVL550:
 603:lcd/lcd.c     **** 	{
 604:lcd/lcd.c     **** 		xmem_read(addr, image, stride);
 8245               		.loc 2 604 3 view .LVU1583
 8246 22ac 9C01      		movw r18,r24
 8247 22ae 3327      		clr r19
 8248 22b0 2596      		adiw r28,67-62
 8249 22b2 3FAF      		std Y+63,r19
 8250 22b4 2EAF      		std Y+62,r18
 8251 22b6 2597      		sbiw r28,67-62
 8252               	.LVL551:
 8253               		.loc 2 604 3 view .LVU1584
 8254 22b8 DE01      		movw r26,r28
 8255 22ba 1196      		adiw r26,1
 8256 22bc BAAF      		std Y+58,r27
 8257 22be A9AF      		std Y+57,r26
 605:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 606:lcd/lcd.c     **** 		bit_mask = 0x80;
 607:lcd/lcd.c     **** 		ci = image;
 608:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 8258               		.loc 2 608 22 view .LVU1585
 8259 22c0 2996      		adiw r28,71-62
 8260 22c2 EEAD      		ldd r30,Y+62
 8261 22c4 FFAD      		ldd r31,Y+63
 8262 22c6 2997      		sbiw r28,71-62
 8263 22c8 EA0D      		add r30,r10
 8264 22ca FB1D      		adc r31,r11
 8265 22cc 2C96      		adiw r28,74-62
 8266 22ce FFAF      		std Y+63,r31
 8267 22d0 EEAF      		std Y+62,r30
 8268 22d2 2C97      		sbiw r28,74-62
 609:lcd/lcd.c     **** 		{
 610:lcd/lcd.c     **** 			if(bit_mask == 0x80)
 611:lcd/lcd.c     **** 			{
 612:lcd/lcd.c     **** 				byte = *ci++;
 613:lcd/lcd.c     **** 				bit_mask = 1;
 614:lcd/lcd.c     **** 			}
 615:lcd/lcd.c     **** 
 616:lcd/lcd.c     **** 			_lcd_pixel((byte & bit_mask) ? fg : bg);
 617:lcd/lcd.c     **** 			bit_mask <<= 1;
 618:lcd/lcd.c     **** 		}
 619:lcd/lcd.c     **** 
 620:lcd/lcd.c     **** 		_lcd_window_end();
 621:lcd/lcd.c     **** 		addr += stride;
 8269               		.loc 2 621 8 view .LVU1586
 8270 22d4 C82E      		mov r12,r24
 8271               	.LVL552:
 8272               		.loc 2 621 8 view .LVU1587
 8273 22d6 D12C      		mov r13,__zero_reg__
 8274 22d8 E12C      		mov r14,__zero_reg__
 8275 22da F12C      		mov r15,__zero_reg__
 8276               	.LVL553:
 8277               	.L218:
 602:lcd/lcd.c     **** 	{
 8278               		.loc 2 602 17 is_stmt 1 view .LVU1588
 8279 22dc 2196      		adiw r28,63-62
 8280 22de AEAD      		ldd r26,Y+62
 8281 22e0 BFAD      		ldd r27,Y+63
 8282 22e2 2197      		sbiw r28,63-62
 8283 22e4 0A17      		cp r16,r26
 8284 22e6 1B07      		cpc r17,r27
 8285 22e8 00F0      		brlo .+2
 8286 22ea 00C0      		rjmp .L214
 604:lcd/lcd.c     **** 		_lcd_window_start(x, y0, w, 1);
 8287               		.loc 2 604 3 view .LVU1589
 8288 22ec 2596      		adiw r28,67-62
 8289 22ee 2EAD      		ldd r18,Y+62
 8290 22f0 3FAD      		ldd r19,Y+63
 8291 22f2 2597      		sbiw r28,67-62
 8292 22f4 AE01      		movw r20,r28
 8293 22f6 4F5F      		subi r20,-1
 8294 22f8 5F4F      		sbci r21,-1
 8295 22fa 6BAD      		ldd r22,Y+59
 8296 22fc 7CAD      		ldd r23,Y+60
 8297 22fe 8DAD      		ldd r24,Y+61
 8298 2300 9EAD      		ldd r25,Y+62
 8299 2302 0E94 0000 		call xmem_read
 8300               	.LVL554:
 605:lcd/lcd.c     **** 		bit_mask = 0x80;
 8301               		.loc 2 605 3 view .LVU1590
 8302 2306 21E0      		ldi r18,lo8(1)
 8303 2308 30E0      		ldi r19,0
 8304 230a 2996      		adiw r28,71-62
 8305 230c 4EAD      		ldd r20,Y+62
 8306 230e 5FAD      		ldd r21,Y+63
 8307 2310 2997      		sbiw r28,71-62
 8308 2312 B801      		movw r22,r16
 8309 2314 C501      		movw r24,r10
 8310 2316 0E94 0000 		call _lcd_window_start
 8311               	.LVL555:
 606:lcd/lcd.c     **** 		ci = image;
 8312               		.loc 2 606 3 view .LVU1591
 607:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 8313               		.loc 2 607 3 view .LVU1592
 608:lcd/lcd.c     **** 		{
 8314               		.loc 2 608 3 view .LVU1593
 608:lcd/lcd.c     **** 		{
 8315               		.loc 2 608 10 is_stmt 0 view .LVU1594
 8316 231a 4501      		movw r8,r10
 607:lcd/lcd.c     **** 		for(x0 = x; x0 < x + w; ++x0)
 8317               		.loc 2 607 6 view .LVU1595
 8318 231c 39AC      		ldd r3,Y+57
 8319 231e 2AAC      		ldd r2,Y+58
 606:lcd/lcd.c     **** 		ci = image;
 8320               		.loc 2 606 12 view .LVU1596
 8321 2320 80E8      		ldi r24,lo8(-128)
 8322 2322 682E      		mov r6,r24
 8323               	.LVL556:
 8324               	.L219:
 608:lcd/lcd.c     **** 		{
 8325               		.loc 2 608 18 is_stmt 1 view .LVU1597
 8326 2324 2C96      		adiw r28,74-62
 8327 2326 8EAD      		ldd r24,Y+62
 8328 2328 9FAD      		ldd r25,Y+63
 8329 232a 2C97      		sbiw r28,74-62
 8330 232c 8816      		cp r8,r24
 8331 232e 9906      		cpc r9,r25
 8332 2330 00F0      		brlo .L222
 620:lcd/lcd.c     **** 		addr += stride;
 8333               		.loc 2 620 3 view .LVU1598
 8334 2332 0E94 0000 		call _lcd_window_end
 8335               	.LVL557:
 8336               		.loc 2 621 3 view .LVU1599
 8337               		.loc 2 621 8 is_stmt 0 view .LVU1600
 8338 2336 8BAD      		ldd r24,Y+59
 8339 2338 9CAD      		ldd r25,Y+60
 8340 233a ADAD      		ldd r26,Y+61
 8341 233c BEAD      		ldd r27,Y+62
 8342 233e 8C0D      		add r24,r12
 8343 2340 9D1D      		adc r25,r13
 8344 2342 AE1D      		adc r26,r14
 8345 2344 BF1D      		adc r27,r15
 8346 2346 8BAF      		std Y+59,r24
 8347 2348 9CAF      		std Y+60,r25
 8348 234a ADAF      		std Y+61,r26
 8349 234c BEAF      		std Y+62,r27
 8350               	.LVL558:
 602:lcd/lcd.c     **** 	{
 8351               		.loc 2 602 26 is_stmt 1 view .LVU1601
 8352 234e 0F5F      		subi r16,-1
 8353 2350 1F4F      		sbci r17,-1
 8354               	.LVL559:
 602:lcd/lcd.c     **** 	{
 8355               		.loc 2 602 26 is_stmt 0 view .LVU1602
 8356 2352 00C0      		rjmp .L218
 8357               	.LVL560:
 8358               	.L222:
 610:lcd/lcd.c     **** 			{
 8359               		.loc 2 610 4 is_stmt 1 view .LVU1603
 610:lcd/lcd.c     **** 			{
 8360               		.loc 2 610 6 is_stmt 0 view .LVU1604
 8361 2354 F0E8      		ldi r31,lo8(-128)
 8362 2356 6F12      		cpse r6,r31
 8363 2358 00C0      		rjmp .L220
 612:lcd/lcd.c     **** 				bit_mask = 1;
 8364               		.loc 2 612 5 is_stmt 1 view .LVU1605
 612:lcd/lcd.c     **** 				bit_mask = 1;
 8365               		.loc 2 612 15 is_stmt 0 view .LVU1606
 8366 235a E32D      		mov r30,r3
 8367 235c F22D      		mov r31,r2
 8368               	.LVL561:
 612:lcd/lcd.c     **** 				bit_mask = 1;
 8369               		.loc 2 612 10 view .LVU1607
 8370 235e 2191      		ld r18,Z+
 8371               	.LVL562:
 612:lcd/lcd.c     **** 				bit_mask = 1;
 8372               		.loc 2 612 10 view .LVU1608
 8373 2360 2A96      		adiw r28,73-63
 8374 2362 2FAF      		std Y+63,r18
 8375 2364 2A97      		sbiw r28,73-63
 8376               	.LVL563:
 613:lcd/lcd.c     **** 			}
 8377               		.loc 2 613 5 is_stmt 1 view .LVU1609
 612:lcd/lcd.c     **** 				bit_mask = 1;
 8378               		.loc 2 612 15 is_stmt 0 view .LVU1610
 8379 2366 3E2E      		mov r3,r30
 8380 2368 2F2E      		mov r2,r31
 613:lcd/lcd.c     **** 			}
 8381               		.loc 2 613 14 view .LVU1611
 8382 236a 6624      		clr r6
 8383 236c 6394      		inc r6
 8384               	.LVL564:
 8385               	.L220:
 616:lcd/lcd.c     **** 			bit_mask <<= 1;
 8386               		.loc 2 616 4 is_stmt 1 view .LVU1612
 616:lcd/lcd.c     **** 			bit_mask <<= 1;
 8387               		.loc 2 616 33 is_stmt 0 view .LVU1613
 8388 236e 2A96      		adiw r28,73-63
 8389 2370 8FAD      		ldd r24,Y+63
 8390 2372 2A97      		sbiw r28,73-63
 8391 2374 8621      		and r24,r6
 616:lcd/lcd.c     **** 			bit_mask <<= 1;
 8392               		.loc 2 616 4 view .LVU1614
 8393 2376 8111      		cpse r24,__zero_reg__
 8394 2378 00C0      		rjmp .L224
 8395 237a 2D96      		adiw r28,76-63
 8396 237c 8FAD      		ldd r24,Y+63
 8397 237e 2D97      		sbiw r28,76-63
 8398 2380 2E96      		adiw r28,77-63
 8399 2382 9FAD      		ldd r25,Y+63
 8400 2384 2E97      		sbiw r28,77-63
 8401               	.L221:
 8402 2386 0E94 0000 		call _lcd_pixel
 8403               	.LVL565:
 617:lcd/lcd.c     **** 		}
 8404               		.loc 2 617 4 is_stmt 1 view .LVU1615
 617:lcd/lcd.c     **** 		}
 8405               		.loc 2 617 13 is_stmt 0 view .LVU1616
 8406 238a 660C      		lsl r6
 8407               	.LVL566:
 608:lcd/lcd.c     **** 		{
 8408               		.loc 2 608 27 is_stmt 1 view .LVU1617
 8409 238c 3FEF      		ldi r19,-1
 8410 238e 831A      		sub r8,r19
 8411 2390 930A      		sbc r9,r19
 8412               	.LVL567:
 608:lcd/lcd.c     **** 		{
 8413               		.loc 2 608 27 is_stmt 0 view .LVU1618
 8414 2392 00C0      		rjmp .L219
 8415               	.L224:
 616:lcd/lcd.c     **** 			bit_mask <<= 1;
 8416               		.loc 2 616 4 view .LVU1619
 8417 2394 852D      		mov r24,r5
 8418 2396 942D      		mov r25,r4
 8419 2398 00C0      		rjmp .L221
 8420               	.LBE464:
 8421               	.LBE463:
 8422               	.LBE462:
 8423               	.LBE461:
 8424               		.cfi_endproc
 8425               	.LFE61:
 8428               	lcd_char.constprop.0:
 8429               	.LVL568:
 8430               	.LFB65:
 453:lcd/lcd.c     **** {
 8431               		.loc 2 453 4 is_stmt 1 view -0
 8432               		.cfi_startproc
 453:lcd/lcd.c     **** {
 8433               		.loc 2 453 4 is_stmt 0 view .LVU1621
 8434 239a 7F92      		push r7
 8435               		.cfi_def_cfa_offset 3
 8436               		.cfi_offset 7, -2
 8437 239c 8F92      		push r8
 8438               		.cfi_def_cfa_offset 4
 8439               		.cfi_offset 8, -3
 8440 239e 9F92      		push r9
 8441               		.cfi_def_cfa_offset 5
 8442               		.cfi_offset 9, -4
 8443 23a0 AF92      		push r10
 8444               		.cfi_def_cfa_offset 6
 8445               		.cfi_offset 10, -5
 8446 23a2 BF92      		push r11
 8447               		.cfi_def_cfa_offset 7
 8448               		.cfi_offset 11, -6
 8449 23a4 CF92      		push r12
 8450               		.cfi_def_cfa_offset 8
 8451               		.cfi_offset 12, -7
 8452 23a6 DF92      		push r13
 8453               		.cfi_def_cfa_offset 9
 8454               		.cfi_offset 13, -8
 8455 23a8 EF92      		push r14
 8456               		.cfi_def_cfa_offset 10
 8457               		.cfi_offset 14, -9
 8458 23aa FF92      		push r15
 8459               		.cfi_def_cfa_offset 11
 8460               		.cfi_offset 15, -10
 8461 23ac 0F93      		push r16
 8462               		.cfi_def_cfa_offset 12
 8463               		.cfi_offset 16, -11
 8464 23ae 1F93      		push r17
 8465               		.cfi_def_cfa_offset 13
 8466               		.cfi_offset 17, -12
 8467 23b0 CF93      		push r28
 8468               		.cfi_def_cfa_offset 14
 8469               		.cfi_offset 28, -13
 8470 23b2 DF93      		push r29
 8471               		.cfi_def_cfa_offset 15
 8472               		.cfi_offset 29, -14
 8473               	/* prologue: function */
 8474               	/* frame size = 0 */
 8475               	/* stack size = 13 */
 8476               	.L__stack_usage = 13
 8477 23b4 842E      		mov r8,r20
 8478 23b6 752E      		mov r7,r21
 8479               	.LVL569:
 458:lcd/lcd.c     **** 
 8480               		.loc 2 458 24 is_stmt 1 view .LVU1622
 8481 23b8 2052      		subi r18,32
 8482 23ba 330B      		sbc r19,r19
 8483               	.LVL570:
 458:lcd/lcd.c     **** 
 8484               		.loc 2 458 30 view .LVU1623
 8485 23bc 45E0      		ldi r20,lo8(5)
 8486               	.LVL571:
 458:lcd/lcd.c     **** 
 8487               		.loc 2 458 30 is_stmt 0 view .LVU1624
 8488 23be 429F      		mul r20,r18
 8489 23c0 7001      		movw r14,r0
 8490 23c2 439F      		mul r20,r19
 8491 23c4 F00C      		add r15,r0
 8492 23c6 1124      		clr __zero_reg__
 8493               	.LVL572:
 460:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 8494               		.loc 2 460 2 is_stmt 1 view .LVU1625
 8495 23c8 27E0      		ldi r18,lo8(7)
 8496 23ca 30E0      		ldi r19,0
 8497 23cc 45E0      		ldi r20,lo8(5)
 8498 23ce 50E0      		ldi r21,0
 8499 23d0 0E94 0000 		call _lcd_window_start
 8500               	.LVL573:
 460:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 8501               		.loc 2 460 2 is_stmt 0 view .LVU1626
 8502 23d4 C0E0      		ldi r28,0
 8503 23d6 D0E0      		ldi r29,0
 8504 23d8 AA24      		clr r10
 8505 23da A394      		inc r10
 8506 23dc B12C      		mov r11,__zero_reg__
 8507               	.LVL574:
 8508               	.L226:
 460:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 8509               		.loc 2 460 2 view .LVU1627
 8510 23de 6501      		movw r12,r10
 8511 23e0 0C2E      		mov r0,r28
 8512 23e2 00C0      		rjmp 2f
 8513               		1:
 8514 23e4 CC0C      		lsl r12
 8515 23e6 DD1C      		rol r13
 8516               		2:
 8517 23e8 0A94      		dec r0
 8518 23ea 02F4      		brpl 1b
 8519 23ec 8701      		movw r16,r14
 8520 23ee 0050      		subi r16,lo8(-(_font5x7))
 8521 23f0 1040      		sbci r17,hi8(-(_font5x7))
 465:lcd/lcd.c     **** 		}
 8522               		.loc 2 465 43 is_stmt 1 view .LVU1628
 8523 23f2 85E0      		ldi r24,lo8(5)
 8524 23f4 982E      		mov r9,r24
 8525               	.LVL575:
 8526               	.L228:
 8527               	.LBB466:
 465:lcd/lcd.c     **** 		}
 8528               		.loc 2 465 17 view .LVU1629
 8529 23f6 F801      		movw r30,r16
 8530               	/* #APP */
 8531               	 ;  465 "lcd/lcd.c" 1
 8532 23f8 8491      		lpm r24, Z
 8533               		
 8534               	 ;  0 "" 2
 8535               	.LVL576:
 465:lcd/lcd.c     **** 		}
 8536               		.loc 2 465 17 is_stmt 0 view .LVU1630
 8537               	/* #NOAPP */
 8538               	.LBE466:
 8539 23fa 90E0      		ldi r25,0
 465:lcd/lcd.c     **** 		}
 8540               		.loc 2 465 4 is_stmt 1 view .LVU1631
 8541 23fc 8C21      		and r24,r12
 8542 23fe 9D21      		and r25,r13
 8543               	.LVL577:
 465:lcd/lcd.c     **** 		}
 8544               		.loc 2 465 4 is_stmt 0 view .LVU1632
 8545 2400 892B      		or r24,r25
 8546 2402 01F0      		breq .L230
 8547 2404 882D      		mov r24,r8
 8548 2406 972D      		mov r25,r7
 8549               	.L227:
 8550 2408 0E94 0000 		call _lcd_pixel
 8551               	.LVL578:
 463:lcd/lcd.c     **** 		{
 8552               		.loc 2 463 18 is_stmt 1 view .LVU1633
 8553 240c 9A94      		dec r9
 8554 240e 0F5F      		subi r16,-1
 8555 2410 1F4F      		sbci r17,-1
 8556               	.LVL579:
 463:lcd/lcd.c     **** 		{
 8557               		.loc 2 463 18 is_stmt 0 view .LVU1634
 8558 2412 9110      		cpse r9,__zero_reg__
 8559 2414 00C0      		rjmp .L228
 8560               	.LVL580:
 461:lcd/lcd.c     **** 	{
 8561               		.loc 2 461 17 is_stmt 1 view .LVU1635
 8562 2416 2196      		adiw r28,1
 8563               	.LVL581:
 461:lcd/lcd.c     **** 	{
 8564               		.loc 2 461 17 is_stmt 0 view .LVU1636
 8565 2418 C730      		cpi r28,7
 8566 241a D105      		cpc r29,__zero_reg__
 8567 241c 01F4      		brne .L226
 469:lcd/lcd.c     **** 	return FONT_WIDTH + 1;
 8568               		.loc 2 469 2 is_stmt 1 view .LVU1637
 8569 241e 0E94 0000 		call _lcd_window_end
 8570               	.LVL582:
 471:lcd/lcd.c     **** 
 8571               		.loc 2 471 1 view .LVU1638
 8572 2422 86E0      		ldi r24,lo8(6)
 8573               	/* epilogue start */
 8574 2424 DF91      		pop r29
 8575 2426 CF91      		pop r28
 8576               	.LVL583:
 471:lcd/lcd.c     **** 
 8577               		.loc 2 471 1 is_stmt 0 view .LVU1639
 8578 2428 1F91      		pop r17
 8579 242a 0F91      		pop r16
 8580               	.LVL584:
 471:lcd/lcd.c     **** 
 8581               		.loc 2 471 1 view .LVU1640
 8582 242c FF90      		pop r15
 8583 242e EF90      		pop r14
 8584               	.LVL585:
 471:lcd/lcd.c     **** 
 8585               		.loc 2 471 1 view .LVU1641
 8586 2430 DF90      		pop r13
 8587 2432 CF90      		pop r12
 8588 2434 BF90      		pop r11
 8589 2436 AF90      		pop r10
 8590 2438 9F90      		pop r9
 8591 243a 8F90      		pop r8
 8592 243c 7F90      		pop r7
 8593 243e 0895      		ret
 8594               	.LVL586:
 8595               	.L230:
 465:lcd/lcd.c     **** 		}
 8596               		.loc 2 465 4 is_stmt 1 view .LVU1642
 8597 2440 80E0      		ldi r24,0
 8598 2442 90E0      		ldi r25,0
 8599 2444 00C0      		rjmp .L227
 8600               		.cfi_endproc
 8601               	.LFE65:
 8604               	_lcd_log:
 8605               	.LVL587:
 8606               	.LFB66:
  96:logger/logger.c **** 	if(level != LOG_EXT)
 8607               		.loc 9 96 1 view -0
 8608               		.cfi_startproc
  96:logger/logger.c **** 	if(level != LOG_EXT)
 8609               		.loc 9 96 1 is_stmt 0 view .LVU1644
 8610 2446 8F92      		push r8
 8611               		.cfi_def_cfa_offset 3
 8612               		.cfi_offset 8, -2
 8613 2448 9F92      		push r9
 8614               		.cfi_def_cfa_offset 4
 8615               		.cfi_offset 9, -3
 8616 244a AF92      		push r10
 8617               		.cfi_def_cfa_offset 5
 8618               		.cfi_offset 10, -4
 8619 244c BF92      		push r11
 8620               		.cfi_def_cfa_offset 6
 8621               		.cfi_offset 11, -5
 8622 244e CF92      		push r12
 8623               		.cfi_def_cfa_offset 7
 8624               		.cfi_offset 12, -6
 8625 2450 DF92      		push r13
 8626               		.cfi_def_cfa_offset 8
 8627               		.cfi_offset 13, -7
 8628 2452 EF92      		push r14
 8629               		.cfi_def_cfa_offset 9
 8630               		.cfi_offset 14, -8
 8631 2454 FF92      		push r15
 8632               		.cfi_def_cfa_offset 10
 8633               		.cfi_offset 15, -9
 8634 2456 0F93      		push r16
 8635               		.cfi_def_cfa_offset 11
 8636               		.cfi_offset 16, -10
 8637 2458 1F93      		push r17
 8638               		.cfi_def_cfa_offset 12
 8639               		.cfi_offset 17, -11
 8640 245a CF93      		push r28
 8641               		.cfi_def_cfa_offset 13
 8642               		.cfi_offset 28, -12
 8643 245c DF93      		push r29
 8644               		.cfi_def_cfa_offset 14
 8645               		.cfi_offset 29, -13
 8646               	/* prologue: function */
 8647               	/* frame size = 0 */
 8648               	/* stack size = 12 */
 8649               	.L__stack_usage = 12
 8650 245e 8B01      		movw r16,r22
  97:logger/logger.c **** 	{
 8651               		.loc 9 97 2 is_stmt 1 view .LVU1645
  97:logger/logger.c **** 	{
 8652               		.loc 9 97 4 is_stmt 0 view .LVU1646
 8653 2460 8730      		cpi r24,lo8(7)
 8654 2462 01F4      		brne .+2
 8655 2464 00C0      		rjmp .L250
 8656               	.LBB483:
  99:logger/logger.c **** 		u16 x;
 8657               		.loc 9 99 3 is_stmt 1 view .LVU1647
 100:logger/logger.c **** 		const char *level_str;
 8658               		.loc 9 100 3 view .LVU1648
 101:logger/logger.c **** 
 8659               		.loc 9 101 3 view .LVU1649
 103:logger/logger.c **** 		{
 8660               		.loc 9 103 3 view .LVU1650
 118:logger/logger.c **** 			{
 8661               		.loc 9 118 7 is_stmt 0 view .LVU1651
 8662 2466 C090 0000 		lds r12,_lcd_initialized
 103:logger/logger.c **** 		{
 8663               		.loc 9 103 24 view .LVU1652
 8664 246a 9BEF      		ldi r25,lo8(-5)
 8665 246c 980F      		add r25,r24
 103:logger/logger.c **** 		{
 8666               		.loc 9 103 5 view .LVU1653
 8667 246e 9230      		cpi r25,lo8(2)
 8668 2470 00F4      		brsh .+2
 8669 2472 00C0      		rjmp .L235
 105:logger/logger.c **** 
 8670               		.loc 9 105 4 is_stmt 1 view .LVU1654
 8671               	.LBB484:
 105:logger/logger.c **** 
 8672               		.loc 9 105 30 view .LVU1655
 8673 2474 C82F      		mov r28,r24
 8674 2476 D0E0      		ldi r29,0
 8675 2478 CC0F      		lsl r28
 8676 247a DD1F      		rol r29
 8677 247c FE01      		movw r30,r28
 8678 247e E050      		subi r30,lo8(-(_log_msg))
 8679 2480 F040      		sbci r31,hi8(-(_log_msg))
 8680               	.LVL588:
 105:logger/logger.c **** 
 8681               		.loc 9 105 30 view .LVU1656
 105:logger/logger.c **** 
 8682               		.loc 9 105 30 view .LVU1657
 8683               	/* #APP */
 8684               	 ;  105 "logger/logger.c" 1
 8685 2482 A590      		lpm r10, Z+
 8686 2484 B490      		lpm r11, Z
 8687               		
 8688               	 ;  0 "" 2
 8689               	.LVL589:
 105:logger/logger.c **** 
 8690               		.loc 9 105 30 is_stmt 0 view .LVU1658
 8691               	/* #NOAPP */
 8692 2486 7501      		movw r14,r10
 8693               	.LVL590:
 105:logger/logger.c **** 
 8694               		.loc 9 105 30 is_stmt 1 view .LVU1659
 105:logger/logger.c **** 
 8695               		.loc 9 105 30 is_stmt 0 view .LVU1660
 8696               	.LBE484:
 107:logger/logger.c **** 			serial_tx_str_P(level_str);
 8697               		.loc 9 107 4 is_stmt 1 view .LVU1661
 8698 2488 8BE5      		ldi r24,lo8(91)
 8699               	.LVL591:
 107:logger/logger.c **** 			serial_tx_str_P(level_str);
 8700               		.loc 9 107 4 is_stmt 0 view .LVU1662
 8701 248a 0E94 0000 		call serial_tx
 8702               	.LVL592:
 108:logger/logger.c **** 			serial_tx(']');
 8703               		.loc 9 108 4 is_stmt 1 view .LVU1663
 8704               	.LBB485:
 8705               	.LBI485:
  31:serial/serial.c **** 
  32:serial/serial.c **** void serial_tx_str(const char *s)
  33:serial/serial.c **** {
  34:serial/serial.c **** 	char c;
  35:serial/serial.c **** 	while((c = *s++))
  36:serial/serial.c **** 	{
  37:serial/serial.c **** 		serial_tx(c);
  38:serial/serial.c **** 	}
  39:serial/serial.c **** }
  40:serial/serial.c **** 
  41:serial/serial.c **** void serial_tx_str_P(const char *s)
 8706               		.loc 3 41 6 view .LVU1664
 8707               	.LBB486:
  42:serial/serial.c **** {
  43:serial/serial.c **** 	char c;
 8708               		.loc 3 43 2 view .LVU1665
  44:serial/serial.c **** 	while((c = pgm_read_byte(s++)))
 8709               		.loc 3 44 2 view .LVU1666
 8710               		.loc 3 44 7 is_stmt 0 view .LVU1667
 8711 248e 4501      		movw r8,r10
 8712               	.LVL593:
 8713               	.L236:
 8714               		.loc 3 44 8 is_stmt 1 view .LVU1668
 8715               	.LBB487:
 8716               		.loc 3 44 13 view .LVU1669
 8717               		.loc 3 44 13 view .LVU1670
 8718               		.loc 3 44 13 view .LVU1671
 8719 2490 F401      		movw r30,r8
 8720               	/* #APP */
 8721               	 ;  44 "serial/serial.c" 1
 8722 2492 8491      		lpm r24, Z
 8723               		
 8724               	 ;  0 "" 2
 8725               	.LVL594:
 8726               		.loc 3 44 13 view .LVU1672
 8727               		.loc 3 44 13 is_stmt 0 view .LVU1673
 8728               	/* #NOAPP */
 8729               	.LBE487:
 8730               		.loc 3 44 8 view .LVU1674
 8731 2494 FFEF      		ldi r31,-1
 8732 2496 8F1A      		sub r8,r31
 8733 2498 9F0A      		sbc r9,r31
 8734               	.LVL595:
 8735               		.loc 3 44 8 view .LVU1675
 8736 249a 8111      		cpse r24,__zero_reg__
 8737 249c 00C0      		rjmp .L237
 8738               	.LVL596:
 8739               		.loc 3 44 8 view .LVU1676
 8740               	.LBE486:
 8741               	.LBE485:
 109:logger/logger.c **** 
 8742               		.loc 9 109 4 is_stmt 1 view .LVU1677
 8743 249e 8DE5      		ldi r24,lo8(93)
 8744               	.LVL597:
 109:logger/logger.c **** 
 8745               		.loc 9 109 4 is_stmt 0 view .LVU1678
 8746 24a0 0E94 0000 		call serial_tx
 8747               	.LVL598:
 111:logger/logger.c **** 			while(len < LOG_START_WIDTH)
 8748               		.loc 9 111 4 is_stmt 1 view .LVU1679
 8749               	.LBB489:
 8750               	.LBI489:
 8751               		.file 11 "/usr/avr/include/avr/pgmspace.h"
   1:/usr/avr/include/avr/pgmspace.h **** /* Copyright (c) 2002-2007  Marek Michalkiewicz
   2:/usr/avr/include/avr/pgmspace.h ****    Copyright (c) 2006, Carlos Lamas
   3:/usr/avr/include/avr/pgmspace.h ****    Copyright (c) 2009-2010, Jan Waclawek
   4:/usr/avr/include/avr/pgmspace.h ****    All rights reserved.
   5:/usr/avr/include/avr/pgmspace.h **** 
   6:/usr/avr/include/avr/pgmspace.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/avr/pgmspace.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/avr/pgmspace.h **** 
   9:/usr/avr/include/avr/pgmspace.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/avr/pgmspace.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/avr/pgmspace.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/avr/pgmspace.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/avr/pgmspace.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/avr/pgmspace.h ****      distribution.
  15:/usr/avr/include/avr/pgmspace.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/avr/include/avr/pgmspace.h ****      contributors may be used to endorse or promote products derived
  17:/usr/avr/include/avr/pgmspace.h ****      from this software without specific prior written permission.
  18:/usr/avr/include/avr/pgmspace.h **** 
  19:/usr/avr/include/avr/pgmspace.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/avr/include/avr/pgmspace.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/avr/include/avr/pgmspace.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/avr/include/avr/pgmspace.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/avr/include/avr/pgmspace.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/avr/include/avr/pgmspace.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/avr/include/avr/pgmspace.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/avr/include/avr/pgmspace.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/avr/include/avr/pgmspace.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/avr/include/avr/pgmspace.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/avr/include/avr/pgmspace.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/avr/include/avr/pgmspace.h **** 
  31:/usr/avr/include/avr/pgmspace.h **** /* $Id: pgmspace.h 2544 2017-08-04 08:50:27Z pitchumani $ */
  32:/usr/avr/include/avr/pgmspace.h **** 
  33:/usr/avr/include/avr/pgmspace.h **** /*
  34:/usr/avr/include/avr/pgmspace.h ****    pgmspace.h
  35:/usr/avr/include/avr/pgmspace.h **** 
  36:/usr/avr/include/avr/pgmspace.h ****    Contributors:
  37:/usr/avr/include/avr/pgmspace.h ****      Created by Marek Michalkiewicz <marekm@linux.org.pl>
  38:/usr/avr/include/avr/pgmspace.h ****      Eric B. Weddington <eric@ecentral.com>
  39:/usr/avr/include/avr/pgmspace.h ****      Wolfgang Haidinger <wh@vmars.tuwien.ac.at> (pgm_read_dword())
  40:/usr/avr/include/avr/pgmspace.h ****      Ivanov Anton <anton@arc.com.ru> (pgm_read_float())
  41:/usr/avr/include/avr/pgmspace.h ****  */
  42:/usr/avr/include/avr/pgmspace.h **** 
  43:/usr/avr/include/avr/pgmspace.h **** /** \file */
  44:/usr/avr/include/avr/pgmspace.h **** /** \defgroup avr_pgmspace <avr/pgmspace.h>: Program Space Utilities
  45:/usr/avr/include/avr/pgmspace.h ****     \code
  46:/usr/avr/include/avr/pgmspace.h ****     #include <avr/io.h>
  47:/usr/avr/include/avr/pgmspace.h ****     #include <avr/pgmspace.h>
  48:/usr/avr/include/avr/pgmspace.h ****     \endcode
  49:/usr/avr/include/avr/pgmspace.h **** 
  50:/usr/avr/include/avr/pgmspace.h ****     The functions in this module provide interfaces for a program to access
  51:/usr/avr/include/avr/pgmspace.h ****     data stored in program space (flash memory) of the device.  In order to
  52:/usr/avr/include/avr/pgmspace.h ****     use these functions, the target device must support either the \c LPM or
  53:/usr/avr/include/avr/pgmspace.h ****     \c ELPM instructions.
  54:/usr/avr/include/avr/pgmspace.h **** 
  55:/usr/avr/include/avr/pgmspace.h ****     \note These functions are an attempt to provide some compatibility with
  56:/usr/avr/include/avr/pgmspace.h ****     header files that come with IAR C, to make porting applications between
  57:/usr/avr/include/avr/pgmspace.h ****     different compilers easier.  This is not 100% compatibility though (GCC
  58:/usr/avr/include/avr/pgmspace.h ****     does not have full support for multiple address spaces yet).
  59:/usr/avr/include/avr/pgmspace.h **** 
  60:/usr/avr/include/avr/pgmspace.h ****     \note If you are working with strings which are completely based in ram,
  61:/usr/avr/include/avr/pgmspace.h ****     use the standard string functions described in \ref avr_string.
  62:/usr/avr/include/avr/pgmspace.h **** 
  63:/usr/avr/include/avr/pgmspace.h ****     \note If possible, put your constant tables in the lower 64 KB and use
  64:/usr/avr/include/avr/pgmspace.h ****     pgm_read_byte_near() or pgm_read_word_near() instead of
  65:/usr/avr/include/avr/pgmspace.h ****     pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that
  66:/usr/avr/include/avr/pgmspace.h ****     way, and you can still use the upper 64K for executable code.
  67:/usr/avr/include/avr/pgmspace.h ****     All functions that are suffixed with a \c _P \e require their
  68:/usr/avr/include/avr/pgmspace.h ****     arguments to be in the lower 64 KB of the flash ROM, as they do
  69:/usr/avr/include/avr/pgmspace.h ****     not use ELPM instructions.  This is normally not a big concern as
  70:/usr/avr/include/avr/pgmspace.h ****     the linker setup arranges any program space constants declared
  71:/usr/avr/include/avr/pgmspace.h ****     using the macros from this header file so they are placed right after
  72:/usr/avr/include/avr/pgmspace.h ****     the interrupt vectors, and in front of any executable code.  However,
  73:/usr/avr/include/avr/pgmspace.h ****     it can become a problem if there are too many of these constants, or
  74:/usr/avr/include/avr/pgmspace.h ****     for bootloaders on devices with more than 64 KB of ROM.
  75:/usr/avr/include/avr/pgmspace.h ****     <em>All these functions will not work in that situation.</em>
  76:/usr/avr/include/avr/pgmspace.h **** 
  77:/usr/avr/include/avr/pgmspace.h ****     \note For <b>Xmega</b> devices, make sure the NVM controller
  78:/usr/avr/include/avr/pgmspace.h ****     command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)
  79:/usr/avr/include/avr/pgmspace.h ****     before using any of these functions.
  80:/usr/avr/include/avr/pgmspace.h **** */
  81:/usr/avr/include/avr/pgmspace.h **** 
  82:/usr/avr/include/avr/pgmspace.h **** #ifndef __PGMSPACE_H_
  83:/usr/avr/include/avr/pgmspace.h **** #define __PGMSPACE_H_ 1
  84:/usr/avr/include/avr/pgmspace.h **** 
  85:/usr/avr/include/avr/pgmspace.h **** #ifndef __DOXYGEN__
  86:/usr/avr/include/avr/pgmspace.h **** #define __need_size_t
  87:/usr/avr/include/avr/pgmspace.h **** #endif
  88:/usr/avr/include/avr/pgmspace.h **** #include <inttypes.h>
  89:/usr/avr/include/avr/pgmspace.h **** #include <stddef.h>
  90:/usr/avr/include/avr/pgmspace.h **** #include <avr/io.h>
  91:/usr/avr/include/avr/pgmspace.h **** 
  92:/usr/avr/include/avr/pgmspace.h **** #ifndef __DOXYGEN__
  93:/usr/avr/include/avr/pgmspace.h **** #ifndef __ATTR_CONST__
  94:/usr/avr/include/avr/pgmspace.h **** #define __ATTR_CONST__ __attribute__((__const__))
  95:/usr/avr/include/avr/pgmspace.h **** #endif
  96:/usr/avr/include/avr/pgmspace.h **** 
  97:/usr/avr/include/avr/pgmspace.h **** #ifndef __ATTR_PROGMEM__
  98:/usr/avr/include/avr/pgmspace.h **** #define __ATTR_PROGMEM__ __attribute__((__progmem__))
  99:/usr/avr/include/avr/pgmspace.h **** #endif
 100:/usr/avr/include/avr/pgmspace.h **** 
 101:/usr/avr/include/avr/pgmspace.h **** #ifndef __ATTR_PURE__
 102:/usr/avr/include/avr/pgmspace.h **** #define __ATTR_PURE__ __attribute__((__pure__))
 103:/usr/avr/include/avr/pgmspace.h **** #endif
 104:/usr/avr/include/avr/pgmspace.h **** #endif	/* !__DOXYGEN__ */
 105:/usr/avr/include/avr/pgmspace.h **** 
 106:/usr/avr/include/avr/pgmspace.h **** /**
 107:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 108:/usr/avr/include/avr/pgmspace.h ****    \def PROGMEM
 109:/usr/avr/include/avr/pgmspace.h **** 
 110:/usr/avr/include/avr/pgmspace.h ****    Attribute to use in order to declare an object being located in
 111:/usr/avr/include/avr/pgmspace.h ****    flash ROM.
 112:/usr/avr/include/avr/pgmspace.h ****  */
 113:/usr/avr/include/avr/pgmspace.h **** #define PROGMEM __ATTR_PROGMEM__
 114:/usr/avr/include/avr/pgmspace.h **** 
 115:/usr/avr/include/avr/pgmspace.h **** #ifdef __cplusplus
 116:/usr/avr/include/avr/pgmspace.h **** extern "C" {
 117:/usr/avr/include/avr/pgmspace.h **** #endif
 118:/usr/avr/include/avr/pgmspace.h **** 
 119:/usr/avr/include/avr/pgmspace.h **** #if defined(__DOXYGEN__)
 120:/usr/avr/include/avr/pgmspace.h **** /*
 121:/usr/avr/include/avr/pgmspace.h ****  * Doxygen doesn't grok the appended attribute syntax of
 122:/usr/avr/include/avr/pgmspace.h ****  * GCC, and confuses the typedefs with function decls, so
 123:/usr/avr/include/avr/pgmspace.h ****  * supply a doxygen-friendly view.
 124:/usr/avr/include/avr/pgmspace.h ****  */
 125:/usr/avr/include/avr/pgmspace.h **** 
 126:/usr/avr/include/avr/pgmspace.h **** /**
 127:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 128:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_void
 129:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 130:/usr/avr/include/avr/pgmspace.h **** 
 131:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 132:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 133:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 134:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 135:/usr/avr/include/avr/pgmspace.h **** 
 136:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 137:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 138:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 139:/usr/avr/include/avr/pgmspace.h **** 
 140:/usr/avr/include/avr/pgmspace.h ****    Type of a "void" object located in flash ROM.  Does not make much
 141:/usr/avr/include/avr/pgmspace.h ****    sense by itself, but can be used to declare a "void *" object in
 142:/usr/avr/include/avr/pgmspace.h ****    flash ROM.
 143:/usr/avr/include/avr/pgmspace.h **** */
 144:/usr/avr/include/avr/pgmspace.h **** typedef void PROGMEM prog_void;
 145:/usr/avr/include/avr/pgmspace.h **** 
 146:/usr/avr/include/avr/pgmspace.h **** /**
 147:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 148:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_char
 149:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 150:/usr/avr/include/avr/pgmspace.h **** 
 151:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 152:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 153:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 154:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 155:/usr/avr/include/avr/pgmspace.h **** 
 156:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 157:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 158:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 159:/usr/avr/include/avr/pgmspace.h **** 
 160:/usr/avr/include/avr/pgmspace.h ****    Type of a "char" object located in flash ROM.
 161:/usr/avr/include/avr/pgmspace.h **** */
 162:/usr/avr/include/avr/pgmspace.h **** typedef char PROGMEM prog_char;
 163:/usr/avr/include/avr/pgmspace.h **** 
 164:/usr/avr/include/avr/pgmspace.h **** /**
 165:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 166:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_uchar
 167:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 168:/usr/avr/include/avr/pgmspace.h **** 
 169:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 170:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 171:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 172:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 173:/usr/avr/include/avr/pgmspace.h **** 
 174:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 175:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 176:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 177:/usr/avr/include/avr/pgmspace.h **** 
 178:/usr/avr/include/avr/pgmspace.h ****    Type of an "unsigned char" object located in flash ROM.
 179:/usr/avr/include/avr/pgmspace.h **** */
 180:/usr/avr/include/avr/pgmspace.h **** typedef unsigned char PROGMEM prog_uchar;
 181:/usr/avr/include/avr/pgmspace.h **** 
 182:/usr/avr/include/avr/pgmspace.h **** /**
 183:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 184:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_int8_t
 185:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 186:/usr/avr/include/avr/pgmspace.h **** 
 187:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 188:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 189:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 190:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 191:/usr/avr/include/avr/pgmspace.h **** 
 192:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 193:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 194:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 195:/usr/avr/include/avr/pgmspace.h **** 
 196:/usr/avr/include/avr/pgmspace.h ****    Type of an "int8_t" object located in flash ROM.
 197:/usr/avr/include/avr/pgmspace.h **** */
 198:/usr/avr/include/avr/pgmspace.h **** typedef int8_t PROGMEM prog_int8_t;
 199:/usr/avr/include/avr/pgmspace.h **** 
 200:/usr/avr/include/avr/pgmspace.h **** /**
 201:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 202:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_uint8_t
 203:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 204:/usr/avr/include/avr/pgmspace.h **** 
 205:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 206:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 207:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 208:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 209:/usr/avr/include/avr/pgmspace.h **** 
 210:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 211:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 212:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 213:/usr/avr/include/avr/pgmspace.h **** 
 214:/usr/avr/include/avr/pgmspace.h ****    Type of an "uint8_t" object located in flash ROM.
 215:/usr/avr/include/avr/pgmspace.h **** */
 216:/usr/avr/include/avr/pgmspace.h **** typedef uint8_t PROGMEM prog_uint8_t;
 217:/usr/avr/include/avr/pgmspace.h **** 
 218:/usr/avr/include/avr/pgmspace.h **** /**
 219:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 220:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_int16_t
 221:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 222:/usr/avr/include/avr/pgmspace.h **** 
 223:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 224:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 225:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 226:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 227:/usr/avr/include/avr/pgmspace.h **** 
 228:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 229:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 230:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 231:/usr/avr/include/avr/pgmspace.h **** 
 232:/usr/avr/include/avr/pgmspace.h ****    Type of an "int16_t" object located in flash ROM.
 233:/usr/avr/include/avr/pgmspace.h **** */
 234:/usr/avr/include/avr/pgmspace.h **** typedef int16_t PROGMEM prog_int16_t;
 235:/usr/avr/include/avr/pgmspace.h **** 
 236:/usr/avr/include/avr/pgmspace.h **** /**
 237:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 238:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_uint16_t
 239:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 240:/usr/avr/include/avr/pgmspace.h **** 
 241:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 242:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 243:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 244:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 245:/usr/avr/include/avr/pgmspace.h **** 
 246:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 247:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 248:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 249:/usr/avr/include/avr/pgmspace.h **** 
 250:/usr/avr/include/avr/pgmspace.h ****    Type of an "uint16_t" object located in flash ROM.
 251:/usr/avr/include/avr/pgmspace.h **** */
 252:/usr/avr/include/avr/pgmspace.h **** typedef uint16_t PROGMEM prog_uint16_t;
 253:/usr/avr/include/avr/pgmspace.h **** 
 254:/usr/avr/include/avr/pgmspace.h **** /**
 255:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 256:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_int32_t
 257:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 258:/usr/avr/include/avr/pgmspace.h **** 
 259:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 260:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 261:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 262:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 263:/usr/avr/include/avr/pgmspace.h **** 
 264:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 265:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 266:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 267:/usr/avr/include/avr/pgmspace.h **** 
 268:/usr/avr/include/avr/pgmspace.h ****    Type of an "int32_t" object located in flash ROM.
 269:/usr/avr/include/avr/pgmspace.h **** */
 270:/usr/avr/include/avr/pgmspace.h **** typedef int32_t PROGMEM prog_int32_t;
 271:/usr/avr/include/avr/pgmspace.h **** 
 272:/usr/avr/include/avr/pgmspace.h **** /**
 273:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 274:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_uint32_t
 275:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 276:/usr/avr/include/avr/pgmspace.h **** 
 277:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 278:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 279:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 280:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 281:/usr/avr/include/avr/pgmspace.h **** 
 282:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 283:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 284:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 285:/usr/avr/include/avr/pgmspace.h **** 
 286:/usr/avr/include/avr/pgmspace.h ****    Type of an "uint32_t" object located in flash ROM.
 287:/usr/avr/include/avr/pgmspace.h **** */
 288:/usr/avr/include/avr/pgmspace.h **** typedef uint32_t PROGMEM prog_uint32_t;
 289:/usr/avr/include/avr/pgmspace.h **** 
 290:/usr/avr/include/avr/pgmspace.h **** /**
 291:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 292:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_int64_t
 293:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 294:/usr/avr/include/avr/pgmspace.h **** 
 295:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 296:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 297:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 298:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 299:/usr/avr/include/avr/pgmspace.h **** 
 300:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 301:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 302:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 303:/usr/avr/include/avr/pgmspace.h **** 
 304:/usr/avr/include/avr/pgmspace.h ****    Type of an "int64_t" object located in flash ROM.
 305:/usr/avr/include/avr/pgmspace.h **** 
 306:/usr/avr/include/avr/pgmspace.h ****    \note This type is not available when the compiler
 307:/usr/avr/include/avr/pgmspace.h ****    option -mint8 is in effect.
 308:/usr/avr/include/avr/pgmspace.h **** */
 309:/usr/avr/include/avr/pgmspace.h **** typedef int64_t PROGMEM prog_int64_t;
 310:/usr/avr/include/avr/pgmspace.h **** 
 311:/usr/avr/include/avr/pgmspace.h **** /**
 312:/usr/avr/include/avr/pgmspace.h ****    \ingroup avr_pgmspace
 313:/usr/avr/include/avr/pgmspace.h ****    \typedef prog_uint64_t
 314:/usr/avr/include/avr/pgmspace.h ****    \note DEPRECATED
 315:/usr/avr/include/avr/pgmspace.h **** 
 316:/usr/avr/include/avr/pgmspace.h ****    This typedef is now deprecated because the usage of the __progmem__ 
 317:/usr/avr/include/avr/pgmspace.h ****    attribute on a type is not supported in GCC. However, the use of the 
 318:/usr/avr/include/avr/pgmspace.h ****    __progmem__ attribute on a variable declaration is supported, and this is 
 319:/usr/avr/include/avr/pgmspace.h ****    now the recommended usage.
 320:/usr/avr/include/avr/pgmspace.h **** 
 321:/usr/avr/include/avr/pgmspace.h ****    The typedef is only visible if the macro __PROG_TYPES_COMPAT__
 322:/usr/avr/include/avr/pgmspace.h ****    has been defined before including <avr/pgmspace.h> (either by a
 323:/usr/avr/include/avr/pgmspace.h ****    \c \#define directive, or by a -D compiler option.)
 324:/usr/avr/include/avr/pgmspace.h **** 
 325:/usr/avr/include/avr/pgmspace.h ****    Type of an "uint64_t" object located in flash ROM.
 326:/usr/avr/include/avr/pgmspace.h **** 
 327:/usr/avr/include/avr/pgmspace.h ****    \note This type is not available when the compiler
 328:/usr/avr/include/avr/pgmspace.h ****    option -mint8 is in effect.
 329:/usr/avr/include/avr/pgmspace.h **** */
 330:/usr/avr/include/avr/pgmspace.h **** typedef uint64_t PROGMEM prog_uint64_t;
 331:/usr/avr/include/avr/pgmspace.h **** 
 332:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 333:/usr/avr/include/avr/pgmspace.h ****     \def PGM_P
 334:/usr/avr/include/avr/pgmspace.h **** 
 335:/usr/avr/include/avr/pgmspace.h ****     Used to declare a variable that is a pointer to a string in program
 336:/usr/avr/include/avr/pgmspace.h ****     space. */
 337:/usr/avr/include/avr/pgmspace.h **** 
 338:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 339:/usr/avr/include/avr/pgmspace.h **** #define PGM_P const char *
 340:/usr/avr/include/avr/pgmspace.h **** #endif
 341:/usr/avr/include/avr/pgmspace.h **** 
 342:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 343:/usr/avr/include/avr/pgmspace.h ****     \def PGM_VOID_P
 344:/usr/avr/include/avr/pgmspace.h **** 
 345:/usr/avr/include/avr/pgmspace.h ****     Used to declare a generic pointer to an object in program space. */
 346:/usr/avr/include/avr/pgmspace.h **** 
 347:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 348:/usr/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const void *
 349:/usr/avr/include/avr/pgmspace.h **** #endif
 350:/usr/avr/include/avr/pgmspace.h **** 
 351:/usr/avr/include/avr/pgmspace.h **** #elif defined(__PROG_TYPES_COMPAT__)  /* !DOXYGEN */
 352:/usr/avr/include/avr/pgmspace.h **** 
 353:/usr/avr/include/avr/pgmspace.h **** typedef void prog_void __attribute__((__progmem__,deprecated("prog_void type is deprecated.")));
 354:/usr/avr/include/avr/pgmspace.h **** typedef char prog_char __attribute__((__progmem__,deprecated("prog_char type is deprecated.")));
 355:/usr/avr/include/avr/pgmspace.h **** typedef unsigned char prog_uchar __attribute__((__progmem__,deprecated("prog_uchar type is deprecat
 356:/usr/avr/include/avr/pgmspace.h **** typedef int8_t    prog_int8_t   __attribute__((__progmem__,deprecated("prog_int8_t type is deprecat
 357:/usr/avr/include/avr/pgmspace.h **** typedef uint8_t   prog_uint8_t  __attribute__((__progmem__,deprecated("prog_uint8_t type is depreca
 358:/usr/avr/include/avr/pgmspace.h **** typedef int16_t   prog_int16_t  __attribute__((__progmem__,deprecated("prog_int16_t type is depreca
 359:/usr/avr/include/avr/pgmspace.h **** typedef uint16_t  prog_uint16_t __attribute__((__progmem__,deprecated("prog_uint16_t type is deprec
 360:/usr/avr/include/avr/pgmspace.h **** typedef int32_t   prog_int32_t  __attribute__((__progmem__,deprecated("prog_int32_t type is depreca
 361:/usr/avr/include/avr/pgmspace.h **** typedef uint32_t  prog_uint32_t __attribute__((__progmem__,deprecated("prog_uint32_t type is deprec
 362:/usr/avr/include/avr/pgmspace.h **** #if !__USING_MINT8
 363:/usr/avr/include/avr/pgmspace.h **** typedef int64_t   prog_int64_t  __attribute__((__progmem__,deprecated("prog_int64_t type is depreca
 364:/usr/avr/include/avr/pgmspace.h **** typedef uint64_t  prog_uint64_t __attribute__((__progmem__,deprecated("prog_uint64_t type is deprec
 365:/usr/avr/include/avr/pgmspace.h **** #endif
 366:/usr/avr/include/avr/pgmspace.h **** 
 367:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 368:/usr/avr/include/avr/pgmspace.h **** #define PGM_P const prog_char *
 369:/usr/avr/include/avr/pgmspace.h **** #endif
 370:/usr/avr/include/avr/pgmspace.h **** 
 371:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 372:/usr/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const prog_void *
 373:/usr/avr/include/avr/pgmspace.h **** #endif
 374:/usr/avr/include/avr/pgmspace.h **** 
 375:/usr/avr/include/avr/pgmspace.h **** #else /* !defined(__DOXYGEN__), !defined(__PROG_TYPES_COMPAT__) */
 376:/usr/avr/include/avr/pgmspace.h **** 
 377:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_P
 378:/usr/avr/include/avr/pgmspace.h **** #define PGM_P const char *
 379:/usr/avr/include/avr/pgmspace.h **** #endif
 380:/usr/avr/include/avr/pgmspace.h **** 
 381:/usr/avr/include/avr/pgmspace.h **** #ifndef PGM_VOID_P
 382:/usr/avr/include/avr/pgmspace.h **** #define PGM_VOID_P const void *
 383:/usr/avr/include/avr/pgmspace.h **** #endif
 384:/usr/avr/include/avr/pgmspace.h **** #endif /* defined(__DOXYGEN__), defined(__PROG_TYPES_COMPAT__) */
 385:/usr/avr/include/avr/pgmspace.h **** 
 386:/usr/avr/include/avr/pgmspace.h **** /* Although in C, we can get away with just using __c, it does not work in
 387:/usr/avr/include/avr/pgmspace.h ****    C++. We need to use &__c[0] to avoid the compiler puking. Dave Hylands
 388:/usr/avr/include/avr/pgmspace.h ****    explaned it thusly,
 389:/usr/avr/include/avr/pgmspace.h **** 
 390:/usr/avr/include/avr/pgmspace.h ****      Let's suppose that we use PSTR("Test"). In this case, the type returned
 391:/usr/avr/include/avr/pgmspace.h ****      by __c is a prog_char[5] and not a prog_char *. While these are
 392:/usr/avr/include/avr/pgmspace.h ****      compatible, they aren't the same thing (especially in C++). The type
 393:/usr/avr/include/avr/pgmspace.h ****      returned by &__c[0] is a prog_char *, which explains why it works
 394:/usr/avr/include/avr/pgmspace.h ****      fine. */
 395:/usr/avr/include/avr/pgmspace.h **** 
 396:/usr/avr/include/avr/pgmspace.h **** #if defined(__DOXYGEN__)
 397:/usr/avr/include/avr/pgmspace.h **** /*
 398:/usr/avr/include/avr/pgmspace.h ****  * The #define below is just a dummy that serves documentation
 399:/usr/avr/include/avr/pgmspace.h ****  * purposes only.
 400:/usr/avr/include/avr/pgmspace.h ****  */
 401:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 402:/usr/avr/include/avr/pgmspace.h ****     \def PSTR(s)
 403:/usr/avr/include/avr/pgmspace.h **** 
 404:/usr/avr/include/avr/pgmspace.h ****     Used to declare a static pointer to a string in program space. */
 405:/usr/avr/include/avr/pgmspace.h **** # define PSTR(s) ((const PROGMEM char *)(s))
 406:/usr/avr/include/avr/pgmspace.h **** #else  /* !DOXYGEN */
 407:/usr/avr/include/avr/pgmspace.h **** /* The real thing. */
 408:/usr/avr/include/avr/pgmspace.h **** # define PSTR(s) (__extension__({static const char __c[] PROGMEM = (s); &__c[0];}))
 409:/usr/avr/include/avr/pgmspace.h **** #endif /* DOXYGEN */
 410:/usr/avr/include/avr/pgmspace.h **** 
 411:/usr/avr/include/avr/pgmspace.h **** #ifndef __DOXYGEN__ /* Internal macros, not documented. */
 412:/usr/avr/include/avr/pgmspace.h **** #define __LPM_classic__(addr)   \
 413:/usr/avr/include/avr/pgmspace.h **** (__extension__({                \
 414:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr); \
 415:/usr/avr/include/avr/pgmspace.h ****     uint8_t __result;           \
 416:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__        \
 417:/usr/avr/include/avr/pgmspace.h ****     (                           \
 418:/usr/avr/include/avr/pgmspace.h ****         "lpm" "\n\t"            \
 419:/usr/avr/include/avr/pgmspace.h ****         "mov %0, r0" "\n\t"     \
 420:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)       \
 421:/usr/avr/include/avr/pgmspace.h ****         : "z" (__addr16)        \
 422:/usr/avr/include/avr/pgmspace.h ****         : "r0"                  \
 423:/usr/avr/include/avr/pgmspace.h ****     );                          \
 424:/usr/avr/include/avr/pgmspace.h ****     __result;                   \
 425:/usr/avr/include/avr/pgmspace.h **** }))
 426:/usr/avr/include/avr/pgmspace.h **** 
 427:/usr/avr/include/avr/pgmspace.h **** #define __LPM_enhanced__(addr)  \
 428:/usr/avr/include/avr/pgmspace.h **** (__extension__({                \
 429:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr); \
 430:/usr/avr/include/avr/pgmspace.h ****     uint8_t __result;           \
 431:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__        \
 432:/usr/avr/include/avr/pgmspace.h ****     (                           \
 433:/usr/avr/include/avr/pgmspace.h ****         "lpm %0, Z" "\n\t"      \
 434:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)       \
 435:/usr/avr/include/avr/pgmspace.h ****         : "z" (__addr16)        \
 436:/usr/avr/include/avr/pgmspace.h ****     );                          \
 437:/usr/avr/include/avr/pgmspace.h ****     __result;                   \
 438:/usr/avr/include/avr/pgmspace.h **** }))
 439:/usr/avr/include/avr/pgmspace.h **** 
 440:/usr/avr/include/avr/pgmspace.h **** #define __LPM_word_classic__(addr)          \
 441:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 442:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 443:/usr/avr/include/avr/pgmspace.h ****     uint16_t __result;                      \
 444:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 445:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 446:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 447:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 448:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 449:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 450:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 451:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 452:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 453:/usr/avr/include/avr/pgmspace.h ****         : "r0"                              \
 454:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 455:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 456:/usr/avr/include/avr/pgmspace.h **** }))
 457:/usr/avr/include/avr/pgmspace.h **** 
 458:/usr/avr/include/avr/pgmspace.h **** #define __LPM_word_enhanced__(addr)         \
 459:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 460:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 461:/usr/avr/include/avr/pgmspace.h ****     uint16_t __result;                      \
 462:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 463:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 464:/usr/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 465:/usr/avr/include/avr/pgmspace.h ****         "lpm %B0, Z"    "\n\t"              \
 466:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 467:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 468:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 469:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 470:/usr/avr/include/avr/pgmspace.h **** }))
 471:/usr/avr/include/avr/pgmspace.h **** 
 472:/usr/avr/include/avr/pgmspace.h **** #define __LPM_dword_classic__(addr)         \
 473:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 474:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 475:/usr/avr/include/avr/pgmspace.h ****     uint32_t __result;                      \
 476:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 477:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 478:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 479:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 480:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 481:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 482:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 483:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 484:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 485:/usr/avr/include/avr/pgmspace.h ****         "mov %C0, r0"   "\n\t"              \
 486:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 487:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 488:/usr/avr/include/avr/pgmspace.h ****         "mov %D0, r0"   "\n\t"              \
 489:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 490:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 491:/usr/avr/include/avr/pgmspace.h ****         : "r0"                              \
 492:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 493:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 494:/usr/avr/include/avr/pgmspace.h **** }))
 495:/usr/avr/include/avr/pgmspace.h **** 
 496:/usr/avr/include/avr/pgmspace.h **** #define __LPM_dword_enhanced__(addr)        \
 497:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 498:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 499:/usr/avr/include/avr/pgmspace.h ****     uint32_t __result;                      \
 500:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 501:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 502:/usr/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 503:/usr/avr/include/avr/pgmspace.h ****         "lpm %B0, Z+"   "\n\t"              \
 504:/usr/avr/include/avr/pgmspace.h ****         "lpm %C0, Z+"   "\n\t"              \
 505:/usr/avr/include/avr/pgmspace.h ****         "lpm %D0, Z"    "\n\t"              \
 506:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 507:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 508:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 509:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 510:/usr/avr/include/avr/pgmspace.h **** }))
 511:/usr/avr/include/avr/pgmspace.h **** 
 512:/usr/avr/include/avr/pgmspace.h **** #define __LPM_float_classic__(addr)         \
 513:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 514:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 515:/usr/avr/include/avr/pgmspace.h ****     float __result;                         \
 516:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 517:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 518:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 519:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"              \
 520:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 521:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 522:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"              \
 523:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 524:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 525:/usr/avr/include/avr/pgmspace.h ****         "mov %C0, r0"   "\n\t"              \
 526:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"              \
 527:/usr/avr/include/avr/pgmspace.h ****         "lpm"           "\n\t"              \
 528:/usr/avr/include/avr/pgmspace.h ****         "mov %D0, r0"   "\n\t"              \
 529:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 530:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 531:/usr/avr/include/avr/pgmspace.h ****         : "r0"                              \
 532:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 533:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 534:/usr/avr/include/avr/pgmspace.h **** }))
 535:/usr/avr/include/avr/pgmspace.h **** 
 536:/usr/avr/include/avr/pgmspace.h **** #define __LPM_float_enhanced__(addr)        \
 537:/usr/avr/include/avr/pgmspace.h **** (__extension__({                            \
 538:/usr/avr/include/avr/pgmspace.h ****     uint16_t __addr16 = (uint16_t)(addr);   \
 539:/usr/avr/include/avr/pgmspace.h ****     float __result;                         \
 540:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                    \
 541:/usr/avr/include/avr/pgmspace.h ****     (                                       \
 542:/usr/avr/include/avr/pgmspace.h ****         "lpm %A0, Z+"   "\n\t"              \
 543:/usr/avr/include/avr/pgmspace.h ****         "lpm %B0, Z+"   "\n\t"              \
 544:/usr/avr/include/avr/pgmspace.h ****         "lpm %C0, Z+"   "\n\t"              \
 545:/usr/avr/include/avr/pgmspace.h ****         "lpm %D0, Z"    "\n\t"              \
 546:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result), "=z" (__addr16)  \
 547:/usr/avr/include/avr/pgmspace.h ****         : "1" (__addr16)                    \
 548:/usr/avr/include/avr/pgmspace.h ****     );                                      \
 549:/usr/avr/include/avr/pgmspace.h ****     __result;                               \
 550:/usr/avr/include/avr/pgmspace.h **** }))
 551:/usr/avr/include/avr/pgmspace.h **** 
 552:/usr/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_LPMX__)
 553:/usr/avr/include/avr/pgmspace.h **** #define __LPM(addr)         __LPM_enhanced__(addr)
 554:/usr/avr/include/avr/pgmspace.h **** #define __LPM_word(addr)    __LPM_word_enhanced__(addr)
 555:/usr/avr/include/avr/pgmspace.h **** #define __LPM_dword(addr)   __LPM_dword_enhanced__(addr)
 556:/usr/avr/include/avr/pgmspace.h **** #define __LPM_float(addr)   __LPM_float_enhanced__(addr)
 557:/usr/avr/include/avr/pgmspace.h **** #else
 558:/usr/avr/include/avr/pgmspace.h **** #define __LPM(addr)         __LPM_classic__(addr)
 559:/usr/avr/include/avr/pgmspace.h **** #define __LPM_word(addr)    __LPM_word_classic__(addr)
 560:/usr/avr/include/avr/pgmspace.h **** #define __LPM_dword(addr)   __LPM_dword_classic__(addr)
 561:/usr/avr/include/avr/pgmspace.h **** #define __LPM_float(addr)   __LPM_float_classic__(addr)
 562:/usr/avr/include/avr/pgmspace.h **** #endif
 563:/usr/avr/include/avr/pgmspace.h **** 
 564:/usr/avr/include/avr/pgmspace.h **** #endif  /* !__DOXYGEN__ */
 565:/usr/avr/include/avr/pgmspace.h **** 
 566:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 567:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_byte_near(address_short)
 568:/usr/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 16-bit (near) address. 
 569:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 570:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 571:/usr/avr/include/avr/pgmspace.h **** 
 572:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_byte_near(address_short) __LPM((uint16_t)(address_short))
 573:/usr/avr/include/avr/pgmspace.h **** 
 574:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 575:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_word_near(address_short)
 576:/usr/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 16-bit (near) address. 
 577:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 578:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 579:/usr/avr/include/avr/pgmspace.h **** 
 580:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_word_near(address_short) __LPM_word((uint16_t)(address_short))
 581:/usr/avr/include/avr/pgmspace.h **** 
 582:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 583:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_dword_near(address_short)
 584:/usr/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 16-bit (near) address. 
 585:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 586:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 587:/usr/avr/include/avr/pgmspace.h **** 
 588:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_dword_near(address_short) \
 589:/usr/avr/include/avr/pgmspace.h ****     __LPM_dword((uint16_t)(address_short))
 590:/usr/avr/include/avr/pgmspace.h **** 
 591:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 592:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_float_near(address_short)
 593:/usr/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 16-bit (near) address. 
 594:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 595:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 596:/usr/avr/include/avr/pgmspace.h **** 
 597:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_float_near(address_short) \
 598:/usr/avr/include/avr/pgmspace.h ****     __LPM_float((uint16_t)(address_short))
 599:/usr/avr/include/avr/pgmspace.h **** 
 600:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 601:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr_near(address_short)
 602:/usr/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 16-bit (near) address. 
 603:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 604:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 605:/usr/avr/include/avr/pgmspace.h **** 
 606:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_ptr_near(address_short) \
 607:/usr/avr/include/avr/pgmspace.h ****     (void*)__LPM_word((uint16_t)(address_short))
 608:/usr/avr/include/avr/pgmspace.h **** 
 609:/usr/avr/include/avr/pgmspace.h **** #if defined(RAMPZ) || defined(__DOXYGEN__)
 610:/usr/avr/include/avr/pgmspace.h **** 
 611:/usr/avr/include/avr/pgmspace.h **** /* Only for devices with more than 64K of program memory.
 612:/usr/avr/include/avr/pgmspace.h ****    RAMPZ must be defined (see iom103.h, iom128.h).
 613:/usr/avr/include/avr/pgmspace.h **** */
 614:/usr/avr/include/avr/pgmspace.h **** 
 615:/usr/avr/include/avr/pgmspace.h **** /* The classic functions are needed for ATmega103. */
 616:/usr/avr/include/avr/pgmspace.h **** #ifndef __DOXYGEN__		/* These are internal macros, avoid "is
 617:/usr/avr/include/avr/pgmspace.h **** 				   not documented" warnings. */
 618:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_classic__(addr)      \
 619:/usr/avr/include/avr/pgmspace.h **** (__extension__({                    \
 620:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 621:/usr/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 622:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 623:/usr/avr/include/avr/pgmspace.h ****     (                               \
 624:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 625:/usr/avr/include/avr/pgmspace.h ****         "mov r31, %B1" "\n\t"       \
 626:/usr/avr/include/avr/pgmspace.h ****         "mov r30, %A1" "\n\t"       \
 627:/usr/avr/include/avr/pgmspace.h ****         "elpm" "\n\t"               \
 628:/usr/avr/include/avr/pgmspace.h ****         "mov %0, r0" "\n\t"         \
 629:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 630:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 631:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 632:/usr/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"        \
 633:/usr/avr/include/avr/pgmspace.h ****     );                              \
 634:/usr/avr/include/avr/pgmspace.h ****     __result;                       \
 635:/usr/avr/include/avr/pgmspace.h **** }))
 636:/usr/avr/include/avr/pgmspace.h **** 
 637:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_enhanced__(addr)     \
 638:/usr/avr/include/avr/pgmspace.h **** (__extension__({                    \
 639:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 640:/usr/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 641:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 642:/usr/avr/include/avr/pgmspace.h ****     (                               \
 643:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 644:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1" "\n\t"       \
 645:/usr/avr/include/avr/pgmspace.h ****         "elpm %0, Z+" "\n\t"        \
 646:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 647:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 648:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 649:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"              \
 650:/usr/avr/include/avr/pgmspace.h ****     );                              \
 651:/usr/avr/include/avr/pgmspace.h ****     __result;                       \
 652:/usr/avr/include/avr/pgmspace.h **** }))
 653:/usr/avr/include/avr/pgmspace.h **** 
 654:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_xmega__(addr)        \
 655:/usr/avr/include/avr/pgmspace.h **** (__extension__({                    \
 656:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 657:/usr/avr/include/avr/pgmspace.h ****     uint8_t __result;               \
 658:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__            \
 659:/usr/avr/include/avr/pgmspace.h ****     (                               \
 660:/usr/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t" \
 661:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1" "\n\t"        \
 662:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1" "\n\t"       \
 663:/usr/avr/include/avr/pgmspace.h ****         "elpm %0, Z+" "\n\t"        \
 664:/usr/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"       \
 665:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)           \
 666:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),           \
 667:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ)) \
 668:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"              \
 669:/usr/avr/include/avr/pgmspace.h ****     );                              \
 670:/usr/avr/include/avr/pgmspace.h ****     __result;                       \
 671:/usr/avr/include/avr/pgmspace.h **** }))
 672:/usr/avr/include/avr/pgmspace.h **** 
 673:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word_classic__(addr)     \
 674:/usr/avr/include/avr/pgmspace.h **** (__extension__({                        \
 675:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 676:/usr/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 677:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 678:/usr/avr/include/avr/pgmspace.h ****     (                                   \
 679:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 680:/usr/avr/include/avr/pgmspace.h ****         "mov r31, %B1"  "\n\t"          \
 681:/usr/avr/include/avr/pgmspace.h ****         "mov r30, %A1"  "\n\t"          \
 682:/usr/avr/include/avr/pgmspace.h ****         "elpm"          "\n\t"          \
 683:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"   "\n\t"          \
 684:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"     "\n\t"          \
 685:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"   "\n\t"          \
 686:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"   \
 687:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"    "\n\t"          \
 688:/usr/avr/include/avr/pgmspace.h ****         "elpm"          "\n\t"          \
 689:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"   "\n\t"          \
 690:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 691:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 692:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 693:/usr/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"            \
 694:/usr/avr/include/avr/pgmspace.h ****     );                                  \
 695:/usr/avr/include/avr/pgmspace.h ****     __result;                           \
 696:/usr/avr/include/avr/pgmspace.h **** }))
 697:/usr/avr/include/avr/pgmspace.h **** 
 698:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word_enhanced__(addr)    \
 699:/usr/avr/include/avr/pgmspace.h **** (__extension__({                        \
 700:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 701:/usr/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 702:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 703:/usr/avr/include/avr/pgmspace.h ****     (                                   \
 704:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 705:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"          \
 706:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"          \
 707:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z"   "\n\t"          \
 708:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 709:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 710:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 711:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                  \
 712:/usr/avr/include/avr/pgmspace.h ****     );                                  \
 713:/usr/avr/include/avr/pgmspace.h ****     __result;                           \
 714:/usr/avr/include/avr/pgmspace.h **** }))
 715:/usr/avr/include/avr/pgmspace.h **** 
 716:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word_xmega__(addr)       \
 717:/usr/avr/include/avr/pgmspace.h **** (__extension__({                        \
 718:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 719:/usr/avr/include/avr/pgmspace.h ****     uint16_t __result;                  \
 720:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                \
 721:/usr/avr/include/avr/pgmspace.h ****     (                                   \
 722:/usr/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"     \
 723:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"          \
 724:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"          \
 725:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"          \
 726:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z"   "\n\t"          \
 727:/usr/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"           \
 728:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)               \
 729:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),               \
 730:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))     \
 731:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                  \
 732:/usr/avr/include/avr/pgmspace.h ****     );                                  \
 733:/usr/avr/include/avr/pgmspace.h ****     __result;                           \
 734:/usr/avr/include/avr/pgmspace.h **** }))
 735:/usr/avr/include/avr/pgmspace.h **** 
 736:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword_classic__(addr)      \
 737:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 738:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 739:/usr/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 740:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 741:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 742:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"          "\n\t"     \
 743:/usr/avr/include/avr/pgmspace.h ****         "mov r31, %B1"         "\n\t"     \
 744:/usr/avr/include/avr/pgmspace.h ****         "mov r30, %A1"         "\n\t"     \
 745:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 746:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"          "\n\t"     \
 747:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 748:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 749:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 750:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 751:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 752:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"          "\n\t"     \
 753:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 754:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 755:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 756:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 757:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 758:/usr/avr/include/avr/pgmspace.h ****         "mov %C0, r0"          "\n\t"     \
 759:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 760:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 761:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 762:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 763:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 764:/usr/avr/include/avr/pgmspace.h ****         "mov %D0, r0"          "\n\t"     \
 765:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 766:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 767:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 768:/usr/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"              \
 769:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 770:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 771:/usr/avr/include/avr/pgmspace.h **** }))
 772:/usr/avr/include/avr/pgmspace.h **** 
 773:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword_enhanced__(addr)     \
 774:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 775:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 776:/usr/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 777:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 778:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 779:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 780:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 781:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 782:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 783:/usr/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 784:/usr/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 785:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 786:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 787:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 788:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 789:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 790:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 791:/usr/avr/include/avr/pgmspace.h **** }))
 792:/usr/avr/include/avr/pgmspace.h **** 
 793:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword_xmega__(addr)        \
 794:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 795:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 796:/usr/avr/include/avr/pgmspace.h ****     uint32_t __result;                    \
 797:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 798:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 799:/usr/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"       \
 800:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 801:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 802:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 803:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 804:/usr/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 805:/usr/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 806:/usr/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"             \
 807:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 808:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 809:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 810:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 811:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 812:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 813:/usr/avr/include/avr/pgmspace.h **** }))
 814:/usr/avr/include/avr/pgmspace.h **** 
 815:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float_classic__(addr)      \
 816:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 817:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 818:/usr/avr/include/avr/pgmspace.h ****     float __result;                       \
 819:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 820:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 821:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"          "\n\t"     \
 822:/usr/avr/include/avr/pgmspace.h ****         "mov r31, %B1"         "\n\t"     \
 823:/usr/avr/include/avr/pgmspace.h ****         "mov r30, %A1"         "\n\t"     \
 824:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 825:/usr/avr/include/avr/pgmspace.h ****         "mov %A0, r0"          "\n\t"     \
 826:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 827:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 828:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 829:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 830:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 831:/usr/avr/include/avr/pgmspace.h ****         "mov %B0, r0"          "\n\t"     \
 832:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 833:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 834:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 835:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 836:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 837:/usr/avr/include/avr/pgmspace.h ****         "mov %C0, r0"          "\n\t"     \
 838:/usr/avr/include/avr/pgmspace.h ****         "in r0, %2"            "\n\t"     \
 839:/usr/avr/include/avr/pgmspace.h ****         "adiw r30, 1"          "\n\t"     \
 840:/usr/avr/include/avr/pgmspace.h ****         "adc r0, __zero_reg__" "\n\t"     \
 841:/usr/avr/include/avr/pgmspace.h ****         "out %2, r0"           "\n\t"     \
 842:/usr/avr/include/avr/pgmspace.h ****         "elpm"                 "\n\t"     \
 843:/usr/avr/include/avr/pgmspace.h ****         "mov %D0, r0"          "\n\t"     \
 844:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 845:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 846:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 847:/usr/avr/include/avr/pgmspace.h ****         : "r0", "r30", "r31"              \
 848:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 849:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 850:/usr/avr/include/avr/pgmspace.h **** }))
 851:/usr/avr/include/avr/pgmspace.h **** 
 852:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float_enhanced__(addr)     \
 853:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 854:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 855:/usr/avr/include/avr/pgmspace.h ****     float __result;                       \
 856:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 857:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 858:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 859:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 860:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 861:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 862:/usr/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 863:/usr/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 864:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 865:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 866:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 867:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 868:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 869:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 870:/usr/avr/include/avr/pgmspace.h **** }))
 871:/usr/avr/include/avr/pgmspace.h **** 
 872:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float_xmega__(addr)        \
 873:/usr/avr/include/avr/pgmspace.h **** (__extension__({                          \
 874:/usr/avr/include/avr/pgmspace.h ****     uint32_t __addr32 = (uint32_t)(addr); \
 875:/usr/avr/include/avr/pgmspace.h ****     float __result;                       \
 876:/usr/avr/include/avr/pgmspace.h ****     __asm__ __volatile__                  \
 877:/usr/avr/include/avr/pgmspace.h ****     (                                     \
 878:/usr/avr/include/avr/pgmspace.h ****         "in __tmp_reg__, %2" "\n\t"       \
 879:/usr/avr/include/avr/pgmspace.h ****         "out %2, %C1"   "\n\t"            \
 880:/usr/avr/include/avr/pgmspace.h ****         "movw r30, %1"  "\n\t"            \
 881:/usr/avr/include/avr/pgmspace.h ****         "elpm %A0, Z+"  "\n\t"            \
 882:/usr/avr/include/avr/pgmspace.h ****         "elpm %B0, Z+"  "\n\t"            \
 883:/usr/avr/include/avr/pgmspace.h ****         "elpm %C0, Z+"  "\n\t"            \
 884:/usr/avr/include/avr/pgmspace.h ****         "elpm %D0, Z"   "\n\t"            \
 885:/usr/avr/include/avr/pgmspace.h ****         "out %2, __tmp_reg__"             \
 886:/usr/avr/include/avr/pgmspace.h ****         : "=r" (__result)                 \
 887:/usr/avr/include/avr/pgmspace.h ****         : "r" (__addr32),                 \
 888:/usr/avr/include/avr/pgmspace.h ****           "I" (_SFR_IO_ADDR(RAMPZ))       \
 889:/usr/avr/include/avr/pgmspace.h ****         : "r30", "r31"                    \
 890:/usr/avr/include/avr/pgmspace.h ****     );                                    \
 891:/usr/avr/include/avr/pgmspace.h ****     __result;                             \
 892:/usr/avr/include/avr/pgmspace.h **** }))
 893:/usr/avr/include/avr/pgmspace.h **** 
 894:/usr/avr/include/avr/pgmspace.h **** /*
 895:/usr/avr/include/avr/pgmspace.h **** Check for architectures that implement RAMPD (avrxmega5, avrxmega7)
 896:/usr/avr/include/avr/pgmspace.h **** as they need to save/restore RAMPZ for ELPM macros so it does
 897:/usr/avr/include/avr/pgmspace.h **** not interfere with data accesses.
 898:/usr/avr/include/avr/pgmspace.h **** */
 899:/usr/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_RAMPD__)
 900:/usr/avr/include/avr/pgmspace.h **** 
 901:/usr/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_xmega__(addr)
 902:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_xmega__(addr)
 903:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_xmega__(addr)
 904:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_xmega__(addr)
 905:/usr/avr/include/avr/pgmspace.h **** 
 906:/usr/avr/include/avr/pgmspace.h **** #else
 907:/usr/avr/include/avr/pgmspace.h **** 
 908:/usr/avr/include/avr/pgmspace.h **** #if defined (__AVR_HAVE_LPMX__)
 909:/usr/avr/include/avr/pgmspace.h **** 
 910:/usr/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_enhanced__(addr)
 911:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_enhanced__(addr)
 912:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_enhanced__(addr)
 913:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_enhanced__(addr)
 914:/usr/avr/include/avr/pgmspace.h **** 
 915:/usr/avr/include/avr/pgmspace.h **** #else
 916:/usr/avr/include/avr/pgmspace.h **** 
 917:/usr/avr/include/avr/pgmspace.h **** #define __ELPM(addr)        __ELPM_classic__(addr)
 918:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_word(addr)   __ELPM_word_classic__(addr)
 919:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_dword(addr)  __ELPM_dword_classic__(addr)
 920:/usr/avr/include/avr/pgmspace.h **** #define __ELPM_float(addr)  __ELPM_float_classic__(addr)
 921:/usr/avr/include/avr/pgmspace.h **** 
 922:/usr/avr/include/avr/pgmspace.h **** #endif  /* __AVR_HAVE_LPMX__ */
 923:/usr/avr/include/avr/pgmspace.h **** 
 924:/usr/avr/include/avr/pgmspace.h **** #endif  /* __AVR_HAVE_RAMPD__ */
 925:/usr/avr/include/avr/pgmspace.h **** 
 926:/usr/avr/include/avr/pgmspace.h **** #endif	/* !__DOXYGEN__ */
 927:/usr/avr/include/avr/pgmspace.h **** 
 928:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 929:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_byte_far(address_long)
 930:/usr/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 32-bit (far) address. 
 931:/usr/avr/include/avr/pgmspace.h **** 
 932:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 933:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 934:/usr/avr/include/avr/pgmspace.h **** 
 935:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_byte_far(address_long)  __ELPM((uint32_t)(address_long))
 936:/usr/avr/include/avr/pgmspace.h **** 
 937:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 938:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_word_far(address_long)
 939:/usr/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 32-bit (far) address. 
 940:/usr/avr/include/avr/pgmspace.h **** 
 941:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 942:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 943:/usr/avr/include/avr/pgmspace.h **** 
 944:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_word_far(address_long)  __ELPM_word((uint32_t)(address_long))
 945:/usr/avr/include/avr/pgmspace.h **** 
 946:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 947:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_dword_far(address_long)
 948:/usr/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 32-bit (far) address. 
 949:/usr/avr/include/avr/pgmspace.h **** 
 950:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 951:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 952:/usr/avr/include/avr/pgmspace.h **** 
 953:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_dword_far(address_long) __ELPM_dword((uint32_t)(address_long))
 954:/usr/avr/include/avr/pgmspace.h **** 
 955:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 956:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_float_far(address_long)
 957:/usr/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 32-bit (far) address. 
 958:/usr/avr/include/avr/pgmspace.h **** 
 959:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 960:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 961:/usr/avr/include/avr/pgmspace.h **** 
 962:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_float_far(address_long) __ELPM_float((uint32_t)(address_long))
 963:/usr/avr/include/avr/pgmspace.h **** 
 964:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 965:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr_far(address_long)
 966:/usr/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 32-bit (far) address. 
 967:/usr/avr/include/avr/pgmspace.h **** 
 968:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address.
 969:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 970:/usr/avr/include/avr/pgmspace.h **** 
 971:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_ptr_far(address_long) (void*)__ELPM_word((uint32_t)(address_long))
 972:/usr/avr/include/avr/pgmspace.h **** 
 973:/usr/avr/include/avr/pgmspace.h **** #endif /* RAMPZ or __DOXYGEN__ */
 974:/usr/avr/include/avr/pgmspace.h **** 
 975:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 976:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_byte(address_short)
 977:/usr/avr/include/avr/pgmspace.h ****     Read a byte from the program space with a 16-bit (near) address. 
 978:/usr/avr/include/avr/pgmspace.h **** 
 979:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 980:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 981:/usr/avr/include/avr/pgmspace.h **** 
 982:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_byte(address_short)    pgm_read_byte_near(address_short)
 983:/usr/avr/include/avr/pgmspace.h **** 
 984:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 985:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_word(address_short)
 986:/usr/avr/include/avr/pgmspace.h ****     Read a word from the program space with a 16-bit (near) address. 
 987:/usr/avr/include/avr/pgmspace.h **** 
 988:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 989:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 990:/usr/avr/include/avr/pgmspace.h **** 
 991:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_word(address_short)    pgm_read_word_near(address_short)
 992:/usr/avr/include/avr/pgmspace.h **** 
 993:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
 994:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_dword(address_short)
 995:/usr/avr/include/avr/pgmspace.h ****     Read a double word from the program space with a 16-bit (near) address. 
 996:/usr/avr/include/avr/pgmspace.h **** 
 997:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
 998:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
 999:/usr/avr/include/avr/pgmspace.h **** 
1000:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_dword(address_short)   pgm_read_dword_near(address_short)
1001:/usr/avr/include/avr/pgmspace.h **** 
1002:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1003:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_float(address_short)
1004:/usr/avr/include/avr/pgmspace.h ****     Read a float from the program space with a 16-bit (near) address. 
1005:/usr/avr/include/avr/pgmspace.h **** 
1006:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1007:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1008:/usr/avr/include/avr/pgmspace.h **** 
1009:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_float(address_short)   pgm_read_float_near(address_short)
1010:/usr/avr/include/avr/pgmspace.h **** 
1011:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1012:/usr/avr/include/avr/pgmspace.h ****     \def pgm_read_ptr(address_short)
1013:/usr/avr/include/avr/pgmspace.h ****     Read a pointer from the program space with a 16-bit (near) address. 
1014:/usr/avr/include/avr/pgmspace.h **** 
1015:/usr/avr/include/avr/pgmspace.h ****     \note The address is a byte address. 
1016:/usr/avr/include/avr/pgmspace.h ****     The address is in the program space. */
1017:/usr/avr/include/avr/pgmspace.h **** 
1018:/usr/avr/include/avr/pgmspace.h **** #define pgm_read_ptr(address_short)     pgm_read_ptr_near(address_short)
1019:/usr/avr/include/avr/pgmspace.h **** 
1020:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1021:/usr/avr/include/avr/pgmspace.h ****     \def pgm_get_far_address(var)
1022:/usr/avr/include/avr/pgmspace.h **** 
1023:/usr/avr/include/avr/pgmspace.h ****    This macro facilitates the obtention of a 32 bit "far" pointer (only 24 bits
1024:/usr/avr/include/avr/pgmspace.h ****    used) to data even passed the 64KB limit for the 16 bit ordinary pointer. It
1025:/usr/avr/include/avr/pgmspace.h ****    is similar to the '&' operator, with some limitations.
1026:/usr/avr/include/avr/pgmspace.h **** 
1027:/usr/avr/include/avr/pgmspace.h ****    Comments:
1028:/usr/avr/include/avr/pgmspace.h **** 
1029:/usr/avr/include/avr/pgmspace.h ****    - The overhead is minimal and it's mainly due to the 32 bit size operation.
1030:/usr/avr/include/avr/pgmspace.h **** 
1031:/usr/avr/include/avr/pgmspace.h ****    - 24 bit sizes guarantees the code compatibility for use in future devices.
1032:/usr/avr/include/avr/pgmspace.h **** 
1033:/usr/avr/include/avr/pgmspace.h ****    - hh8() is an undocumented feature but seems to give the third significant byte
1034:/usr/avr/include/avr/pgmspace.h ****      of a 32 bit data and accepts symbols, complementing the functionality of hi8()
1035:/usr/avr/include/avr/pgmspace.h ****      and lo8(). There is not an equivalent assembler function to get the high
1036:/usr/avr/include/avr/pgmspace.h ****      significant byte.
1037:/usr/avr/include/avr/pgmspace.h **** 
1038:/usr/avr/include/avr/pgmspace.h ****    - 'var' has to be resolved at linking time as an existing symbol, i.e, a simple
1039:/usr/avr/include/avr/pgmspace.h ****      type variable name, an array name (not an indexed element of the array, if the
1040:/usr/avr/include/avr/pgmspace.h ****      index is a constant the compiler does not complain but fails to get the address
1041:/usr/avr/include/avr/pgmspace.h ****      if optimization is enabled), a struct name or a struct field name, a function
1042:/usr/avr/include/avr/pgmspace.h ****      identifier, a linker defined identifier,...
1043:/usr/avr/include/avr/pgmspace.h **** 
1044:/usr/avr/include/avr/pgmspace.h ****    - The returned value is the identifier's VMA (virtual memory address) determined
1045:/usr/avr/include/avr/pgmspace.h ****      by the linker and falls in the corresponding memory region. The AVR Harvard
1046:/usr/avr/include/avr/pgmspace.h ****      architecture requires non overlapping VMA areas for the multiple address spaces
1047:/usr/avr/include/avr/pgmspace.h ****      in the processor: Flash ROM, RAM, and EEPROM. Typical offset for this are
1048:/usr/avr/include/avr/pgmspace.h ****      0x00000000, 0x00800xx0, and 0x00810000 respectively, derived from the linker
1049:/usr/avr/include/avr/pgmspace.h ****      script used and linker options. The value returned can be seen then as a
1050:/usr/avr/include/avr/pgmspace.h ****      universal pointer.
1051:/usr/avr/include/avr/pgmspace.h **** */
1052:/usr/avr/include/avr/pgmspace.h **** 
1053:/usr/avr/include/avr/pgmspace.h **** #define pgm_get_far_address(var)                          \
1054:/usr/avr/include/avr/pgmspace.h **** ({                                                    \
1055:/usr/avr/include/avr/pgmspace.h **** 	uint_farptr_t tmp;                                \
1056:/usr/avr/include/avr/pgmspace.h ****                                                       \
1057:/usr/avr/include/avr/pgmspace.h **** 	__asm__ __volatile__(                             \
1058:/usr/avr/include/avr/pgmspace.h ****                                                       \
1059:/usr/avr/include/avr/pgmspace.h **** 			"ldi	%A0, lo8(%1)"           "\n\t"    \
1060:/usr/avr/include/avr/pgmspace.h **** 			"ldi	%B0, hi8(%1)"           "\n\t"    \
1061:/usr/avr/include/avr/pgmspace.h **** 			"ldi	%C0, hh8(%1)"           "\n\t"    \
1062:/usr/avr/include/avr/pgmspace.h **** 			"clr	%D0"                    "\n\t"    \
1063:/usr/avr/include/avr/pgmspace.h **** 		:                                             \
1064:/usr/avr/include/avr/pgmspace.h **** 			"=d" (tmp)                                \
1065:/usr/avr/include/avr/pgmspace.h **** 		:                                             \
1066:/usr/avr/include/avr/pgmspace.h **** 			"p"  (&(var))                             \
1067:/usr/avr/include/avr/pgmspace.h **** 	);                                                \
1068:/usr/avr/include/avr/pgmspace.h **** 	tmp;                                              \
1069:/usr/avr/include/avr/pgmspace.h **** })
1070:/usr/avr/include/avr/pgmspace.h **** 
1071:/usr/avr/include/avr/pgmspace.h **** 
1072:/usr/avr/include/avr/pgmspace.h **** 
1073:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1074:/usr/avr/include/avr/pgmspace.h ****     \fn const void * memchr_P(const void *s, int val, size_t len)
1075:/usr/avr/include/avr/pgmspace.h ****     \brief Scan flash memory for a character.
1076:/usr/avr/include/avr/pgmspace.h **** 
1077:/usr/avr/include/avr/pgmspace.h ****     The memchr_P() function scans the first \p len bytes of the flash
1078:/usr/avr/include/avr/pgmspace.h ****     memory area pointed to by \p s for the character \p val.  The first
1079:/usr/avr/include/avr/pgmspace.h ****     byte to match \p val (interpreted as an unsigned character) stops
1080:/usr/avr/include/avr/pgmspace.h ****     the operation.
1081:/usr/avr/include/avr/pgmspace.h **** 
1082:/usr/avr/include/avr/pgmspace.h ****     \return The memchr_P() function returns a pointer to the matching
1083:/usr/avr/include/avr/pgmspace.h ****     byte or \c NULL if the character does not occur in the given memory
1084:/usr/avr/include/avr/pgmspace.h ****     area.	*/
1085:/usr/avr/include/avr/pgmspace.h **** extern const void * memchr_P(const void *, int __val, size_t __len) __ATTR_CONST__;
1086:/usr/avr/include/avr/pgmspace.h **** 
1087:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1088:/usr/avr/include/avr/pgmspace.h ****     \fn int memcmp_P(const void *s1, const void *s2, size_t len)
1089:/usr/avr/include/avr/pgmspace.h ****     \brief Compare memory areas
1090:/usr/avr/include/avr/pgmspace.h **** 
1091:/usr/avr/include/avr/pgmspace.h ****     The memcmp_P() function compares the first \p len bytes of the memory
1092:/usr/avr/include/avr/pgmspace.h ****     areas \p s1 and flash \p s2. The comparision is performed using unsigned
1093:/usr/avr/include/avr/pgmspace.h ****     char operations.
1094:/usr/avr/include/avr/pgmspace.h **** 
1095:/usr/avr/include/avr/pgmspace.h ****     \returns The memcmp_P() function returns an integer less than, equal
1096:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if the first \p len bytes of \p s1 is found,
1097:/usr/avr/include/avr/pgmspace.h ****     respectively, to be less than, to match, or be greater than the first
1098:/usr/avr/include/avr/pgmspace.h ****     \p len bytes of \p s2.	*/
1099:/usr/avr/include/avr/pgmspace.h **** extern int memcmp_P(const void *, const void *, size_t) __ATTR_PURE__;
1100:/usr/avr/include/avr/pgmspace.h **** 
1101:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1102:/usr/avr/include/avr/pgmspace.h ****     \fn void *memccpy_P (void *dest, const void *src, int val, size_t len)
1103:/usr/avr/include/avr/pgmspace.h **** 
1104:/usr/avr/include/avr/pgmspace.h ****     This function is similar to memccpy() except that \p src is pointer
1105:/usr/avr/include/avr/pgmspace.h ****     to a string in program space.	*/
1106:/usr/avr/include/avr/pgmspace.h **** extern void *memccpy_P(void *, const void *, int __val, size_t);
1107:/usr/avr/include/avr/pgmspace.h **** 
1108:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1109:/usr/avr/include/avr/pgmspace.h ****     \fn void *memcpy_P(void *dest, const void *src, size_t n)
1110:/usr/avr/include/avr/pgmspace.h **** 
1111:/usr/avr/include/avr/pgmspace.h ****     The memcpy_P() function is similar to memcpy(), except the src string
1112:/usr/avr/include/avr/pgmspace.h ****     resides in program space.
1113:/usr/avr/include/avr/pgmspace.h **** 
1114:/usr/avr/include/avr/pgmspace.h ****     \returns The memcpy_P() function returns a pointer to dest.  */
1115:/usr/avr/include/avr/pgmspace.h **** extern void *memcpy_P(void *, const void *, size_t);
1116:/usr/avr/include/avr/pgmspace.h **** 
1117:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1118:/usr/avr/include/avr/pgmspace.h ****     \fn void *memmem_P(const void *s1, size_t len1, const void *s2, size_t len2)
1119:/usr/avr/include/avr/pgmspace.h **** 
1120:/usr/avr/include/avr/pgmspace.h ****     The memmem_P() function is similar to memmem() except that \p s2 is
1121:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.	*/
1122:/usr/avr/include/avr/pgmspace.h **** extern void *memmem_P(const void *, size_t, const void *, size_t) __ATTR_PURE__;
1123:/usr/avr/include/avr/pgmspace.h **** 
1124:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1125:/usr/avr/include/avr/pgmspace.h ****     \fn const void +memrchr_P(const void *src, int val, size_t len)
1126:/usr/avr/include/avr/pgmspace.h **** 
1127:/usr/avr/include/avr/pgmspace.h ****     The memrchr_P() function is like the memchr_P() function, except
1128:/usr/avr/include/avr/pgmspace.h ****     that it searches backwards from the end of the \p len bytes pointed
1129:/usr/avr/include/avr/pgmspace.h ****     to by \p src instead of forwards from the front. (Glibc, GNU extension.)
1130:/usr/avr/include/avr/pgmspace.h **** 
1131:/usr/avr/include/avr/pgmspace.h ****     \return The memrchr_P() function returns a pointer to the matching
1132:/usr/avr/include/avr/pgmspace.h ****     byte or \c NULL if the character does not occur in the given memory
1133:/usr/avr/include/avr/pgmspace.h ****     area.	*/
1134:/usr/avr/include/avr/pgmspace.h **** extern const void * memrchr_P(const void *, int __val, size_t __len) __ATTR_CONST__;
1135:/usr/avr/include/avr/pgmspace.h **** 
1136:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1137:/usr/avr/include/avr/pgmspace.h ****     \fn char *strcat_P(char *dest, const char *src)
1138:/usr/avr/include/avr/pgmspace.h **** 
1139:/usr/avr/include/avr/pgmspace.h ****     The strcat_P() function is similar to strcat() except that the \e src
1140:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash).
1141:/usr/avr/include/avr/pgmspace.h **** 
1142:/usr/avr/include/avr/pgmspace.h ****     \returns The strcat() function returns a pointer to the resulting string
1143:/usr/avr/include/avr/pgmspace.h ****     \e dest. */
1144:/usr/avr/include/avr/pgmspace.h **** extern char *strcat_P(char *, const char *);
1145:/usr/avr/include/avr/pgmspace.h **** 
1146:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1147:/usr/avr/include/avr/pgmspace.h ****     \fn const char *strchr_P(const char *s, int val)
1148:/usr/avr/include/avr/pgmspace.h ****     \brief Locate character in program space string.
1149:/usr/avr/include/avr/pgmspace.h **** 
1150:/usr/avr/include/avr/pgmspace.h ****     The strchr_P() function locates the first occurrence of \p val
1151:/usr/avr/include/avr/pgmspace.h ****     (converted to a char) in the string pointed to by \p s in program
1152:/usr/avr/include/avr/pgmspace.h ****     space. The terminating null character is considered to be part of
1153:/usr/avr/include/avr/pgmspace.h ****     the string.
1154:/usr/avr/include/avr/pgmspace.h **** 
1155:/usr/avr/include/avr/pgmspace.h ****     The strchr_P() function is similar to strchr() except that \p s is
1156:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1157:/usr/avr/include/avr/pgmspace.h **** 
1158:/usr/avr/include/avr/pgmspace.h ****     \returns The strchr_P() function returns a pointer to the matched
1159:/usr/avr/include/avr/pgmspace.h ****     character or \c NULL if the character is not found. */
1160:/usr/avr/include/avr/pgmspace.h **** extern const char * strchr_P(const char *, int __val) __ATTR_CONST__;
1161:/usr/avr/include/avr/pgmspace.h **** 
1162:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1163:/usr/avr/include/avr/pgmspace.h ****     \fn const char *strchrnul_P(const char *s, int c)
1164:/usr/avr/include/avr/pgmspace.h **** 
1165:/usr/avr/include/avr/pgmspace.h ****     The strchrnul_P() function is like strchr_P() except that if \p c is
1166:/usr/avr/include/avr/pgmspace.h ****     not found in \p s, then it returns a pointer to the null byte at the
1167:/usr/avr/include/avr/pgmspace.h ****     end of \p s, rather than \c NULL. (Glibc, GNU extension.)
1168:/usr/avr/include/avr/pgmspace.h **** 
1169:/usr/avr/include/avr/pgmspace.h ****     \return The strchrnul_P() function returns a pointer to the matched
1170:/usr/avr/include/avr/pgmspace.h ****     character, or a pointer to the null byte at the end of \p s (i.e.,
1171:/usr/avr/include/avr/pgmspace.h ****     \c s+strlen(s)) if the character is not found.	*/
1172:/usr/avr/include/avr/pgmspace.h **** extern const char * strchrnul_P(const char *, int __val) __ATTR_CONST__;
1173:/usr/avr/include/avr/pgmspace.h **** 
1174:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1175:/usr/avr/include/avr/pgmspace.h ****     \fn int strcmp_P(const char *s1, const char *s2)
1176:/usr/avr/include/avr/pgmspace.h **** 
1177:/usr/avr/include/avr/pgmspace.h ****     The strcmp_P() function is similar to strcmp() except that \p s2 is
1178:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1179:/usr/avr/include/avr/pgmspace.h **** 
1180:/usr/avr/include/avr/pgmspace.h ****     \returns The strcmp_P() function returns an integer less than, equal
1181:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if \p s1 is found, respectively, to be less
1182:/usr/avr/include/avr/pgmspace.h ****     than, to match, or be greater than \p s2. A consequence of the
1183:/usr/avr/include/avr/pgmspace.h ****     ordering used by strcmp_P() is that if \p s1 is an initial substring
1184:/usr/avr/include/avr/pgmspace.h ****     of \p s2, then \p s1 is considered to be "less than" \p s2. */
1185:/usr/avr/include/avr/pgmspace.h **** extern int strcmp_P(const char *, const char *) __ATTR_PURE__;
1186:/usr/avr/include/avr/pgmspace.h **** 
1187:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1188:/usr/avr/include/avr/pgmspace.h ****     \fn char *strcpy_P(char *dest, const char *src)
1189:/usr/avr/include/avr/pgmspace.h **** 
1190:/usr/avr/include/avr/pgmspace.h ****     The strcpy_P() function is similar to strcpy() except that src is a
1191:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1192:/usr/avr/include/avr/pgmspace.h **** 
1193:/usr/avr/include/avr/pgmspace.h ****     \returns The strcpy_P() function returns a pointer to the destination
1194:/usr/avr/include/avr/pgmspace.h ****     string dest. */
1195:/usr/avr/include/avr/pgmspace.h **** extern char *strcpy_P(char *, const char *);
1196:/usr/avr/include/avr/pgmspace.h **** 
1197:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1198:/usr/avr/include/avr/pgmspace.h ****     \fn int strcasecmp_P(const char *s1, const char *s2)
1199:/usr/avr/include/avr/pgmspace.h ****     \brief Compare two strings ignoring case.
1200:/usr/avr/include/avr/pgmspace.h **** 
1201:/usr/avr/include/avr/pgmspace.h ****     The strcasecmp_P() function compares the two strings \p s1 and \p s2,
1202:/usr/avr/include/avr/pgmspace.h ****     ignoring the case of the characters.
1203:/usr/avr/include/avr/pgmspace.h **** 
1204:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to a string in the devices SRAM.
1205:/usr/avr/include/avr/pgmspace.h ****     \param s2 A pointer to a string in the devices Flash.
1206:/usr/avr/include/avr/pgmspace.h **** 
1207:/usr/avr/include/avr/pgmspace.h ****     \returns The strcasecmp_P() function returns an integer less than,
1208:/usr/avr/include/avr/pgmspace.h ****     equal to, or greater than zero if \p s1 is found, respectively, to
1209:/usr/avr/include/avr/pgmspace.h ****     be less than, to match, or be greater than \p s2. A consequence of
1210:/usr/avr/include/avr/pgmspace.h ****     the ordering used by strcasecmp_P() is that if \p s1 is an initial
1211:/usr/avr/include/avr/pgmspace.h ****     substring of \p s2, then \p s1 is considered to be "less than" \p s2. */
1212:/usr/avr/include/avr/pgmspace.h **** extern int strcasecmp_P(const char *, const char *) __ATTR_PURE__;
1213:/usr/avr/include/avr/pgmspace.h **** 
1214:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1215:/usr/avr/include/avr/pgmspace.h ****     \fn char *strcasestr_P(const char *s1, const char *s2)
1216:/usr/avr/include/avr/pgmspace.h **** 
1217:/usr/avr/include/avr/pgmspace.h ****     This funtion is similar to strcasestr() except that \p s2 is pointer
1218:/usr/avr/include/avr/pgmspace.h ****     to a string in program space.	*/
1219:/usr/avr/include/avr/pgmspace.h **** extern char *strcasestr_P(const char *, const char *) __ATTR_PURE__;
1220:/usr/avr/include/avr/pgmspace.h **** 
1221:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1222:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strcspn_P(const char *s, const char *reject)
1223:/usr/avr/include/avr/pgmspace.h **** 
1224:/usr/avr/include/avr/pgmspace.h ****     The strcspn_P() function calculates the length of the initial segment
1225:/usr/avr/include/avr/pgmspace.h ****     of \p s which consists entirely of characters not in \p reject. This
1226:/usr/avr/include/avr/pgmspace.h ****     function is similar to strcspn() except that \p reject is a pointer
1227:/usr/avr/include/avr/pgmspace.h ****     to a string in program space.
1228:/usr/avr/include/avr/pgmspace.h **** 
1229:/usr/avr/include/avr/pgmspace.h ****     \return The strcspn_P() function returns the number of characters in
1230:/usr/avr/include/avr/pgmspace.h ****     the initial segment of \p s which are not in the string \p reject.
1231:/usr/avr/include/avr/pgmspace.h ****     The terminating zero is not considered as a part of string.	*/
1232:/usr/avr/include/avr/pgmspace.h **** extern size_t strcspn_P(const char *__s, const char * __reject) __ATTR_PURE__;
1233:/usr/avr/include/avr/pgmspace.h **** 
1234:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1235:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlcat_P(char *dst, const char *src, size_t siz)
1236:/usr/avr/include/avr/pgmspace.h ****     \brief Concatenate two strings.
1237:/usr/avr/include/avr/pgmspace.h **** 
1238:/usr/avr/include/avr/pgmspace.h ****     The strlcat_P() function is similar to strlcat(), except that the \p src
1239:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash).
1240:/usr/avr/include/avr/pgmspace.h **** 
1241:/usr/avr/include/avr/pgmspace.h ****     Appends \p src to string \p dst of size \p siz (unlike strncat(),
1242:/usr/avr/include/avr/pgmspace.h ****     \p siz is the full size of \p dst, not space left).  At most \p siz-1
1243:/usr/avr/include/avr/pgmspace.h ****     characters will be copied.  Always NULL terminates (unless \p siz <=
1244:/usr/avr/include/avr/pgmspace.h ****     \p strlen(dst)).
1245:/usr/avr/include/avr/pgmspace.h **** 
1246:/usr/avr/include/avr/pgmspace.h ****     \returns The strlcat_P() function returns strlen(src) + MIN(siz,
1247:/usr/avr/include/avr/pgmspace.h ****     strlen(initial dst)).  If retval >= siz, truncation occurred.	*/
1248:/usr/avr/include/avr/pgmspace.h **** extern size_t strlcat_P (char *, const char *, size_t );
1249:/usr/avr/include/avr/pgmspace.h **** 
1250:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1251:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlcpy_P(char *dst, const char *src, size_t siz)
1252:/usr/avr/include/avr/pgmspace.h ****     \brief Copy a string from progmem to RAM.
1253:/usr/avr/include/avr/pgmspace.h **** 
1254:/usr/avr/include/avr/pgmspace.h ****     Copy \p src to string \p dst of size \p siz.  At most \p siz-1
1255:/usr/avr/include/avr/pgmspace.h ****     characters will be copied.  Always NULL terminates (unless \p siz == 0).
1256:/usr/avr/include/avr/pgmspace.h ****     The strlcpy_P() function is similar to strlcpy() except that the
1257:/usr/avr/include/avr/pgmspace.h ****     \p src is pointer to a string in memory space.
1258:/usr/avr/include/avr/pgmspace.h **** 
1259:/usr/avr/include/avr/pgmspace.h ****     \returns The strlcpy_P() function returns strlen(src). If
1260:/usr/avr/include/avr/pgmspace.h ****     retval >= siz, truncation occurred.  */
1261:/usr/avr/include/avr/pgmspace.h **** extern size_t strlcpy_P (char *, const char *, size_t );
1262:/usr/avr/include/avr/pgmspace.h **** 
1263:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1264:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strnlen_P(const char *src, size_t len)
1265:/usr/avr/include/avr/pgmspace.h ****     \brief Determine the length of a fixed-size string.
1266:/usr/avr/include/avr/pgmspace.h **** 
1267:/usr/avr/include/avr/pgmspace.h ****     The strnlen_P() function is similar to strnlen(), except that \c src is a
1268:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1269:/usr/avr/include/avr/pgmspace.h **** 
1270:/usr/avr/include/avr/pgmspace.h ****     \returns The strnlen_P function returns strlen_P(src), if that is less than
1271:/usr/avr/include/avr/pgmspace.h ****     \c len, or \c len if there is no '\\0' character among the first \c len
1272:/usr/avr/include/avr/pgmspace.h ****     characters pointed to by \c src. */
1273:/usr/avr/include/avr/pgmspace.h **** extern size_t strnlen_P(const char *, size_t) __ATTR_CONST__; /* program memory can't change */
1274:/usr/avr/include/avr/pgmspace.h **** 
1275:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1276:/usr/avr/include/avr/pgmspace.h ****     \fn int strncmp_P(const char *s1, const char *s2, size_t n)
1277:/usr/avr/include/avr/pgmspace.h **** 
1278:/usr/avr/include/avr/pgmspace.h ****     The strncmp_P() function is similar to strcmp_P() except it only compares
1279:/usr/avr/include/avr/pgmspace.h ****     the first (at most) n characters of s1 and s2.
1280:/usr/avr/include/avr/pgmspace.h **** 
1281:/usr/avr/include/avr/pgmspace.h ****     \returns The strncmp_P() function returns an integer less than, equal to,
1282:/usr/avr/include/avr/pgmspace.h ****     or greater than zero if s1 (or the first n bytes thereof) is found,
1283:/usr/avr/include/avr/pgmspace.h ****     respectively, to be less than, to match, or be greater than s2.  */
1284:/usr/avr/include/avr/pgmspace.h **** extern int strncmp_P(const char *, const char *, size_t) __ATTR_PURE__;
1285:/usr/avr/include/avr/pgmspace.h **** 
1286:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1287:/usr/avr/include/avr/pgmspace.h ****     \fn int strncasecmp_P(const char *s1, const char *s2, size_t n)
1288:/usr/avr/include/avr/pgmspace.h ****     \brief Compare two strings ignoring case.
1289:/usr/avr/include/avr/pgmspace.h **** 
1290:/usr/avr/include/avr/pgmspace.h ****     The strncasecmp_P() function is similar to strcasecmp_P(), except it
1291:/usr/avr/include/avr/pgmspace.h ****     only compares the first \p n characters of \p s1.
1292:/usr/avr/include/avr/pgmspace.h **** 
1293:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to a string in the devices SRAM.
1294:/usr/avr/include/avr/pgmspace.h ****     \param s2 A pointer to a string in the devices Flash.
1295:/usr/avr/include/avr/pgmspace.h ****     \param n The maximum number of bytes to compare.
1296:/usr/avr/include/avr/pgmspace.h **** 
1297:/usr/avr/include/avr/pgmspace.h ****     \returns The strncasecmp_P() function returns an integer less than,
1298:/usr/avr/include/avr/pgmspace.h ****     equal to, or greater than zero if \p s1 (or the first \p n bytes
1299:/usr/avr/include/avr/pgmspace.h ****     thereof) is found, respectively, to be less than, to match, or be
1300:/usr/avr/include/avr/pgmspace.h ****     greater than \p s2. A consequence of the ordering used by
1301:/usr/avr/include/avr/pgmspace.h ****     strncasecmp_P() is that if \p s1 is an initial substring of \p s2,
1302:/usr/avr/include/avr/pgmspace.h ****     then \p s1 is considered to be "less than" \p s2.  */
1303:/usr/avr/include/avr/pgmspace.h **** extern int strncasecmp_P(const char *, const char *, size_t) __ATTR_PURE__;
1304:/usr/avr/include/avr/pgmspace.h **** 
1305:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1306:/usr/avr/include/avr/pgmspace.h ****     \fn char *strncat_P(char *dest, const char *src, size_t len)
1307:/usr/avr/include/avr/pgmspace.h ****     \brief Concatenate two strings.
1308:/usr/avr/include/avr/pgmspace.h **** 
1309:/usr/avr/include/avr/pgmspace.h ****     The strncat_P() function is similar to strncat(), except that the \e src
1310:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash).
1311:/usr/avr/include/avr/pgmspace.h **** 
1312:/usr/avr/include/avr/pgmspace.h ****     \returns The strncat_P() function returns a pointer to the resulting string
1313:/usr/avr/include/avr/pgmspace.h ****     dest.  */
1314:/usr/avr/include/avr/pgmspace.h **** extern char *strncat_P(char *, const char *, size_t);
1315:/usr/avr/include/avr/pgmspace.h **** 
1316:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1317:/usr/avr/include/avr/pgmspace.h ****     \fn char *strncpy_P(char *dest, const char *src, size_t n)
1318:/usr/avr/include/avr/pgmspace.h **** 
1319:/usr/avr/include/avr/pgmspace.h ****     The strncpy_P() function is similar to strcpy_P() except that not more
1320:/usr/avr/include/avr/pgmspace.h ****     than n bytes of src are copied.  Thus, if there is no null byte among the
1321:/usr/avr/include/avr/pgmspace.h ****     first n bytes of src, the result will not be null-terminated.
1322:/usr/avr/include/avr/pgmspace.h **** 
1323:/usr/avr/include/avr/pgmspace.h ****     In the case where the length of src is less than that of n, the remainder
1324:/usr/avr/include/avr/pgmspace.h ****     of dest will be padded with nulls.
1325:/usr/avr/include/avr/pgmspace.h **** 
1326:/usr/avr/include/avr/pgmspace.h ****     \returns The strncpy_P() function returns a pointer to the destination
1327:/usr/avr/include/avr/pgmspace.h ****     string dest.  */
1328:/usr/avr/include/avr/pgmspace.h **** extern char *strncpy_P(char *, const char *, size_t);
1329:/usr/avr/include/avr/pgmspace.h **** 
1330:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1331:/usr/avr/include/avr/pgmspace.h ****     \fn char *strpbrk_P(const char *s, const char *accept)
1332:/usr/avr/include/avr/pgmspace.h **** 
1333:/usr/avr/include/avr/pgmspace.h ****     The strpbrk_P() function locates the first occurrence in the string
1334:/usr/avr/include/avr/pgmspace.h ****     \p s of any of the characters in the flash string \p accept. This
1335:/usr/avr/include/avr/pgmspace.h ****     function is similar to strpbrk() except that \p accept is a pointer
1336:/usr/avr/include/avr/pgmspace.h ****     to a string in program space.
1337:/usr/avr/include/avr/pgmspace.h **** 
1338:/usr/avr/include/avr/pgmspace.h ****     \return  The strpbrk_P() function returns a pointer to the character
1339:/usr/avr/include/avr/pgmspace.h ****     in \p s that matches one of the characters in \p accept, or \c NULL
1340:/usr/avr/include/avr/pgmspace.h ****     if no such character is found. The terminating zero is not considered
1341:/usr/avr/include/avr/pgmspace.h ****     as a part of string: if one or both args are empty, the result will
1342:/usr/avr/include/avr/pgmspace.h ****     \c NULL. */
1343:/usr/avr/include/avr/pgmspace.h **** extern char *strpbrk_P(const char *__s, const char * __accept) __ATTR_PURE__;
1344:/usr/avr/include/avr/pgmspace.h **** 
1345:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1346:/usr/avr/include/avr/pgmspace.h ****     \fn const char *strrchr_P(const char *s, int val)
1347:/usr/avr/include/avr/pgmspace.h ****     \brief Locate character in string.
1348:/usr/avr/include/avr/pgmspace.h **** 
1349:/usr/avr/include/avr/pgmspace.h ****     The strrchr_P() function returns a pointer to the last occurrence of
1350:/usr/avr/include/avr/pgmspace.h ****     the character \p val in the flash string \p s.
1351:/usr/avr/include/avr/pgmspace.h **** 
1352:/usr/avr/include/avr/pgmspace.h ****     \return The strrchr_P() function returns a pointer to the matched
1353:/usr/avr/include/avr/pgmspace.h ****     character or \c NULL if the character is not found. */
1354:/usr/avr/include/avr/pgmspace.h **** extern const char * strrchr_P(const char *, int __val) __ATTR_CONST__;
1355:/usr/avr/include/avr/pgmspace.h **** 
1356:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1357:/usr/avr/include/avr/pgmspace.h ****     \fn char *strsep_P(char **sp, const char *delim)
1358:/usr/avr/include/avr/pgmspace.h ****     \brief Parse a string into tokens.
1359:/usr/avr/include/avr/pgmspace.h **** 
1360:/usr/avr/include/avr/pgmspace.h ****     The strsep_P() function locates, in the string referenced by \p *sp,
1361:/usr/avr/include/avr/pgmspace.h ****     the first occurrence of any character in the string \p delim (or the
1362:/usr/avr/include/avr/pgmspace.h ****     terminating '\\0' character) and replaces it with a '\\0'.  The
1363:/usr/avr/include/avr/pgmspace.h ****     location of the next character after the delimiter character (or \c
1364:/usr/avr/include/avr/pgmspace.h ****     NULL, if the end of the string was reached) is stored in \p *sp. An
1365:/usr/avr/include/avr/pgmspace.h ****     ``empty'' field, i.e. one caused by two adjacent delimiter
1366:/usr/avr/include/avr/pgmspace.h ****     characters, can be detected by comparing the location referenced by
1367:/usr/avr/include/avr/pgmspace.h ****     the pointer returned in \p *sp to '\\0'. This function is similar to
1368:/usr/avr/include/avr/pgmspace.h ****     strsep() except that \p delim is a pointer to a string in program
1369:/usr/avr/include/avr/pgmspace.h ****     space.
1370:/usr/avr/include/avr/pgmspace.h **** 
1371:/usr/avr/include/avr/pgmspace.h ****     \return The strsep_P() function returns a pointer to the original
1372:/usr/avr/include/avr/pgmspace.h ****     value of \p *sp. If \p *sp is initially \c NULL, strsep_P() returns
1373:/usr/avr/include/avr/pgmspace.h ****     \c NULL. */
1374:/usr/avr/include/avr/pgmspace.h **** extern char *strsep_P(char **__sp, const char * __delim);
1375:/usr/avr/include/avr/pgmspace.h **** 
1376:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1377:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strspn_P(const char *s, const char *accept)
1378:/usr/avr/include/avr/pgmspace.h **** 
1379:/usr/avr/include/avr/pgmspace.h ****     The strspn_P() function calculates the length of the initial segment
1380:/usr/avr/include/avr/pgmspace.h ****     of \p s which consists entirely of characters in \p accept. This
1381:/usr/avr/include/avr/pgmspace.h ****     function is similar to strspn() except that \p accept is a pointer
1382:/usr/avr/include/avr/pgmspace.h ****     to a string in program space.
1383:/usr/avr/include/avr/pgmspace.h **** 
1384:/usr/avr/include/avr/pgmspace.h ****     \return  The strspn_P() function returns the number of characters in
1385:/usr/avr/include/avr/pgmspace.h ****     the initial segment of \p s which consist only of characters from \p
1386:/usr/avr/include/avr/pgmspace.h ****     accept. The terminating zero is not considered as a part of string.	*/
1387:/usr/avr/include/avr/pgmspace.h **** extern size_t strspn_P(const char *__s, const char * __accept) __ATTR_PURE__;
1388:/usr/avr/include/avr/pgmspace.h **** 
1389:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1390:/usr/avr/include/avr/pgmspace.h ****     \fn char *strstr_P(const char *s1, const char *s2)
1391:/usr/avr/include/avr/pgmspace.h ****     \brief Locate a substring.
1392:/usr/avr/include/avr/pgmspace.h **** 
1393:/usr/avr/include/avr/pgmspace.h ****     The strstr_P() function finds the first occurrence of the substring
1394:/usr/avr/include/avr/pgmspace.h ****     \p s2 in the string \p s1.  The terminating '\\0' characters are not
1395:/usr/avr/include/avr/pgmspace.h ****     compared. The strstr_P() function is similar to strstr() except that
1396:/usr/avr/include/avr/pgmspace.h ****     \p s2 is pointer to a string in program space.
1397:/usr/avr/include/avr/pgmspace.h **** 
1398:/usr/avr/include/avr/pgmspace.h ****     \returns The strstr_P() function returns a pointer to the beginning
1399:/usr/avr/include/avr/pgmspace.h ****     of the substring, or NULL if the substring is not found. If \p s2
1400:/usr/avr/include/avr/pgmspace.h ****     points to a string of zero length, the function returns \p s1. */
1401:/usr/avr/include/avr/pgmspace.h **** extern char *strstr_P(const char *, const char *) __ATTR_PURE__;
1402:/usr/avr/include/avr/pgmspace.h **** 
1403:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1404:/usr/avr/include/avr/pgmspace.h ****     \fn char *strtok_P(char *s, const char * delim)
1405:/usr/avr/include/avr/pgmspace.h ****     \brief Parses the string into tokens.
1406:/usr/avr/include/avr/pgmspace.h **** 
1407:/usr/avr/include/avr/pgmspace.h ****     strtok_P() parses the string \p s into tokens. The first call to
1408:/usr/avr/include/avr/pgmspace.h ****     strtok_P() should have \p s as its first argument. Subsequent calls
1409:/usr/avr/include/avr/pgmspace.h ****     should have the first argument set to NULL. If a token ends with a
1410:/usr/avr/include/avr/pgmspace.h ****     delimiter, this delimiting character is overwritten with a '\\0' and a
1411:/usr/avr/include/avr/pgmspace.h ****     pointer to the next character is saved for the next call to strtok_P().
1412:/usr/avr/include/avr/pgmspace.h ****     The delimiter string \p delim may be different for each call.
1413:/usr/avr/include/avr/pgmspace.h **** 
1414:/usr/avr/include/avr/pgmspace.h ****     The strtok_P() function is similar to strtok() except that \p delim
1415:/usr/avr/include/avr/pgmspace.h ****     is pointer to a string in program space.
1416:/usr/avr/include/avr/pgmspace.h **** 
1417:/usr/avr/include/avr/pgmspace.h ****     \returns The strtok_P() function returns a pointer to the next token or
1418:/usr/avr/include/avr/pgmspace.h ****     NULL when no more tokens are found.
1419:/usr/avr/include/avr/pgmspace.h **** 
1420:/usr/avr/include/avr/pgmspace.h ****     \note strtok_P() is NOT reentrant. For a reentrant version of this
1421:/usr/avr/include/avr/pgmspace.h ****     function see strtok_rP().
1422:/usr/avr/include/avr/pgmspace.h ****  */
1423:/usr/avr/include/avr/pgmspace.h **** extern char *strtok_P(char *__s, const char * __delim);
1424:/usr/avr/include/avr/pgmspace.h **** 
1425:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1426:/usr/avr/include/avr/pgmspace.h ****     \fn char *strtok_rP (char *string, const char *delim, char **last)
1427:/usr/avr/include/avr/pgmspace.h ****     \brief Parses string into tokens.
1428:/usr/avr/include/avr/pgmspace.h **** 
1429:/usr/avr/include/avr/pgmspace.h ****     The strtok_rP() function parses \p string into tokens. The first call to
1430:/usr/avr/include/avr/pgmspace.h ****     strtok_rP() should have string as its first argument. Subsequent calls
1431:/usr/avr/include/avr/pgmspace.h ****     should have the first argument set to NULL. If a token ends with a
1432:/usr/avr/include/avr/pgmspace.h ****     delimiter, this delimiting character is overwritten with a '\\0' and a
1433:/usr/avr/include/avr/pgmspace.h ****     pointer to the next character is saved for the next call to strtok_rP().
1434:/usr/avr/include/avr/pgmspace.h ****     The delimiter string \p delim may be different for each call. \p last is
1435:/usr/avr/include/avr/pgmspace.h ****     a user allocated char* pointer. It must be the same while parsing the
1436:/usr/avr/include/avr/pgmspace.h ****     same string. strtok_rP() is a reentrant version of strtok_P().
1437:/usr/avr/include/avr/pgmspace.h **** 
1438:/usr/avr/include/avr/pgmspace.h ****     The strtok_rP() function is similar to strtok_r() except that \p delim
1439:/usr/avr/include/avr/pgmspace.h ****     is pointer to a string in program space.
1440:/usr/avr/include/avr/pgmspace.h **** 
1441:/usr/avr/include/avr/pgmspace.h ****     \returns The strtok_rP() function returns a pointer to the next token or
1442:/usr/avr/include/avr/pgmspace.h ****     NULL when no more tokens are found. */
1443:/usr/avr/include/avr/pgmspace.h **** extern char *strtok_rP(char *__s, const char * __delim, char **__last);
1444:/usr/avr/include/avr/pgmspace.h **** 
1445:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1446:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlen_PF(uint_farptr_t s)
1447:/usr/avr/include/avr/pgmspace.h ****     \brief Obtain the length of a string
1448:/usr/avr/include/avr/pgmspace.h **** 
1449:/usr/avr/include/avr/pgmspace.h ****     The strlen_PF() function is similar to strlen(), except that \e s is a
1450:/usr/avr/include/avr/pgmspace.h ****     far pointer to a string in program space.
1451:/usr/avr/include/avr/pgmspace.h **** 
1452:/usr/avr/include/avr/pgmspace.h ****     \param s A far pointer to the string in flash
1453:/usr/avr/include/avr/pgmspace.h **** 
1454:/usr/avr/include/avr/pgmspace.h ****     \returns The strlen_PF() function returns the number of characters in
1455:/usr/avr/include/avr/pgmspace.h ****     \e s. The contents of RAMPZ SFR are undefined when the function returns. */
1456:/usr/avr/include/avr/pgmspace.h **** extern size_t strlen_PF(uint_farptr_t src) __ATTR_CONST__; /* program memory can't change */
1457:/usr/avr/include/avr/pgmspace.h **** 
1458:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1459:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strnlen_PF(uint_farptr_t s, size_t len)
1460:/usr/avr/include/avr/pgmspace.h ****     \brief Determine the length of a fixed-size string
1461:/usr/avr/include/avr/pgmspace.h **** 
1462:/usr/avr/include/avr/pgmspace.h ****     The strnlen_PF() function is similar to strnlen(), except that \e s is a
1463:/usr/avr/include/avr/pgmspace.h ****     far pointer to a string in program space.
1464:/usr/avr/include/avr/pgmspace.h **** 
1465:/usr/avr/include/avr/pgmspace.h ****     \param s A far pointer to the string in Flash
1466:/usr/avr/include/avr/pgmspace.h ****     \param len The maximum number of length to return
1467:/usr/avr/include/avr/pgmspace.h **** 
1468:/usr/avr/include/avr/pgmspace.h ****     \returns The strnlen_PF function returns strlen_P(\e s), if that is less
1469:/usr/avr/include/avr/pgmspace.h ****     than \e len, or \e len if there is no '\\0' character among the first \e
1470:/usr/avr/include/avr/pgmspace.h ****     len characters pointed to by \e s. The contents of RAMPZ SFR are
1471:/usr/avr/include/avr/pgmspace.h ****     undefined when the function returns. */
1472:/usr/avr/include/avr/pgmspace.h **** extern size_t strnlen_PF(uint_farptr_t src, size_t len) __ATTR_CONST__; /* program memory can't cha
1473:/usr/avr/include/avr/pgmspace.h **** 
1474:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1475:/usr/avr/include/avr/pgmspace.h ****     \fn void *memcpy_PF(void *dest, uint_farptr_t src, size_t n)
1476:/usr/avr/include/avr/pgmspace.h ****     \brief Copy a memory block from flash to SRAM
1477:/usr/avr/include/avr/pgmspace.h **** 
1478:/usr/avr/include/avr/pgmspace.h ****     The memcpy_PF() function is similar to memcpy(), except the data
1479:/usr/avr/include/avr/pgmspace.h ****     is copied from the program space and is addressed using a far pointer.
1480:/usr/avr/include/avr/pgmspace.h **** 
1481:/usr/avr/include/avr/pgmspace.h ****     \param dest A pointer to the destination buffer
1482:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the origin of data in flash memory
1483:/usr/avr/include/avr/pgmspace.h ****     \param n The number of bytes to be copied
1484:/usr/avr/include/avr/pgmspace.h **** 
1485:/usr/avr/include/avr/pgmspace.h ****     \returns The memcpy_PF() function returns a pointer to \e dst. The contents
1486:/usr/avr/include/avr/pgmspace.h ****     of RAMPZ SFR are undefined when the function returns. */
1487:/usr/avr/include/avr/pgmspace.h **** extern void *memcpy_PF(void *dest, uint_farptr_t src, size_t len);
1488:/usr/avr/include/avr/pgmspace.h **** 
1489:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1490:/usr/avr/include/avr/pgmspace.h ****     \fn char *strcpy_PF(char *dst, uint_farptr_t src)
1491:/usr/avr/include/avr/pgmspace.h ****     \brief Duplicate a string
1492:/usr/avr/include/avr/pgmspace.h **** 
1493:/usr/avr/include/avr/pgmspace.h ****     The strcpy_PF() function is similar to strcpy() except that \e src is a far
1494:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1495:/usr/avr/include/avr/pgmspace.h **** 
1496:/usr/avr/include/avr/pgmspace.h ****     \param dst A pointer to the destination string in SRAM
1497:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the source string in Flash
1498:/usr/avr/include/avr/pgmspace.h **** 
1499:/usr/avr/include/avr/pgmspace.h ****     \returns The strcpy_PF() function returns a pointer to the destination
1500:/usr/avr/include/avr/pgmspace.h ****     string \e dst. The contents of RAMPZ SFR are undefined when the funcion
1501:/usr/avr/include/avr/pgmspace.h ****     returns. */
1502:/usr/avr/include/avr/pgmspace.h **** extern char *strcpy_PF(char *dest, uint_farptr_t src);
1503:/usr/avr/include/avr/pgmspace.h **** 
1504:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1505:/usr/avr/include/avr/pgmspace.h ****     \fn char *strncpy_PF(char *dst, uint_farptr_t src, size_t n)
1506:/usr/avr/include/avr/pgmspace.h ****     \brief Duplicate a string until a limited length
1507:/usr/avr/include/avr/pgmspace.h **** 
1508:/usr/avr/include/avr/pgmspace.h ****     The strncpy_PF() function is similar to strcpy_PF() except that not more
1509:/usr/avr/include/avr/pgmspace.h ****     than \e n bytes of \e src are copied.  Thus, if there is no null byte among
1510:/usr/avr/include/avr/pgmspace.h ****     the first \e n bytes of \e src, the result will not be null-terminated.
1511:/usr/avr/include/avr/pgmspace.h **** 
1512:/usr/avr/include/avr/pgmspace.h ****     In the case where the length of \e src is less than that of \e n, the
1513:/usr/avr/include/avr/pgmspace.h ****     remainder of \e dst will be padded with nulls.
1514:/usr/avr/include/avr/pgmspace.h **** 
1515:/usr/avr/include/avr/pgmspace.h ****     \param dst A pointer to the destination string in SRAM
1516:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the source string in Flash
1517:/usr/avr/include/avr/pgmspace.h ****     \param n The maximum number of bytes to copy
1518:/usr/avr/include/avr/pgmspace.h **** 
1519:/usr/avr/include/avr/pgmspace.h ****     \returns The strncpy_PF() function returns a pointer to the destination
1520:/usr/avr/include/avr/pgmspace.h ****     string \e dst. The contents of RAMPZ SFR are undefined when the function
1521:/usr/avr/include/avr/pgmspace.h ****     returns. */
1522:/usr/avr/include/avr/pgmspace.h **** extern char *strncpy_PF(char *dest, uint_farptr_t src, size_t len);
1523:/usr/avr/include/avr/pgmspace.h **** 
1524:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1525:/usr/avr/include/avr/pgmspace.h ****     \fn char *strcat_PF(char *dst, uint_farptr_t src)
1526:/usr/avr/include/avr/pgmspace.h ****     \brief Concatenates two strings
1527:/usr/avr/include/avr/pgmspace.h **** 
1528:/usr/avr/include/avr/pgmspace.h ****     The strcat_PF() function is similar to strcat() except that the \e src
1529:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash) and is addressed using
1530:/usr/avr/include/avr/pgmspace.h ****     a far pointer
1531:/usr/avr/include/avr/pgmspace.h **** 
1532:/usr/avr/include/avr/pgmspace.h ****     \param dst A pointer to the destination string in SRAM
1533:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the string to be appended in Flash
1534:/usr/avr/include/avr/pgmspace.h **** 
1535:/usr/avr/include/avr/pgmspace.h ****     \returns The strcat_PF() function returns a pointer to the resulting
1536:/usr/avr/include/avr/pgmspace.h ****     string \e dst. The contents of RAMPZ SFR are undefined when the function
1537:/usr/avr/include/avr/pgmspace.h ****     returns */
1538:/usr/avr/include/avr/pgmspace.h **** extern char *strcat_PF(char *dest, uint_farptr_t src);
1539:/usr/avr/include/avr/pgmspace.h **** 
1540:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1541:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlcat_PF(char *dst, uint_farptr_t src, size_t n)
1542:/usr/avr/include/avr/pgmspace.h ****     \brief Concatenate two strings
1543:/usr/avr/include/avr/pgmspace.h **** 
1544:/usr/avr/include/avr/pgmspace.h ****     The strlcat_PF() function is similar to strlcat(), except that the \e src
1545:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash) and is addressed using
1546:/usr/avr/include/avr/pgmspace.h ****     a far pointer.
1547:/usr/avr/include/avr/pgmspace.h **** 
1548:/usr/avr/include/avr/pgmspace.h ****     Appends src to string dst of size \e n (unlike strncat(), \e n is the
1549:/usr/avr/include/avr/pgmspace.h ****     full size of \e dst, not space left).  At most \e n-1 characters
1550:/usr/avr/include/avr/pgmspace.h ****     will be copied.  Always NULL terminates (unless \e n <= strlen(\e dst)).
1551:/usr/avr/include/avr/pgmspace.h **** 
1552:/usr/avr/include/avr/pgmspace.h ****     \param dst A pointer to the destination string in SRAM
1553:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the source string in Flash
1554:/usr/avr/include/avr/pgmspace.h ****     \param n The total number of bytes allocated to the destination string
1555:/usr/avr/include/avr/pgmspace.h **** 
1556:/usr/avr/include/avr/pgmspace.h ****     \returns The strlcat_PF() function returns strlen(\e src) + MIN(\e n,
1557:/usr/avr/include/avr/pgmspace.h ****     strlen(initial \e dst)).  If retval >= \e n, truncation occurred. The
1558:/usr/avr/include/avr/pgmspace.h ****     contents of RAMPZ SFR are undefined when the funcion returns. */
1559:/usr/avr/include/avr/pgmspace.h **** extern size_t strlcat_PF(char *dst, uint_farptr_t src, size_t siz);
1560:/usr/avr/include/avr/pgmspace.h **** 
1561:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1562:/usr/avr/include/avr/pgmspace.h ****     \fn char *strncat_PF(char *dst, uint_farptr_t src, size_t n)
1563:/usr/avr/include/avr/pgmspace.h ****     \brief Concatenate two strings
1564:/usr/avr/include/avr/pgmspace.h **** 
1565:/usr/avr/include/avr/pgmspace.h ****     The strncat_PF() function is similar to strncat(), except that the \e src
1566:/usr/avr/include/avr/pgmspace.h ****     string must be located in program space (flash) and is addressed using a
1567:/usr/avr/include/avr/pgmspace.h ****     far pointer.
1568:/usr/avr/include/avr/pgmspace.h **** 
1569:/usr/avr/include/avr/pgmspace.h ****     \param dst A pointer to the destination string in SRAM
1570:/usr/avr/include/avr/pgmspace.h ****     \param src A far pointer to the source string in Flash
1571:/usr/avr/include/avr/pgmspace.h ****     \param n The maximum number of bytes to append
1572:/usr/avr/include/avr/pgmspace.h **** 
1573:/usr/avr/include/avr/pgmspace.h ****     \returns The strncat_PF() function returns a pointer to the resulting
1574:/usr/avr/include/avr/pgmspace.h ****     string \e dst. The contents of RAMPZ SFR are undefined when the function
1575:/usr/avr/include/avr/pgmspace.h ****     returns. */
1576:/usr/avr/include/avr/pgmspace.h **** extern char *strncat_PF(char *dest, uint_farptr_t src, size_t len);
1577:/usr/avr/include/avr/pgmspace.h **** 
1578:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1579:/usr/avr/include/avr/pgmspace.h ****     \fn int strcmp_PF(const char *s1, uint_farptr_t s2)
1580:/usr/avr/include/avr/pgmspace.h ****     \brief Compares two strings
1581:/usr/avr/include/avr/pgmspace.h **** 
1582:/usr/avr/include/avr/pgmspace.h ****     The strcmp_PF() function is similar to strcmp() except that \e s2 is a far
1583:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1584:/usr/avr/include/avr/pgmspace.h **** 
1585:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to the first string in SRAM
1586:/usr/avr/include/avr/pgmspace.h ****     \param s2 A far pointer to the second string in Flash
1587:/usr/avr/include/avr/pgmspace.h **** 
1588:/usr/avr/include/avr/pgmspace.h ****     \returns The strcmp_PF() function returns an integer less than, equal to,
1589:/usr/avr/include/avr/pgmspace.h ****     or greater than zero if \e s1 is found, respectively, to be less than, to
1590:/usr/avr/include/avr/pgmspace.h ****     match, or be greater than \e s2. The contents of RAMPZ SFR are undefined
1591:/usr/avr/include/avr/pgmspace.h ****     when the function returns. */
1592:/usr/avr/include/avr/pgmspace.h **** extern int strcmp_PF(const char *s1, uint_farptr_t s2) __ATTR_PURE__;
1593:/usr/avr/include/avr/pgmspace.h **** 
1594:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1595:/usr/avr/include/avr/pgmspace.h ****     \fn int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)
1596:/usr/avr/include/avr/pgmspace.h ****     \brief Compare two strings with limited length
1597:/usr/avr/include/avr/pgmspace.h **** 
1598:/usr/avr/include/avr/pgmspace.h ****     The strncmp_PF() function is similar to strcmp_PF() except it only
1599:/usr/avr/include/avr/pgmspace.h ****     compares the first (at most) \e n characters of \e s1 and \e s2.
1600:/usr/avr/include/avr/pgmspace.h **** 
1601:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to the first string in SRAM
1602:/usr/avr/include/avr/pgmspace.h ****     \param s2 A far pointer to the second string in Flash
1603:/usr/avr/include/avr/pgmspace.h ****     \param n The maximum number of bytes to compare
1604:/usr/avr/include/avr/pgmspace.h **** 
1605:/usr/avr/include/avr/pgmspace.h ****     \returns The strncmp_PF() function returns an integer less than, equal
1606:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if \e s1 (or the first \e n bytes thereof) is found,
1607:/usr/avr/include/avr/pgmspace.h ****     respectively, to be less than, to match, or be greater than \e s2. The
1608:/usr/avr/include/avr/pgmspace.h ****     contents of RAMPZ SFR are undefined when the function returns. */
1609:/usr/avr/include/avr/pgmspace.h **** extern int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n) __ATTR_PURE__;
1610:/usr/avr/include/avr/pgmspace.h **** 
1611:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1612:/usr/avr/include/avr/pgmspace.h ****     \fn int strcasecmp_PF(const char *s1, uint_farptr_t s2)
1613:/usr/avr/include/avr/pgmspace.h ****     \brief Compare two strings ignoring case
1614:/usr/avr/include/avr/pgmspace.h **** 
1615:/usr/avr/include/avr/pgmspace.h ****     The strcasecmp_PF() function compares the two strings \e s1 and \e s2, ignoring
1616:/usr/avr/include/avr/pgmspace.h ****     the case of the characters.
1617:/usr/avr/include/avr/pgmspace.h **** 
1618:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to the first string in SRAM
1619:/usr/avr/include/avr/pgmspace.h ****     \param s2 A far pointer to the second string in Flash
1620:/usr/avr/include/avr/pgmspace.h **** 
1621:/usr/avr/include/avr/pgmspace.h ****     \returns The strcasecmp_PF() function returns an integer less than, equal
1622:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if \e s1 is found, respectively, to be less than, to
1623:/usr/avr/include/avr/pgmspace.h ****     match, or be greater than \e s2. The contents of RAMPZ SFR are undefined
1624:/usr/avr/include/avr/pgmspace.h ****     when the function returns. */
1625:/usr/avr/include/avr/pgmspace.h **** extern int strcasecmp_PF(const char *s1, uint_farptr_t s2) __ATTR_PURE__;
1626:/usr/avr/include/avr/pgmspace.h **** 
1627:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1628:/usr/avr/include/avr/pgmspace.h ****     \fn int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)
1629:/usr/avr/include/avr/pgmspace.h ****     \brief Compare two strings ignoring case
1630:/usr/avr/include/avr/pgmspace.h **** 
1631:/usr/avr/include/avr/pgmspace.h ****     The strncasecmp_PF() function is similar to strcasecmp_PF(), except it
1632:/usr/avr/include/avr/pgmspace.h ****     only compares the first \e n characters of \e s1 and the string in flash is
1633:/usr/avr/include/avr/pgmspace.h ****     addressed using a far pointer.
1634:/usr/avr/include/avr/pgmspace.h **** 
1635:/usr/avr/include/avr/pgmspace.h ****     \param s1 A pointer to a string in SRAM
1636:/usr/avr/include/avr/pgmspace.h ****     \param s2 A far pointer to a string in Flash
1637:/usr/avr/include/avr/pgmspace.h ****     \param n The maximum number of bytes to compare
1638:/usr/avr/include/avr/pgmspace.h **** 
1639:/usr/avr/include/avr/pgmspace.h ****     \returns The strncasecmp_PF() function returns an integer less than, equal
1640:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if \e s1 (or the first \e n bytes thereof) is found,
1641:/usr/avr/include/avr/pgmspace.h ****     respectively, to be less than, to match, or be greater than \e s2. The
1642:/usr/avr/include/avr/pgmspace.h ****     contents of RAMPZ SFR are undefined when the function returns.  */
1643:/usr/avr/include/avr/pgmspace.h **** extern int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n) __ATTR_PURE__;
1644:/usr/avr/include/avr/pgmspace.h **** 
1645:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1646:/usr/avr/include/avr/pgmspace.h ****     \fn char *strstr_PF(const char *s1, uint_farptr_t s2)
1647:/usr/avr/include/avr/pgmspace.h ****     \brief Locate a substring.
1648:/usr/avr/include/avr/pgmspace.h **** 
1649:/usr/avr/include/avr/pgmspace.h ****     The strstr_PF() function finds the first occurrence of the substring \c s2
1650:/usr/avr/include/avr/pgmspace.h ****     in the string \c s1.  The terminating '\\0' characters are not
1651:/usr/avr/include/avr/pgmspace.h ****     compared.
1652:/usr/avr/include/avr/pgmspace.h ****     The strstr_PF() function is similar to strstr() except that \c s2 is a
1653:/usr/avr/include/avr/pgmspace.h ****     far pointer to a string in program space.
1654:/usr/avr/include/avr/pgmspace.h **** 
1655:/usr/avr/include/avr/pgmspace.h ****     \returns The strstr_PF() function returns a pointer to the beginning of the
1656:/usr/avr/include/avr/pgmspace.h ****     substring, or NULL if the substring is not found.
1657:/usr/avr/include/avr/pgmspace.h ****     If \c s2 points to a string of zero length, the function returns \c s1. The
1658:/usr/avr/include/avr/pgmspace.h ****     contents of RAMPZ SFR are undefined when the function returns. */
1659:/usr/avr/include/avr/pgmspace.h **** extern char *strstr_PF(const char *s1, uint_farptr_t s2);
1660:/usr/avr/include/avr/pgmspace.h **** 
1661:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1662:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)
1663:/usr/avr/include/avr/pgmspace.h ****     \brief Copy a string from progmem to RAM.
1664:/usr/avr/include/avr/pgmspace.h **** 
1665:/usr/avr/include/avr/pgmspace.h ****     Copy src to string dst of size siz.  At most siz-1 characters will be
1666:/usr/avr/include/avr/pgmspace.h ****     copied. Always NULL terminates (unless siz == 0).
1667:/usr/avr/include/avr/pgmspace.h **** 
1668:/usr/avr/include/avr/pgmspace.h ****     \returns The strlcpy_PF() function returns strlen(src). If retval >= siz,
1669:/usr/avr/include/avr/pgmspace.h ****     truncation occurred.  The contents of RAMPZ SFR are undefined when the
1670:/usr/avr/include/avr/pgmspace.h ****     function returns. */
1671:/usr/avr/include/avr/pgmspace.h **** extern size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz);
1672:/usr/avr/include/avr/pgmspace.h **** 
1673:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1674:/usr/avr/include/avr/pgmspace.h ****     \fn int memcmp_PF(const void *s1, uint_farptr_t s2, size_t len)
1675:/usr/avr/include/avr/pgmspace.h ****     \brief Compare memory areas
1676:/usr/avr/include/avr/pgmspace.h **** 
1677:/usr/avr/include/avr/pgmspace.h ****     The memcmp_PF() function compares the first \p len bytes of the memory
1678:/usr/avr/include/avr/pgmspace.h ****     areas \p s1 and flash \p s2. The comparision is performed using unsigned
1679:/usr/avr/include/avr/pgmspace.h ****     char operations. It is an equivalent of memcmp_P() function, except
1680:/usr/avr/include/avr/pgmspace.h ****     that it is capable working on all FLASH including the exteded area
1681:/usr/avr/include/avr/pgmspace.h ****     above 64kB.
1682:/usr/avr/include/avr/pgmspace.h **** 
1683:/usr/avr/include/avr/pgmspace.h ****     \returns The memcmp_PF() function returns an integer less than, equal
1684:/usr/avr/include/avr/pgmspace.h ****     to, or greater than zero if the first \p len bytes of \p s1 is found,
1685:/usr/avr/include/avr/pgmspace.h ****     respectively, to be less than, to match, or be greater than the first
1686:/usr/avr/include/avr/pgmspace.h ****     \p len bytes of \p s2.  */
1687:/usr/avr/include/avr/pgmspace.h **** extern int memcmp_PF(const void *, uint_farptr_t, size_t) __ATTR_PURE__;
1688:/usr/avr/include/avr/pgmspace.h **** 
1689:/usr/avr/include/avr/pgmspace.h **** #ifdef __DOXYGEN__
1690:/usr/avr/include/avr/pgmspace.h **** /** \ingroup avr_pgmspace
1691:/usr/avr/include/avr/pgmspace.h ****     \fn size_t strlen_P(const char *src)
1692:/usr/avr/include/avr/pgmspace.h **** 
1693:/usr/avr/include/avr/pgmspace.h ****     The strlen_P() function is similar to strlen(), except that src is a
1694:/usr/avr/include/avr/pgmspace.h ****     pointer to a string in program space.
1695:/usr/avr/include/avr/pgmspace.h **** 
1696:/usr/avr/include/avr/pgmspace.h ****     \returns The strlen_P() function returns the number of characters in src.
1697:/usr/avr/include/avr/pgmspace.h **** 
1698:/usr/avr/include/avr/pgmspace.h ****     \note strlen_P() is implemented as an inline function in the avr/pgmspace.h
1699:/usr/avr/include/avr/pgmspace.h ****     header file, which will check if the length of the string is a constant
1700:/usr/avr/include/avr/pgmspace.h ****     and known at compile time. If it is not known at compile time, the macro
1701:/usr/avr/include/avr/pgmspace.h ****     will issue a call to __strlen_P() which will then calculate the length
1702:/usr/avr/include/avr/pgmspace.h ****     of the string as normal.
1703:/usr/avr/include/avr/pgmspace.h **** */
1704:/usr/avr/include/avr/pgmspace.h **** static inline size_t strlen_P(const char * s);
1705:/usr/avr/include/avr/pgmspace.h **** #else
1706:/usr/avr/include/avr/pgmspace.h **** extern size_t __strlen_P(const char *) __ATTR_CONST__;  /* internal helper function */
1707:/usr/avr/include/avr/pgmspace.h **** __attribute__((__always_inline__)) static __inline__ size_t strlen_P(const char * s);
1708:/usr/avr/include/avr/pgmspace.h **** static __inline__ size_t strlen_P(const char *s) {
 8752               		.loc 11 1708 26 view .LVU1680
 8753               	.LBB490:
1709:/usr/avr/include/avr/pgmspace.h ****   return __builtin_constant_p(__builtin_strlen(s))
 8754               		.loc 11 1709 3 view .LVU1681
1710:/usr/avr/include/avr/pgmspace.h ****      ? __builtin_strlen(s) : __strlen_P(s);
 8755               		.loc 11 1710 30 is_stmt 0 view .LVU1682
 8756 24a4 C501      		movw r24,r10
 8757 24a6 0E94 0000 		call __strlen_P
 8758               	.LVL599:
 8759               		.loc 11 1710 30 view .LVU1683
 8760               	.LBE490:
 8761               	.LBE489:
 111:logger/logger.c **** 			while(len < LOG_START_WIDTH)
 8762               		.loc 9 111 8 view .LVU1684
 8763 24aa 92E0      		ldi r25,lo8(2)
 8764 24ac D92E      		mov r13,r25
 8765 24ae D80E      		add r13,r24
 8766               	.LVL600:
 112:logger/logger.c **** 			{
 8767               		.loc 9 112 4 is_stmt 1 view .LVU1685
 8768               	.L238:
 112:logger/logger.c **** 			{
 8769               		.loc 9 112 14 view .LVU1686
 8770 24b0 37E0      		ldi r19,lo8(7)
 8771 24b2 3D15      		cp r19,r13
 8772 24b4 00F0      		brlo .+2
 8773 24b6 00C0      		rjmp .L239
 118:logger/logger.c **** 			{
 8774               		.loc 9 118 4 view .LVU1687
 118:logger/logger.c **** 			{
 8775               		.loc 9 118 6 is_stmt 0 view .LVU1688
 8776 24b8 CC20      		tst r12
 8777 24ba 01F4      		brne .+2
 8778 24bc 00C0      		rjmp .L250
 8779               	.LBB491:
 120:logger/logger.c **** 
 8780               		.loc 9 120 5 is_stmt 1 view .LVU1689
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8781               		.loc 9 122 5 view .LVU1690
 8782               	.LBB492:
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8783               		.loc 9 122 10 view .LVU1691
 8784 24be FE01      		movw r30,r28
 8785 24c0 E050      		subi r30,lo8(-(_log_color))
 8786 24c2 F040      		sbci r31,hi8(-(_log_color))
 8787               	.LVL601:
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8788               		.loc 9 122 10 view .LVU1692
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8789               		.loc 9 122 10 view .LVU1693
 8790               	/* #APP */
 8791               	 ;  122 "logger/logger.c" 1
 8792 24c4 A590      		lpm r10, Z+
 8793 24c6 B490      		lpm r11, Z
 8794               		
 8795               	 ;  0 "" 2
 8796               	.LVL602:
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8797               		.loc 9 122 10 view .LVU1694
 122:logger/logger.c **** 				x = LOG_X_OFFSET;
 8798               		.loc 9 122 10 is_stmt 0 view .LVU1695
 8799               	/* #NOAPP */
 8800               	.LBE492:
 123:logger/logger.c **** 				x += lcd_char(x, _log_y, COLOR_WHITE, COLOR_BLACK, '[');
 8801               		.loc 9 123 5 is_stmt 1 view .LVU1696
 124:logger/logger.c **** 				x += lcd_string_P(x, _log_y, fg, COLOR_BLACK, level_str);
 8802               		.loc 9 124 5 view .LVU1697
 124:logger/logger.c **** 				x += lcd_string_P(x, _log_y, fg, COLOR_BLACK, level_str);
 8803               		.loc 9 124 10 is_stmt 0 view .LVU1698
 8804 24c8 6091 0000 		lds r22,_log_y
 8805 24cc 7091 0000 		lds r23,_log_y+1
 8806 24d0 2BE5      		ldi r18,lo8(91)
 8807 24d2 4FEF      		ldi r20,lo8(-1)
 8808 24d4 5FEF      		ldi r21,lo8(-1)
 8809 24d6 8AE0      		ldi r24,lo8(10)
 8810 24d8 90E0      		ldi r25,0
 8811 24da 0E94 0000 		call lcd_char.constprop.0
 8812               	.LVL603:
 8813 24de C82F      		mov r28,r24
 8814 24e0 D0E0      		ldi r29,0
 124:logger/logger.c **** 				x += lcd_string_P(x, _log_y, fg, COLOR_BLACK, level_str);
 8815               		.loc 9 124 7 view .LVU1699
 8816 24e2 2A96      		adiw r28,10
 8817               	.LVL604:
 125:logger/logger.c **** 				lcd_char(x, _log_y, COLOR_WHITE, COLOR_BLACK, ']');
 8818               		.loc 9 125 5 is_stmt 1 view .LVU1700
 125:logger/logger.c **** 				lcd_char(x, _log_y, COLOR_WHITE, COLOR_BLACK, ']');
 8819               		.loc 9 125 10 is_stmt 0 view .LVU1701
 8820 24e4 8090 0000 		lds r8,_log_y
 8821 24e8 9090 0000 		lds r9,_log_y+1
 8822               	.LVL605:
 8823               	.LBB493:
 8824               	.LBI493:
 487:lcd/lcd.c     **** {
 8825               		.loc 2 487 5 is_stmt 1 view .LVU1702
 8826               	.LBB494:
 492:lcd/lcd.c     **** 	while((c = pgm_read_byte(s++)))
 8827               		.loc 2 492 4 is_stmt 0 view .LVU1703
 8828 24ec C12C      		mov r12,__zero_reg__
 8829 24ee D12C      		mov r13,__zero_reg__
 8830               	.LVL606:
 8831               	.L241:
 8832               	.LBB495:
 493:lcd/lcd.c     **** 	{
 8833               		.loc 2 493 13 view .LVU1704
 8834 24f0 F701      		movw r30,r14
 8835               	/* #APP */
 8836               	 ;  493 "lcd/lcd.c" 1
 8837 24f2 2491      		lpm r18, Z
 8838               		
 8839               	 ;  0 "" 2
 8840               	.LVL607:
 493:lcd/lcd.c     **** 	{
 8841               		.loc 2 493 13 view .LVU1705
 8842               	/* #NOAPP */
 8843               	.LBE495:
 495:lcd/lcd.c     **** 	}
 8844               		.loc 2 495 8 view .LVU1706
 8845 24f4 CE01      		movw r24,r28
 8846 24f6 8C0D      		add r24,r12
 8847 24f8 9D1D      		adc r25,r13
 493:lcd/lcd.c     **** 	{
 8848               		.loc 2 493 8 view .LVU1707
 8849 24fa FFEF      		ldi r31,-1
 8850 24fc EF1A      		sub r14,r31
 8851 24fe FF0A      		sbc r15,r31
 8852               	.LVL608:
 493:lcd/lcd.c     **** 	{
 8853               		.loc 2 493 8 view .LVU1708
 8854 2500 2111      		cpse r18,__zero_reg__
 8855 2502 00C0      		rjmp .L242
 8856               	.LVL609:
 493:lcd/lcd.c     **** 	{
 8857               		.loc 2 493 8 view .LVU1709
 8858               	.LBE494:
 8859               	.LBE493:
 126:logger/logger.c **** 			}
 8860               		.loc 9 126 5 is_stmt 1 view .LVU1710
 8861 2504 6091 0000 		lds r22,_log_y
 8862 2508 7091 0000 		lds r23,_log_y+1
 8863 250c 2DE5      		ldi r18,lo8(93)
 8864               	.LVL610:
 126:logger/logger.c **** 			}
 8865               		.loc 9 126 5 is_stmt 0 view .LVU1711
 8866 250e 4FEF      		ldi r20,lo8(-1)
 8867 2510 5FEF      		ldi r21,lo8(-1)
 8868 2512 0E94 0000 		call lcd_char.constprop.0
 8869               	.LVL611:
 8870               	.LBE491:
 137:logger/logger.c **** 		{
 8871               		.loc 9 137 3 is_stmt 1 view .LVU1712
 137:logger/logger.c **** 		{
 8872               		.loc 9 137 5 is_stmt 0 view .LVU1713
 8873 2516 8091 0000 		lds r24,_lcd_initialized
 8874 251a 8823      		tst r24
 8875               	.LVL612:
 8876               	.L261:
 137:logger/logger.c **** 		{
 8877               		.loc 9 137 5 view .LVU1714
 8878 251c 01F0      		breq .L250
 8879               	.LBB498:
 142:logger/logger.c **** 			if(level == LOG_NONE)
 8880               		.loc 9 142 6 view .LVU1715
 8881 251e 81E3      		ldi r24,lo8(49)
 8882 2520 E82E      		mov r14,r24
 8883 2522 F12C      		mov r15,__zero_reg__
 8884               	.L243:
 153:logger/logger.c **** 					_log_y += LOG_Y_ADVANCE;
 8885               		.loc 9 153 8 view .LVU1716
 8886 2524 902F      		mov r25,r16
 8887 2526 812F      		mov r24,r17
 8888               	.L246:
 8889               	.LVL613:
 149:logger/logger.c **** 			{
 8890               		.loc 9 149 10 is_stmt 1 view .LVU1717
 149:logger/logger.c **** 			{
 8891               		.loc 9 149 17 is_stmt 0 view .LVU1718
 8892 2528 C92F      		mov r28,r25
 8893 252a D82F      		mov r29,r24
 8894               	.LVL614:
 149:logger/logger.c **** 			{
 8895               		.loc 9 149 13 view .LVU1719
 8896 252c 2991      		ld r18,Y+
 8897               	.LVL615:
 154:logger/logger.c **** 				}
 8898               		.loc 9 154 13 view .LVU1720
 8899 252e 6091 0000 		lds r22,_log_y
 8900 2532 7091 0000 		lds r23,_log_y+1
 149:logger/logger.c **** 			{
 8901               		.loc 9 149 10 view .LVU1721
 8902 2536 2111      		cpse r18,__zero_reg__
 8903 2538 00C0      		rjmp .L249
 163:logger/logger.c **** 		}
 8904               		.loc 9 163 4 is_stmt 1 view .LVU1722
 163:logger/logger.c **** 		}
 8905               		.loc 9 163 11 is_stmt 0 view .LVU1723
 8906 253a 665F      		subi r22,-10
 8907 253c 7F4F      		sbci r23,-1
 8908 253e 7093 0000 		sts _log_y+1,r23
 8909 2542 6093 0000 		sts _log_y,r22
 8910 2546 00C0      		rjmp .L250
 8911               	.LVL616:
 8912               	.L237:
 163:logger/logger.c **** 		}
 8913               		.loc 9 163 11 view .LVU1724
 8914               	.LBE498:
 8915               	.LBB499:
 8916               	.LBB488:
  45:serial/serial.c **** 	{
  46:serial/serial.c **** 		serial_tx(c);
 8917               		.loc 3 46 3 is_stmt 1 view .LVU1725
 8918 2548 0E94 0000 		call serial_tx
 8919               	.LVL617:
 8920               		.loc 3 46 3 is_stmt 0 view .LVU1726
 8921 254c 00C0      		rjmp .L236
 8922               	.LVL618:
 8923               	.L239:
 8924               		.loc 3 46 3 view .LVU1727
 8925               	.LBE488:
 8926               	.LBE499:
 114:logger/logger.c **** 				++len;
 8927               		.loc 9 114 5 is_stmt 1 view .LVU1728
 8928 254e 80E2      		ldi r24,lo8(32)
 8929 2550 0E94 0000 		call serial_tx
 8930               	.LVL619:
 115:logger/logger.c **** 			}
 8931               		.loc 9 115 5 view .LVU1729
 8932 2554 D394      		inc r13
 8933               	.LVL620:
 115:logger/logger.c **** 			}
 8934               		.loc 9 115 5 is_stmt 0 view .LVU1730
 8935 2556 00C0      		rjmp .L238
 8936               	.LVL621:
 8937               	.L242:
 8938               	.LBB500:
 8939               	.LBB497:
 8940               	.LBB496:
 495:lcd/lcd.c     **** 	}
 8941               		.loc 2 495 8 view .LVU1731
 8942 2558 A501      		movw r20,r10
 8943 255a B401      		movw r22,r8
 8944 255c 0E94 0000 		call lcd_char.constprop.0
 8945               	.LVL622:
 495:lcd/lcd.c     **** 	}
 8946               		.loc 2 495 5 view .LVU1732
 8947 2560 C80E      		add r12,r24
 8948 2562 D11C      		adc r13,__zero_reg__
 8949               	.LVL623:
 495:lcd/lcd.c     **** 	}
 8950               		.loc 2 495 5 view .LVU1733
 8951 2564 00C0      		rjmp .L241
 8952               	.LVL624:
 8953               	.L235:
 495:lcd/lcd.c     **** 	}
 8954               		.loc 2 495 5 view .LVU1734
 8955               	.LBE496:
 8956               	.LBE497:
 8957               	.LBE500:
 129:logger/logger.c **** 		{
 8958               		.loc 9 129 8 is_stmt 1 view .LVU1735
 129:logger/logger.c **** 		{
 8959               		.loc 9 129 10 is_stmt 0 view .LVU1736
 8960 2566 8530      		cpi r24,lo8(5)
 8961 2568 01F0      		breq .L252
 137:logger/logger.c **** 		{
 8962               		.loc 9 137 3 is_stmt 1 view .LVU1737
 137:logger/logger.c **** 		{
 8963               		.loc 9 137 5 is_stmt 0 view .LVU1738
 8964 256a C110      		cpse r12,__zero_reg__
 8965 256c 00C0      		rjmp .L253
 8966               	.LVL625:
 8967               	.L250:
 137:logger/logger.c **** 		{
 8968               		.loc 9 137 5 view .LVU1739
 8969               	.LBE483:
 8970               	.LBB502:
 8971               	.LBB503:
  35:serial/serial.c **** 	{
 8972               		.loc 3 35 8 is_stmt 1 view .LVU1740
  35:serial/serial.c **** 	{
 8973               		.loc 3 35 15 is_stmt 0 view .LVU1741
 8974 256e E801      		movw r28,r16
 8975               	.LVL626:
  35:serial/serial.c **** 	{
 8976               		.loc 3 35 11 view .LVU1742
 8977 2570 8991      		ld r24,Y+
 8978               	.LVL627:
  35:serial/serial.c **** 	{
 8979               		.loc 3 35 8 view .LVU1743
 8980 2572 8111      		cpse r24,__zero_reg__
 8981 2574 00C0      		rjmp .L251
 8982               	/* epilogue start */
 8983               	.LBE503:
 8984               	.LBE502:
 168:logger/logger.c **** 
 8985               		.loc 9 168 1 view .LVU1744
 8986 2576 DF91      		pop r29
 8987 2578 CF91      		pop r28
 8988               	.LVL628:
 168:logger/logger.c **** 
 8989               		.loc 9 168 1 view .LVU1745
 8990 257a 1F91      		pop r17
 8991 257c 0F91      		pop r16
 8992               	.LVL629:
 168:logger/logger.c **** 
 8993               		.loc 9 168 1 view .LVU1746
 8994 257e FF90      		pop r15
 8995 2580 EF90      		pop r14
 8996 2582 DF90      		pop r13
 8997 2584 CF90      		pop r12
 8998 2586 BF90      		pop r11
 8999 2588 AF90      		pop r10
 9000 258a 9F90      		pop r9
 9001 258c 8F90      		pop r8
 9002 258e 0895      		ret
 9003               	.LVL630:
 9004               	.L252:
 9005               	.LBB505:
 168:logger/logger.c **** 
 9006               		.loc 9 168 1 view .LVU1747
 9007 2590 C8E0      		ldi r28,lo8(8)
 9008               	.LVL631:
 9009               	.L244:
 133:logger/logger.c **** 			}
 9010               		.loc 9 133 5 is_stmt 1 discriminator 3 view .LVU1748
 9011 2592 80E2      		ldi r24,lo8(32)
 9012 2594 0E94 0000 		call serial_tx
 9013               	.LVL632:
 131:logger/logger.c **** 			{
 9014               		.loc 9 131 40 discriminator 3 view .LVU1749
 131:logger/logger.c **** 			{
 9015               		.loc 9 131 21 discriminator 3 view .LVU1750
 9016 2598 C150      		subi r28,lo8(-(-1))
 9017               	.LVL633:
 131:logger/logger.c **** 			{
 9018               		.loc 9 131 21 is_stmt 0 discriminator 3 view .LVU1751
 9019 259a C111      		cpse r28,__zero_reg__
 9020 259c 00C0      		rjmp .L244
 137:logger/logger.c **** 		{
 9021               		.loc 9 137 3 is_stmt 1 view .LVU1752
 137:logger/logger.c **** 		{
 9022               		.loc 9 137 5 is_stmt 0 view .LVU1753
 9023 259e CC20      		tst r12
 9024 25a0 00C0      		rjmp .L261
 9025               	.LVL634:
 9026               	.L253:
 9027               	.LBB501:
 145:logger/logger.c **** 			}
 9028               		.loc 9 145 7 view .LVU1754
 9029 25a2 E12C      		mov r14,__zero_reg__
 9030 25a4 F12C      		mov r15,__zero_reg__
 9031 25a6 00C0      		rjmp .L243
 9032               	.LVL635:
 9033               	.L249:
 151:logger/logger.c **** 				{
 9034               		.loc 9 151 5 is_stmt 1 view .LVU1755
 151:logger/logger.c **** 				{
 9035               		.loc 9 151 7 is_stmt 0 view .LVU1756
 9036 25a8 2A30      		cpi r18,lo8(10)
 9037 25aa 01F4      		brne .L247
 153:logger/logger.c **** 					_log_y += LOG_Y_ADVANCE;
 9038               		.loc 9 153 6 is_stmt 1 view .LVU1757
 9039               	.LVL636:
 154:logger/logger.c **** 				}
 9040               		.loc 9 154 6 view .LVU1758
 154:logger/logger.c **** 				}
 9041               		.loc 9 154 13 is_stmt 0 view .LVU1759
 9042 25ac 665F      		subi r22,-10
 9043 25ae 7F4F      		sbci r23,-1
 9044 25b0 7093 0000 		sts _log_y+1,r23
 9045 25b4 6093 0000 		sts _log_y,r22
 153:logger/logger.c **** 					_log_y += LOG_Y_ADVANCE;
 9046               		.loc 9 153 8 view .LVU1760
 9047 25b8 E12C      		mov r14,__zero_reg__
 9048 25ba F12C      		mov r15,__zero_reg__
 9049               	.LVL637:
 9050               	.L248:
 153:logger/logger.c **** 					_log_y += LOG_Y_ADVANCE;
 9051               		.loc 9 153 8 view .LVU1761
 9052 25bc 9C2F      		mov r25,r28
 9053 25be 8D2F      		mov r24,r29
 9054 25c0 00C0      		rjmp .L246
 9055               	.LVL638:
 9056               	.L247:
 158:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 9057               		.loc 9 158 6 is_stmt 1 view .LVU1762
 158:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 9058               		.loc 9 158 11 is_stmt 0 view .LVU1763
 9059 25c2 4FEF      		ldi r20,lo8(-1)
 9060 25c4 5FEF      		ldi r21,lo8(-1)
 9061 25c6 C701      		movw r24,r14
 9062 25c8 0A96      		adiw r24,10
 9063 25ca 0E94 0000 		call lcd_char.constprop.0
 9064               	.LVL639:
 158:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 9065               		.loc 9 158 8 view .LVU1764
 9066 25ce E80E      		add r14,r24
 9067 25d0 F11C      		adc r15,__zero_reg__
 9068               	.LVL640:
 158:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 9069               		.loc 9 158 8 view .LVU1765
 9070 25d2 00C0      		rjmp .L248
 9071               	.LVL641:
 9072               	.L251:
 158:logger/logger.c **** 						COLOR_WHITE, COLOR_BLACK, c);
 9073               		.loc 9 158 8 view .LVU1766
 9074               	.LBE501:
 9075               	.LBE505:
 9076               	.LBB506:
 9077               	.LBB504:
  37:serial/serial.c **** 	}
 9078               		.loc 3 37 3 is_stmt 1 view .LVU1767
 9079 25d4 0E94 0000 		call serial_tx
 9080               	.LVL642:
  35:serial/serial.c **** 	{
 9081               		.loc 3 35 15 is_stmt 0 view .LVU1768
 9082 25d8 8E01      		movw r16,r28
 9083 25da 00C0      		rjmp .L250
 9084               	.LBE504:
 9085               	.LBE506:
 9086               		.cfi_endproc
 9087               	.LFE66:
 9090               	log_boot_P:
 9091               	.LVL643:
 9092               	.LFB71:
 171:logger/logger.c **** 	char buf[128];
 9093               		.loc 9 171 1 is_stmt 1 view -0
 9094               		.cfi_startproc
 171:logger/logger.c **** 	char buf[128];
 9095               		.loc 9 171 1 is_stmt 0 view .LVU1770
 9096 25dc CF93      		push r28
 9097               		.cfi_def_cfa_offset 3
 9098               		.cfi_offset 28, -2
 9099 25de DF93      		push r29
 9100               		.cfi_def_cfa_offset 4
 9101               		.cfi_offset 29, -3
 9102 25e0 CDB7      		in r28,__SP_L__
 9103 25e2 DEB7      		in r29,__SP_H__
 9104               		.cfi_def_cfa_register 28
 9105 25e4 C058      		subi r28,-128
 9106 25e6 D109      		sbc r29,__zero_reg__
 9107               		.cfi_def_cfa_offset 132
 9108 25e8 0FB6      		in __tmp_reg__,__SREG__
 9109 25ea F894      		cli
 9110 25ec DEBF      		out __SP_H__,r29
 9111 25ee 0FBE      		out __SREG__,__tmp_reg__
 9112 25f0 CDBF      		out __SP_L__,r28
 9113               	/* prologue: function */
 9114               	/* frame size = 128 */
 9115               	/* stack size = 130 */
 9116               	.L__stack_usage = 130
 172:logger/logger.c **** 	va_list v;
 9117               		.loc 9 172 2 is_stmt 1 view .LVU1771
 173:logger/logger.c **** 
 9118               		.loc 9 173 2 view .LVU1772
 175:logger/logger.c **** 	vsnprintf_P(buf, sizeof(buf), msg, v);
 9119               		.loc 9 175 2 view .LVU1773
 9120               	.LVL644:
 176:logger/logger.c **** 	va_end(v);
 9121               		.loc 9 176 2 view .LVU1774
 9122 25f2 9E01      		movw r18,r28
 9123 25f4 2857      		subi r18,120
 9124 25f6 3F4F      		sbci r19,-1
 9125               	.LVL645:
 176:logger/logger.c **** 	va_end(v);
 9126               		.loc 9 176 2 is_stmt 0 view .LVU1775
 9127 25f8 CA57      		subi r28,lo8(-134)
 9128 25fa DF4F      		sbci r29,hi8(-134)
 9129 25fc 4881      		ld r20,Y
 9130 25fe 5981      		ldd r21,Y+1
 9131 2600 C658      		subi r28,lo8(134)
 9132 2602 D040      		sbci r29,hi8(134)
 9133 2604 60E8      		ldi r22,lo8(-128)
 9134 2606 70E0      		ldi r23,0
 9135 2608 CE01      		movw r24,r28
 9136 260a 0196      		adiw r24,1
 9137 260c 0E94 0000 		call vsnprintf_P
 9138               	.LVL646:
 177:logger/logger.c **** 
 9139               		.loc 9 177 2 is_stmt 1 view .LVU1776
 179:logger/logger.c **** 	serial_tx('\n');
 9140               		.loc 9 179 2 view .LVU1777
 9141 2610 BE01      		movw r22,r28
 9142 2612 6F5F      		subi r22,-1
 9143 2614 7F4F      		sbci r23,-1
 9144 2616 CB57      		subi r28,lo8(-133)
 9145 2618 DF4F      		sbci r29,hi8(-133)
 9146 261a 8881      		ld r24,Y
 9147 261c C558      		subi r28,lo8(133)
 9148 261e D040      		sbci r29,hi8(133)
 9149 2620 0E94 0000 		call _lcd_log
 9150               	.LVL647:
 180:logger/logger.c **** }
 9151               		.loc 9 180 2 view .LVU1778
 9152 2624 8AE0      		ldi r24,lo8(10)
 9153 2626 0E94 0000 		call serial_tx
 9154               	.LVL648:
 9155               	/* epilogue start */
 181:logger/logger.c **** 
 9156               		.loc 9 181 1 is_stmt 0 view .LVU1779
 9157 262a C058      		subi r28,-128
 9158 262c DF4F      		sbci r29,-1
 9159 262e 0FB6      		in __tmp_reg__,__SREG__
 9160 2630 F894      		cli
 9161 2632 DEBF      		out __SP_H__,r29
 9162 2634 0FBE      		out __SREG__,__tmp_reg__
 9163 2636 CDBF      		out __SP_L__,r28
 9164 2638 DF91      		pop r29
 9165 263a CF91      		pop r28
 9166 263c 0895      		ret
 9167               		.cfi_endproc
 9168               	.LFE71:
 9171               	_sd_command:
 9172               	.LVL649:
 9173               	.LFB72:
 143:sd/sd.c       **** 	u8 i, response;
 9174               		.loc 5 143 1 is_stmt 1 view -0
 9175               		.cfi_startproc
 143:sd/sd.c       **** 	u8 i, response;
 9176               		.loc 5 143 1 is_stmt 0 view .LVU1781
 9177 263e 0F93      		push r16
 9178               		.cfi_def_cfa_offset 3
 9179               		.cfi_offset 16, -2
 9180 2640 1F93      		push r17
 9181               		.cfi_def_cfa_offset 4
 9182               		.cfi_offset 17, -3
 9183 2642 CF93      		push r28
 9184               		.cfi_def_cfa_offset 5
 9185               		.cfi_offset 28, -4
 9186 2644 DF93      		push r29
 9187               		.cfi_def_cfa_offset 6
 9188               		.cfi_offset 29, -5
 9189               	/* prologue: function */
 9190               	/* frame size = 0 */
 9191               	/* stack size = 4 */
 9192               	.L__stack_usage = 4
 9193 2646 C82F      		mov r28,r24
 9194 2648 D42F      		mov r29,r20
 9195 264a 152F      		mov r17,r21
 9196 264c 072F      		mov r16,r23
 144:sd/sd.c       **** 	spi_xchg(0xFF);
 9197               		.loc 5 144 2 is_stmt 1 view .LVU1782
 145:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
 9198               		.loc 5 145 2 view .LVU1783
 9199 264e 8FEF      		ldi r24,lo8(-1)
 9200               	.LVL650:
 145:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
 9201               		.loc 5 145 2 is_stmt 0 view .LVU1784
 9202 2650 0E94 0000 		call spi_xchg
 9203               	.LVL651:
 146:sd/sd.c       **** 	spi_xchg((arg >> 24) & 0xFF);
 9204               		.loc 5 146 2 is_stmt 1 view .LVU1785
 9205 2654 8C2F      		mov r24,r28
 9206 2656 8064      		ori r24,lo8(64)
 9207 2658 0E94 0000 		call spi_xchg
 9208               	.LVL652:
 147:sd/sd.c       **** 	spi_xchg((arg >> 16) & 0xFF);
 9209               		.loc 5 147 2 view .LVU1786
 9210 265c 802F      		mov r24,r16
 9211 265e 0E94 0000 		call spi_xchg
 9212               	.LVL653:
 148:sd/sd.c       **** 	spi_xchg((arg >> 8) & 0xFF);
 9213               		.loc 5 148 2 view .LVU1787
 9214 2662 80E0      		ldi r24,0
 9215 2664 0E94 0000 		call spi_xchg
 9216               	.LVL654:
 149:sd/sd.c       **** 	spi_xchg((arg >> 0) & 0xFF);
 9217               		.loc 5 149 2 view .LVU1788
 9218 2668 812F      		mov r24,r17
 9219 266a 0E94 0000 		call spi_xchg
 9220               	.LVL655:
 150:sd/sd.c       **** 	switch(cmd)
 9221               		.loc 5 150 2 view .LVU1789
 9222 266e 8D2F      		mov r24,r29
 9223 2670 0E94 0000 		call spi_xchg
 9224               	.LVL656:
 151:sd/sd.c       **** 	{
 9225               		.loc 5 151 2 view .LVU1790
 154:sd/sd.c       **** 		break;
 9226               		.loc 5 154 3 is_stmt 0 view .LVU1791
 9227 2674 85E9      		ldi r24,lo8(-107)
 151:sd/sd.c       **** 	{
 9228               		.loc 5 151 2 view .LVU1792
 9229 2676 CC23      		tst r28
 9230 2678 01F0      		breq .L275
 158:sd/sd.c       **** 		break;
 9231               		.loc 5 158 3 view .LVU1793
 9232 267a 87E8      		ldi r24,lo8(-121)
 151:sd/sd.c       **** 	{
 9233               		.loc 5 151 2 view .LVU1794
 9234 267c C830      		cpi r28,lo8(8)
 9235 267e 01F0      		breq .L275
 162:sd/sd.c       **** 		break;
 9236               		.loc 5 162 3 is_stmt 1 view .LVU1795
 9237 2680 8FEF      		ldi r24,lo8(-1)
 9238               	.L275:
 154:sd/sd.c       **** 		break;
 9239               		.loc 5 154 3 is_stmt 0 view .LVU1796
 9240 2682 0E94 0000 		call spi_xchg
 9241               	.LVL657:
 155:sd/sd.c       **** 
 9242               		.loc 5 155 3 is_stmt 1 view .LVU1797
 166:sd/sd.c       **** 	return response;
 9243               		.loc 5 166 20 view .LVU1798
 143:sd/sd.c       **** 	u8 i, response;
 9244               		.loc 5 143 1 is_stmt 0 view .LVU1799
 9245 2686 CAE0      		ldi r28,lo8(10)
 9246               	.LVL658:
 9247               	.L267:
 166:sd/sd.c       **** 	return response;
 9248               		.loc 5 166 36 discriminator 3 view .LVU1800
 9249 2688 8FEF      		ldi r24,lo8(-1)
 9250 268a 0E94 0000 		call spi_xchg
 9251               	.LVL659:
 166:sd/sd.c       **** 	return response;
 9252               		.loc 5 166 20 discriminator 3 view .LVU1801
 9253 268e 8F3F      		cpi r24,lo8(-1)
 9254 2690 01F4      		brne .L263
 166:sd/sd.c       **** 	return response;
 9255               		.loc 5 166 62 is_stmt 1 discriminator 4 view .LVU1802
 9256               	.LVL660:
 166:sd/sd.c       **** 	return response;
 9257               		.loc 5 166 20 discriminator 4 view .LVU1803
 9258 2692 C150      		subi r28,lo8(-(-1))
 9259               	.LVL661:
 166:sd/sd.c       **** 	return response;
 9260               		.loc 5 166 20 is_stmt 0 discriminator 4 view .LVU1804
 9261 2694 C111      		cpse r28,__zero_reg__
 9262 2696 00C0      		rjmp .L267
 9263               	.LVL662:
 9264               	.L263:
 9265               	/* epilogue start */
 168:sd/sd.c       **** 
 9266               		.loc 5 168 1 view .LVU1805
 9267 2698 DF91      		pop r29
 9268 269a CF91      		pop r28
 9269 269c 1F91      		pop r17
 9270 269e 0F91      		pop r16
 9271 26a0 0895      		ret
 9272               		.cfi_endproc
 9273               	.LFE72:
 9276               	_sd_timeout:
 9277               	.LFB73:
 121:sd/sd.c       **** 	SD_DESELECT;
 9278               		.loc 5 121 1 is_stmt 1 view -0
 9279               		.cfi_startproc
 9280               	/* prologue: function */
 9281               	/* frame size = 0 */
 9282               	/* stack size = 0 */
 9283               	.L__stack_usage = 0
 122:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 9284               		.loc 5 122 2 view .LVU1807
 9285 26a2 5C9A      		sbi 0xb,4
 123:sd/sd.c       **** }
 9286               		.loc 5 123 2 view .LVU1808
 123:sd/sd.c       **** }
 9287               		.loc 5 123 8 view .LVU1809
 123:sd/sd.c       **** }
 9288               		.loc 5 123 8 view .LVU1810
 123:sd/sd.c       **** }
 9289               		.loc 5 123 2 is_stmt 0 view .LVU1811
 9290 26a4 80E0      		ldi r24,lo8(__c.19)
 9291 26a6 90E0      		ldi r25,hi8(__c.19)
 9292 26a8 9F93      		push r25
 9293               		.cfi_def_cfa_offset 3
 9294 26aa 8F93      		push r24
 9295               		.cfi_def_cfa_offset 4
 9296 26ac 0E94 0000 		call panic
 9297               	.LVL663:
 9298               		.cfi_endproc
 9299               	.LFE73:
 9302               	_sd_error:
 9303               	.LFB74:
 130:sd/sd.c       **** 	SD_DESELECT;
 9304               		.loc 5 130 1 is_stmt 1 view -0
 9305               		.cfi_startproc
 9306               	/* prologue: function */
 9307               	/* frame size = 0 */
 9308               	/* stack size = 0 */
 9309               	.L__stack_usage = 0
 131:sd/sd.c       **** 	panic(PSTR("SD error"));
 9310               		.loc 5 131 2 view .LVU1813
 9311 26b0 5C9A      		sbi 0xb,4
 132:sd/sd.c       **** }
 9312               		.loc 5 132 2 view .LVU1814
 132:sd/sd.c       **** }
 9313               		.loc 5 132 8 view .LVU1815
 132:sd/sd.c       **** }
 9314               		.loc 5 132 8 view .LVU1816
 132:sd/sd.c       **** }
 9315               		.loc 5 132 2 is_stmt 0 view .LVU1817
 9316 26b2 80E0      		ldi r24,lo8(__c.20)
 9317 26b4 90E0      		ldi r25,hi8(__c.20)
 9318 26b6 9F93      		push r25
 9319               		.cfi_def_cfa_offset 3
 9320 26b8 8F93      		push r24
 9321               		.cfi_def_cfa_offset 4
 9322 26ba 0E94 0000 		call panic
 9323               	.LVL664:
 9324               		.cfi_endproc
 9325               	.LFE74:
 9328               	initrd_load:
 9329               	.LFB75:
 9330               		.file 12 "initrd/initrd.c"
   1:initrd/initrd.c **** /**
   2:initrd/initrd.c ****  * @file    initrd.c
   3:initrd/initrd.c ****  * @author  Anton Tchekov
   4:initrd/initrd.c ****  * @version 0.1
   5:initrd/initrd.c ****  * @date    21.05.2023
   6:initrd/initrd.c ****  */
   7:initrd/initrd.c **** 
   8:initrd/initrd.c **** #include <atfs.h>
   9:initrd/initrd.c **** #include <initrd.h>
  10:initrd/initrd.c **** #include <types.h>
  11:initrd/initrd.c **** #include <sd.h>
  12:initrd/initrd.c **** #include <xmem.h>
  13:initrd/initrd.c **** #include <logger.h>
  14:initrd/initrd.c **** #include <string.h>
  15:initrd/initrd.c **** #include <avr/pgmspace.h>
  16:initrd/initrd.c **** 
  17:initrd/initrd.c **** /** RAM Offset of INIT Program */
  18:initrd/initrd.c **** #define RAM_OFFSET_INIT        0
  19:initrd/initrd.c **** 
  20:initrd/initrd.c **** void initrd_load(void)
  21:initrd/initrd.c **** {
 9331               		.loc 12 21 1 is_stmt 1 view -0
 9332               		.cfi_startproc
 9333 26be 4F92      		push r4
 9334               		.cfi_def_cfa_offset 3
 9335               		.cfi_offset 4, -2
 9336 26c0 5F92      		push r5
 9337               		.cfi_def_cfa_offset 4
 9338               		.cfi_offset 5, -3
 9339 26c2 6F92      		push r6
 9340               		.cfi_def_cfa_offset 5
 9341               		.cfi_offset 6, -4
 9342 26c4 7F92      		push r7
 9343               		.cfi_def_cfa_offset 6
 9344               		.cfi_offset 7, -5
 9345 26c6 8F92      		push r8
 9346               		.cfi_def_cfa_offset 7
 9347               		.cfi_offset 8, -6
 9348 26c8 9F92      		push r9
 9349               		.cfi_def_cfa_offset 8
 9350               		.cfi_offset 9, -7
 9351 26ca AF92      		push r10
 9352               		.cfi_def_cfa_offset 9
 9353               		.cfi_offset 10, -8
 9354 26cc BF92      		push r11
 9355               		.cfi_def_cfa_offset 10
 9356               		.cfi_offset 11, -9
 9357 26ce CF92      		push r12
 9358               		.cfi_def_cfa_offset 11
 9359               		.cfi_offset 12, -10
 9360 26d0 DF92      		push r13
 9361               		.cfi_def_cfa_offset 12
 9362               		.cfi_offset 13, -11
 9363 26d2 EF92      		push r14
 9364               		.cfi_def_cfa_offset 13
 9365               		.cfi_offset 14, -12
 9366 26d4 FF92      		push r15
 9367               		.cfi_def_cfa_offset 14
 9368               		.cfi_offset 15, -13
 9369 26d6 0F93      		push r16
 9370               		.cfi_def_cfa_offset 15
 9371               		.cfi_offset 16, -14
 9372 26d8 1F93      		push r17
 9373               		.cfi_def_cfa_offset 16
 9374               		.cfi_offset 17, -15
 9375 26da CF93      		push r28
 9376               		.cfi_def_cfa_offset 17
 9377               		.cfi_offset 28, -16
 9378 26dc DF93      		push r29
 9379               		.cfi_def_cfa_offset 18
 9380               		.cfi_offset 29, -17
 9381 26de CDB7      		in r28,__SP_L__
 9382 26e0 DEB7      		in r29,__SP_H__
 9383               		.cfi_def_cfa_register 28
 9384 26e2 C450      		subi r28,4
 9385 26e4 D240      		sbci r29,2
 9386               		.cfi_def_cfa_offset 534
 9387 26e6 0FB6      		in __tmp_reg__,__SREG__
 9388 26e8 F894      		cli
 9389 26ea DEBF      		out __SP_H__,r29
 9390 26ec 0FBE      		out __SREG__,__tmp_reg__
 9391 26ee CDBF      		out __SP_L__,r28
 9392               	/* prologue: function */
 9393               	/* frame size = 516 */
 9394               	/* stack size = 532 */
 9395               	.L__stack_usage = 532
  22:initrd/initrd.c **** 	u8 buf[BLOCK_SIZE];
 9396               		.loc 12 22 2 view .LVU1819
  23:initrd/initrd.c **** 	u16 num_sectors;
 9397               		.loc 12 23 2 view .LVU1820
  24:initrd/initrd.c **** 	u32 addr, block, revision, start_init, size_init;
 9398               		.loc 12 24 2 view .LVU1821
  25:initrd/initrd.c **** 
  26:initrd/initrd.c **** 	log_boot_P(LOG_INIT, PSTR("Loading INIT Binary"));
 9399               		.loc 12 26 2 view .LVU1822
 9400               		.loc 12 26 23 view .LVU1823
 9401               		.loc 12 26 23 view .LVU1824
 9402               		.loc 12 26 2 is_stmt 0 view .LVU1825
 9403 26f0 80E0      		ldi r24,lo8(__c.6.lto_priv.2)
 9404 26f2 90E0      		ldi r25,hi8(__c.6.lto_priv.2)
 9405 26f4 9F93      		push r25
 9406 26f6 8F93      		push r24
 9407 26f8 1F92      		push __zero_reg__
 9408 26fa 0E94 0000 		call log_boot_P
 9409               	.LVL665:
  27:initrd/initrd.c **** 	sd_read(ATFS_SECTOR_BOOT, buf);
 9410               		.loc 12 27 2 is_stmt 1 view .LVU1826
 9411 26fe CE01      		movw r24,r28
 9412 2700 0196      		adiw r24,1
 9413 2702 7C01      		movw r14,r24
 9414 2704 AC01      		movw r20,r24
 9415 2706 60E0      		ldi r22,0
 9416 2708 70E0      		ldi r23,0
 9417 270a CB01      		movw r24,r22
 9418 270c 0E94 0000 		call sd_read
 9419               	.LVL666:
  28:initrd/initrd.c **** 
  29:initrd/initrd.c **** 	/* Check signature */
  30:initrd/initrd.c **** 	if(memcmp(buf + ATFS_OFFSET_SIGNATURE,
 9420               		.loc 12 30 2 view .LVU1827
 9421               		.loc 12 30 5 is_stmt 0 view .LVU1828
 9422 2710 44E0      		ldi r20,lo8(4)
 9423 2712 50E0      		ldi r21,0
 9424 2714 60E0      		ldi r22,lo8(_atfs_signature)
 9425 2716 70E0      		ldi r23,hi8(_atfs_signature)
 9426 2718 C701      		movw r24,r14
 9427 271a 0E94 0000 		call memcmp
 9428               	.LVL667:
 9429               		.loc 12 30 4 view .LVU1829
 9430 271e 0F90      		pop __tmp_reg__
 9431 2720 0F90      		pop __tmp_reg__
 9432 2722 0F90      		pop __tmp_reg__
 9433 2724 1E2D      		mov r17,r14
 9434 2726 0F2D      		mov r16,r15
 9435 2728 892B      		or r24,r25
 9436 272a 01F0      		breq .L279
  31:initrd/initrd.c **** 		_atfs_signature, sizeof(_atfs_signature)))
  32:initrd/initrd.c **** 	{
  33:initrd/initrd.c **** 		panic(PSTR("Wrong FS signature"));
 9437               		.loc 12 33 3 is_stmt 1 view .LVU1830
 9438               		.loc 12 33 9 view .LVU1831
 9439               		.loc 12 33 9 view .LVU1832
 9440               		.loc 12 33 3 is_stmt 0 view .LVU1833
 9441 272c 80E0      		ldi r24,lo8(__c.5.lto_priv.2)
 9442 272e 90E0      		ldi r25,hi8(__c.5.lto_priv.2)
 9443               	.L284:
  34:initrd/initrd.c **** 	}
  35:initrd/initrd.c **** 
  36:initrd/initrd.c **** 	/* Check revision */
  37:initrd/initrd.c **** 	revision = load_le_32(buf + ATFS_OFFSET_REVISION);
  38:initrd/initrd.c **** 	if(revision != ATFS_REVISION)
  39:initrd/initrd.c **** 	{
  40:initrd/initrd.c **** 		panic(PSTR("Unsupported ATFS revision"));
 9444               		.loc 12 40 3 view .LVU1834
 9445 2730 9F93      		push r25
 9446 2732 8F93      		push r24
 9447 2734 0E94 0000 		call panic
 9448               	.LVL668:
 9449               	.L279:
  37:initrd/initrd.c **** 	if(revision != ATFS_REVISION)
 9450               		.loc 12 37 2 is_stmt 1 view .LVU1835
 9451               	.LBB513:
 9452               	.LBI513:
 9453               		.file 13 "../../atfs/atfs.h"
   1:../../atfs/atfs.h **** /**
   2:../../atfs/atfs.h ****  * @file    atfs.h
   3:../../atfs/atfs.h ****  * @author  Anton Tchekov
   4:../../atfs/atfs.h ****  * @version 0.1
   5:../../atfs/atfs.h ****  * @date    29.05.2023
   6:../../atfs/atfs.h ****  * @brief   ATFS File System (ATFS = Amazing Technology File System)
   7:../../atfs/atfs.h ****  *
   8:../../atfs/atfs.h ****  * - All integers are stored as little endian
   9:../../atfs/atfs.h ****  * - All files are contiguous
  10:../../atfs/atfs.h ****  * - Filename separator is a dot '.' not slash '/'
  11:../../atfs/atfs.h ****  * - Filenames may only contain lowercase letters ('a' to 'z'),
  12:../../atfs/atfs.h ****  *   numbers ('0' to '9') and underscore ('_') and may not start with
  13:../../atfs/atfs.h ****  *   a number. File extensions are not supported.
  14:../../atfs/atfs.h ****  *
  15:../../atfs/atfs.h ****  * - Example path: "root.images.vacation.me_on_the_beach"
  16:../../atfs/atfs.h ****  */
  17:../../atfs/atfs.h **** 
  18:../../atfs/atfs.h **** #ifndef __ATFS_H__
  19:../../atfs/atfs.h **** #define __ATFS_H__
  20:../../atfs/atfs.h **** 
  21:../../atfs/atfs.h **** #include <types.h>
  22:../../atfs/atfs.h **** 
  23:../../atfs/atfs.h **** /** Disk sector size (512 bytes) */
  24:../../atfs/atfs.h **** #define ATFS_BLOCK_SIZE           512
  25:../../atfs/atfs.h **** 
  26:../../atfs/atfs.h **** /** Boot sector offset in blocks */
  27:../../atfs/atfs.h **** #define ATFS_SECTOR_BOOT            0
  28:../../atfs/atfs.h **** 
  29:../../atfs/atfs.h **** /** Boot sector size */
  30:../../atfs/atfs.h **** #define ATFS_SIZE_BOOT              1
  31:../../atfs/atfs.h **** 
  32:../../atfs/atfs.h **** /** Current FS Revision */
  33:../../atfs/atfs.h **** #define ATFS_REVISION               1
  34:../../atfs/atfs.h **** 
  35:../../atfs/atfs.h **** /* --- Boot sector byte offsets --- */
  36:../../atfs/atfs.h **** 
  37:../../atfs/atfs.h **** /** Offset of signature in ATFS bootsector */
  38:../../atfs/atfs.h **** #define ATFS_OFFSET_SIGNATURE       0
  39:../../atfs/atfs.h **** 
  40:../../atfs/atfs.h **** /** Offset of revision in ATFS bootsector */
  41:../../atfs/atfs.h **** #define ATFS_OFFSET_REVISION        4
  42:../../atfs/atfs.h **** 
  43:../../atfs/atfs.h **** /** Offset of init block address in ATFS bootsector */
  44:../../atfs/atfs.h **** #define ATFS_OFFSET_INIT_BLOCK      8
  45:../../atfs/atfs.h **** 
  46:../../atfs/atfs.h **** /** Offset of init program size in ATFS bootsector */
  47:../../atfs/atfs.h **** #define ATFS_OFFSET_INIT_SIZE      12
  48:../../atfs/atfs.h **** 
  49:../../atfs/atfs.h **** /** Offset of root block address in ATFS bootsector */
  50:../../atfs/atfs.h **** #define ATFS_OFFSET_ROOT_BLOCK     16
  51:../../atfs/atfs.h **** 
  52:../../atfs/atfs.h **** /** Offset of root block size in ATFS bootsector */
  53:../../atfs/atfs.h **** #define ATFS_OFFSET_ROOT_SIZE      20
  54:../../atfs/atfs.h **** 
  55:../../atfs/atfs.h **** /* --- Directories --- */
  56:../../atfs/atfs.h **** 
  57:../../atfs/atfs.h **** /** Byte offset for number of directory entries field */
  58:../../atfs/atfs.h **** #define ATFS_DIR_OFFSET_NUM_ENTRIES 0
  59:../../atfs/atfs.h **** 
  60:../../atfs/atfs.h **** /** Character used to separate directories in a path */
  61:../../atfs/atfs.h **** #define ATFS_DIR_SEPARATOR           '.'
  62:../../atfs/atfs.h **** 
  63:../../atfs/atfs.h **** /* --- Directory entries --- */
  64:../../atfs/atfs.h **** 
  65:../../atfs/atfs.h **** /** Size of a directory entry in bytes */
  66:../../atfs/atfs.h **** #define ATFS_DIR_ENTRY_SIZE        64
  67:../../atfs/atfs.h **** 
  68:../../atfs/atfs.h **** /** Maximum length of a file name */
  69:../../atfs/atfs.h **** #define ATFS_MAX_FILE_NAME_LENGTH  54
  70:../../atfs/atfs.h **** 
  71:../../atfs/atfs.h **** /** Byte offset of the starting block */
  72:../../atfs/atfs.h **** #define ATFS_DIR_ENTRY_OFFSET_START 0
  73:../../atfs/atfs.h **** 
  74:../../atfs/atfs.h **** /** Byte offset of the size in blocks */
  75:../../atfs/atfs.h **** #define ATFS_DIR_ENTRY_OFFSET_SIZE  4
  76:../../atfs/atfs.h **** 
  77:../../atfs/atfs.h **** /** Byte offset of the entry name */
  78:../../atfs/atfs.h **** #define ATFS_DIR_ENTRY_OFFSET_NAME  8
  79:../../atfs/atfs.h **** 
  80:../../atfs/atfs.h **** /** Byte offset of the entry type */
  81:../../atfs/atfs.h **** #define ATFS_DIR_ENTRY_OFFSET_TYPE 63
  82:../../atfs/atfs.h **** 
  83:../../atfs/atfs.h **** /* --- Free List --- */
  84:../../atfs/atfs.h **** /** Byte offset of the Pointer to the next free area */
  85:../../atfs/atfs.h **** #define ATFS_FREE_OFFSET_NEXT     504
  86:../../atfs/atfs.h **** 
  87:../../atfs/atfs.h **** /** Byte offset of the Size of the current free area in blocks */
  88:../../atfs/atfs.h **** #define ATFS_FREE_OFFSET_SIZE     508
  89:../../atfs/atfs.h **** 
  90:../../atfs/atfs.h **** /** FS Signature (bytes 0-4) */
  91:../../atfs/atfs.h **** static const u8 _atfs_signature[] = { 'A', 'T', 'F', 'S' };
  92:../../atfs/atfs.h **** 
  93:../../atfs/atfs.h **** /* --- Utility Functions --- */
  94:../../atfs/atfs.h **** 
  95:../../atfs/atfs.h **** /**
  96:../../atfs/atfs.h ****  * @brief Write a 32-bit little endian value to a buffer
  97:../../atfs/atfs.h ****  *
  98:../../atfs/atfs.h ****  * @param buf Buffer to write to
  99:../../atfs/atfs.h ****  * @param val 32-bit value to write as little endian
 100:../../atfs/atfs.h ****  */
 101:../../atfs/atfs.h **** static void write_le_32(u8 *buf, u32 val)
 102:../../atfs/atfs.h **** {
 103:../../atfs/atfs.h **** 	buf[0] = val & 0xFF;
 104:../../atfs/atfs.h **** 	buf[1] = (val >> 8) & 0xFF;
 105:../../atfs/atfs.h **** 	buf[2] = (val >> 16) & 0xFF;
 106:../../atfs/atfs.h **** 	buf[3] = (val >> 24) & 0xFF;
 107:../../atfs/atfs.h **** }
 108:../../atfs/atfs.h **** 
 109:../../atfs/atfs.h **** /**
 110:../../atfs/atfs.h ****  * @brief Load a 32-bit little endian value from a buffer
 111:../../atfs/atfs.h ****  *
 112:../../atfs/atfs.h ****  * @param buf Buffer to read little endian value from
 113:../../atfs/atfs.h ****  * @return 32-bit result
 114:../../atfs/atfs.h ****  */
 115:../../atfs/atfs.h **** static u32 load_le_32(u8 *buf)
 9454               		.loc 13 115 12 view .LVU1836
 9455               	.LBB514:
 116:../../atfs/atfs.h **** {
 117:../../atfs/atfs.h **** 	/* The cast is important for systems with small integer size */
 118:../../atfs/atfs.h **** 	return (u32)(buf[0]) |
 9456               		.loc 13 118 2 view .LVU1837
 9457               		.loc 13 118 2 is_stmt 0 view .LVU1838
 9458               	.LBE514:
 9459               	.LBE513:
  38:initrd/initrd.c **** 	{
 9460               		.loc 12 38 2 is_stmt 1 view .LVU1839
  38:initrd/initrd.c **** 	{
 9461               		.loc 12 38 4 is_stmt 0 view .LVU1840
 9462 2738 8D81      		ldd r24,Y+5
 9463 273a 9E81      		ldd r25,Y+6
 9464 273c AF81      		ldd r26,Y+7
 9465 273e B885      		ldd r27,Y+8
 9466 2740 0197      		sbiw r24,1
 9467 2742 A105      		cpc r26,__zero_reg__
 9468 2744 B105      		cpc r27,__zero_reg__
 9469 2746 01F0      		breq .L280
 9470               		.loc 12 40 3 is_stmt 1 view .LVU1841
 9471               		.loc 12 40 9 view .LVU1842
 9472               		.loc 12 40 9 view .LVU1843
 9473               		.loc 12 40 3 is_stmt 0 view .LVU1844
 9474 2748 80E0      		ldi r24,lo8(__c.4.lto_priv.2)
 9475 274a 90E0      		ldi r25,hi8(__c.4.lto_priv.2)
 9476 274c 00C0      		rjmp .L284
 9477               	.L280:
  41:initrd/initrd.c **** 	}
  42:initrd/initrd.c **** 
  43:initrd/initrd.c **** 	/* Get INIT Start and Size */
  44:initrd/initrd.c **** 	start_init = load_le_32(buf + ATFS_OFFSET_INIT_BLOCK);
 9478               		.loc 12 44 2 is_stmt 1 view .LVU1845
 9479               	.LVL669:
 9480               	.LBB515:
 9481               	.LBI515:
 115:../../atfs/atfs.h **** {
 9482               		.loc 13 115 12 view .LVU1846
 9483               	.LBB516:
 9484               		.loc 13 118 2 view .LVU1847
 119:../../atfs/atfs.h **** 		((u32)(buf[1]) << 8) |
 120:../../atfs/atfs.h **** 		((u32)(buf[2]) << 16) |
 9485               		.loc 13 120 25 is_stmt 0 view .LVU1848
 9486 274e 4984      		ldd r4,Y+9
 9487 2750 5A84      		ldd r5,Y+10
 9488 2752 6B84      		ldd r6,Y+11
 9489 2754 7C84      		ldd r7,Y+12
 9490               	.LVL670:
 9491               		.loc 13 120 25 view .LVU1849
 9492               	.LBE516:
 9493               	.LBE515:
  45:initrd/initrd.c **** 	size_init = load_le_32(buf + ATFS_OFFSET_INIT_SIZE);
 9494               		.loc 12 45 2 is_stmt 1 view .LVU1850
 9495               	.LBB517:
 9496               	.LBI517:
 115:../../atfs/atfs.h **** {
 9497               		.loc 13 115 12 view .LVU1851
 9498               	.LBB518:
 118:../../atfs/atfs.h **** 		((u32)(buf[1]) << 8) |
 9499               		.loc 13 118 2 view .LVU1852
 9500               		.loc 13 120 25 is_stmt 0 view .LVU1853
 9501 2756 CD84      		ldd r12,Y+13
 9502 2758 DE84      		ldd r13,Y+14
 9503 275a EF84      		ldd r14,Y+15
 9504 275c F888      		ldd r15,Y+16
 9505               	.LVL671:
 9506               		.loc 13 120 25 view .LVU1854
 9507               	.LBE518:
 9508               	.LBE517:
  46:initrd/initrd.c **** 
  47:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("INIT Start: %"PRIu32), start_init);
 9509               		.loc 12 47 2 is_stmt 1 view .LVU1855
 9510               		.loc 12 47 22 view .LVU1856
 9511               		.loc 12 47 22 view .LVU1857
 9512               		.loc 12 47 2 is_stmt 0 view .LVU1858
 9513 275e 7F92      		push r7
 9514               	.LVL672:
 9515               		.loc 12 47 2 view .LVU1859
 9516 2760 6F92      		push r6
 9517 2762 5F92      		push r5
 9518 2764 4F92      		push r4
 9519 2766 80E0      		ldi r24,lo8(__c.3.lto_priv.2)
 9520 2768 90E0      		ldi r25,hi8(__c.3.lto_priv.2)
 9521 276a 9F93      		push r25
 9522 276c 8F93      		push r24
 9523 276e 87E0      		ldi r24,lo8(7)
 9524 2770 B82E      		mov r11,r24
 9525 2772 BF92      		push r11
 9526 2774 0E94 0000 		call log_boot_P
 9527               	.LVL673:
  48:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("INIT Size: %"PRIu32), size_init);
 9528               		.loc 12 48 2 is_stmt 1 view .LVU1860
 9529               		.loc 12 48 22 view .LVU1861
 9530               		.loc 12 48 22 view .LVU1862
 9531               		.loc 12 48 2 is_stmt 0 view .LVU1863
 9532 2778 FF92      		push r15
 9533 277a EF92      		push r14
 9534 277c DF92      		push r13
 9535 277e CF92      		push r12
 9536 2780 80E0      		ldi r24,lo8(__c.2.lto_priv.4)
 9537 2782 90E0      		ldi r25,hi8(__c.2.lto_priv.4)
 9538 2784 9F93      		push r25
 9539 2786 8F93      		push r24
 9540 2788 BF92      		push r11
 9541 278a 0E94 0000 		call log_boot_P
 9542               	.LVL674:
  49:initrd/initrd.c **** 
  50:initrd/initrd.c **** 	num_sectors = (size_init + BLOCK_SIZE - 1) >> BLOCK_SIZE_POT;
 9543               		.loc 12 50 2 is_stmt 1 view .LVU1864
 9544               		.loc 12 50 40 is_stmt 0 view .LVU1865
 9545 278e 9FEF      		ldi r25,-1
 9546 2790 C90E      		add r12,r25
 9547 2792 91E0      		ldi r25,1
 9548 2794 D91E      		adc r13,r25
 9549 2796 E11C      		adc r14,__zero_reg__
 9550 2798 F11C      		adc r15,__zero_reg__
 9551               		.loc 12 50 45 view .LVU1866
 9552 279a 99E0      		ldi r25,9
 9553               		1:
 9554 279c F694      		lsr r15
 9555 279e E794      		ror r14
 9556 27a0 D794      		ror r13
 9557 27a2 C794      		ror r12
 9558 27a4 9A95      		dec r25
 9559 27a6 01F4      		brne 1b
 9560               	.LVL675:
  51:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("INIT Sectors: %" PRIu16), num_sectors);
 9561               		.loc 12 51 2 is_stmt 1 view .LVU1867
 9562               		.loc 12 51 22 view .LVU1868
 9563               		.loc 12 51 22 view .LVU1869
 9564               		.loc 12 51 2 is_stmt 0 view .LVU1870
 9565 27a8 DF92      		push r13
 9566 27aa CF92      		push r12
 9567 27ac 80E0      		ldi r24,lo8(__c.1.lto_priv.5)
 9568 27ae 90E0      		ldi r25,hi8(__c.1.lto_priv.5)
 9569 27b0 9F93      		push r25
 9570 27b2 8F93      		push r24
 9571 27b4 BF92      		push r11
 9572 27b6 0E94 0000 		call log_boot_P
 9573               	.LVL676:
  52:initrd/initrd.c **** 
  53:initrd/initrd.c **** 	/* Load INIT */
  54:initrd/initrd.c **** 	for(addr = RAM_OFFSET_INIT, block = start_init;
 9574               		.loc 12 54 2 is_stmt 1 view .LVU1871
 9575               		.loc 12 54 2 is_stmt 0 view .LVU1872
 9576 27ba 0FB6      		in __tmp_reg__,__SREG__
 9577 27bc F894      		cli
 9578 27be DEBF      		out __SP_H__,r29
 9579 27c0 0FBE      		out __SREG__,__tmp_reg__
 9580 27c2 CDBF      		out __SP_L__,r28
 9581               		.loc 12 54 36 view .LVU1873
 9582 27c4 4201      		movw r8,r4
 9583 27c6 5301      		movw r10,r6
 9584               		.loc 12 54 11 view .LVU1874
 9585 27c8 CF5F      		subi r28,lo8(-513)
 9586 27ca DD4F      		sbci r29,hi8(-513)
 9587 27cc 1882      		st Y,__zero_reg__
 9588 27ce 1982      		std Y+1,__zero_reg__
 9589 27d0 1A82      		std Y+2,__zero_reg__
 9590 27d2 1B82      		std Y+3,__zero_reg__
 9591 27d4 C150      		subi r28,lo8(513)
 9592 27d6 D240      		sbci r29,hi8(513)
  55:initrd/initrd.c **** 		block < start_init + num_sectors;
 9593               		.loc 12 55 22 view .LVU1875
 9594 27d8 EE24      		clr r14
 9595 27da FF24      		clr r15
 9596               	.LVL677:
 9597               		.loc 12 55 22 view .LVU1876
 9598 27dc C80C      		add r12,r8
 9599 27de D91C      		adc r13,r9
 9600 27e0 EA1C      		adc r14,r10
 9601 27e2 FB1C      		adc r15,r11
 9602               	.LVL678:
 9603               	.L281:
 9604               		.loc 12 55 9 is_stmt 1 view .LVU1877
 9605 27e4 8C14      		cp r8,r12
 9606 27e6 9D04      		cpc r9,r13
 9607 27e8 AE04      		cpc r10,r14
 9608 27ea BF04      		cpc r11,r15
 9609 27ec 00F0      		brlo .L283
 9610               	/* epilogue start */
  56:initrd/initrd.c **** 		++block, addr += BLOCK_SIZE)
  57:initrd/initrd.c **** 	{
  58:initrd/initrd.c **** 		if(sd_read(block, buf))
  59:initrd/initrd.c **** 		{
  60:initrd/initrd.c **** 			panic(PSTR("Loading INIT failed"));
  61:initrd/initrd.c **** 		}
  62:initrd/initrd.c **** 
  63:initrd/initrd.c **** 		xmem_write(addr, buf, BLOCK_SIZE);
  64:initrd/initrd.c **** 	}
  65:initrd/initrd.c **** }
 9611               		.loc 12 65 1 is_stmt 0 view .LVU1878
 9612 27ee CC5F      		subi r28,-4
 9613 27f0 DD4F      		sbci r29,-3
 9614 27f2 0FB6      		in __tmp_reg__,__SREG__
 9615 27f4 F894      		cli
 9616 27f6 DEBF      		out __SP_H__,r29
 9617 27f8 0FBE      		out __SREG__,__tmp_reg__
 9618 27fa CDBF      		out __SP_L__,r28
 9619 27fc DF91      		pop r29
 9620 27fe CF91      		pop r28
 9621 2800 1F91      		pop r17
 9622 2802 0F91      		pop r16
 9623 2804 FF90      		pop r15
 9624 2806 EF90      		pop r14
 9625 2808 DF90      		pop r13
 9626 280a CF90      		pop r12
 9627 280c BF90      		pop r11
 9628 280e AF90      		pop r10
 9629 2810 9F90      		pop r9
 9630 2812 8F90      		pop r8
 9631               	.LVL679:
 9632               		.loc 12 65 1 view .LVU1879
 9633 2814 7F90      		pop r7
 9634               	.LVL680:
 9635               		.loc 12 65 1 view .LVU1880
 9636 2816 6F90      		pop r6
 9637               		.loc 12 65 1 view .LVU1881
 9638 2818 5F90      		pop r5
 9639               		.loc 12 65 1 view .LVU1882
 9640 281a 4F90      		pop r4
 9641 281c 0895      		ret
 9642               	.LVL681:
 9643               	.L283:
  58:initrd/initrd.c **** 		{
 9644               		.loc 12 58 3 is_stmt 1 view .LVU1883
  58:initrd/initrd.c **** 		{
 9645               		.loc 12 58 6 is_stmt 0 view .LVU1884
 9646 281e 412F      		mov r20,r17
 9647 2820 502F      		mov r21,r16
 9648 2822 C501      		movw r24,r10
 9649 2824 B401      		movw r22,r8
 9650 2826 0E94 0000 		call sd_read
 9651               	.LVL682:
  58:initrd/initrd.c **** 		{
 9652               		.loc 12 58 5 view .LVU1885
 9653 282a 8823      		tst r24
 9654 282c 01F0      		breq .L282
  60:initrd/initrd.c **** 		}
 9655               		.loc 12 60 4 is_stmt 1 view .LVU1886
  60:initrd/initrd.c **** 		}
 9656               		.loc 12 60 10 view .LVU1887
  60:initrd/initrd.c **** 		}
 9657               		.loc 12 60 10 view .LVU1888
  60:initrd/initrd.c **** 		}
 9658               		.loc 12 60 4 is_stmt 0 view .LVU1889
 9659 282e 80E0      		ldi r24,lo8(__c.0.lto_priv.9)
 9660 2830 90E0      		ldi r25,hi8(__c.0.lto_priv.9)
 9661 2832 00C0      		rjmp .L284
 9662               	.L282:
  63:initrd/initrd.c **** 	}
 9663               		.loc 12 63 3 is_stmt 1 view .LVU1890
 9664 2834 20E0      		ldi r18,0
 9665 2836 32E0      		ldi r19,lo8(2)
 9666 2838 412F      		mov r20,r17
 9667 283a 502F      		mov r21,r16
 9668 283c CF5F      		subi r28,lo8(-513)
 9669 283e DD4F      		sbci r29,hi8(-513)
 9670 2840 6881      		ld r22,Y
 9671 2842 7981      		ldd r23,Y+1
 9672 2844 8A81      		ldd r24,Y+2
 9673 2846 9B81      		ldd r25,Y+3
 9674 2848 C150      		subi r28,lo8(513)
 9675 284a D240      		sbci r29,hi8(513)
 9676 284c 0E94 0000 		call xmem_write
 9677               	.LVL683:
  56:initrd/initrd.c **** 	{
 9678               		.loc 12 56 10 view .LVU1891
  56:initrd/initrd.c **** 	{
 9679               		.loc 12 56 3 is_stmt 0 view .LVU1892
 9680 2850 BFEF      		ldi r27,-1
 9681 2852 8B1A      		sub r8,r27
 9682 2854 9B0A      		sbc r9,r27
 9683 2856 AB0A      		sbc r10,r27
 9684 2858 BB0A      		sbc r11,r27
 9685               	.LVL684:
  56:initrd/initrd.c **** 	{
 9686               		.loc 12 56 17 view .LVU1893
 9687 285a CF5F      		subi r28,lo8(-513)
 9688 285c DD4F      		sbci r29,hi8(-513)
 9689 285e 8881      		ld r24,Y
 9690 2860 9981      		ldd r25,Y+1
 9691 2862 AA81      		ldd r26,Y+2
 9692 2864 BB81      		ldd r27,Y+3
 9693 2866 C150      		subi r28,lo8(513)
 9694 2868 D240      		sbci r29,hi8(513)
 9695 286a 9E5F      		subi r25,-2
 9696 286c AF4F      		sbci r26,-1
 9697 286e BF4F      		sbci r27,-1
 9698 2870 CF5F      		subi r28,lo8(-513)
 9699 2872 DD4F      		sbci r29,hi8(-513)
 9700 2874 8883      		st Y,r24
 9701 2876 9983      		std Y+1,r25
 9702 2878 AA83      		std Y+2,r26
 9703 287a BB83      		std Y+3,r27
 9704 287c C150      		subi r28,lo8(513)
 9705 287e D240      		sbci r29,hi8(513)
 9706               	.LVL685:
  56:initrd/initrd.c **** 	{
 9707               		.loc 12 56 17 view .LVU1894
 9708 2880 00C0      		rjmp .L281
 9709               		.cfi_endproc
 9710               	.LFE75:
 9713               	syscall_rand:
 9714               	.LVL686:
 9715               	.LFB77:
 423:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 9716               		.loc 6 423 1 is_stmt 1 view -0
 9717               		.cfi_startproc
 423:../../emulator/emulator.c **** 	/* No parameter checking necessary */
 9718               		.loc 6 423 1 is_stmt 0 view .LVU1896
 9719 2882 CF93      		push r28
 9720               		.cfi_def_cfa_offset 3
 9721               		.cfi_offset 28, -2
 9722 2884 DF93      		push r29
 9723               		.cfi_def_cfa_offset 4
 9724               		.cfi_offset 29, -3
 9725               	/* prologue: function */
 9726               	/* frame size = 0 */
 9727               	/* stack size = 2 */
 9728               	.L__stack_usage = 2
 9729 2886 EC01      		movw r28,r24
 425:../../emulator/emulator.c **** 	return 0;
 9730               		.loc 6 425 2 is_stmt 1 view .LVU1897
 9731               	.LBB523:
 9732               	.LBI523:
 130:platform.c    **** {
 9733               		.loc 1 130 5 view .LVU1898
 132:platform.c    **** }
 9734               		.loc 1 132 2 view .LVU1899
 9735               	.LBB524:
 9736               	.LBI524:
 9737               		.file 14 "random/random.c"
   1:random/random.c **** /**
   2:random/random.c ****  * @file    random.c
   3:random/random.c ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:random/random.c ****  * @version 0.1
   5:random/random.c ****  * @date    16.05.2023
   6:random/random.c ****  */
   7:random/random.c **** 
   8:random/random.c **** #include <random.h>
   9:random/random.c **** #include <adc.h>
  10:random/random.c **** #include <logger.h>
  11:random/random.c **** #include <stdlib.h>
  12:random/random.c **** #include <avr/pgmspace.h>
  13:random/random.c **** 
  14:random/random.c **** void random_init(void)
  15:random/random.c **** {
  16:random/random.c **** 	srand(adc_read(ADC_CHANNEL_NOISE));
  17:random/random.c **** 	log_boot_P(LOG_INIT, PSTR("RNG initialized"));
  18:random/random.c **** }
  19:random/random.c **** 
  20:random/random.c **** u32 random_get(void)
 9738               		.loc 14 20 5 view .LVU1900
 9739               	.LBB525:
  21:random/random.c **** {
  22:random/random.c **** 	return rand();
 9740               		.loc 14 22 2 view .LVU1901
 9741               		.loc 14 22 9 is_stmt 0 view .LVU1902
 9742 2888 0E94 0000 		call rand
 9743               	.LVL687:
 9744               		.loc 14 22 9 view .LVU1903
 9745 288c 092E      		mov __tmp_reg__,r25
 9746 288e 000C      		lsl r0
 9747 2890 AA0B      		sbc r26,r26
 9748 2892 BB0B      		sbc r27,r27
 9749 2894 8883      		st Y,r24
 9750 2896 9983      		std Y+1,r25
 9751 2898 AA83      		std Y+2,r26
 9752 289a BB83      		std Y+3,r27
 9753               	.LBE525:
 9754               	.LBE524:
 9755               	.LBE523:
 426:../../emulator/emulator.c **** }
 9756               		.loc 6 426 2 is_stmt 1 view .LVU1904
 427:../../emulator/emulator.c **** 
 9757               		.loc 6 427 1 is_stmt 0 view .LVU1905
 9758 289c 80E0      		ldi r24,0
 9759               	/* epilogue start */
 9760 289e DF91      		pop r29
 9761 28a0 CF91      		pop r28
 9762               	.LVL688:
 427:../../emulator/emulator.c **** 
 9763               		.loc 6 427 1 view .LVU1906
 9764 28a2 0895      		ret
 9765               		.cfi_endproc
 9766               	.LFE77:
 9768               		.section	.text.startup,"ax",@progbits
 9769               	.global	main
 9771               	main:
 9772               	.LFB80:
 9773               		.file 15 "main.c"
   1:main.c        **** /**
   2:main.c        ****  * @file    main.c
   3:main.c        ****  * @author  Anton Tchekov
   4:main.c        ****  * @version 0.1
   5:main.c        ****  * @date    25.05.2023
   6:main.c        ****  * @brief   AVR Main
   7:main.c        ****  */
   8:main.c        **** 
   9:main.c        **** #include <ps2.h>
  10:main.c        **** #include <serial.h>
  11:main.c        **** #include <adc.h>
  12:main.c        **** #include <random.h>
  13:main.c        **** #include <timer.h>
  14:main.c        **** #include <xmem.h>
  15:main.c        **** #include <logger.h>
  16:main.c        **** #include <spi.h>
  17:main.c        **** #include <lcd.h>
  18:main.c        **** #include <gpio.h>
  19:main.c        **** #include <sd.h>
  20:main.c        **** #include <initrd.h>
  21:main.c        **** #include <avr/pgmspace.h>
  22:main.c        **** #include <emulator.h>
  23:main.c        **** 
  24:main.c        **** /**
  25:main.c        ****  * @brief AVR Platform main function, loads drivers and starts kernel
  26:main.c        ****  *
  27:main.c        ****  * @return Exit code
  28:main.c        ****  */
  29:main.c        **** int main(void)
  30:main.c        **** {
 9774               		.loc 15 30 1 is_stmt 1 view -0
 9775               		.cfi_startproc
 9776               	/* prologue: function */
 9777               	/* frame size = 0 */
 9778               	/* stack size = 0 */
 9779               	.L__stack_usage = 0
  31:main.c        **** 	/* --- BOOT SEQUENCE --- */
  32:main.c        **** 
  33:main.c        **** 	/* Enable interrupts */
  34:main.c        **** 	sei();
 9780               		.loc 15 34 2 view .LVU1908
 9781               	/* #APP */
 9782               	 ;  34 "main.c" 1
 9783 0000 7894      		sei
 9784               	 ;  0 "" 2
  35:main.c        **** 
  36:main.c        **** 	/* First, configure GPIO, because all modules that do I/O depend on it */
  37:main.c        **** 	gpio_configure();
 9785               		.loc 15 37 2 view .LVU1909
 9786               	/* #NOAPP */
 9787               	.LBB604:
 9788               	.LBI604:
 9789               		.file 16 "gpio/gpio.c"
   1:gpio/gpio.c   **** /**
   2:gpio/gpio.c   ****  * @file    gpio.c
   3:gpio/gpio.c   ****  * @author  Anton Tchekov
   4:gpio/gpio.c   ****  * @version 0.1
   5:gpio/gpio.c   ****  * @date    20.05.2023
   6:gpio/gpio.c   ****  */
   7:gpio/gpio.c   **** 
   8:gpio/gpio.c   **** #include "gpio.h"
   9:gpio/gpio.c   **** 
  10:gpio/gpio.c   **** void gpio_configure(void)
 9790               		.loc 16 10 6 view .LVU1910
 9791               	.LBB605:
  11:gpio/gpio.c   **** {
  12:gpio/gpio.c   **** 	/* LCD */
  13:gpio/gpio.c   **** 	LCD_RST_DIR |= (1 << LCD_RST_PIN);
 9792               		.loc 16 13 2 view .LVU1911
 9793               		.loc 16 13 14 is_stmt 0 view .LVU1912
 9794 0002 579A      		sbi 0xa,7
  14:gpio/gpio.c   **** 	LCD_CS_DIR |= (1 << LCD_CS_PIN);
 9795               		.loc 16 14 2 is_stmt 1 view .LVU1913
 9796               		.loc 16 14 13 is_stmt 0 view .LVU1914
 9797 0004 389A      		sbi 0x7,0
  15:gpio/gpio.c   **** 	LCD_DC_DIR |= (1 << LCD_DC_PIN);
 9798               		.loc 16 15 2 is_stmt 1 view .LVU1915
 9799               		.loc 16 15 13 is_stmt 0 view .LVU1916
 9800 0006 399A      		sbi 0x7,1
  16:gpio/gpio.c   **** 	LCD_CS_1;
 9801               		.loc 16 16 2 is_stmt 1 view .LVU1917
 9802 0008 409A      		sbi 0x8,0
  17:gpio/gpio.c   **** 
  18:gpio/gpio.c   **** 	/* SD */
  19:gpio/gpio.c   **** 	SD_CS_DIR |= (1 << SD_CS_PIN);
 9803               		.loc 16 19 2 view .LVU1918
 9804               		.loc 16 19 12 is_stmt 0 view .LVU1919
 9805 000a 549A      		sbi 0xa,4
  20:gpio/gpio.c   **** 	SD_DESELECT;
 9806               		.loc 16 20 2 is_stmt 1 view .LVU1920
 9807 000c 5C9A      		sbi 0xb,4
  21:gpio/gpio.c   **** 
  22:gpio/gpio.c   **** 	/* XMEM */
  23:gpio/gpio.c   **** 	XMEM_CS_DIR |=
 9808               		.loc 16 23 2 view .LVU1921
 9809 000e 84B1      		in r24,0x4
 9810               		.loc 16 23 14 is_stmt 0 view .LVU1922
 9811 0010 8760      		ori r24,lo8(7)
 9812 0012 84B9      		out 0x4,r24
  24:gpio/gpio.c   **** 		(1 << XMEM_CS_0_PIN) |
  25:gpio/gpio.c   **** 		(1 << XMEM_CS_1_PIN) |
  26:gpio/gpio.c   **** 		(1 << XMEM_CS_2_PIN);
  27:gpio/gpio.c   **** 
  28:gpio/gpio.c   **** 	XMEM_DESELECT_ALL;
 9813               		.loc 16 28 2 is_stmt 1 view .LVU1923
 9814 0014 85B1      		in r24,0x5
 9815 0016 8760      		ori r24,lo8(7)
 9816 0018 85B9      		out 0x5,r24
  29:gpio/gpio.c   **** 
  30:gpio/gpio.c   **** 	/* KBD */
  31:gpio/gpio.c   **** 	PS2_CLOCK_PORT_OUT |= (1 << PS2_CLOCK_PIN);
 9817               		.loc 16 31 2 view .LVU1924
 9818               		.loc 16 31 21 is_stmt 0 view .LVU1925
 9819 001a 2A9A      		sbi 0x5,2
  32:gpio/gpio.c   **** 	PS2_DATA_PORT_OUT |= (1 << PS2_DATA_PIN);
 9820               		.loc 16 32 2 is_stmt 1 view .LVU1926
 9821               		.loc 16 32 20 is_stmt 0 view .LVU1927
 9822 001c 2B9A      		sbi 0x5,3
  33:gpio/gpio.c   **** 
  34:gpio/gpio.c   **** 	/* SPI */
  35:gpio/gpio.c   **** 	SPI_DIR |= (1 << SPI_MOSI) | (1 << SPI_SCK);
 9823               		.loc 16 35 2 is_stmt 1 view .LVU1928
 9824 001e 84B1      		in r24,0x4
 9825               		.loc 16 35 10 is_stmt 0 view .LVU1929
 9826 0020 8862      		ori r24,lo8(40)
 9827 0022 84B9      		out 0x4,r24
 9828               	.LBE605:
 9829               	.LBE604:
  38:main.c        **** 
  39:main.c        **** 	/* Second, initialize serial port so that we can print boot messages */
  40:main.c        **** 	serial_init();
 9830               		.loc 15 40 2 is_stmt 1 view .LVU1930
 9831               	.LBB606:
 9832               	.LBI606:
  19:serial/serial.c **** {
 9833               		.loc 3 19 6 view .LVU1931
 9834               	.LBB607:
  21:serial/serial.c **** 	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 9835               		.loc 3 21 2 view .LVU1932
  21:serial/serial.c **** 	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 9836               		.loc 3 21 9 is_stmt 0 view .LVU1933
 9837 0024 88E1      		ldi r24,lo8(24)
 9838 0026 8093 C100 		sts 193,r24
  22:serial/serial.c **** 	UBRR0 = UART_PRESCALER;
 9839               		.loc 3 22 2 is_stmt 1 view .LVU1934
  22:serial/serial.c **** 	UBRR0 = UART_PRESCALER;
 9840               		.loc 3 22 9 is_stmt 0 view .LVU1935
 9841 002a 86E0      		ldi r24,lo8(6)
 9842 002c 8093 C200 		sts 194,r24
  23:serial/serial.c **** }
 9843               		.loc 3 23 2 is_stmt 1 view .LVU1936
  23:serial/serial.c **** }
 9844               		.loc 3 23 8 is_stmt 0 view .LVU1937
 9845 0030 27E6      		ldi r18,lo8(103)
 9846 0032 30E0      		ldi r19,0
 9847 0034 3093 C500 		sts 196+1,r19
 9848 0038 2093 C400 		sts 196,r18
 9849               	.LBE607:
 9850               	.LBE606:
  41:main.c        **** 
  42:main.c        **** 	/* Print startup message */
  43:main.c        **** 	log_boot_P(LOG_NONE, PSTR("\nImaginaryOS Version 0.1 Booting ...\n"));
 9851               		.loc 15 43 2 is_stmt 1 view .LVU1938
 9852               		.loc 15 43 23 view .LVU1939
 9853               		.loc 15 43 23 view .LVU1940
 9854               		.loc 15 43 2 is_stmt 0 view .LVU1941
 9855 003c 20E0      		ldi r18,lo8(__c.2.lto_priv.0)
 9856 003e 30E0      		ldi r19,hi8(__c.2.lto_priv.0)
 9857 0040 3F93      		push r19
 9858               		.cfi_def_cfa_offset 3
 9859 0042 2F93      		push r18
 9860               		.cfi_def_cfa_offset 4
 9861 0044 8F93      		push r24
 9862               		.cfi_def_cfa_offset 5
 9863 0046 0E94 0000 		call log_boot_P
  44:main.c        **** 
  45:main.c        **** 	/* Initialize millisecond timer */
  46:main.c        **** 	timer_init();
 9864               		.loc 15 46 2 is_stmt 1 view .LVU1942
 9865               	.LBB608:
 9866               	.LBI608:
  17:timer/timer.c **** {
 9867               		.loc 7 17 6 view .LVU1943
 9868               	.LBB609:
  22:timer/timer.c **** 
 9869               		.loc 7 22 2 view .LVU1944
  22:timer/timer.c **** 
 9870               		.loc 7 22 9 is_stmt 0 view .LVU1945
 9871 004a 82E0      		ldi r24,lo8(2)
 9872 004c 84BD      		out 0x24,r24
  25:timer/timer.c **** 
 9873               		.loc 7 25 2 is_stmt 1 view .LVU1946
 9874 004e 85B5      		in r24,0x25
  25:timer/timer.c **** 
 9875               		.loc 7 25 9 is_stmt 0 view .LVU1947
 9876 0050 8360      		ori r24,lo8(3)
 9877 0052 85BD      		out 0x25,r24
  28:timer/timer.c **** 
 9878               		.loc 7 28 2 is_stmt 1 view .LVU1948
  28:timer/timer.c **** 
 9879               		.loc 7 28 8 is_stmt 0 view .LVU1949
 9880 0054 89EF      		ldi r24,lo8(-7)
 9881 0056 87BD      		out 0x27,r24
  31:timer/timer.c **** 
 9882               		.loc 7 31 2 is_stmt 1 view .LVU1950
 9883 0058 8091 6E00 		lds r24,110
  31:timer/timer.c **** 
 9884               		.loc 7 31 9 is_stmt 0 view .LVU1951
 9885 005c 8260      		ori r24,lo8(2)
 9886 005e 8093 6E00 		sts 110,r24
  33:timer/timer.c **** }
 9887               		.loc 7 33 2 is_stmt 1 view .LVU1952
 9888 0062 80E0      		ldi r24,lo8(__c.0.lto_priv.3)
 9889 0064 90E0      		ldi r25,hi8(__c.0.lto_priv.3)
 9890 0066 9F93      		push r25
 9891               		.cfi_def_cfa_offset 6
 9892 0068 8F93      		push r24
 9893               		.cfi_def_cfa_offset 7
 9894 006a 1F92      		push __zero_reg__
 9895               		.cfi_def_cfa_offset 8
 9896 006c 0E94 0000 		call log_boot_P
 9897               	.LBE609:
 9898               	.LBE608:
  47:main.c        **** 
  48:main.c        **** 	/* Initialize SPI (Needed for SD Card, External Memory and LCD) */
  49:main.c        **** 	spi_init();
 9899               		.loc 15 49 2 view .LVU1953
 9900               	.LBB610:
 9901               	.LBI610:
  13:spi/spi.c     **** {
 9902               		.loc 4 13 6 view .LVU1954
 9903               	.LBB611:
  15:spi/spi.c     **** 	log_boot_P(LOG_INIT, PSTR("SPI initialized"));
 9904               		.loc 4 15 2 view .LVU1955
  15:spi/spi.c     **** 	log_boot_P(LOG_INIT, PSTR("SPI initialized"));
 9905               		.loc 4 15 7 is_stmt 0 view .LVU1956
 9906 0070 80E5      		ldi r24,lo8(80)
 9907 0072 8CBD      		out 0x2c,r24
  16:spi/spi.c     **** }
 9908               		.loc 4 16 2 is_stmt 1 view .LVU1957
 9909 0074 80E0      		ldi r24,lo8(__c.1.lto_priv.1)
 9910 0076 90E0      		ldi r25,hi8(__c.1.lto_priv.1)
 9911 0078 9F93      		push r25
 9912               		.cfi_def_cfa_offset 9
 9913 007a 8F93      		push r24
 9914               		.cfi_def_cfa_offset 10
 9915 007c 1F92      		push __zero_reg__
 9916               		.cfi_def_cfa_offset 11
 9917 007e 0E94 0000 		call log_boot_P
 9918               	.LBE611:
 9919               	.LBE610:
  50:main.c        **** 
  51:main.c        **** 	/* Initialize LCD driver early for boot image and messages */
  52:main.c        **** 	lcd_init(0xFF, COLOR_BLACK);
 9920               		.loc 15 52 2 view .LVU1958
 9921               	.LBB612:
 9922               	.LBI612:
 397:lcd/lcd.c     **** {
 9923               		.loc 2 397 6 view .LVU1959
 9924               	.LBB613:
 400:lcd/lcd.c     **** 	spi_fast();
 9925               		.loc 2 400 2 is_stmt 0 view .LVU1960
 9926 0082 80E0      		ldi r24,lo8(__c.1.lto_priv.3)
 9927 0084 90E0      		ldi r25,hi8(__c.1.lto_priv.3)
 9928 0086 9F93      		push r25
 9929               		.cfi_def_cfa_offset 12
 9930 0088 8F93      		push r24
 9931               		.cfi_def_cfa_offset 13
 9932 008a 1F92      		push __zero_reg__
 9933               		.cfi_def_cfa_offset 14
 9934 008c 0E94 0000 		call log_boot_P
 401:lcd/lcd.c     **** 	_lcd_reset();
 9935               		.loc 2 401 2 view .LVU1961
 9936 0090 0E94 0000 		call spi_fast
 9937               	.LBB614:
 9938               	.LBI614:
 148:lcd/lcd.c     **** {
 9939               		.loc 2 148 13 is_stmt 1 view .LVU1962
 9940               	.LBB615:
 150:lcd/lcd.c     **** 	_delay_ms(500);
 9941               		.loc 2 150 2 view .LVU1963
 9942 0094 5F9A      		sbi 0xb,7
 151:lcd/lcd.c     **** 	LCD_RST_0;
 9943               		.loc 2 151 2 view .LVU1964
 9944               	.LBB616:
 9945               	.LBI616:
 9946               		.file 17 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 9947               		.loc 17 166 1 view .LVU1965
 9948               	.LBB617:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 9949               		.loc 17 168 2 view .LVU1966
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 9950               		.loc 17 190 2 view .LVU1967
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 9951               		.loc 17 191 2 view .LVU1968
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 9952               		.loc 17 192 2 view .LVU1969
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 9953               		.loc 17 194 7 view .LVU1970
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 9954               		.loc 17 198 9 view .LVU1971
 9955               	.LBE617:
 9956               	.LBE616:
 150:lcd/lcd.c     **** 	_delay_ms(500);
 9957               		.loc 2 150 2 is_stmt 0 view .LVU1972
 9958 0096 2DB7      		in r18,__SP_L__
 9959 0098 3EB7      		in r19,__SP_H__
 9960 009a 245F      		subi r18,-12
 9961 009c 3F4F      		sbci r19,-1
 9962 009e 0FB6      		in __tmp_reg__,__SREG__
 9963 00a0 F894      		cli
 9964 00a2 3EBF      		out __SP_H__,r19
 9965 00a4 0FBE      		out __SREG__,__tmp_reg__
 9966 00a6 2DBF      		out __SP_L__,r18
 9967               		.cfi_def_cfa_offset 2
 9968 00a8 88E8      		ldi r24,lo8(-120)
 9969 00aa 93E1      		ldi r25,lo8(19)
 9970               	.LBB623:
 9971               	.LBB622:
 9972               	.LBB618:
 9973               	.LBB619:
 9974               		.file 18 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 9975               		.loc 18 105 2 view .LVU1973
 9976 00ac 20E9      		ldi r18,lo8(-112)
 9977 00ae 31E0      		ldi r19,lo8(1)
 9978               	.L287:
 9979               	.LBE619:
 9980               	.LBE618:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 9981               		.loc 17 201 4 is_stmt 1 view .LVU1974
 9982               	.LBB621:
 9983               	.LBI618:
 103:/usr/avr/include/util/delay_basic.h **** {
 9984               		.loc 18 103 1 view .LVU1975
 9985               	.LBB620:
 9986               		.loc 18 105 2 view .LVU1976
 9987 00b0 F901      		movw r30,r18
 9988               	/* #APP */
 9989               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 9990 00b2 3197      		1: sbiw r30,1
 9991 00b4 01F4      		brne 1b
 9992               	 ;  0 "" 2
 9993               	/* #NOAPP */
 9994               	.LBE620:
 9995               	.LBE621:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 9996               		.loc 17 202 4 view .LVU1977
 198:/usr/avr/include/util/delay.h **** 		{
 9997               		.loc 17 198 9 view .LVU1978
 9998 00b6 0197      		sbiw r24,1
 9999 00b8 0097      		sbiw r24,0
 10000 00ba 01F4      		brne .L287
 10001               	.LBE622:
 10002               	.LBE623:
 152:lcd/lcd.c     **** 	_delay_ms(500);
 10003               		.loc 2 152 2 view .LVU1979
 10004 00bc 5F98      		cbi 0xb,7
 153:lcd/lcd.c     **** 	LCD_RST_1;
 10005               		.loc 2 153 2 view .LVU1980
 10006               	.LBB624:
 10007               	.LBI624:
 166:/usr/avr/include/util/delay.h **** {
 10008               		.loc 17 166 1 view .LVU1981
 10009               	.LBB625:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 10010               		.loc 17 168 2 view .LVU1982
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 10011               		.loc 17 190 2 view .LVU1983
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 10012               		.loc 17 191 2 view .LVU1984
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 10013               		.loc 17 192 2 view .LVU1985
 194:/usr/avr/include/util/delay.h **** 	{
 10014               		.loc 17 194 7 view .LVU1986
 198:/usr/avr/include/util/delay.h **** 		{
 10015               		.loc 17 198 9 view .LVU1987
 10016               	.LBE625:
 10017               	.LBE624:
 152:lcd/lcd.c     **** 	_delay_ms(500);
 10018               		.loc 2 152 2 is_stmt 0 view .LVU1988
 10019 00be 88E8      		ldi r24,lo8(-120)
 10020 00c0 93E1      		ldi r25,lo8(19)
 10021               	.LBB631:
 10022               	.LBB630:
 10023               	.LBB626:
 10024               	.LBB627:
 10025               		.loc 18 105 2 view .LVU1989
 10026 00c2 20E9      		ldi r18,lo8(-112)
 10027 00c4 31E0      		ldi r19,lo8(1)
 10028               	.L288:
 10029               	.LBE627:
 10030               	.LBE626:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 10031               		.loc 17 201 4 is_stmt 1 view .LVU1990
 10032               	.LBB629:
 10033               	.LBI626:
 103:/usr/avr/include/util/delay_basic.h **** {
 10034               		.loc 18 103 1 view .LVU1991
 10035               	.LBB628:
 10036               		.loc 18 105 2 view .LVU1992
 10037 00c6 F901      		movw r30,r18
 10038               	/* #APP */
 10039               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 10040 00c8 3197      		1: sbiw r30,1
 10041 00ca 01F4      		brne 1b
 10042               	 ;  0 "" 2
 10043               	/* #NOAPP */
 10044               	.LBE628:
 10045               	.LBE629:
 10046               		.loc 17 202 4 view .LVU1993
 198:/usr/avr/include/util/delay.h **** 		{
 10047               		.loc 17 198 9 view .LVU1994
 10048 00cc 0197      		sbiw r24,1
 10049 00ce 0097      		sbiw r24,0
 10050 00d0 01F4      		brne .L288
 10051               	.LBE630:
 10052               	.LBE631:
 154:lcd/lcd.c     **** 	_delay_ms(500);
 10053               		.loc 2 154 2 view .LVU1995
 10054 00d2 5F9A      		sbi 0xb,7
 155:lcd/lcd.c     **** }
 10055               		.loc 2 155 2 view .LVU1996
 10056               	.LBB632:
 10057               	.LBI632:
 166:/usr/avr/include/util/delay.h **** {
 10058               		.loc 17 166 1 view .LVU1997
 10059               	.LBB633:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 10060               		.loc 17 168 2 view .LVU1998
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 10061               		.loc 17 190 2 view .LVU1999
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 10062               		.loc 17 191 2 view .LVU2000
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 10063               		.loc 17 192 2 view .LVU2001
 194:/usr/avr/include/util/delay.h **** 	{
 10064               		.loc 17 194 7 view .LVU2002
 198:/usr/avr/include/util/delay.h **** 		{
 10065               		.loc 17 198 9 view .LVU2003
 10066               	.LBE633:
 10067               	.LBE632:
 154:lcd/lcd.c     **** 	_delay_ms(500);
 10068               		.loc 2 154 2 is_stmt 0 view .LVU2004
 10069 00d4 88E8      		ldi r24,lo8(-120)
 10070 00d6 93E1      		ldi r25,lo8(19)
 10071               	.LBB639:
 10072               	.LBB638:
 10073               	.LBB634:
 10074               	.LBB635:
 10075               		.loc 18 105 2 view .LVU2005
 10076 00d8 20E9      		ldi r18,lo8(-112)
 10077 00da 31E0      		ldi r19,lo8(1)
 10078               	.L289:
 10079               	.LBE635:
 10080               	.LBE634:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 10081               		.loc 17 201 4 is_stmt 1 view .LVU2006
 10082               	.LBB637:
 10083               	.LBI634:
 103:/usr/avr/include/util/delay_basic.h **** {
 10084               		.loc 18 103 1 view .LVU2007
 10085               	.LBB636:
 10086               		.loc 18 105 2 view .LVU2008
 10087 00dc F901      		movw r30,r18
 10088               	/* #APP */
 10089               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 10090 00de 3197      		1: sbiw r30,1
 10091 00e0 01F4      		brne 1b
 10092               	 ;  0 "" 2
 10093               	/* #NOAPP */
 10094               	.LBE636:
 10095               	.LBE637:
 10096               		.loc 17 202 4 view .LVU2009
 198:/usr/avr/include/util/delay.h **** 		{
 10097               		.loc 17 198 9 view .LVU2010
 10098 00e2 0197      		sbiw r24,1
 10099 00e4 0097      		sbiw r24,0
 10100 00e6 01F4      		brne .L289
 10101               	.LBE638:
 10102               	.LBE639:
 10103               	.LBE615:
 10104               	.LBE614:
 10105               	.LBB640:
 10106               	.LBI640:
 239:lcd/lcd.c     **** {
 10107               		.loc 2 239 13 view .LVU2011
 10108               	.LBB641:
 241:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10109               		.loc 2 241 2 view .LVU2012
 10110 00e8 89EF      		ldi r24,lo8(-7)
 10111 00ea 0E94 0000 		call _lcd_write_reg
 242:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 10112               		.loc 2 242 2 view .LVU2013
 10113 00ee 80E0      		ldi r24,0
 10114 00f0 0E94 0000 		call _lcd_write_data
 243:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
 10115               		.loc 2 243 2 view .LVU2014
 10116 00f4 88E0      		ldi r24,lo8(8)
 10117 00f6 0E94 0000 		call _lcd_write_data
 244:lcd/lcd.c     **** 	_lcd_write_data(0x19);
 10118               		.loc 2 244 2 view .LVU2015
 10119 00fa 80EC      		ldi r24,lo8(-64)
 10120 00fc 0E94 0000 		call _lcd_write_reg
 245:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
 10121               		.loc 2 245 2 view .LVU2016
 10122 0100 89E1      		ldi r24,lo8(25)
 10123 0102 0E94 0000 		call _lcd_write_data
 246:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
 10124               		.loc 2 246 2 view .LVU2017
 10125 0106 8AE1      		ldi r24,lo8(26)
 10126 0108 0E94 0000 		call _lcd_write_data
 247:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 10127               		.loc 2 247 2 view .LVU2018
 10128 010c 81EC      		ldi r24,lo8(-63)
 10129 010e 0E94 0000 		call _lcd_write_reg
 248:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10130               		.loc 2 248 2 view .LVU2019
 10131 0112 85E4      		ldi r24,lo8(69)
 10132 0114 0E94 0000 		call _lcd_write_data
 249:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 10133               		.loc 2 249 2 view .LVU2020
 10134 0118 80E0      		ldi r24,0
 10135 011a 0E94 0000 		call _lcd_write_data
 250:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 10136               		.loc 2 250 2 view .LVU2021
 10137 011e 82EC      		ldi r24,lo8(-62)
 10138 0120 0E94 0000 		call _lcd_write_reg
 251:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 10139               		.loc 2 251 2 view .LVU2022
 10140 0124 83E3      		ldi r24,lo8(51)
 10141 0126 0E94 0000 		call _lcd_write_data
 252:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10142               		.loc 2 252 2 view .LVU2023
 10143 012a 85EC      		ldi r24,lo8(-59)
 10144 012c 0E94 0000 		call _lcd_write_reg
 253:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 10145               		.loc 2 253 2 view .LVU2024
 10146 0130 80E0      		ldi r24,0
 10147 0132 0E94 0000 		call _lcd_write_data
 254:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 10148               		.loc 2 254 2 view .LVU2025
 10149 0136 88E2      		ldi r24,lo8(40)
 10150 0138 0E94 0000 		call _lcd_write_data
 255:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 10151               		.loc 2 255 2 view .LVU2026
 10152 013c 81EB      		ldi r24,lo8(-79)
 10153 013e 0E94 0000 		call _lcd_write_reg
 256:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 10154               		.loc 2 256 2 view .LVU2027
 10155 0142 80EA      		ldi r24,lo8(-96)
 10156 0144 0E94 0000 		call _lcd_write_data
 257:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 10157               		.loc 2 257 2 view .LVU2028
 10158 0148 81E1      		ldi r24,lo8(17)
 10159 014a 0E94 0000 		call _lcd_write_data
 258:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 10160               		.loc 2 258 2 view .LVU2029
 10161 014e 84EB      		ldi r24,lo8(-76)
 10162 0150 0E94 0000 		call _lcd_write_reg
 259:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 10163               		.loc 2 259 2 view .LVU2030
 10164 0154 82E0      		ldi r24,lo8(2)
 10165 0156 0E94 0000 		call _lcd_write_data
 260:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10166               		.loc 2 260 2 view .LVU2031
 10167 015a 86EB      		ldi r24,lo8(-74)
 10168 015c 0E94 0000 		call _lcd_write_reg
 261:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 10169               		.loc 2 261 2 view .LVU2032
 10170 0160 80E0      		ldi r24,0
 10171 0162 0E94 0000 		call _lcd_write_data
 262:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 10172               		.loc 2 262 2 view .LVU2033
 10173 0166 82E4      		ldi r24,lo8(66)
 10174 0168 0E94 0000 		call _lcd_write_data
 263:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 10175               		.loc 2 263 2 view .LVU2034
 10176 016c 8BE3      		ldi r24,lo8(59)
 10177 016e 0E94 0000 		call _lcd_write_data
 264:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 10178               		.loc 2 264 2 view .LVU2035
 10179 0172 87EB      		ldi r24,lo8(-73)
 10180 0174 0E94 0000 		call _lcd_write_reg
 265:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 10181               		.loc 2 265 2 view .LVU2036
 10182 0178 87E0      		ldi r24,lo8(7)
 10183 017a 0E94 0000 		call _lcd_write_data
 266:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 10184               		.loc 2 266 2 view .LVU2037
 10185 017e 80EE      		ldi r24,lo8(-32)
 10186 0180 0E94 0000 		call _lcd_write_reg
 267:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 10187               		.loc 2 267 2 view .LVU2038
 10188 0184 8FE1      		ldi r24,lo8(31)
 10189 0186 0E94 0000 		call _lcd_write_data
 268:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 10190               		.loc 2 268 2 view .LVU2039
 10191 018a 85E2      		ldi r24,lo8(37)
 10192 018c 0E94 0000 		call _lcd_write_data
 269:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 10193               		.loc 2 269 2 view .LVU2040
 10194 0190 82E2      		ldi r24,lo8(34)
 10195 0192 0E94 0000 		call _lcd_write_data
 270:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 10196               		.loc 2 270 2 view .LVU2041
 10197 0196 8BE0      		ldi r24,lo8(11)
 10198 0198 0E94 0000 		call _lcd_write_data
 271:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 10199               		.loc 2 271 2 view .LVU2042
 10200 019c 86E0      		ldi r24,lo8(6)
 10201 019e 0E94 0000 		call _lcd_write_data
 272:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 10202               		.loc 2 272 2 view .LVU2043
 10203 01a2 8AE0      		ldi r24,lo8(10)
 10204 01a4 0E94 0000 		call _lcd_write_data
 273:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 10205               		.loc 2 273 2 view .LVU2044
 10206 01a8 8EE4      		ldi r24,lo8(78)
 10207 01aa 0E94 0000 		call _lcd_write_data
 274:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 10208               		.loc 2 274 2 view .LVU2045
 10209 01ae 86EC      		ldi r24,lo8(-58)
 10210 01b0 0E94 0000 		call _lcd_write_data
 275:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10211               		.loc 2 275 2 view .LVU2046
 10212 01b4 89E3      		ldi r24,lo8(57)
 10213 01b6 0E94 0000 		call _lcd_write_data
 276:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10214               		.loc 2 276 2 view .LVU2047
 10215 01ba 80E0      		ldi r24,0
 10216 01bc 0E94 0000 		call _lcd_write_data
 277:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10217               		.loc 2 277 2 view .LVU2048
 10218 01c0 80E0      		ldi r24,0
 10219 01c2 0E94 0000 		call _lcd_write_data
 278:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10220               		.loc 2 278 2 view .LVU2049
 10221 01c6 80E0      		ldi r24,0
 10222 01c8 0E94 0000 		call _lcd_write_data
 279:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10223               		.loc 2 279 2 view .LVU2050
 10224 01cc 80E0      		ldi r24,0
 10225 01ce 0E94 0000 		call _lcd_write_data
 280:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10226               		.loc 2 280 2 view .LVU2051
 10227 01d2 80E0      		ldi r24,0
 10228 01d4 0E94 0000 		call _lcd_write_data
 281:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 10229               		.loc 2 281 2 view .LVU2052
 10230 01d8 80E0      		ldi r24,0
 10231 01da 0E94 0000 		call _lcd_write_data
 282:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 10232               		.loc 2 282 2 view .LVU2053
 10233 01de 81EE      		ldi r24,lo8(-31)
 10234 01e0 0E94 0000 		call _lcd_write_reg
 283:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 10235               		.loc 2 283 2 view .LVU2054
 10236 01e4 8FE1      		ldi r24,lo8(31)
 10237 01e6 0E94 0000 		call _lcd_write_data
 284:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 10238               		.loc 2 284 2 view .LVU2055
 10239 01ea 8FE3      		ldi r24,lo8(63)
 10240 01ec 0E94 0000 		call _lcd_write_data
 285:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 10241               		.loc 2 285 2 view .LVU2056
 10242 01f0 8FE3      		ldi r24,lo8(63)
 10243 01f2 0E94 0000 		call _lcd_write_data
 286:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 10244               		.loc 2 286 2 view .LVU2057
 10245 01f6 8FE0      		ldi r24,lo8(15)
 10246 01f8 0E94 0000 		call _lcd_write_data
 287:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 10247               		.loc 2 287 2 view .LVU2058
 10248 01fc 8FE1      		ldi r24,lo8(31)
 10249 01fe 0E94 0000 		call _lcd_write_data
 288:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 10250               		.loc 2 288 2 view .LVU2059
 10251 0202 8FE0      		ldi r24,lo8(15)
 10252 0204 0E94 0000 		call _lcd_write_data
 289:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 10253               		.loc 2 289 2 view .LVU2060
 10254 0208 86E4      		ldi r24,lo8(70)
 10255 020a 0E94 0000 		call _lcd_write_data
 290:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 10256               		.loc 2 290 2 view .LVU2061
 10257 020e 89E4      		ldi r24,lo8(73)
 10258 0210 0E94 0000 		call _lcd_write_data
 291:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 10259               		.loc 2 291 2 view .LVU2062
 10260 0214 81E3      		ldi r24,lo8(49)
 10261 0216 0E94 0000 		call _lcd_write_data
 292:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 10262               		.loc 2 292 2 view .LVU2063
 10263 021a 85E0      		ldi r24,lo8(5)
 10264 021c 0E94 0000 		call _lcd_write_data
 293:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 10265               		.loc 2 293 2 view .LVU2064
 10266 0220 89E0      		ldi r24,lo8(9)
 10267 0222 0E94 0000 		call _lcd_write_data
 294:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 10268               		.loc 2 294 2 view .LVU2065
 10269 0226 83E0      		ldi r24,lo8(3)
 10270 0228 0E94 0000 		call _lcd_write_data
 295:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 10271               		.loc 2 295 2 view .LVU2066
 10272 022c 8CE1      		ldi r24,lo8(28)
 10273 022e 0E94 0000 		call _lcd_write_data
 296:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10274               		.loc 2 296 2 view .LVU2067
 10275 0232 8AE1      		ldi r24,lo8(26)
 10276 0234 0E94 0000 		call _lcd_write_data
 297:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 10277               		.loc 2 297 2 view .LVU2068
 10278 0238 80E0      		ldi r24,0
 10279 023a 0E94 0000 		call _lcd_write_data
 298:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 10280               		.loc 2 298 2 view .LVU2069
 10281 023e 81EF      		ldi r24,lo8(-15)
 10282 0240 0E94 0000 		call _lcd_write_reg
 299:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 10283               		.loc 2 299 2 view .LVU2070
 10284 0244 86E3      		ldi r24,lo8(54)
 10285 0246 0E94 0000 		call _lcd_write_data
 300:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10286               		.loc 2 300 2 view .LVU2071
 10287 024a 84E0      		ldi r24,lo8(4)
 10288 024c 0E94 0000 		call _lcd_write_data
 301:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 10289               		.loc 2 301 2 view .LVU2072
 10290 0250 80E0      		ldi r24,0
 10291 0252 0E94 0000 		call _lcd_write_data
 302:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 10292               		.loc 2 302 2 view .LVU2073
 10293 0256 8CE3      		ldi r24,lo8(60)
 10294 0258 0E94 0000 		call _lcd_write_data
 303:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 10295               		.loc 2 303 2 view .LVU2074
 10296 025c 8FE0      		ldi r24,lo8(15)
 10297 025e 0E94 0000 		call _lcd_write_data
 304:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 10298               		.loc 2 304 2 view .LVU2075
 10299 0262 8FE0      		ldi r24,lo8(15)
 10300 0264 0E94 0000 		call _lcd_write_data
 305:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 10301               		.loc 2 305 2 view .LVU2076
 10302 0268 84EA      		ldi r24,lo8(-92)
 10303 026a 0E94 0000 		call _lcd_write_data
 306:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 10304               		.loc 2 306 2 view .LVU2077
 10305 026e 82E0      		ldi r24,lo8(2)
 10306 0270 0E94 0000 		call _lcd_write_data
 307:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 10307               		.loc 2 307 2 view .LVU2078
 10308 0274 82EF      		ldi r24,lo8(-14)
 10309 0276 0E94 0000 		call _lcd_write_reg
 308:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 10310               		.loc 2 308 2 view .LVU2079
 10311 027a 88E1      		ldi r24,lo8(24)
 10312 027c 0E94 0000 		call _lcd_write_data
 309:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 10313               		.loc 2 309 2 view .LVU2080
 10314 0280 83EA      		ldi r24,lo8(-93)
 10315 0282 0E94 0000 		call _lcd_write_data
 310:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 10316               		.loc 2 310 2 view .LVU2081
 10317 0286 82E1      		ldi r24,lo8(18)
 10318 0288 0E94 0000 		call _lcd_write_data
 311:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 10319               		.loc 2 311 2 view .LVU2082
 10320 028c 82E0      		ldi r24,lo8(2)
 10321 028e 0E94 0000 		call _lcd_write_data
 312:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 10322               		.loc 2 312 2 view .LVU2083
 10323 0292 82E3      		ldi r24,lo8(50)
 10324 0294 0E94 0000 		call _lcd_write_data
 313:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 10325               		.loc 2 313 2 view .LVU2084
 10326 0298 82E1      		ldi r24,lo8(18)
 10327 029a 0E94 0000 		call _lcd_write_data
 314:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 10328               		.loc 2 314 2 view .LVU2085
 10329 029e 8FEF      		ldi r24,lo8(-1)
 10330 02a0 0E94 0000 		call _lcd_write_data
 315:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10331               		.loc 2 315 2 view .LVU2086
 10332 02a4 82E3      		ldi r24,lo8(50)
 10333 02a6 0E94 0000 		call _lcd_write_data
 316:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 10334               		.loc 2 316 2 view .LVU2087
 10335 02aa 80E0      		ldi r24,0
 10336 02ac 0E94 0000 		call _lcd_write_data
 317:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 10337               		.loc 2 317 2 view .LVU2088
 10338 02b0 84EF      		ldi r24,lo8(-12)
 10339 02b2 0E94 0000 		call _lcd_write_reg
 318:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10340               		.loc 2 318 2 view .LVU2089
 10341 02b6 80E4      		ldi r24,lo8(64)
 10342 02b8 0E94 0000 		call _lcd_write_data
 319:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 10343               		.loc 2 319 2 view .LVU2090
 10344 02bc 80E0      		ldi r24,0
 10345 02be 0E94 0000 		call _lcd_write_data
 320:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 10346               		.loc 2 320 2 view .LVU2091
 10347 02c2 88E0      		ldi r24,lo8(8)
 10348 02c4 0E94 0000 		call _lcd_write_data
 321:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 10349               		.loc 2 321 2 view .LVU2092
 10350 02c8 81E9      		ldi r24,lo8(-111)
 10351 02ca 0E94 0000 		call _lcd_write_data
 322:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 10352               		.loc 2 322 2 view .LVU2093
 10353 02ce 84E0      		ldi r24,lo8(4)
 10354 02d0 0E94 0000 		call _lcd_write_data
 323:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 10355               		.loc 2 323 2 view .LVU2094
 10356 02d4 88EF      		ldi r24,lo8(-8)
 10357 02d6 0E94 0000 		call _lcd_write_reg
 324:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 10358               		.loc 2 324 2 view .LVU2095
 10359 02da 81E2      		ldi r24,lo8(33)
 10360 02dc 0E94 0000 		call _lcd_write_data
 325:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 10361               		.loc 2 325 2 view .LVU2096
 10362 02e0 84E0      		ldi r24,lo8(4)
 10363 02e2 0E94 0000 		call _lcd_write_data
 326:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 10364               		.loc 2 326 2 view .LVU2097
 10365 02e6 8AE3      		ldi r24,lo8(58)
 10366 02e8 0E94 0000 		call _lcd_write_reg
 327:lcd/lcd.c     **** }
 10367               		.loc 2 327 2 view .LVU2098
 10368 02ec 85E5      		ldi r24,lo8(85)
 10369 02ee 0E94 0000 		call _lcd_write_data
 10370               	.LBE641:
 10371               	.LBE640:
 10372               	.LBB642:
 10373               	.LBI642:
 335:lcd/lcd.c     **** {
 10374               		.loc 2 335 13 view .LVU2099
 10375               	.LBB643:
 381:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 10376               		.loc 2 381 2 is_stmt 0 view .LVU2100
 10377 02f2 86EB      		ldi r24,lo8(-74)
 10378 02f4 0E94 0000 		call _lcd_write_reg
 382:lcd/lcd.c     **** 	_lcd_write_data(b);
 10379               		.loc 2 382 2 view .LVU2101
 10380 02f8 80E0      		ldi r24,0
 10381 02fa 0E94 0000 		call _lcd_write_data
 383:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 10382               		.loc 2 383 2 view .LVU2102
 10383 02fe 82E2      		ldi r24,lo8(34)
 10384 0300 0E94 0000 		call _lcd_write_data
 384:lcd/lcd.c     **** 	_lcd_write_data(a);
 10385               		.loc 2 384 2 view .LVU2103
 10386 0304 86E3      		ldi r24,lo8(54)
 10387 0306 0E94 0000 		call _lcd_write_reg
 385:lcd/lcd.c     **** }
 10388               		.loc 2 385 2 view .LVU2104
 10389 030a 88E0      		ldi r24,lo8(8)
 10390 030c 0E94 0000 		call _lcd_write_data
 10391 0310 80ED      		ldi r24,lo8(-48)
 10392 0312 97E0      		ldi r25,lo8(7)
 10393               	.LBE643:
 10394               	.LBE642:
 10395               	.LBB644:
 10396               	.LBB645:
 10397               	.LBB646:
 10398               	.LBB647:
 10399               		.loc 18 105 2 view .LVU2105
 10400 0314 20E9      		ldi r18,lo8(-112)
 10401 0316 31E0      		ldi r19,lo8(1)
 10402               	.L290:
 10403 0318 F901      		movw r30,r18
 10404               	/* #APP */
 10405               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 10406 031a 3197      		1: sbiw r30,1
 10407 031c 01F4      		brne 1b
 10408               	 ;  0 "" 2
 10409               	/* #NOAPP */
 10410               	.LBE647:
 10411               	.LBE646:
 198:/usr/avr/include/util/delay.h **** 		{
 10412               		.loc 17 198 9 view .LVU2106
 10413 031e 0197      		sbiw r24,1
 10414 0320 0097      		sbiw r24,0
 10415 0322 01F4      		brne .L290
 10416               	.LBE645:
 10417               	.LBE644:
 407:lcd/lcd.c     **** 	_delay_ms(120);
 10418               		.loc 2 407 2 view .LVU2107
 10419 0324 81E1      		ldi r24,lo8(17)
 10420 0326 0E94 0000 		call _lcd_write_reg
 10421 032a 80EB      		ldi r24,lo8(-80)
 10422 032c 94E0      		ldi r25,lo8(4)
 10423               	.LBB648:
 10424               	.LBB649:
 10425               	.LBB650:
 10426               	.LBB651:
 10427               		.loc 18 105 2 view .LVU2108
 10428 032e 20E9      		ldi r18,lo8(-112)
 10429 0330 31E0      		ldi r19,lo8(1)
 10430               	.L291:
 10431 0332 F901      		movw r30,r18
 10432               	/* #APP */
 10433               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 10434 0334 3197      		1: sbiw r30,1
 10435 0336 01F4      		brne 1b
 10436               	 ;  0 "" 2
 10437               	/* #NOAPP */
 10438               	.LBE651:
 10439               	.LBE650:
 198:/usr/avr/include/util/delay.h **** 		{
 10440               		.loc 17 198 9 view .LVU2109
 10441 0338 0197      		sbiw r24,1
 10442 033a 0097      		sbiw r24,0
 10443 033c 01F4      		brne .L291
 10444               	.LBE649:
 10445               	.LBE648:
 409:lcd/lcd.c     **** 
 10446               		.loc 2 409 2 view .LVU2110
 10447 033e 89E2      		ldi r24,lo8(41)
 10448 0340 0E94 0000 		call _lcd_write_reg
 10449               	.LBB652:
 10450               	.LBI652:
 416:lcd/lcd.c     **** {
 10451               		.loc 2 416 6 is_stmt 1 view .LVU2111
 10452               	.LBB653:
 418:lcd/lcd.c     **** 
 10453               		.loc 2 418 2 view .LVU2112
 420:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 10454               		.loc 2 420 2 view .LVU2113
 10455 0344 20EE      		ldi r18,lo8(-32)
 10456 0346 31E0      		ldi r19,lo8(1)
 10457 0348 40E4      		ldi r20,lo8(64)
 10458 034a 51E0      		ldi r21,lo8(1)
 10459 034c 60E0      		ldi r22,0
 10460 034e 70E0      		ldi r23,0
 10461 0350 80E0      		ldi r24,0
 10462 0352 90E0      		ldi r25,0
 10463 0354 0E94 0000 		call _lcd_window_start
 421:lcd/lcd.c     **** 	{
 10464               		.loc 2 421 2 view .LVU2114
 421:lcd/lcd.c     **** 	{
 10465               		.loc 2 421 17 view .LVU2115
 420:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 10466               		.loc 2 420 2 is_stmt 0 view .LVU2116
 10467 0358 C0EE      		ldi r28,lo8(-32)
 10468 035a D1E0      		ldi r29,lo8(1)
 10469               	.L292:
 423:lcd/lcd.c     **** 		{
 10470               		.loc 2 423 18 is_stmt 1 view .LVU2117
 10471               	.LBE653:
 10472               	.LBE652:
 407:lcd/lcd.c     **** 	_delay_ms(120);
 10473               		.loc 2 407 2 is_stmt 0 view .LVU2118
 10474 035c 00E4      		ldi r16,lo8(64)
 10475 035e 11E0      		ldi r17,lo8(1)
 10476               	.L293:
 10477               	.LBB655:
 10478               	.LBB654:
 425:lcd/lcd.c     **** 		}
 10479               		.loc 2 425 4 is_stmt 1 view .LVU2119
 10480 0360 80E0      		ldi r24,0
 10481 0362 90E0      		ldi r25,0
 10482 0364 0E94 0000 		call _lcd_pixel
 423:lcd/lcd.c     **** 		{
 10483               		.loc 2 423 23 view .LVU2120
 423:lcd/lcd.c     **** 		{
 10484               		.loc 2 423 18 view .LVU2121
 10485 0368 0150      		subi r16,1
 10486 036a 1109      		sbc r17,__zero_reg__
 10487 036c 0115      		cp r16,__zero_reg__
 10488 036e 1105      		cpc r17,__zero_reg__
 10489 0370 01F4      		brne .L293
 421:lcd/lcd.c     **** 	{
 10490               		.loc 2 421 22 view .LVU2122
 421:lcd/lcd.c     **** 	{
 10491               		.loc 2 421 17 view .LVU2123
 10492 0372 2197      		sbiw r28,1
 10493 0374 2097      		sbiw r28,0
 10494 0376 01F4      		brne .L292
 429:lcd/lcd.c     **** }
 10495               		.loc 2 429 2 view .LVU2124
 10496 0378 0E94 0000 		call _lcd_window_end
 10497               	.LBE654:
 10498               	.LBE655:
 413:lcd/lcd.c     **** }
 10499               		.loc 2 413 2 is_stmt 0 view .LVU2125
 10500 037c 80E0      		ldi r24,lo8(__c.0.lto_priv.7)
 10501 037e 90E0      		ldi r25,hi8(__c.0.lto_priv.7)
 10502 0380 9F93      		push r25
 10503               		.cfi_def_cfa_offset 3
 10504 0382 8F93      		push r24
 10505               		.cfi_def_cfa_offset 4
 10506 0384 1F92      		push __zero_reg__
 10507               		.cfi_def_cfa_offset 5
 10508 0386 0E94 0000 		call log_boot_P
 10509               	.LBE613:
 10510               	.LBE612:
  53:main.c        **** 
  54:main.c        **** 	/* Initialize LCD Logger */
  55:main.c        **** 	logger_lcd_init();
 10511               		.loc 15 55 2 is_stmt 1 view .LVU2126
 10512               	.LBB656:
 10513               	.LBI656:
 204:logger/logger.c **** }
 205:logger/logger.c **** 
 206:logger/logger.c **** void memory_dump(u32 addr, const void *data, u16 len)
 207:logger/logger.c **** {
 208:logger/logger.c **** 	u8 j;
 209:logger/logger.c **** 	const u8 *data8;
 210:logger/logger.c **** 	u16 i;
 211:logger/logger.c **** 	char c, buf[32];
 212:logger/logger.c **** 
 213:logger/logger.c **** 	data8 = data;
 214:logger/logger.c **** 	for(i = 0; i < len; i += DUMP_BYTES_PER_LINE, addr += DUMP_BYTES_PER_LINE)
 215:logger/logger.c **** 	{
 216:logger/logger.c **** 		snprintf(buf, sizeof(buf), "%08X | ", addr);
 217:logger/logger.c **** 		serial_tx_str(buf);
 218:logger/logger.c **** 		for(j = 0; j < DUMP_BYTES_PER_LINE; ++j)
 219:logger/logger.c **** 		{
 220:logger/logger.c **** 			snprintf(buf, sizeof(buf), "%02X ", data8[i + j]);
 221:logger/logger.c **** 			serial_tx_str(buf);
 222:logger/logger.c **** 		}
 223:logger/logger.c **** 
 224:logger/logger.c **** 		serial_tx_str("| ");
 225:logger/logger.c **** 		for(j = 0; j < DUMP_BYTES_PER_LINE; ++j)
 226:logger/logger.c **** 		{
 227:logger/logger.c **** 			c = data8[i + j];
 228:logger/logger.c **** 			serial_tx(isprint(c) ? c : '.');
 229:logger/logger.c **** 		}
 230:logger/logger.c **** 
 231:logger/logger.c **** 		serial_tx('\n');
 232:logger/logger.c **** 	}
 233:logger/logger.c **** 
 234:logger/logger.c **** 	serial_tx('\n');
 235:logger/logger.c **** }
 236:logger/logger.c **** 
 237:logger/logger.c **** void logger_lcd_init(void)
 10514               		.loc 9 237 6 view .LVU2127
 10515               	.LBB657:
 238:logger/logger.c **** {
 239:logger/logger.c **** 	_lcd_initialized = true;
 10516               		.loc 9 239 2 view .LVU2128
 10517               		.loc 9 239 19 is_stmt 0 view .LVU2129
 10518 038a 81E0      		ldi r24,lo8(1)
 10519 038c 8093 0000 		sts _lcd_initialized,r24
 240:logger/logger.c **** 
 241:logger/logger.c **** 	lcd_logo_P(
 10520               		.loc 9 241 2 is_stmt 1 view .LVU2130
 10521 0390 00E0      		ldi r16,lo8(logo_tiny)
 10522 0392 10E0      		ldi r17,hi8(logo_tiny)
 10523 0394 28E3      		ldi r18,lo8(56)
 10524 0396 30E0      		ldi r19,0
 10525 0398 44E2      		ldi r20,lo8(36)
 10526 039a 50E0      		ldi r21,0
 10527 039c 62E3      		ldi r22,lo8(50)
 10528 039e 70E0      		ldi r23,0
 10529 03a0 8EE1      		ldi r24,lo8(30)
 10530 03a2 90E0      		ldi r25,0
 10531 03a4 0E94 0000 		call lcd_logo_P
 242:logger/logger.c **** 		LOGO_X_OFFSET,
 243:logger/logger.c **** 		LOGO_Y_OFFSET,
 244:logger/logger.c **** 		LOGO_TINY_WIDTH,
 245:logger/logger.c **** 		LOGO_TINY_HEIGHT,
 246:logger/logger.c **** 		logo_tiny);
 247:logger/logger.c **** 
 248:logger/logger.c **** 	lcd_logo_P(
 10532               		.loc 9 248 2 view .LVU2131
 10533 03a8 00E0      		ldi r16,lo8(logo_text)
 10534 03aa 10E0      		ldi r17,hi8(logo_text)
 10535 03ac 2EE0      		ldi r18,lo8(14)
 10536 03ae 30E0      		ldi r19,0
 10537 03b0 4AE6      		ldi r20,lo8(106)
 10538 03b2 50E0      		ldi r21,0
 10539 03b4 67E4      		ldi r22,lo8(71)
 10540 03b6 70E0      		ldi r23,0
 10541 03b8 86E5      		ldi r24,lo8(86)
 10542 03ba 90E0      		ldi r25,0
 10543 03bc 0E94 0000 		call lcd_logo_P
 10544               	.LBE657:
 10545               	.LBE656:
  56:main.c        **** 
  57:main.c        **** 	/* Initialize keyboard (fast) */
  58:main.c        **** 	ps2_init();
 10546               		.loc 15 58 2 view .LVU2132
 10547               	.LBB658:
 10548               	.LBI658:
 10549               		.file 19 "ps2/ps2.c"
   1:ps2/ps2.c     **** /**
   2:ps2/ps2.c     ****  * @file    ps2.c
   3:ps2/ps2.c     ****  * @author  Haron Nazari, Anton Tchekov
   4:ps2/ps2.c     ****  * @version 0.1
   5:ps2/ps2.c     ****  * @date    16.05.2023
   6:ps2/ps2.c     ****  */
   7:ps2/ps2.c     **** 
   8:ps2/ps2.c     **** #include <ps2.h>
   9:ps2/ps2.c     **** #include <logger.h>
  10:ps2/ps2.c     **** #include <gpio.h>
  11:ps2/ps2.c     **** #include <avr/pgmspace.h>
  12:ps2/ps2.c     **** #include <keys.h>
  13:ps2/ps2.c     **** #include <keyboard-shared.h>
  14:ps2/ps2.c     **** #include <layout.h>
  15:ps2/ps2.c     **** #include <emulator.h>
  16:ps2/ps2.c     **** 
  17:ps2/ps2.c     **** //! @cond Doxygen_Suppress
  18:ps2/ps2.c     **** 
  19:ps2/ps2.c     **** /* --- States --- */
  20:ps2/ps2.c     **** #define PS2_STATE_EXTRA       (1 << 0)
  21:ps2/ps2.c     **** #define PS2_STATE_RELEASE     (1 << 1)
  22:ps2/ps2.c     **** 
  23:ps2/ps2.c     **** /* --- Control bytes --- */
  24:ps2/ps2.c     **** #define PS2_BREAK              0xF0
  25:ps2/ps2.c     **** #define PS2_EXTRA              0xE0
  26:ps2/ps2.c     **** 
  27:ps2/ps2.c     **** /* --- Keycodes with E0 prefix --- */
  28:ps2/ps2.c     **** #define PS2_R_ALT              0x11
  29:ps2/ps2.c     **** #define PS2_R_CTRL             0x14
  30:ps2/ps2.c     **** #define PS2_L_GUI              0x1F
  31:ps2/ps2.c     **** #define PS2_R_GUI              0x27
  32:ps2/ps2.c     **** 
  33:ps2/ps2.c     **** #define PS2_END                0x69
  34:ps2/ps2.c     **** #define PS2_HOME               0x6C
  35:ps2/ps2.c     **** #define PS2_INSERT             0x70
  36:ps2/ps2.c     **** #define PS2_DELETE             0x71
  37:ps2/ps2.c     **** #define PS2_UP                 0x75
  38:ps2/ps2.c     **** #define PS2_DOWN               0x72
  39:ps2/ps2.c     **** #define PS2_RIGHT              0x74
  40:ps2/ps2.c     **** #define PS2_LEFT               0x6B
  41:ps2/ps2.c     **** #define PS2_PAGE_UP            0x7D
  42:ps2/ps2.c     **** #define PS2_PAGE_DOWN          0x7A
  43:ps2/ps2.c     **** 
  44:ps2/ps2.c     **** #define PS2_KP_DIVIDE          0x4A
  45:ps2/ps2.c     **** #define PS2_KP_ENTER           0x5A
  46:ps2/ps2.c     **** 
  47:ps2/ps2.c     **** /* -- 0 to 9 --- */
  48:ps2/ps2.c     **** #define PS2_0                  0x45
  49:ps2/ps2.c     **** #define PS2_1                  0x16
  50:ps2/ps2.c     **** #define PS2_2                  0x1E
  51:ps2/ps2.c     **** #define PS2_3                  0x26
  52:ps2/ps2.c     **** #define PS2_4                  0x25
  53:ps2/ps2.c     **** #define PS2_5                  0x2E
  54:ps2/ps2.c     **** #define PS2_6                  0x36
  55:ps2/ps2.c     **** #define PS2_7                  0x3D
  56:ps2/ps2.c     **** #define PS2_8                  0x3E
  57:ps2/ps2.c     **** #define PS2_9                  0x46
  58:ps2/ps2.c     **** 
  59:ps2/ps2.c     **** /* --- A to Z --- */
  60:ps2/ps2.c     **** #define PS2_A                  0x1C
  61:ps2/ps2.c     **** #define PS2_B                  0x32
  62:ps2/ps2.c     **** #define PS2_C                  0x21
  63:ps2/ps2.c     **** #define PS2_D                  0x23
  64:ps2/ps2.c     **** #define PS2_E                  0x24
  65:ps2/ps2.c     **** #define PS2_F                  0x2B
  66:ps2/ps2.c     **** #define PS2_G                  0x34
  67:ps2/ps2.c     **** #define PS2_H                  0x33
  68:ps2/ps2.c     **** #define PS2_I                  0x43
  69:ps2/ps2.c     **** #define PS2_J                  0x3B
  70:ps2/ps2.c     **** #define PS2_K                  0x42
  71:ps2/ps2.c     **** #define PS2_L                  0x4B
  72:ps2/ps2.c     **** #define PS2_M                  0x3A
  73:ps2/ps2.c     **** #define PS2_N                  0x31
  74:ps2/ps2.c     **** #define PS2_O                  0x44
  75:ps2/ps2.c     **** #define PS2_P                  0x4D
  76:ps2/ps2.c     **** #define PS2_Q                  0x15
  77:ps2/ps2.c     **** #define PS2_R                  0x2D
  78:ps2/ps2.c     **** #define PS2_S                  0x1B
  79:ps2/ps2.c     **** #define PS2_T                  0x2C
  80:ps2/ps2.c     **** #define PS2_U                  0x3C
  81:ps2/ps2.c     **** #define PS2_V                  0x2A
  82:ps2/ps2.c     **** #define PS2_W                  0x1D
  83:ps2/ps2.c     **** #define PS2_X                  0x22
  84:ps2/ps2.c     **** #define PS2_Y                  0x35
  85:ps2/ps2.c     **** #define PS2_Z                  0x1A
  86:ps2/ps2.c     **** 
  87:ps2/ps2.c     **** /* --- Other --- */
  88:ps2/ps2.c     **** #define PS2_ESCAPE             0x76
  89:ps2/ps2.c     **** #define PS2_TAB                0x0D
  90:ps2/ps2.c     **** #define PS2_SPACE              0x29
  91:ps2/ps2.c     **** #define PS2_BACKSPACE          0x66
  92:ps2/ps2.c     **** #define PS2_CAPSLOCK           0x58
  93:ps2/ps2.c     **** #define PS2_RETURN             0x5A
  94:ps2/ps2.c     **** 
  95:ps2/ps2.c     **** /*
  96:ps2/ps2.c     **** #define PS2_L_BRACKET          0x54
  97:ps2/ps2.c     **** #define PS2_R_BRACKET          0x5B
  98:ps2/ps2.c     **** #define PS2_R_SHIFT            0x59
  99:ps2/ps2.c     **** 
 100:ps2/ps2.c     **** #define KEY_MINUS              0x
 101:ps2/ps2.c     **** #define KEY_EQUALS             0x
 102:ps2/ps2.c     **** #define KEY_BACKSLASH          0x
 103:ps2/ps2.c     **** #define KEY_SEMICOLON          0x
 104:ps2/ps2.c     **** #define KEY_APOSTROPHE         0x
 105:ps2/ps2.c     **** #define KEY_GRAVE              0x
 106:ps2/ps2.c     **** #define KEY_COMMA              0x
 107:ps2/ps2.c     **** #define KEY_PERIOD             0x
 108:ps2/ps2.c     **** #define KEY_SLASH              0x
 109:ps2/ps2.c     **** #define KEY_NON_US_BACKSLASH   0x
 110:ps2/ps2.c     **** 
 111:ps2/ps2.c     **** #define PS2_COMMA              0x41
 112:ps2/ps2.c     **** #define PS2_BACKTICK           0x0E
 113:ps2/ps2.c     **** #define PS2_PERIOD             0x49
 114:ps2/ps2.c     **** #define PS2_SLASH              0x4A
 115:ps2/ps2.c     **** #define PS2_SEMICOLON          0x4C
 116:ps2/ps2.c     **** #define PS2_MINUS              0x4E
 117:ps2/ps2.c     **** #define PS2_APOSTROPHE         0x52
 118:ps2/ps2.c     **** #define PS2_EQUAL              0x55
 119:ps2/ps2.c     **** #define PS2_BACKSLASH          0x5D
 120:ps2/ps2.c     **** */
 121:ps2/ps2.c     **** 
 122:ps2/ps2.c     **** /* --- Keypad --- */
 123:ps2/ps2.c     **** #define PS2_KP_0               0x70
 124:ps2/ps2.c     **** #define PS2_KP_1               0x69
 125:ps2/ps2.c     **** #define PS2_KP_2               0x72
 126:ps2/ps2.c     **** #define PS2_KP_3               0x7A
 127:ps2/ps2.c     **** #define PS2_KP_4               0x6B
 128:ps2/ps2.c     **** #define PS2_KP_5               0x73
 129:ps2/ps2.c     **** #define PS2_KP_6               0x74
 130:ps2/ps2.c     **** #define PS2_KP_7               0x6C
 131:ps2/ps2.c     **** #define PS2_KP_8               0x75
 132:ps2/ps2.c     **** #define PS2_KP_9               0x7D
 133:ps2/ps2.c     **** #define PS2_KP_PERIOD          0x71
 134:ps2/ps2.c     **** #define PS2_KP_PLUS            0x79
 135:ps2/ps2.c     **** #define PS2_KP_MINUS           0x7B
 136:ps2/ps2.c     **** #define PS2_KP_MULTIPLY        0x7C
 137:ps2/ps2.c     **** 
 138:ps2/ps2.c     **** /* --- Modifiers --- */
 139:ps2/ps2.c     **** #define PS2_L_ALT              0x11
 140:ps2/ps2.c     **** #define PS2_L_SHIFT            0x12
 141:ps2/ps2.c     **** #define PS2_L_CTRL             0x14
 142:ps2/ps2.c     **** 
 143:ps2/ps2.c     **** /* --- Function Keys --- */
 144:ps2/ps2.c     **** #define PS2_F1                 0x05
 145:ps2/ps2.c     **** #define PS2_F2                 0x06
 146:ps2/ps2.c     **** #define PS2_F3                 0x04
 147:ps2/ps2.c     **** #define PS2_F4                 0x0C
 148:ps2/ps2.c     **** #define PS2_F5                 0x03
 149:ps2/ps2.c     **** #define PS2_F6                 0x0B
 150:ps2/ps2.c     **** #define PS2_F7                 0x83
 151:ps2/ps2.c     **** #define PS2_F8                 0x0A
 152:ps2/ps2.c     **** #define PS2_F9                 0x01
 153:ps2/ps2.c     **** #define PS2_F10                0x09
 154:ps2/ps2.c     **** #define PS2_F11                0x78
 155:ps2/ps2.c     **** #define PS2_F12                0x07
 156:ps2/ps2.c     **** 
 157:ps2/ps2.c     **** //! @endcond
 158:ps2/ps2.c     **** 
 159:ps2/ps2.c     **** /** The byte that is currently being received */
 160:ps2/ps2.c     **** static u8 _byte;
 161:ps2/ps2.c     **** 
 162:ps2/ps2.c     **** /**
 163:ps2/ps2.c     ****  * The number of the current bit:
 164:ps2/ps2.c     ****  *
 165:ps2/ps2.c     ****  *   0: Start bit
 166:ps2/ps2.c     ****  * 1-8: Data bit
 167:ps2/ps2.c     ****  *   9: Parity bit
 168:ps2/ps2.c     ****  *  10: Stop bit
 169:ps2/ps2.c     ****  */
 170:ps2/ps2.c     **** static u8 _bit;
 171:ps2/ps2.c     **** 
 172:ps2/ps2.c     **** void ps2_init(void)
 10550               		.loc 19 172 6 view .LVU2133
 10551               	.LBB659:
 173:ps2/ps2.c     **** {
 174:ps2/ps2.c     **** 	/* Enable external interrupt 0 (PORTB2) */
 175:ps2/ps2.c     **** 	EIMSK |= (1 << PS2_EXT_INTERRUPT);
 10552               		.loc 19 175 2 view .LVU2134
 10553               		.loc 19 175 8 is_stmt 0 view .LVU2135
 10554 03c0 E89A      		sbi 0x1d,0
 176:ps2/ps2.c     **** 
 177:ps2/ps2.c     **** 	/* Trigger interrupt on falling edge */
 178:ps2/ps2.c     **** 	EICRA |= (1 << ISC01);
 10555               		.loc 19 178 2 is_stmt 1 view .LVU2136
 10556 03c2 8091 6900 		lds r24,105
 10557               		.loc 19 178 8 is_stmt 0 view .LVU2137
 10558 03c6 8260      		ori r24,lo8(2)
 10559 03c8 8093 6900 		sts 105,r24
 179:ps2/ps2.c     **** 
 180:ps2/ps2.c     **** 	log_boot_P(LOG_INIT, PSTR("PS/2 keyboard initialized"));
 10560               		.loc 19 180 2 is_stmt 1 view .LVU2138
 10561 03cc 80E0      		ldi r24,lo8(__c.2.lto_priv.1)
 10562 03ce 90E0      		ldi r25,hi8(__c.2.lto_priv.1)
 10563 03d0 9F93      		push r25
 10564               		.cfi_def_cfa_offset 6
 10565 03d2 8F93      		push r24
 10566               		.cfi_def_cfa_offset 7
 10567 03d4 1F92      		push __zero_reg__
 10568               		.cfi_def_cfa_offset 8
 10569 03d6 0E94 0000 		call log_boot_P
 10570               	.LBE659:
 10571               	.LBE658:
  59:main.c        **** 
  60:main.c        **** 	/* Initialize ADC (fast) */
  61:main.c        **** 	adc_init();
 10572               		.loc 15 61 2 view .LVU2139
 10573               	.LBB660:
 10574               	.LBI660:
  13:adc/adc.c     **** {
 10575               		.loc 8 13 6 view .LVU2140
 10576               	.LBB661:
  15:adc/adc.c     **** 	ADCSRA = (1 << ADPS1) | (1 << ADPS0);
 10577               		.loc 8 15 2 view .LVU2141
  15:adc/adc.c     **** 	ADCSRA = (1 << ADPS1) | (1 << ADPS0);
 10578               		.loc 8 15 8 is_stmt 0 view .LVU2142
 10579 03da 80E4      		ldi r24,lo8(64)
 10580 03dc 8093 7C00 		sts 124,r24
  16:adc/adc.c     **** 	ADCSRA |= (1 << ADEN);
 10581               		.loc 8 16 2 is_stmt 1 view .LVU2143
  16:adc/adc.c     **** 	ADCSRA |= (1 << ADEN);
 10582               		.loc 8 16 9 is_stmt 0 view .LVU2144
 10583 03e0 83E0      		ldi r24,lo8(3)
 10584 03e2 8093 7A00 		sts 122,r24
  17:adc/adc.c     **** 	adc_read(ADC_CHANNEL_NOISE);
 10585               		.loc 8 17 2 is_stmt 1 view .LVU2145
 10586 03e6 8091 7A00 		lds r24,122
  17:adc/adc.c     **** 	adc_read(ADC_CHANNEL_NOISE);
 10587               		.loc 8 17 9 is_stmt 0 view .LVU2146
 10588 03ea 8068      		ori r24,lo8(-128)
 10589 03ec 8093 7A00 		sts 122,r24
  18:adc/adc.c     **** 	log_boot_P(LOG_INIT, PSTR("ADC initialized"));
 10590               		.loc 8 18 2 is_stmt 1 view .LVU2147
 10591 03f0 0E94 0000 		call adc_read.constprop.0
  19:adc/adc.c     **** }
 10592               		.loc 8 19 2 view .LVU2148
 10593 03f4 80E0      		ldi r24,lo8(__c.0.lto_priv.1)
 10594 03f6 90E0      		ldi r25,hi8(__c.0.lto_priv.1)
 10595 03f8 9F93      		push r25
 10596               		.cfi_def_cfa_offset 9
 10597 03fa 8F93      		push r24
 10598               		.cfi_def_cfa_offset 10
 10599 03fc 1F92      		push __zero_reg__
 10600               		.cfi_def_cfa_offset 11
 10601 03fe 0E94 0000 		call log_boot_P
 10602               	.LBE661:
 10603               	.LBE660:
  62:main.c        **** 
  63:main.c        **** 	/* Initialize RNG (fast) */
  64:main.c        **** 	random_init();
 10604               		.loc 15 64 2 view .LVU2149
 10605               	.LBB662:
 10606               	.LBI662:
  14:random/random.c **** {
 10607               		.loc 14 14 6 view .LVU2150
 10608               	.LBB663:
  16:random/random.c **** 	log_boot_P(LOG_INIT, PSTR("RNG initialized"));
 10609               		.loc 14 16 2 view .LVU2151
 10610 0402 0E94 0000 		call adc_read.constprop.0
 10611 0406 0E94 0000 		call srand
  17:random/random.c **** }
 10612               		.loc 14 17 2 view .LVU2152
 10613 040a 80E0      		ldi r24,lo8(__c.0.lto_priv.2)
 10614 040c 90E0      		ldi r25,hi8(__c.0.lto_priv.2)
 10615 040e 9F93      		push r25
 10616               		.cfi_def_cfa_offset 12
 10617 0410 8F93      		push r24
 10618               		.cfi_def_cfa_offset 13
 10619 0412 1F92      		push __zero_reg__
 10620               		.cfi_def_cfa_offset 14
 10621 0414 0E94 0000 		call log_boot_P
 10622               	.LBE663:
 10623               	.LBE662:
  65:main.c        **** 
  66:main.c        **** 	/* Initialize external memory late because of slow memory test */
  67:main.c        **** 	xmem_init();
 10624               		.loc 15 67 2 view .LVU2153
 10625               	.LBB664:
 10626               	.LBI664:
 279:xmem/xmem.c   **** {
 10627               		.loc 10 279 6 view .LVU2154
 10628               	.LBB665:
 282:xmem/xmem.c   **** 	_memtest();
 10629               		.loc 10 282 2 view .LVU2155
 10630 0418 80E0      		ldi r24,lo8(__c.7.lto_priv.0)
 10631 041a 90E0      		ldi r25,hi8(__c.7.lto_priv.0)
 10632 041c 9F93      		push r25
 10633               		.cfi_def_cfa_offset 15
 10634 041e 8F93      		push r24
 10635               		.cfi_def_cfa_offset 16
 10636 0420 1F92      		push __zero_reg__
 10637               		.cfi_def_cfa_offset 17
 10638 0422 0E94 0000 		call log_boot_P
 283:xmem/xmem.c   **** }
 10639               		.loc 10 283 2 view .LVU2156
 10640               	.LBB666:
 10641               	.LBI666:
  65:xmem/xmem.c   **** {
 10642               		.loc 10 65 13 view .LVU2157
 10643               	.LBB667:
  67:xmem/xmem.c   **** 	u32 i;
 10644               		.loc 10 67 2 view .LVU2158
  68:xmem/xmem.c   **** 
 10645               		.loc 10 68 2 view .LVU2159
  71:xmem/xmem.c   **** 
 10646               		.loc 10 71 2 view .LVU2160
 10647 0426 80E0      		ldi r24,lo8(__c.6.lto_priv.0)
 10648 0428 90E0      		ldi r25,hi8(__c.6.lto_priv.0)
 10649 042a 9F93      		push r25
 10650               		.cfi_def_cfa_offset 18
 10651 042c 8F93      		push r24
 10652               		.cfi_def_cfa_offset 19
 10653 042e 1F92      		push __zero_reg__
 10654               		.cfi_def_cfa_offset 20
 10655 0430 0E94 0000 		call log_boot_P
  73:xmem/xmem.c   **** 	for(bank = 0; bank < BANK_COUNT; ++bank)
 10656               		.loc 10 73 2 view .LVU2161
 10657 0434 0E94 0000 		call spi_fast
  74:xmem/xmem.c   **** 	{
 10658               		.loc 10 74 2 view .LVU2162
  74:xmem/xmem.c   **** 	{
 10659               		.loc 10 74 21 view .LVU2163
  73:xmem/xmem.c   **** 	for(bank = 0; bank < BANK_COUNT; ++bank)
 10660               		.loc 10 73 2 is_stmt 0 view .LVU2164
 10661 0438 4DB7      		in r20,__SP_L__
 10662 043a 5EB7      		in r21,__SP_H__
 10663 043c 4E5E      		subi r20,-18
 10664 043e 5F4F      		sbci r21,-1
 10665 0440 0FB6      		in __tmp_reg__,__SREG__
 10666 0442 F894      		cli
 10667 0444 5EBF      		out __SP_H__,r21
 10668 0446 0FBE      		out __SREG__,__tmp_reg__
 10669 0448 4DBF      		out __SP_L__,r20
 10670               		.cfi_def_cfa_offset 2
  79:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_WRITE, 0);
 10671               		.loc 10 79 3 view .LVU2165
 10672 044a A0E0      		ldi r26,lo8(__c.4.lto_priv.0)
 10673 044c EA2E      		mov r14,r26
 10674 044e A0E0      		ldi r26,hi8(__c.4.lto_priv.0)
 10675 0450 FA2E      		mov r15,r26
  95:xmem/xmem.c   **** 			}
 10676               		.loc 10 95 5 view .LVU2166
 10677 0452 B0E0      		ldi r27,lo8(__c.3.lto_priv.0)
 10678 0454 AB2E      		mov r10,r27
 10679 0456 B0E0      		ldi r27,hi8(__c.3.lto_priv.0)
 10680 0458 BB2E      		mov r11,r27
 10681 045a 17E0      		ldi r17,lo8(7)
 10682 045c 212E      		mov r2,r17
 106:xmem/xmem.c   **** 
 10683               		.loc 10 106 3 view .LVU2167
 10684 045e 8824      		clr r8
 10685 0460 8394      		inc r8
 10686 0462 912C      		mov r9,__zero_reg__
 109:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_READ, 0);
 10687               		.loc 10 109 3 view .LVU2168
 10688 0464 80E0      		ldi r24,lo8(__c.2.lto_priv.2)
 10689 0466 C82E      		mov r12,r24
 10690 0468 80E0      		ldi r24,hi8(__c.2.lto_priv.2)
 10691 046a D82E      		mov r13,r24
 10692               	.L302:
 10693 046c 3C2E      		mov r3,r28
  76:xmem/xmem.c   **** 
 10694               		.loc 10 76 3 is_stmt 1 view .LVU2169
 10695 046e 0C2F      		mov r16,r28
 10696 0470 2196      		adiw r28,1
 10697 0472 DF93      		push r29
 10698               		.cfi_def_cfa_offset 3
 10699 0474 CF93      		push r28
 10700               		.cfi_def_cfa_offset 4
 10701 0476 E0E0      		ldi r30,lo8(__c.5.lto_priv.0)
 10702 0478 F0E0      		ldi r31,hi8(__c.5.lto_priv.0)
 10703 047a FF93      		push r31
 10704               		.cfi_def_cfa_offset 5
 10705 047c EF93      		push r30
 10706               		.cfi_def_cfa_offset 6
 10707 047e 1F92      		push __zero_reg__
 10708               		.cfi_def_cfa_offset 7
 10709 0480 0E94 0000 		call log_boot_P
  79:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_WRITE, 0);
 10710               		.loc 10 79 3 view .LVU2170
 10711 0484 FF92      		push r15
 10712               		.cfi_def_cfa_offset 8
 10713 0486 EF92      		push r14
 10714               		.cfi_def_cfa_offset 9
 10715 0488 1F92      		push __zero_reg__
 10716               		.cfi_def_cfa_offset 10
 10717 048a 0E94 0000 		call log_boot_P
  80:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 10718               		.loc 10 80 3 view .LVU2171
 10719 048e 20E0      		ldi r18,0
 10720 0490 30E0      		ldi r19,0
 10721 0492 A901      		movw r20,r18
 10722 0494 62E0      		ldi r22,lo8(2)
 10723 0496 832D      		mov r24,r3
 10724 0498 0E94 0000 		call _xmem_start
  82:xmem/xmem.c   **** #else
 10725               		.loc 10 82 3 view .LVU2172
  86:xmem/xmem.c   **** 		{
 10726               		.loc 10 86 3 view .LVU2173
  80:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 10727               		.loc 10 80 3 is_stmt 0 view .LVU2174
 10728 049c 4DB7      		in r20,__SP_L__
 10729 049e 5EB7      		in r21,__SP_H__
 10730 04a0 485F      		subi r20,-8
 10731 04a2 5F4F      		sbci r21,-1
 10732 04a4 0FB6      		in __tmp_reg__,__SREG__
 10733 04a6 F894      		cli
 10734 04a8 5EBF      		out __SP_H__,r21
 10735 04aa 0FBE      		out __SREG__,__tmp_reg__
 10736 04ac 4DBF      		out __SP_L__,r20
 10737               		.cfi_def_cfa_offset 2
  86:xmem/xmem.c   **** 		{
 10738               		.loc 10 86 9 view .LVU2175
 10739 04ae 412C      		mov r4,__zero_reg__
 10740 04b0 512C      		mov r5,__zero_reg__
 10741 04b2 3201      		movw r6,r4
  82:xmem/xmem.c   **** #else
 10742               		.loc 10 82 5 view .LVU2176
 10743 04b4 1AEA      		ldi r17,lo8(-86)
 10744               	.L297:
  89:xmem/xmem.c   **** #else
 10745               		.loc 10 89 4 is_stmt 1 view .LVU2177
  89:xmem/xmem.c   **** #else
 10746               		.loc 10 89 6 is_stmt 0 view .LVU2178
 10747 04b6 1095      		com r17
  93:xmem/xmem.c   **** 			{
 10748               		.loc 10 93 4 is_stmt 1 view .LVU2179
  93:xmem/xmem.c   **** 			{
 10749               		.loc 10 93 9 is_stmt 0 view .LVU2180
 10750 04b8 D301      		movw r26,r6
 10751 04ba C201      		movw r24,r4
 10752 04bc 9F71      		andi r25,31
 10753 04be AA27      		clr r26
 10754 04c0 BB27      		clr r27
  93:xmem/xmem.c   **** 			{
 10755               		.loc 10 93 6 view .LVU2181
 10756 04c2 892B      		or r24,r25
 10757 04c4 8A2B      		or r24,r26
 10758 04c6 8B2B      		or r24,r27
 10759 04c8 01F4      		brne .L295
  95:xmem/xmem.c   **** 			}
 10760               		.loc 10 95 5 is_stmt 1 view .LVU2182
 10761 04ca 7F92      		push r7
 10762               		.cfi_def_cfa_offset 3
 10763 04cc 6F92      		push r6
 10764               		.cfi_def_cfa_offset 4
 10765 04ce 5F92      		push r5
 10766               		.cfi_def_cfa_offset 5
 10767 04d0 4F92      		push r4
 10768               		.cfi_def_cfa_offset 6
 10769 04d2 BF92      		push r11
 10770               		.cfi_def_cfa_offset 7
 10771 04d4 AF92      		push r10
 10772               		.cfi_def_cfa_offset 8
 10773 04d6 2F92      		push r2
 10774               		.cfi_def_cfa_offset 9
 10775 04d8 0E94 0000 		call log_boot_P
 10776 04dc 8DB7      		in r24,__SP_L__
 10777 04de 9EB7      		in r25,__SP_H__
 10778 04e0 0796      		adiw r24,7
 10779 04e2 0FB6      		in __tmp_reg__,__SREG__
 10780 04e4 F894      		cli
 10781 04e6 9EBF      		out __SP_H__,r25
 10782 04e8 0FBE      		out __SREG__,__tmp_reg__
 10783 04ea 8DBF      		out __SP_L__,r24
 10784               		.cfi_def_cfa_offset 2
 10785               	.L295:
  98:xmem/xmem.c   **** 			{
 10786               		.loc 10 98 4 view .LVU2183
  98:xmem/xmem.c   **** 			{
 10787               		.loc 10 98 6 is_stmt 0 view .LVU2184
 10788 04ec 4114      		cp r4,__zero_reg__
 10789 04ee 5104      		cpc r5,__zero_reg__
 10790 04f0 92E0      		ldi r25,2
 10791 04f2 6906      		cpc r6,r25
 10792 04f4 7104      		cpc r7,__zero_reg__
 10793 04f6 01F0      		breq .L296
 103:xmem/xmem.c   **** 		}
 10794               		.loc 10 103 4 is_stmt 1 view .LVU2185
 10795 04f8 812F      		mov r24,r17
 10796 04fa 0E94 0000 		call spi_xchg
  86:xmem/xmem.c   **** 		{
 10797               		.loc 10 86 16 view .LVU2186
 10798 04fe EFEF      		ldi r30,-1
 10799 0500 4E1A      		sub r4,r30
 10800 0502 5E0A      		sbc r5,r30
 10801 0504 6E0A      		sbc r6,r30
 10802 0506 7E0A      		sbc r7,r30
  86:xmem/xmem.c   **** 		{
 10803               		.loc 10 86 3 view .LVU2187
  89:xmem/xmem.c   **** #else
 10804               		.loc 10 89 6 is_stmt 0 view .LVU2188
 10805 0508 00C0      		rjmp .L297
 10806               	.L296:
 106:xmem/xmem.c   **** 
 10807               		.loc 10 106 3 is_stmt 1 view .LVU2189
 10808 050a 85B1      		in r24,0x5
 10809 050c 9401      		movw r18,r8
 10810 050e 00C0      		rjmp 2f
 10811               		1:
 10812 0510 220F      		lsl r18
 10813 0512 331F      		rol r19
 10814               		2:
 10815 0514 0A95      		dec r16
 10816 0516 02F4      		brpl 1b
 10817 0518 8901      		movw r16,r18
 10818 051a 822B      		or r24,r18
 10819 051c 85B9      		out 0x5,r24
 109:xmem/xmem.c   **** 		_xmem_start(bank, SRAM_COMMAND_READ, 0);
 10820               		.loc 10 109 3 view .LVU2190
 10821 051e DF92      		push r13
 10822               		.cfi_def_cfa_offset 3
 10823 0520 CF92      		push r12
 10824               		.cfi_def_cfa_offset 4
 10825 0522 1F92      		push __zero_reg__
 10826               		.cfi_def_cfa_offset 5
 10827 0524 0E94 0000 		call log_boot_P
 110:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 10828               		.loc 10 110 3 view .LVU2191
 10829 0528 20E0      		ldi r18,0
 10830 052a 30E0      		ldi r19,0
 10831 052c A901      		movw r20,r18
 10832 052e 63E0      		ldi r22,lo8(3)
 10833 0530 832D      		mov r24,r3
 10834 0532 0E94 0000 		call _xmem_start
 112:xmem/xmem.c   **** #else
 10835               		.loc 10 112 3 view .LVU2192
 116:xmem/xmem.c   **** 		{
 10836               		.loc 10 116 3 view .LVU2193
 110:xmem/xmem.c   **** #ifdef MEMTEST_SIMPLE
 10837               		.loc 10 110 3 is_stmt 0 view .LVU2194
 10838 0536 0F90      		pop __tmp_reg__
 10839 0538 0F90      		pop __tmp_reg__
 10840 053a 0F90      		pop __tmp_reg__
 10841               		.cfi_def_cfa_offset 2
 116:xmem/xmem.c   **** 		{
 10842               		.loc 10 116 9 view .LVU2195
 10843 053c 412C      		mov r4,__zero_reg__
 10844 053e 512C      		mov r5,__zero_reg__
 10845 0540 3201      		movw r6,r4
 112:xmem/xmem.c   **** #else
 10846               		.loc 10 112 5 view .LVU2196
 10847 0542 8AEA      		ldi r24,lo8(-86)
 10848               	.L301:
 119:xmem/xmem.c   **** #else
 10849               		.loc 10 119 4 is_stmt 1 view .LVU2197
 119:xmem/xmem.c   **** #else
 10850               		.loc 10 119 6 is_stmt 0 view .LVU2198
 10851 0544 382E      		mov r3,r24
 10852 0546 3094      		com r3
 123:xmem/xmem.c   **** 			{
 10853               		.loc 10 123 4 is_stmt 1 view .LVU2199
 123:xmem/xmem.c   **** 			{
 10854               		.loc 10 123 9 is_stmt 0 view .LVU2200
 10855 0548 D301      		movw r26,r6
 10856 054a C201      		movw r24,r4
 10857 054c 9F71      		andi r25,31
 10858 054e AA27      		clr r26
 10859 0550 BB27      		clr r27
 123:xmem/xmem.c   **** 			{
 10860               		.loc 10 123 6 view .LVU2201
 10861 0552 892B      		or r24,r25
 10862 0554 8A2B      		or r24,r26
 10863 0556 8B2B      		or r24,r27
 10864 0558 01F4      		brne .L298
 125:xmem/xmem.c   **** 			}
 10865               		.loc 10 125 5 is_stmt 1 view .LVU2202
 10866 055a 7F92      		push r7
 10867               		.cfi_def_cfa_offset 3
 10868 055c 6F92      		push r6
 10869               		.cfi_def_cfa_offset 4
 10870 055e 5F92      		push r5
 10871               		.cfi_def_cfa_offset 5
 10872 0560 4F92      		push r4
 10873               		.cfi_def_cfa_offset 6
 10874 0562 80E0      		ldi r24,lo8(__c.1.lto_priv.2)
 10875 0564 90E0      		ldi r25,hi8(__c.1.lto_priv.2)
 10876 0566 9F93      		push r25
 10877               		.cfi_def_cfa_offset 7
 10878 0568 8F93      		push r24
 10879               		.cfi_def_cfa_offset 8
 10880 056a 87E0      		ldi r24,lo8(7)
 10881 056c 8F93      		push r24
 10882               		.cfi_def_cfa_offset 9
 10883 056e 0E94 0000 		call log_boot_P
 10884 0572 4DB7      		in r20,__SP_L__
 10885 0574 5EB7      		in r21,__SP_H__
 10886 0576 495F      		subi r20,-7
 10887 0578 5F4F      		sbci r21,-1
 10888 057a 0FB6      		in __tmp_reg__,__SREG__
 10889 057c F894      		cli
 10890 057e 5EBF      		out __SP_H__,r21
 10891 0580 0FBE      		out __SREG__,__tmp_reg__
 10892 0582 4DBF      		out __SP_L__,r20
 10893               		.cfi_def_cfa_offset 2
 10894               	.L298:
 128:xmem/xmem.c   **** 			{
 10895               		.loc 10 128 4 view .LVU2203
 128:xmem/xmem.c   **** 			{
 10896               		.loc 10 128 6 is_stmt 0 view .LVU2204
 10897 0584 4114      		cp r4,__zero_reg__
 10898 0586 5104      		cpc r5,__zero_reg__
 10899 0588 52E0      		ldi r21,2
 10900 058a 6506      		cpc r6,r21
 10901 058c 7104      		cpc r7,__zero_reg__
 10902 058e 01F0      		breq .L299
 133:xmem/xmem.c   **** 			if(w != v)
 10903               		.loc 10 133 4 is_stmt 1 view .LVU2205
 133:xmem/xmem.c   **** 			if(w != v)
 10904               		.loc 10 133 8 is_stmt 0 view .LVU2206
 10905 0590 8FEF      		ldi r24,lo8(-1)
 10906 0592 0E94 0000 		call spi_xchg
 134:xmem/xmem.c   **** 			{
 10907               		.loc 10 134 4 is_stmt 1 view .LVU2207
 134:xmem/xmem.c   **** 			{
 10908               		.loc 10 134 6 is_stmt 0 view .LVU2208
 10909 0596 3816      		cp r3,r24
 10910 0598 01F0      		breq .L300
 136:xmem/xmem.c   **** 				panic(PSTR(
 10911               		.loc 10 136 5 is_stmt 1 view .LVU2209
 10912 059a 95B1      		in r25,0x5
 10913 059c 902B      		or r25,r16
 10914 059e 95B9      		out 0x5,r25
 137:xmem/xmem.c   **** 					"Memory test failed at address 0x%06lX\n"
 10915               		.loc 10 137 5 view .LVU2210
 10916 05a0 1F92      		push __zero_reg__
 10917               		.cfi_remember_state
 10918               		.cfi_def_cfa_offset 3
 10919 05a2 3F92      		push r3
 10920               		.cfi_def_cfa_offset 4
 10921 05a4 1F92      		push __zero_reg__
 10922               		.cfi_def_cfa_offset 5
 10923 05a6 8F93      		push r24
 10924               		.cfi_def_cfa_offset 6
 10925 05a8 7F92      		push r7
 10926               		.cfi_def_cfa_offset 7
 10927 05aa 6F92      		push r6
 10928               		.cfi_def_cfa_offset 8
 10929 05ac 5F92      		push r5
 10930               		.cfi_def_cfa_offset 9
 10931 05ae 4F92      		push r4
 10932               		.cfi_def_cfa_offset 10
 10933 05b0 80E0      		ldi r24,lo8(__c.0.lto_priv.6)
 10934 05b2 90E0      		ldi r25,hi8(__c.0.lto_priv.6)
 10935 05b4 9F93      		push r25
 10936               		.cfi_def_cfa_offset 11
 10937 05b6 8F93      		push r24
 10938               		.cfi_def_cfa_offset 12
 10939 05b8 0E94 0000 		call panic
 10940               	.L300:
 10941               		.cfi_restore_state
 116:xmem/xmem.c   **** 		{
 10942               		.loc 10 116 16 view .LVU2211
 10943 05bc 9FEF      		ldi r25,-1
 10944 05be 491A      		sub r4,r25
 10945 05c0 590A      		sbc r5,r25
 10946 05c2 690A      		sbc r6,r25
 10947 05c4 790A      		sbc r7,r25
 116:xmem/xmem.c   **** 		{
 10948               		.loc 10 116 3 view .LVU2212
 119:xmem/xmem.c   **** #else
 10949               		.loc 10 119 6 is_stmt 0 view .LVU2213
 10950 05c6 00C0      		rjmp .L301
 10951               	.L299:
 144:xmem/xmem.c   **** 	}
 10952               		.loc 10 144 3 is_stmt 1 view .LVU2214
 10953 05c8 85B1      		in r24,0x5
 10954 05ca 802B      		or r24,r16
 10955 05cc 85B9      		out 0x5,r24
  74:xmem/xmem.c   **** 	{
 10956               		.loc 10 74 35 view .LVU2215
  74:xmem/xmem.c   **** 	{
 10957               		.loc 10 74 21 view .LVU2216
 10958 05ce C330      		cpi r28,3
 10959 05d0 D105      		cpc r29,__zero_reg__
 10960 05d2 01F0      		breq .+2
 10961 05d4 00C0      		rjmp .L302
 10962               	.LBE667:
 10963               	.LBE666:
 10964               	.LBE665:
 10965               	.LBE664:
  68:main.c        **** 
  69:main.c        **** 	/* Initialize SD card driver */
  70:main.c        **** 	sd_init();
 10966               		.loc 15 70 2 view .LVU2217
 10967               	.LBB668:
 10968               	.LBI668:
 268:sd/sd.c       **** {
 10969               		.loc 5 268 6 view .LVU2218
 10970               	.LBB669:
 270:sd/sd.c       **** 
 10971               		.loc 5 270 2 view .LVU2219
 10972 05d6 80E0      		ldi r24,lo8(__c.23)
 10973 05d8 90E0      		ldi r25,hi8(__c.23)
 10974 05da 9F93      		push r25
 10975               		.cfi_def_cfa_offset 3
 10976 05dc 8F93      		push r24
 10977               		.cfi_def_cfa_offset 4
 10978 05de 1F92      		push __zero_reg__
 10979               		.cfi_def_cfa_offset 5
 10980 05e0 0E94 0000 		call log_boot_P
 10981               	.LBB670:
 273:sd/sd.c       **** 		u16 i;
 10982               		.loc 5 273 3 view .LVU2220
 274:sd/sd.c       **** 		u32 arg;
 10983               		.loc 5 274 3 view .LVU2221
 275:sd/sd.c       **** 
 10984               		.loc 5 275 3 view .LVU2222
 277:sd/sd.c       **** 		_spi_configure_slow();
 10985               		.loc 5 277 3 view .LVU2223
 10986 05e4 5C9A      		sbi 0xb,4
 278:sd/sd.c       **** 		_card_type = 0;
 10987               		.loc 5 278 3 view .LVU2224
 10988               	.LBB671:
 10989               	.LBI671:
 111:sd/sd.c       **** {
 10990               		.loc 5 111 13 view .LVU2225
 10991               	.LBB672:
 113:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 10992               		.loc 5 113 2 view .LVU2226
 10993 05e6 8CB5      		in r24,0x2c
 113:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 10994               		.loc 5 113 7 is_stmt 0 view .LVU2227
 10995 05e8 8360      		ori r24,lo8(3)
 10996 05ea 8CBD      		out 0x2c,r24
 114:sd/sd.c       **** }
 10997               		.loc 5 114 2 is_stmt 1 view .LVU2228
 114:sd/sd.c       **** }
 10998               		.loc 5 114 7 is_stmt 0 view .LVU2229
 10999 05ec 8DB5      		in r24,0x2d
 11000 05ee 8E7F      		andi r24,lo8(-2)
 11001 05f0 8DBD      		out 0x2d,r24
 11002               	.LBE672:
 11003               	.LBE671:
 279:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 11004               		.loc 5 279 3 is_stmt 1 view .LVU2230
 279:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 11005               		.loc 5 279 14 is_stmt 0 view .LVU2231
 11006 05f2 1092 0000 		sts _card_type,__zero_reg__
 280:sd/sd.c       **** 		{
 11007               		.loc 5 280 3 is_stmt 1 view .LVU2232
 280:sd/sd.c       **** 		{
 11008               		.loc 5 280 16 view .LVU2233
 279:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 11009               		.loc 5 279 14 is_stmt 0 view .LVU2234
 11010 05f6 0F90      		pop __tmp_reg__
 11011 05f8 0F90      		pop __tmp_reg__
 11012 05fa 0F90      		pop __tmp_reg__
 11013               		.cfi_def_cfa_offset 2
 11014 05fc CAE0      		ldi r28,lo8(10)
 11015 05fe D0E0      		ldi r29,0
 11016               	.L303:
 282:sd/sd.c       **** 		}
 11017               		.loc 5 282 4 is_stmt 1 view .LVU2235
 11018 0600 8FEF      		ldi r24,lo8(-1)
 11019 0602 0E94 0000 		call spi_xchg
 280:sd/sd.c       **** 		{
 11020               		.loc 5 280 22 view .LVU2236
 280:sd/sd.c       **** 		{
 11021               		.loc 5 280 16 view .LVU2237
 11022 0606 2197      		sbiw r28,1
 11023 0608 2097      		sbiw r28,0
 11024 060a 01F4      		brne .L303
 285:sd/sd.c       **** 		for(i = 0; ; ++i)
 11025               		.loc 5 285 3 view .LVU2238
 11026 060c 5C98      		cbi 0xb,4
 286:sd/sd.c       **** 		{
 11027               		.loc 5 286 3 view .LVU2239
 285:sd/sd.c       **** 		for(i = 0; ; ++i)
 11028               		.loc 5 285 3 is_stmt 0 view .LVU2240
 11029 060e C0E0      		ldi r28,0
 11030 0610 D2E0      		ldi r29,lo8(2)
 11031               	.L305:
 288:sd/sd.c       **** 			{
 11032               		.loc 5 288 4 is_stmt 1 view .LVU2241
 288:sd/sd.c       **** 			{
 11033               		.loc 5 288 7 is_stmt 0 view .LVU2242
 11034 0612 40E0      		ldi r20,0
 11035 0614 50E0      		ldi r21,0
 11036 0616 BA01      		movw r22,r20
 11037 0618 80E0      		ldi r24,0
 11038 061a 0E94 0000 		call _sd_command
 288:sd/sd.c       **** 			{
 11039               		.loc 5 288 6 view .LVU2243
 11040 061e 8130      		cpi r24,lo8(1)
 11041 0620 01F0      		breq .L304
 293:sd/sd.c       **** 			{
 11042               		.loc 5 293 4 is_stmt 1 view .LVU2244
 293:sd/sd.c       **** 			{
 11043               		.loc 5 293 6 is_stmt 0 view .LVU2245
 11044 0622 2197      		sbiw r28,1
 11045 0624 2097      		sbiw r28,0
 11046 0626 01F4      		brne .L305
 11047               	.L315:
 295:sd/sd.c       **** 			}
 11048               		.loc 5 295 5 is_stmt 1 view .LVU2246
 11049 0628 0E94 0000 		call _sd_timeout
 11050               	.L304:
 299:sd/sd.c       **** 		{
 11051               		.loc 5 299 3 view .LVU2247
 299:sd/sd.c       **** 		{
 11052               		.loc 5 299 7 is_stmt 0 view .LVU2248
 11053 062c 4AEA      		ldi r20,lo8(-86)
 11054 062e 51E0      		ldi r21,lo8(1)
 11055 0630 60E0      		ldi r22,0
 11056 0632 70E0      		ldi r23,0
 11057 0634 88E0      		ldi r24,lo8(8)
 11058 0636 0E94 0000 		call _sd_command
 299:sd/sd.c       **** 		{
 11059               		.loc 5 299 5 view .LVU2249
 11060 063a 82FD      		sbrc r24,2
 11061 063c 00C0      		rjmp .L306
 301:sd/sd.c       **** 			spi_xchg(0xFF);
 11062               		.loc 5 301 4 is_stmt 1 view .LVU2250
 11063 063e 8FEF      		ldi r24,lo8(-1)
 11064 0640 0E94 0000 		call spi_xchg
 302:sd/sd.c       **** 			if(((spi_xchg(0xFF) & 0x01) == 0) ||
 11065               		.loc 5 302 4 view .LVU2251
 11066 0644 8FEF      		ldi r24,lo8(-1)
 11067 0646 0E94 0000 		call spi_xchg
 303:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 11068               		.loc 5 303 4 view .LVU2252
 303:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 11069               		.loc 5 303 9 is_stmt 0 view .LVU2253
 11070 064a 8FEF      		ldi r24,lo8(-1)
 11071 064c 0E94 0000 		call spi_xchg
 303:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 11072               		.loc 5 303 6 view .LVU2254
 11073 0650 80FF      		sbrs r24,0
 11074 0652 00C0      		rjmp .L308
 304:sd/sd.c       **** 			{
 11075               		.loc 5 304 6 view .LVU2255
 11076 0654 8FEF      		ldi r24,lo8(-1)
 11077 0656 0E94 0000 		call spi_xchg
 303:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 11078               		.loc 5 303 38 view .LVU2256
 11079 065a 8A3A      		cpi r24,lo8(-86)
 11080 065c 01F0      		breq .L404
 11081               	.L308:
 306:sd/sd.c       **** 			}
 11082               		.loc 5 306 5 is_stmt 1 view .LVU2257
 11083 065e 0E94 0000 		call _sd_error
 11084               	.L404:
 309:sd/sd.c       **** 		}
 11085               		.loc 5 309 4 view .LVU2258
 309:sd/sd.c       **** 		}
 11086               		.loc 5 309 15 is_stmt 0 view .LVU2259
 11087 0662 8091 0000 		lds r24,_card_type
 11088 0666 8260      		ori r24,lo8(2)
 11089               	.L407:
 316:sd/sd.c       **** 			}
 11090               		.loc 5 316 16 view .LVU2260
 11091 0668 8093 0000 		sts _card_type,r24
 11092               	.L311:
 285:sd/sd.c       **** 		for(i = 0; ; ++i)
 11093               		.loc 5 285 3 view .LVU2261
 11094 066c C0E0      		ldi r28,0
 11095 066e D0E8      		ldi r29,lo8(-128)
 11096               	.L316:
 322:sd/sd.c       **** 			{
 11097               		.loc 5 322 4 is_stmt 1 view .LVU2262
 322:sd/sd.c       **** 			{
 11098               		.loc 5 322 18 is_stmt 0 view .LVU2263
 11099 0670 1091 0000 		lds r17,_card_type
 322:sd/sd.c       **** 			{
 11100               		.loc 5 322 6 view .LVU2264
 11101 0674 812F      		mov r24,r17
 11102 0676 8370      		andi r24,lo8(3)
 330:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 11103               		.loc 5 330 5 view .LVU2265
 11104 0678 40E0      		ldi r20,0
 11105 067a 50E0      		ldi r21,0
 11106 067c BA01      		movw r22,r20
 322:sd/sd.c       **** 			{
 11107               		.loc 5 322 6 view .LVU2266
 11108 067e 8823      		tst r24
 11109 0680 01F0      		breq .L312
 324:sd/sd.c       **** 				if(_card_type & SD_2)
 11110               		.loc 5 324 5 is_stmt 1 view .LVU2267
 325:sd/sd.c       **** 				{
 11111               		.loc 5 325 5 view .LVU2268
 330:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 11112               		.loc 5 330 5 view .LVU2269
 11113 0682 87E3      		ldi r24,lo8(55)
 11114 0684 0E94 0000 		call _sd_command
 331:sd/sd.c       **** 			}
 11115               		.loc 5 331 5 view .LVU2270
 325:sd/sd.c       **** 				{
 11116               		.loc 5 325 7 is_stmt 0 view .LVU2271
 11117 0688 1695      		lsr r17
 11118 068a 1170      		andi r17,1
 11119 068c 412F      		mov r20,r17
 11120 068e 50E0      		ldi r21,0
 11121 0690 60E0      		ldi r22,0
 11122 0692 70E0      		ldi r23,0
 11123 0694 FEE1      		ldi r31,30
 11124               		1:
 11125 0696 440F      		lsl r20
 11126 0698 551F      		rol r21
 11127 069a 661F      		rol r22
 11128 069c 771F      		rol r23
 11129 069e FA95      		dec r31
 11130 06a0 01F4      		brne 1b
 331:sd/sd.c       **** 			}
 11131               		.loc 5 331 16 view .LVU2272
 11132 06a2 89E2      		ldi r24,lo8(41)
 11133               	.L408:
 335:sd/sd.c       **** 			}
 11134               		.loc 5 335 16 view .LVU2273
 11135 06a4 0E94 0000 		call _sd_command
 338:sd/sd.c       **** 			{
 11136               		.loc 5 338 4 is_stmt 1 view .LVU2274
 338:sd/sd.c       **** 			{
 11137               		.loc 5 338 6 is_stmt 0 view .LVU2275
 11138 06a8 80FF      		sbrs r24,0
 11139 06aa 00C0      		rjmp .L314
 343:sd/sd.c       **** 			{
 11140               		.loc 5 343 4 is_stmt 1 view .LVU2276
 343:sd/sd.c       **** 			{
 11141               		.loc 5 343 6 is_stmt 0 view .LVU2277
 11142 06ac 2197      		sbiw r28,1
 11143 06ae 2097      		sbiw r28,0
 11144 06b0 01F4      		brne .L316
 11145 06b2 00C0      		rjmp .L315
 11146               	.L306:
 313:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 11147               		.loc 5 313 4 is_stmt 1 view .LVU2278
 11148 06b4 40E0      		ldi r20,0
 11149 06b6 50E0      		ldi r21,0
 11150 06b8 BA01      		movw r22,r20
 11151 06ba 87E3      		ldi r24,lo8(55)
 11152 06bc 0E94 0000 		call _sd_command
 314:sd/sd.c       **** 			{
 11153               		.loc 5 314 4 view .LVU2279
 314:sd/sd.c       **** 			{
 11154               		.loc 5 314 8 is_stmt 0 view .LVU2280
 11155 06c0 40E0      		ldi r20,0
 11156 06c2 50E0      		ldi r21,0
 11157 06c4 BA01      		movw r22,r20
 11158 06c6 89E2      		ldi r24,lo8(41)
 11159 06c8 0E94 0000 		call _sd_command
 314:sd/sd.c       **** 			{
 11160               		.loc 5 314 6 view .LVU2281
 11161 06cc 82FD      		sbrc r24,2
 11162 06ce 00C0      		rjmp .L311
 316:sd/sd.c       **** 			}
 11163               		.loc 5 316 5 is_stmt 1 view .LVU2282
 316:sd/sd.c       **** 			}
 11164               		.loc 5 316 16 is_stmt 0 view .LVU2283
 11165 06d0 8091 0000 		lds r24,_card_type
 11166 06d4 8160      		ori r24,lo8(1)
 11167 06d6 00C0      		rjmp .L407
 11168               	.L312:
 335:sd/sd.c       **** 			}
 11169               		.loc 5 335 5 is_stmt 1 view .LVU2284
 335:sd/sd.c       **** 			}
 11170               		.loc 5 335 16 is_stmt 0 view .LVU2285
 11171 06d8 81E0      		ldi r24,lo8(1)
 11172 06da 00C0      		rjmp .L408
 11173               	.L314:
 349:sd/sd.c       **** 		{
 11174               		.loc 5 349 3 is_stmt 1 view .LVU2286
 349:sd/sd.c       **** 		{
 11175               		.loc 5 349 5 is_stmt 0 view .LVU2287
 11176 06dc 8091 0000 		lds r24,_card_type
 11177 06e0 81FF      		sbrs r24,1
 11178 06e2 00C0      		rjmp .L317
 351:sd/sd.c       **** 			{
 11179               		.loc 5 351 4 is_stmt 1 view .LVU2288
 351:sd/sd.c       **** 			{
 11180               		.loc 5 351 7 is_stmt 0 view .LVU2289
 11181 06e4 40E0      		ldi r20,0
 11182 06e6 50E0      		ldi r21,0
 11183 06e8 BA01      		movw r22,r20
 11184 06ea 8AE3      		ldi r24,lo8(58)
 11185 06ec 0E94 0000 		call _sd_command
 351:sd/sd.c       **** 			{
 11186               		.loc 5 351 6 view .LVU2290
 11187 06f0 8111      		cpse r24,__zero_reg__
 11188 06f2 00C0      		rjmp .L308
 356:sd/sd.c       **** 			{
 11189               		.loc 5 356 4 is_stmt 1 view .LVU2291
 356:sd/sd.c       **** 			{
 11190               		.loc 5 356 7 is_stmt 0 view .LVU2292
 11191 06f4 8FEF      		ldi r24,lo8(-1)
 11192 06f6 0E94 0000 		call spi_xchg
 356:sd/sd.c       **** 			{
 11193               		.loc 5 356 6 view .LVU2293
 11194 06fa 86FF      		sbrs r24,6
 11195 06fc 00C0      		rjmp .L318
 358:sd/sd.c       **** 			}
 11196               		.loc 5 358 5 is_stmt 1 view .LVU2294
 358:sd/sd.c       **** 			}
 11197               		.loc 5 358 16 is_stmt 0 view .LVU2295
 11198 06fe 8091 0000 		lds r24,_card_type
 11199 0702 8460      		ori r24,lo8(4)
 11200 0704 8093 0000 		sts _card_type,r24
 11201               	.L318:
 361:sd/sd.c       **** 			spi_xchg(0xFF);
 11202               		.loc 5 361 4 is_stmt 1 view .LVU2296
 11203 0708 8FEF      		ldi r24,lo8(-1)
 11204 070a 0E94 0000 		call spi_xchg
 362:sd/sd.c       **** 			spi_xchg(0xFF);
 11205               		.loc 5 362 4 view .LVU2297
 11206 070e 8FEF      		ldi r24,lo8(-1)
 11207 0710 0E94 0000 		call spi_xchg
 363:sd/sd.c       **** 		}
 11208               		.loc 5 363 4 view .LVU2298
 11209 0714 8FEF      		ldi r24,lo8(-1)
 11210 0716 0E94 0000 		call spi_xchg
 11211               	.L317:
 366:sd/sd.c       **** 		{
 11212               		.loc 5 366 3 view .LVU2299
 366:sd/sd.c       **** 		{
 11213               		.loc 5 366 6 is_stmt 0 view .LVU2300
 11214 071a 40E0      		ldi r20,0
 11215 071c 52E0      		ldi r21,lo8(2)
 11216 071e 60E0      		ldi r22,0
 11217 0720 70E0      		ldi r23,0
 11218 0722 80E1      		ldi r24,lo8(16)
 11219 0724 0E94 0000 		call _sd_command
 11220 0728 D82E      		mov r13,r24
 366:sd/sd.c       **** 		{
 11221               		.loc 5 366 5 view .LVU2301
 11222 072a 8111      		cpse r24,__zero_reg__
 11223 072c 00C0      		rjmp .L308
 371:sd/sd.c       **** 		spi_fast();
 11224               		.loc 5 371 3 is_stmt 1 view .LVU2302
 11225 072e 5C9A      		sbi 0xb,4
 372:sd/sd.c       **** 		_delay_ms(20);
 11226               		.loc 5 372 3 view .LVU2303
 11227 0730 0E94 0000 		call spi_fast
 373:sd/sd.c       **** 	}
 11228               		.loc 5 373 3 view .LVU2304
 11229               	.LBB673:
 11230               	.LBI673:
 166:/usr/avr/include/util/delay.h **** {
 11231               		.loc 17 166 1 view .LVU2305
 11232               	.LBB674:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 11233               		.loc 17 168 2 view .LVU2306
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 11234               		.loc 17 190 2 view .LVU2307
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 11235               		.loc 17 191 2 view .LVU2308
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 11236               		.loc 17 192 2 view .LVU2309
 194:/usr/avr/include/util/delay.h **** 	{
 11237               		.loc 17 194 7 view .LVU2310
 198:/usr/avr/include/util/delay.h **** 		{
 11238               		.loc 17 198 9 view .LVU2311
 11239               	.LBE674:
 11240               	.LBE673:
 372:sd/sd.c       **** 		_delay_ms(20);
 11241               		.loc 5 372 3 is_stmt 0 view .LVU2312
 11242 0734 C8EC      		ldi r28,lo8(-56)
 11243 0736 D0E0      		ldi r29,0
 11244               	.LBB680:
 11245               	.LBB679:
 11246               	.LBB675:
 11247               	.LBB676:
 11248               		.loc 18 105 2 view .LVU2313
 11249 0738 20E9      		ldi r18,lo8(-112)
 11250 073a 31E0      		ldi r19,lo8(1)
 11251               	.L319:
 11252               	.LBE676:
 11253               	.LBE675:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 11254               		.loc 17 201 4 is_stmt 1 view .LVU2314
 11255               	.LBB678:
 11256               	.LBI675:
 103:/usr/avr/include/util/delay_basic.h **** {
 11257               		.loc 18 103 1 view .LVU2315
 11258               	.LBB677:
 11259               		.loc 18 105 2 view .LVU2316
 11260 073c C901      		movw r24,r18
 11261               	/* #APP */
 11262               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 11263 073e 0197      		1: sbiw r24,1
 11264 0740 01F4      		brne 1b
 11265               	 ;  0 "" 2
 11266               	/* #NOAPP */
 11267               	.LBE677:
 11268               	.LBE678:
 11269               		.loc 17 202 4 view .LVU2317
 198:/usr/avr/include/util/delay.h **** 		{
 11270               		.loc 17 198 9 view .LVU2318
 11271 0742 2197      		sbiw r28,1
 11272 0744 2097      		sbiw r28,0
 11273 0746 01F4      		brne .L319
 11274               	.LBE679:
 11275               	.LBE680:
 11276               	.LBE670:
 376:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("Reading SD card parameters"));
 11277               		.loc 5 376 2 view .LVU2319
 11278 0748 80E0      		ldi r24,lo8(__c.22)
 11279 074a 90E0      		ldi r25,hi8(__c.22)
 11280 074c 9F93      		push r25
 11281               		.cfi_def_cfa_offset 3
 11282 074e 8F93      		push r24
 11283               		.cfi_def_cfa_offset 4
 11284 0750 1F92      		push __zero_reg__
 11285               		.cfi_def_cfa_offset 5
 11286 0752 0E94 0000 		call log_boot_P
 377:sd/sd.c       **** 
 11287               		.loc 5 377 2 view .LVU2320
 11288 0756 80E0      		ldi r24,lo8(__c.21)
 11289 0758 90E0      		ldi r25,hi8(__c.21)
 11290 075a 9F93      		push r25
 11291               		.cfi_def_cfa_offset 6
 11292 075c 8F93      		push r24
 11293               		.cfi_def_cfa_offset 7
 11294 075e 1F92      		push __zero_reg__
 11295               		.cfi_def_cfa_offset 8
 11296 0760 0E94 0000 		call log_boot_P
 11297               	.LBB681:
 380:sd/sd.c       **** 		u16 j, csd_c_size;
 11298               		.loc 5 380 3 view .LVU2321
 381:sd/sd.c       **** 
 11299               		.loc 5 381 3 view .LVU2322
 383:sd/sd.c       **** 		SD_SELECT;
 11300               		.loc 5 383 3 view .LVU2323
 11301 0764 0E94 0000 		call spi_fast
 384:sd/sd.c       **** 
 11302               		.loc 5 384 3 view .LVU2324
 11303 0768 5C98      		cbi 0xb,4
 387:sd/sd.c       **** 		j = 0;
 11304               		.loc 5 387 3 view .LVU2325
 11305 076a 40E0      		ldi r20,0
 11306 076c 50E0      		ldi r21,0
 11307 076e BA01      		movw r22,r20
 11308 0770 8AE0      		ldi r24,lo8(10)
 11309 0772 0E94 0000 		call _sd_command
 388:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 11310               		.loc 5 388 3 view .LVU2326
 389:sd/sd.c       **** 		{
 11311               		.loc 5 389 3 view .LVU2327
 389:sd/sd.c       **** 		{
 11312               		.loc 5 389 8 is_stmt 0 view .LVU2328
 11313 0776 0F90      		pop __tmp_reg__
 11314 0778 0F90      		pop __tmp_reg__
 11315 077a 0F90      		pop __tmp_reg__
 11316 077c 0F90      		pop __tmp_reg__
 11317 077e 0F90      		pop __tmp_reg__
 11318 0780 0F90      		pop __tmp_reg__
 11319               		.cfi_def_cfa_offset 2
 11320 0782 00E0      		ldi r16,0
 11321 0784 10E8      		ldi r17,lo8(-128)
 11322               	.L320:
 389:sd/sd.c       **** 		{
 11323               		.loc 5 389 24 is_stmt 1 view .LVU2329
 389:sd/sd.c       **** 		{
 11324               		.loc 5 389 9 is_stmt 0 view .LVU2330
 11325 0786 8FEF      		ldi r24,lo8(-1)
 11326 0788 0E94 0000 		call spi_xchg
 389:sd/sd.c       **** 		{
 11327               		.loc 5 389 24 view .LVU2331
 11328 078c 8E3F      		cpi r24,lo8(-2)
 11329 078e 01F4      		brne .L321
 11330 0790 70E0      		ldi r23,lo8(_oem-1)
 11331 0792 A72E      		mov r10,r23
 11332 0794 70E0      		ldi r23,hi8(_oem-1)
 11333 0796 B72E      		mov r11,r23
 11334 0798 E0E0      		ldi r30,lo8(_product-3)
 11335 079a EE2E      		mov r14,r30
 11336 079c E0E0      		ldi r30,hi8(_product-3)
 11337 079e FE2E      		mov r15,r30
 397:sd/sd.c       **** 		{
 11338               		.loc 5 397 9 view .LVU2332
 11339 07a0 C12C      		mov r12,__zero_reg__
 389:sd/sd.c       **** 		{
 11340               		.loc 5 389 24 view .LVU2333
 11341 07a2 00E6      		ldi r16,lo8(96)
 11342 07a4 10E0      		ldi r17,0
 11343               	.L333:
 399:sd/sd.c       **** 			switch(i)
 11344               		.loc 5 399 4 is_stmt 1 view .LVU2334
 399:sd/sd.c       **** 			switch(i)
 11345               		.loc 5 399 8 is_stmt 0 view .LVU2335
 11346 07a6 8FEF      		ldi r24,lo8(-1)
 11347 07a8 0E94 0000 		call spi_xchg
 400:sd/sd.c       **** 			{
 11348               		.loc 5 400 4 is_stmt 1 view .LVU2336
 11349 07ac EEE0      		ldi r30,lo8(14)
 11350 07ae EC15      		cp r30,r12
 11351 07b0 00F4      		brsh .+2
 11352 07b2 00C0      		rjmp .L322
 11353 07b4 EC2D      		mov r30,r12
 11354 07b6 F0E0      		ldi r31,0
 11355 07b8 E050      		subi r30,lo8(-(gs(.L324)))
 11356 07ba F040      		sbci r31,hi8(-(gs(.L324)))
 11357 07bc B501      		movw r22,r10
 11358 07be 6F5F      		subi r22,-1
 11359 07c0 7F4F      		sbci r23,-1
 11360 07c2 A701      		movw r20,r14
 11361 07c4 4F5F      		subi r20,-1
 11362 07c6 5F4F      		sbci r21,-1
 11363 07c8 9801      		movw r18,r16
 11364 07ca 2850      		subi r18,8
 11365 07cc 3109      		sbc r19,__zero_reg__
 11366 07ce 0C94 0000 		jmp __tablejump2__
 11367               		.section	.jumptables.gcc.main,"a",@progbits
 11368               		.p2align	1
 11369               	.L324:
 11370 0000 0000      		.word gs(.L330)
 11371 0002 0000      		.word gs(.L363)
 11372 0004 0000      		.word gs(.L363)
 11373 0006 0000      		.word gs(.L328)
 11374 0008 0000      		.word gs(.L328)
 11375 000a 0000      		.word gs(.L328)
 11376 000c 0000      		.word gs(.L328)
 11377 000e 0000      		.word gs(.L328)
 11378 0010 0000      		.word gs(.L327)
 11379 0012 0000      		.word gs(.L326)
 11380 0014 0000      		.word gs(.L326)
 11381 0016 0000      		.word gs(.L326)
 11382 0018 0000      		.word gs(.L326)
 11383 001a 0000      		.word gs(.L325)
 11384 001c 0000      		.word gs(.L323)
 11385               		.section	.text.startup
 11386               	.L321:
 391:sd/sd.c       **** 			{
 11387               		.loc 5 391 4 view .LVU2337
 391:sd/sd.c       **** 			{
 11388               		.loc 5 391 6 is_stmt 0 view .LVU2338
 11389 07d2 0150      		subi r16,1
 11390 07d4 1109      		sbc r17,__zero_reg__
 11391 07d6 0115      		cp r16,__zero_reg__
 11392 07d8 1105      		cpc r17,__zero_reg__
 11393 07da 01F4      		brne .L320
 11394 07dc 00C0      		rjmp .L315
 11395               	.L330:
 403:sd/sd.c       **** 					break;
 11396               		.loc 5 403 6 is_stmt 1 view .LVU2339
 403:sd/sd.c       **** 					break;
 11397               		.loc 5 403 20 is_stmt 0 view .LVU2340
 11398 07de 8093 0000 		sts _manufacturer,r24
 404:sd/sd.c       **** 
 11399               		.loc 5 404 6 is_stmt 1 view .LVU2341
 397:sd/sd.c       **** 		{
 11400               		.loc 5 397 22 view .LVU2342
 397:sd/sd.c       **** 		{
 11401               		.loc 5 397 16 view .LVU2343
 11402 07e2 5B01      		movw r10,r22
 11403 07e4 7A01      		movw r14,r20
 11404 07e6 8901      		movw r16,r18
 399:sd/sd.c       **** 			switch(i)
 11405               		.loc 5 399 4 view .LVU2344
 399:sd/sd.c       **** 			switch(i)
 11406               		.loc 5 399 8 is_stmt 0 view .LVU2345
 11407 07e8 8FEF      		ldi r24,lo8(-1)
 11408 07ea 0E94 0000 		call spi_xchg
 400:sd/sd.c       **** 			{
 11409               		.loc 5 400 4 is_stmt 1 view .LVU2346
 397:sd/sd.c       **** 		{
 11410               		.loc 5 397 22 is_stmt 0 view .LVU2347
 11411 07ee 91E0      		ldi r25,lo8(1)
 11412               	.L329:
 408:sd/sd.c       **** 					break;
 11413               		.loc 5 408 6 is_stmt 1 view .LVU2348
 408:sd/sd.c       **** 					break;
 11414               		.loc 5 408 18 is_stmt 0 view .LVU2349
 11415 07f0 F501      		movw r30,r10
 11416 07f2 8193      		st Z+,r24
 11417 07f4 5F01      		movw r10,r30
 409:sd/sd.c       **** 
 11418               		.loc 5 409 6 is_stmt 1 view .LVU2350
 397:sd/sd.c       **** 		{
 11419               		.loc 5 397 22 view .LVU2351
 11420 07f6 CC24      		clr r12
 11421 07f8 C394      		inc r12
 11422 07fa C90E      		add r12,r25
 397:sd/sd.c       **** 		{
 11423               		.loc 5 397 16 view .LVU2352
 11424 07fc FFEF      		ldi r31,-1
 11425 07fe EF1A      		sub r14,r31
 11426 0800 FF0A      		sbc r15,r31
 11427               	.L409:
 11428 0802 0850      		subi r16,8
 11429 0804 1109      		sbc r17,__zero_reg__
 11430 0806 00C0      		rjmp .L333
 11431               	.L363:
 400:sd/sd.c       **** 			{
 11432               		.loc 5 400 4 is_stmt 0 view .LVU2353
 11433 0808 92E0      		ldi r25,lo8(2)
 11434 080a 00C0      		rjmp .L329
 11435               	.L328:
 416:sd/sd.c       **** 					break;
 11436               		.loc 5 416 6 is_stmt 1 view .LVU2354
 416:sd/sd.c       **** 					break;
 11437               		.loc 5 416 22 is_stmt 0 view .LVU2355
 11438 080c F701      		movw r30,r14
 11439 080e 8083      		st Z,r24
 417:sd/sd.c       **** 
 11440               		.loc 5 417 6 is_stmt 1 view .LVU2356
 397:sd/sd.c       **** 		{
 11441               		.loc 5 397 22 view .LVU2357
 11442 0810 C394      		inc r12
 397:sd/sd.c       **** 		{
 11443               		.loc 5 397 16 view .LVU2358
 11444 0812 5B01      		movw r10,r22
 11445 0814 7A01      		movw r14,r20
 11446 0816 8901      		movw r16,r18
 11447 0818 00C0      		rjmp .L333
 11448               	.L327:
 420:sd/sd.c       **** 					break;
 11449               		.loc 5 420 6 view .LVU2359
 420:sd/sd.c       **** 					break;
 11450               		.loc 5 420 16 is_stmt 0 view .LVU2360
 11451 081a 8093 0000 		sts _revision,r24
 421:sd/sd.c       **** 
 11452               		.loc 5 421 6 is_stmt 1 view .LVU2361
 397:sd/sd.c       **** 		{
 11453               		.loc 5 397 22 view .LVU2362
 397:sd/sd.c       **** 		{
 11454               		.loc 5 397 16 view .LVU2363
 11455 081e 5B01      		movw r10,r22
 11456 0820 7A01      		movw r14,r20
 11457 0822 8901      		movw r16,r18
 399:sd/sd.c       **** 			switch(i)
 11458               		.loc 5 399 4 view .LVU2364
 399:sd/sd.c       **** 			switch(i)
 11459               		.loc 5 399 8 is_stmt 0 view .LVU2365
 11460 0824 8FEF      		ldi r24,lo8(-1)
 11461 0826 0E94 0000 		call spi_xchg
 400:sd/sd.c       **** 			{
 11462               		.loc 5 400 4 is_stmt 1 view .LVU2366
 397:sd/sd.c       **** 		{
 11463               		.loc 5 397 22 is_stmt 0 view .LVU2367
 11464 082a 69E0      		ldi r22,lo8(9)
 11465 082c C62E      		mov r12,r22
 11466               	.L326:
 427:sd/sd.c       **** 					break;
 11467               		.loc 5 427 6 is_stmt 1 view .LVU2368
 427:sd/sd.c       **** 					break;
 11468               		.loc 5 427 17 is_stmt 0 view .LVU2369
 11469 082e 90E0      		ldi r25,0
 11470 0830 A0E0      		ldi r26,0
 11471 0832 B0E0      		ldi r27,0
 427:sd/sd.c       **** 					break;
 11472               		.loc 5 427 24 view .LVU2370
 11473 0834 002E      		mov r0,r16
 11474 0836 00C0      		rjmp 2f
 11475               		1:
 11476 0838 880F      		lsl r24
 11477 083a 991F      		rol r25
 11478 083c AA1F      		rol r26
 11479 083e BB1F      		rol r27
 11480               		2:
 11481 0840 0A94      		dec r0
 11482 0842 02F4      		brpl 1b
 427:sd/sd.c       **** 					break;
 11483               		.loc 5 427 14 view .LVU2371
 11484 0844 4091 0000 		lds r20,_serial
 11485 0848 5091 0000 		lds r21,_serial+1
 11486 084c 6091 0000 		lds r22,_serial+2
 11487 0850 7091 0000 		lds r23,_serial+3
 11488 0854 842B      		or r24,r20
 11489 0856 952B      		or r25,r21
 11490 0858 A62B      		or r26,r22
 11491 085a B72B      		or r27,r23
 11492 085c 8093 0000 		sts _serial,r24
 11493 0860 9093 0000 		sts _serial+1,r25
 11494 0864 A093 0000 		sts _serial+2,r26
 11495 0868 B093 0000 		sts _serial+3,r27
 428:sd/sd.c       **** 
 11496               		.loc 5 428 6 is_stmt 1 view .LVU2372
 397:sd/sd.c       **** 		{
 11497               		.loc 5 397 22 view .LVU2373
 11498 086c C394      		inc r12
 397:sd/sd.c       **** 		{
 11499               		.loc 5 397 16 view .LVU2374
 11500 086e FFEF      		ldi r31,-1
 11501 0870 AF1A      		sub r10,r31
 11502 0872 BF0A      		sbc r11,r31
 11503 0874 2FEF      		ldi r18,-1
 11504 0876 E21A      		sub r14,r18
 11505 0878 F20A      		sbc r15,r18
 11506 087a 00C0      		rjmp .L409
 11507               	.L325:
 431:sd/sd.c       **** 					break;
 11508               		.loc 5 431 6 view .LVU2375
 431:sd/sd.c       **** 					break;
 11509               		.loc 5 431 30 is_stmt 0 view .LVU2376
 11510 087c 8295      		swap r24
 11511 087e 807F      		andi r24,lo8(-16)
 431:sd/sd.c       **** 					break;
 11512               		.loc 5 431 26 view .LVU2377
 11513 0880 8093 0000 		sts _manufacturing_year,r24
 432:sd/sd.c       **** 
 11514               		.loc 5 432 6 is_stmt 1 view .LVU2378
 397:sd/sd.c       **** 		{
 11515               		.loc 5 397 22 view .LVU2379
 397:sd/sd.c       **** 		{
 11516               		.loc 5 397 16 view .LVU2380
 11517 0884 5B01      		movw r10,r22
 11518 0886 7A01      		movw r14,r20
 11519 0888 8901      		movw r16,r18
 399:sd/sd.c       **** 			switch(i)
 11520               		.loc 5 399 4 view .LVU2381
 399:sd/sd.c       **** 			switch(i)
 11521               		.loc 5 399 8 is_stmt 0 view .LVU2382
 11522 088a 8FEF      		ldi r24,lo8(-1)
 11523 088c 0E94 0000 		call spi_xchg
 400:sd/sd.c       **** 			{
 11524               		.loc 5 400 4 is_stmt 1 view .LVU2383
 11525               	.L323:
 435:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 11526               		.loc 5 435 6 view .LVU2384
 435:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 11527               		.loc 5 435 26 is_stmt 0 view .LVU2385
 11528 0890 282F      		mov r18,r24
 11529 0892 2295      		swap r18
 11530 0894 2F70      		andi r18,lo8(15)
 11531 0896 9091 0000 		lds r25,_manufacturing_year
 11532 089a 922B      		or r25,r18
 11533 089c 9093 0000 		sts _manufacturing_year,r25
 436:sd/sd.c       **** 					break;
 11534               		.loc 5 436 6 is_stmt 1 view .LVU2386
 436:sd/sd.c       **** 					break;
 11535               		.loc 5 436 31 is_stmt 0 view .LVU2387
 11536 08a0 8F70      		andi r24,lo8(15)
 436:sd/sd.c       **** 					break;
 11537               		.loc 5 436 27 view .LVU2388
 11538 08a2 8093 0000 		sts _manufacturing_month,r24
 437:sd/sd.c       **** 			}
 11539               		.loc 5 437 6 is_stmt 1 view .LVU2389
 397:sd/sd.c       **** 		{
 11540               		.loc 5 397 22 view .LVU2390
 397:sd/sd.c       **** 		{
 11541               		.loc 5 397 16 view .LVU2391
 11542 08a6 3FEF      		ldi r19,-1
 11543 08a8 A31A      		sub r10,r19
 11544 08aa B30A      		sbc r11,r19
 11545 08ac 4FEF      		ldi r20,-1
 11546 08ae E41A      		sub r14,r20
 11547 08b0 F40A      		sbc r15,r20
 11548 08b2 0850      		subi r16,8
 11549 08b4 1109      		sbc r17,__zero_reg__
 397:sd/sd.c       **** 		{
 11550               		.loc 5 397 22 is_stmt 0 view .LVU2392
 11551 08b6 5FE0      		ldi r21,lo8(15)
 11552 08b8 C52E      		mov r12,r21
 11553 08ba 00C0      		rjmp .L333
 11554               	.L322:
 397:sd/sd.c       **** 		{
 11555               		.loc 5 397 22 is_stmt 1 view .LVU2393
 11556 08bc C394      		inc r12
 397:sd/sd.c       **** 		{
 11557               		.loc 5 397 16 view .LVU2394
 11558 08be 52E1      		ldi r21,lo8(18)
 11559 08c0 C516      		cp r12,r21
 11560 08c2 01F0      		breq .L332
 11561 08c4 8FEF      		ldi r24,-1
 11562 08c6 A81A      		sub r10,r24
 11563 08c8 B80A      		sbc r11,r24
 11564 08ca 9FEF      		ldi r25,-1
 11565 08cc E91A      		sub r14,r25
 11566 08ce F90A      		sbc r15,r25
 11567 08d0 00C0      		rjmp .L409
 11568               	.L332:
 442:sd/sd.c       **** 		csd_c_size_mult = 0;
 11569               		.loc 5 442 3 view .LVU2395
 443:sd/sd.c       **** 		csd_structure = 0;
 11570               		.loc 5 443 3 view .LVU2396
 444:sd/sd.c       **** 		csd_c_size = 0;
 11571               		.loc 5 444 3 view .LVU2397
 445:sd/sd.c       **** 
 11572               		.loc 5 445 3 view .LVU2398
 447:sd/sd.c       **** 		j = 0;
 11573               		.loc 5 447 3 view .LVU2399
 11574 08d2 40E0      		ldi r20,0
 11575 08d4 50E0      		ldi r21,0
 11576 08d6 BA01      		movw r22,r20
 11577 08d8 89E0      		ldi r24,lo8(9)
 11578 08da 0E94 0000 		call _sd_command
 448:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 11579               		.loc 5 448 3 view .LVU2400
 449:sd/sd.c       **** 		{
 11580               		.loc 5 449 3 view .LVU2401
 449:sd/sd.c       **** 		{
 11581               		.loc 5 449 8 is_stmt 0 view .LVU2402
 11582 08de 00E0      		ldi r16,0
 11583 08e0 10E8      		ldi r17,lo8(-128)
 11584               	.L334:
 449:sd/sd.c       **** 		{
 11585               		.loc 5 449 24 is_stmt 1 view .LVU2403
 449:sd/sd.c       **** 		{
 11586               		.loc 5 449 9 is_stmt 0 view .LVU2404
 11587 08e2 8FEF      		ldi r24,lo8(-1)
 11588 08e4 0E94 0000 		call spi_xchg
 449:sd/sd.c       **** 		{
 11589               		.loc 5 449 24 view .LVU2405
 11590 08e8 8E3F      		cpi r24,lo8(-2)
 11591 08ea 01F4      		brne .L335
 442:sd/sd.c       **** 		csd_c_size_mult = 0;
 11592               		.loc 5 442 19 view .LVU2406
 11593 08ec F12C      		mov r15,__zero_reg__
 443:sd/sd.c       **** 		csd_structure = 0;
 11594               		.loc 5 443 19 view .LVU2407
 11595 08ee E12C      		mov r14,__zero_reg__
 444:sd/sd.c       **** 		csd_c_size = 0;
 11596               		.loc 5 444 17 view .LVU2408
 11597 08f0 10E0      		ldi r17,0
 478:sd/sd.c       **** 				}
 11598               		.loc 5 478 31 view .LVU2409
 11599 08f2 01E0      		ldi r16,lo8(1)
 11600               	.L355:
 459:sd/sd.c       **** 			if(i == 0)
 11601               		.loc 5 459 4 is_stmt 1 view .LVU2410
 459:sd/sd.c       **** 			if(i == 0)
 11602               		.loc 5 459 8 is_stmt 0 view .LVU2411
 11603 08f4 8FEF      		ldi r24,lo8(-1)
 11604 08f6 0E94 0000 		call spi_xchg
 460:sd/sd.c       **** 			{
 11605               		.loc 5 460 4 is_stmt 1 view .LVU2412
 460:sd/sd.c       **** 			{
 11606               		.loc 5 460 6 is_stmt 0 view .LVU2413
 11607 08fa D110      		cpse r13,__zero_reg__
 11608 08fc 00C0      		rjmp .L336
 462:sd/sd.c       **** 			}
 11609               		.loc 5 462 5 is_stmt 1 view .LVU2414
 462:sd/sd.c       **** 			}
 11610               		.loc 5 462 19 is_stmt 0 view .LVU2415
 11611 08fe 182F      		mov r17,r24
 11612 0900 1295      		swap r17
 11613 0902 1695      		lsr r17
 11614 0904 1695      		lsr r17
 11615 0906 1370      		andi r17,lo8(3)
 457:sd/sd.c       **** 		{
 11616               		.loc 5 457 22 is_stmt 1 view .LVU2416
 457:sd/sd.c       **** 		{
 11617               		.loc 5 457 16 view .LVU2417
 457:sd/sd.c       **** 		{
 11618               		.loc 5 457 22 is_stmt 0 view .LVU2418
 11619 0908 DD24      		clr r13
 11620 090a D394      		inc r13
 11621 090c 00C0      		rjmp .L355
 11622               	.L335:
 451:sd/sd.c       **** 			{
 11623               		.loc 5 451 4 is_stmt 1 view .LVU2419
 451:sd/sd.c       **** 			{
 11624               		.loc 5 451 6 is_stmt 0 view .LVU2420
 11625 090e 0150      		subi r16,1
 11626 0910 1109      		sbc r17,__zero_reg__
 11627 0912 0115      		cp r16,__zero_reg__
 11628 0914 1105      		cpc r17,__zero_reg__
 11629 0916 01F4      		brne .L334
 11630 0918 00C0      		rjmp .L315
 11631               	.L336:
 464:sd/sd.c       **** 			{
 11632               		.loc 5 464 9 is_stmt 1 view .LVU2421
 464:sd/sd.c       **** 			{
 11633               		.loc 5 464 11 is_stmt 0 view .LVU2422
 11634 091a EEE0      		ldi r30,lo8(14)
 11635 091c DE12      		cpse r13,r30
 11636 091e 00C0      		rjmp .L338
 466:sd/sd.c       **** 				{
 11637               		.loc 5 466 5 is_stmt 1 view .LVU2423
 466:sd/sd.c       **** 				{
 11638               		.loc 5 466 10 is_stmt 0 view .LVU2424
 11639 0920 282F      		mov r18,r24
 11640 0922 30E0      		ldi r19,0
 466:sd/sd.c       **** 				{
 11641               		.loc 5 466 7 view .LVU2425
 11642 0924 86FD      		sbrc r24,6
 468:sd/sd.c       **** 				}
 11643               		.loc 5 468 6 is_stmt 1 view .LVU2426
 468:sd/sd.c       **** 				}
 11644               		.loc 5 468 17 is_stmt 0 view .LVU2427
 11645 0926 0093 0000 		sts _flag_copy,r16
 11646               	.L339:
 471:sd/sd.c       **** 				{
 11647               		.loc 5 471 5 is_stmt 1 view .LVU2428
 471:sd/sd.c       **** 				{
 11648               		.loc 5 471 7 is_stmt 0 view .LVU2429
 11649 092a 85FD      		sbrc r24,5
 473:sd/sd.c       **** 				}
 11650               		.loc 5 473 6 is_stmt 1 view .LVU2430
 473:sd/sd.c       **** 				}
 11651               		.loc 5 473 26 is_stmt 0 view .LVU2431
 11652 092c 0093 0000 		sts _flag_write_protect,r16
 11653               	.L340:
 476:sd/sd.c       **** 				{
 11654               		.loc 5 476 5 is_stmt 1 view .LVU2432
 476:sd/sd.c       **** 				{
 11655               		.loc 5 476 7 is_stmt 0 view .LVU2433
 11656 0930 84FD      		sbrc r24,4
 478:sd/sd.c       **** 				}
 11657               		.loc 5 478 6 is_stmt 1 view .LVU2434
 478:sd/sd.c       **** 				}
 11658               		.loc 5 478 31 is_stmt 0 view .LVU2435
 11659 0932 0093 0000 		sts _flag_write_protect_temp,r16
 11660               	.L341:
 481:sd/sd.c       **** 			}
 11661               		.loc 5 481 5 is_stmt 1 view .LVU2436
 481:sd/sd.c       **** 			}
 11662               		.loc 5 481 26 is_stmt 0 view .LVU2437
 11663 0936 C901      		movw r24,r18
 11664 0938 9595      		asr r25
 11665 093a 8795      		ror r24
 11666 093c 9595      		asr r25
 11667 093e 8795      		ror r24
 11668 0940 8370      		andi r24,lo8(3)
 481:sd/sd.c       **** 			}
 11669               		.loc 5 481 13 view .LVU2438
 11670 0942 8093 0000 		sts _format,r24
 457:sd/sd.c       **** 		{
 11671               		.loc 5 457 22 is_stmt 1 view .LVU2439
 457:sd/sd.c       **** 		{
 11672               		.loc 5 457 16 view .LVU2440
 457:sd/sd.c       **** 		{
 11673               		.loc 5 457 22 is_stmt 0 view .LVU2441
 11674 0946 4FE0      		ldi r20,lo8(15)
 11675 0948 D42E      		mov r13,r20
 11676 094a 00C0      		rjmp .L355
 11677               	.L338:
 485:sd/sd.c       **** 				{
 11678               		.loc 5 485 5 is_stmt 1 view .LVU2442
 485:sd/sd.c       **** 				{
 11679               		.loc 5 485 7 is_stmt 0 view .LVU2443
 11680 094c 1130      		cpi r17,lo8(1)
 11681 094e 01F0      		breq .+2
 11682 0950 00C0      		rjmp .L342
 487:sd/sd.c       **** 					{
 11683               		.loc 5 487 6 is_stmt 1 view .LVU2444
 11684 0952 F7E0      		ldi r31,lo8(7)
 11685 0954 DF16      		cp r13,r31
 11686 0956 01F4      		brne .+2
 11687 0958 00C0      		rjmp .L343
 11688 095a 98EF      		ldi r25,lo8(-8)
 11689 095c 9D0D      		add r25,r13
 11690 095e 9230      		cpi r25,lo8(2)
 11691 0960 00F4      		brsh .+2
 11692 0962 00C0      		rjmp .L345
 11693               	.L344:
 457:sd/sd.c       **** 		{
 11694               		.loc 5 457 22 view .LVU2445
 11695 0964 D394      		inc r13
 457:sd/sd.c       **** 		{
 11696               		.loc 5 457 16 view .LVU2446
 11697 0966 52E1      		ldi r21,lo8(18)
 11698 0968 D512      		cpse r13,r21
 11699 096a 00C0      		rjmp .L355
 538:sd/sd.c       **** 	}
 11700               		.loc 5 538 3 view .LVU2447
 11701 096c 5C9A      		sbi 0xb,4
 11702               	.LBE681:
 542:sd/sd.c       **** }
 11703               		.loc 5 542 2 view .LVU2448
 11704               	.LBB682:
 11705               	.LBI682:
 225:sd/sd.c       **** {
 11706               		.loc 5 225 13 view .LVU2449
 11707               	.LBB683:
 227:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 11708               		.loc 5 227 2 view .LVU2450
 11709 096e 8091 0000 		lds r24,_card_type
 11710 0972 82FF      		sbrs r24,2
 11711 0974 00C0      		rjmp .L364
 11712 0976 80E0      		ldi r24,lo8(__c.18)
 11713 0978 90E0      		ldi r25,hi8(__c.18)
 11714               	.L356:
 11715 097a 9F93      		push r25
 11716               		.cfi_def_cfa_offset 3
 11717 097c 8F93      		push r24
 11718               		.cfi_def_cfa_offset 4
 11719 097e 80E0      		ldi r24,lo8(__c.16)
 11720 0980 90E0      		ldi r25,hi8(__c.16)
 11721 0982 9F93      		push r25
 11722               		.cfi_def_cfa_offset 5
 11723 0984 8F93      		push r24
 11724               		.cfi_def_cfa_offset 6
 11725 0986 C1E0      		ldi r28,lo8(1)
 11726 0988 CF93      		push r28
 11727               		.cfi_def_cfa_offset 7
 11728 098a 0E94 0000 		call log_boot_P
 230:sd/sd.c       **** 		BLOCK_SIZE);
 11729               		.loc 5 230 2 view .LVU2451
 11730 098e 82E0      		ldi r24,lo8(2)
 11731 0990 8F93      		push r24
 11732               		.cfi_def_cfa_offset 8
 11733 0992 1F92      		push __zero_reg__
 11734               		.cfi_def_cfa_offset 9
 11735 0994 80E0      		ldi r24,lo8(__c.15)
 11736 0996 90E0      		ldi r25,hi8(__c.15)
 11737 0998 9F93      		push r25
 11738               		.cfi_def_cfa_offset 10
 11739 099a 8F93      		push r24
 11740               		.cfi_def_cfa_offset 11
 11741 099c CF93      		push r28
 11742               		.cfi_def_cfa_offset 12
 11743 099e 0E94 0000 		call log_boot_P
 233:sd/sd.c       **** 		_manufacturer);
 11744               		.loc 5 233 2 view .LVU2452
 11745 09a2 8091 0000 		lds r24,_manufacturer
 11746 09a6 1F92      		push __zero_reg__
 11747               		.cfi_def_cfa_offset 13
 11748 09a8 8F93      		push r24
 11749               		.cfi_def_cfa_offset 14
 11750 09aa 80E0      		ldi r24,lo8(__c.14)
 11751 09ac 90E0      		ldi r25,hi8(__c.14)
 11752 09ae 9F93      		push r25
 11753               		.cfi_def_cfa_offset 15
 11754 09b0 8F93      		push r24
 11755               		.cfi_def_cfa_offset 16
 11756 09b2 CF93      		push r28
 11757               		.cfi_def_cfa_offset 17
 11758 09b4 0E94 0000 		call log_boot_P
 236:sd/sd.c       **** 		_oem);
 11759               		.loc 5 236 2 view .LVU2453
 11760 09b8 80E0      		ldi r24,lo8(_oem)
 11761 09ba 90E0      		ldi r25,hi8(_oem)
 11762 09bc 9F93      		push r25
 11763               		.cfi_def_cfa_offset 18
 11764 09be 8F93      		push r24
 11765               		.cfi_def_cfa_offset 19
 11766 09c0 80E0      		ldi r24,lo8(__c.13)
 11767 09c2 90E0      		ldi r25,hi8(__c.13)
 11768 09c4 9F93      		push r25
 11769               		.cfi_def_cfa_offset 20
 11770 09c6 8F93      		push r24
 11771               		.cfi_def_cfa_offset 21
 11772 09c8 CF93      		push r28
 11773               		.cfi_def_cfa_offset 22
 11774 09ca 0E94 0000 		call log_boot_P
 239:sd/sd.c       **** 		_product);
 11775               		.loc 5 239 2 view .LVU2454
 11776 09ce 80E0      		ldi r24,lo8(_product)
 11777 09d0 90E0      		ldi r25,hi8(_product)
 11778 09d2 9F93      		push r25
 11779               		.cfi_def_cfa_offset 23
 11780 09d4 8F93      		push r24
 11781               		.cfi_def_cfa_offset 24
 11782 09d6 80E0      		ldi r24,lo8(__c.12)
 11783 09d8 90E0      		ldi r25,hi8(__c.12)
 11784 09da 9F93      		push r25
 11785               		.cfi_def_cfa_offset 25
 11786 09dc 8F93      		push r24
 11787               		.cfi_def_cfa_offset 26
 11788 09de CF93      		push r28
 11789               		.cfi_def_cfa_offset 27
 11790 09e0 0E94 0000 		call log_boot_P
 242:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 11791               		.loc 5 242 2 view .LVU2455
 243:sd/sd.c       **** 
 11792               		.loc 5 243 38 is_stmt 0 view .LVU2456
 11793 09e4 8091 0000 		lds r24,_revision
 242:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 11794               		.loc 5 242 2 view .LVU2457
 11795 09e8 982F      		mov r25,r24
 11796 09ea 9F70      		andi r25,lo8(15)
 11797 09ec 905D      		subi r25,lo8(-(48))
 11798 09ee 1F92      		push __zero_reg__
 11799               		.cfi_def_cfa_offset 28
 11800 09f0 9F93      		push r25
 11801               		.cfi_def_cfa_offset 29
 243:sd/sd.c       **** 
 11802               		.loc 5 243 14 view .LVU2458
 11803 09f2 8295      		swap r24
 11804 09f4 8F70      		andi r24,lo8(15)
 242:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 11805               		.loc 5 242 2 view .LVU2459
 11806 09f6 805D      		subi r24,lo8(-(48))
 11807 09f8 1F92      		push __zero_reg__
 11808               		.cfi_def_cfa_offset 30
 11809 09fa 8F93      		push r24
 11810               		.cfi_def_cfa_offset 31
 11811 09fc 80E0      		ldi r24,lo8(__c.11)
 11812 09fe 90E0      		ldi r25,hi8(__c.11)
 11813 0a00 9F93      		push r25
 11814               		.cfi_def_cfa_offset 32
 11815 0a02 8F93      		push r24
 11816               		.cfi_def_cfa_offset 33
 11817 0a04 CF93      		push r28
 11818               		.cfi_def_cfa_offset 34
 11819 0a06 0E94 0000 		call log_boot_P
 245:sd/sd.c       **** 		_serial);
 11820               		.loc 5 245 2 is_stmt 1 view .LVU2460
 11821 0a0a 8DB7      		in r24,__SP_L__
 11822 0a0c 9EB7      		in r25,__SP_H__
 11823 0a0e 8096      		adiw r24,32
 11824 0a10 0FB6      		in __tmp_reg__,__SREG__
 11825 0a12 F894      		cli
 11826 0a14 9EBF      		out __SP_H__,r25
 11827 0a16 0FBE      		out __SREG__,__tmp_reg__
 11828 0a18 8DBF      		out __SP_L__,r24
 11829               		.cfi_def_cfa_offset 2
 11830 0a1a 8091 0000 		lds r24,_serial+3
 11831 0a1e 8F93      		push r24
 11832               		.cfi_def_cfa_offset 3
 11833 0a20 8091 0000 		lds r24,_serial+2
 11834 0a24 8F93      		push r24
 11835               		.cfi_def_cfa_offset 4
 11836 0a26 8091 0000 		lds r24,_serial+1
 11837 0a2a 8F93      		push r24
 11838               		.cfi_def_cfa_offset 5
 11839 0a2c 8091 0000 		lds r24,_serial
 11840 0a30 8F93      		push r24
 11841               		.cfi_def_cfa_offset 6
 11842 0a32 80E0      		ldi r24,lo8(__c.10)
 11843 0a34 90E0      		ldi r25,hi8(__c.10)
 11844 0a36 9F93      		push r25
 11845               		.cfi_def_cfa_offset 7
 11846 0a38 8F93      		push r24
 11847               		.cfi_def_cfa_offset 8
 11848 0a3a CF93      		push r28
 11849               		.cfi_def_cfa_offset 9
 11850 0a3c 0E94 0000 		call log_boot_P
 248:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 11851               		.loc 5 248 2 view .LVU2461
 11852 0a40 8091 0000 		lds r24,_manufacturing_year
 11853 0a44 90E0      		ldi r25,0
 11854 0a46 8053      		subi r24,48
 11855 0a48 984F      		sbci r25,-8
 11856 0a4a 9F93      		push r25
 11857               		.cfi_def_cfa_offset 10
 11858 0a4c 8F93      		push r24
 11859               		.cfi_def_cfa_offset 11
 11860 0a4e 8091 0000 		lds r24,_manufacturing_month
 11861 0a52 1F92      		push __zero_reg__
 11862               		.cfi_def_cfa_offset 12
 11863 0a54 8F93      		push r24
 11864               		.cfi_def_cfa_offset 13
 11865 0a56 80E0      		ldi r24,lo8(__c.9)
 11866 0a58 90E0      		ldi r25,hi8(__c.9)
 11867 0a5a 9F93      		push r25
 11868               		.cfi_def_cfa_offset 14
 11869 0a5c 8F93      		push r24
 11870               		.cfi_def_cfa_offset 15
 11871 0a5e CF93      		push r28
 11872               		.cfi_def_cfa_offset 16
 11873 0a60 0E94 0000 		call log_boot_P
 251:sd/sd.c       **** 		_capacity);
 11874               		.loc 5 251 2 view .LVU2462
 11875 0a64 8091 0000 		lds r24,_capacity+3
 11876 0a68 8F93      		push r24
 11877               		.cfi_def_cfa_offset 17
 11878 0a6a 8091 0000 		lds r24,_capacity+2
 11879 0a6e 8F93      		push r24
 11880               		.cfi_def_cfa_offset 18
 11881 0a70 8091 0000 		lds r24,_capacity+1
 11882 0a74 8F93      		push r24
 11883               		.cfi_def_cfa_offset 19
 11884 0a76 8091 0000 		lds r24,_capacity
 11885 0a7a 8F93      		push r24
 11886               		.cfi_def_cfa_offset 20
 11887 0a7c 80E0      		ldi r24,lo8(__c.8)
 11888 0a7e 90E0      		ldi r25,hi8(__c.8)
 11889 0a80 9F93      		push r25
 11890               		.cfi_def_cfa_offset 21
 11891 0a82 8F93      		push r24
 11892               		.cfi_def_cfa_offset 22
 11893 0a84 CF93      		push r28
 11894               		.cfi_def_cfa_offset 23
 11895 0a86 0E94 0000 		call log_boot_P
 254:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 11896               		.loc 5 254 2 view .LVU2463
 11897 0a8a 8091 0000 		lds r24,_capacity
 11898 0a8e 9091 0000 		lds r25,_capacity+1
 11899 0a92 A091 0000 		lds r26,_capacity+2
 11900 0a96 B091 0000 		lds r27,_capacity+3
 11901 0a9a 29E0      		ldi r18,9
 11902               		1:
 11903 0a9c 880F      		lsl r24
 11904 0a9e 991F      		rol r25
 11905 0aa0 AA1F      		rol r26
 11906 0aa2 BB1F      		rol r27
 11907 0aa4 2A95      		dec r18
 11908 0aa6 01F4      		brne 1b
 11909 0aa8 BF93      		push r27
 11910               		.cfi_def_cfa_offset 24
 11911 0aaa AF93      		push r26
 11912               		.cfi_def_cfa_offset 25
 11913 0aac 9F93      		push r25
 11914               		.cfi_def_cfa_offset 26
 11915 0aae 8F93      		push r24
 11916               		.cfi_def_cfa_offset 27
 11917 0ab0 80E0      		ldi r24,lo8(__c.7.lto_priv.1)
 11918 0ab2 90E0      		ldi r25,hi8(__c.7.lto_priv.1)
 11919 0ab4 9F93      		push r25
 11920               		.cfi_def_cfa_offset 28
 11921 0ab6 8F93      		push r24
 11922               		.cfi_def_cfa_offset 29
 11923 0ab8 85E0      		ldi r24,lo8(5)
 11924 0aba 8F93      		push r24
 11925               		.cfi_def_cfa_offset 30
 11926 0abc 0E94 0000 		call log_boot_P
 257:sd/sd.c       **** 		_format);
 11927               		.loc 5 257 2 view .LVU2464
 11928 0ac0 8091 0000 		lds r24,_format
 11929 0ac4 1F92      		push __zero_reg__
 11930               		.cfi_def_cfa_offset 31
 11931 0ac6 8F93      		push r24
 11932               		.cfi_def_cfa_offset 32
 11933 0ac8 80E0      		ldi r24,lo8(__c.6.lto_priv.1)
 11934 0aca 90E0      		ldi r25,hi8(__c.6.lto_priv.1)
 11935 0acc 9F93      		push r25
 11936               		.cfi_def_cfa_offset 33
 11937 0ace 8F93      		push r24
 11938               		.cfi_def_cfa_offset 34
 11939 0ad0 CF93      		push r28
 11940               		.cfi_def_cfa_offset 35
 11941 0ad2 0E94 0000 		call log_boot_P
 260:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 11942               		.loc 5 260 2 view .LVU2465
 11943 0ad6 EDB7      		in r30,__SP_L__
 11944 0ad8 FEB7      		in r31,__SP_H__
 11945 0ada B196      		adiw r30,33
 11946 0adc 0FB6      		in __tmp_reg__,__SREG__
 11947 0ade F894      		cli
 11948 0ae0 FEBF      		out __SP_H__,r31
 11949 0ae2 0FBE      		out __SREG__,__tmp_reg__
 11950 0ae4 EDBF      		out __SP_L__,r30
 11951               		.cfi_def_cfa_offset 2
 11952 0ae6 8091 0000 		lds r24,_flag_write_protect_temp
 11953 0aea 8111      		cpse r24,__zero_reg__
 11954 0aec 00C0      		rjmp .L365
 263:sd/sd.c       **** 			PSTR("Rewritable")));
 11955               		.loc 5 263 51 is_stmt 0 view .LVU2466
 11956 0aee 8091 0000 		lds r24,_flag_write_protect
 11957 0af2 8823      		tst r24
 11958 0af4 01F4      		brne .+2
 11959 0af6 00C0      		rjmp .L366
 11960 0af8 80E0      		ldi r24,lo8(__c.4.lto_priv.1)
 11961 0afa 90E0      		ldi r25,hi8(__c.4.lto_priv.1)
 11962               	.L357:
 260:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 11963               		.loc 5 260 2 view .LVU2467
 11964 0afc 2091 0000 		lds r18,_flag_copy
 11965 0b00 2223      		tst r18
 11966 0b02 01F4      		brne .+2
 11967 0b04 00C0      		rjmp .L367
 11968 0b06 20E0      		ldi r18,lo8(__c.2.lto_priv.3)
 11969 0b08 30E0      		ldi r19,hi8(__c.2.lto_priv.3)
 11970               	.L358:
 11971 0b0a 9F93      		push r25
 11972               		.cfi_def_cfa_offset 3
 11973 0b0c 8F93      		push r24
 11974               		.cfi_def_cfa_offset 4
 11975 0b0e 3F93      		push r19
 11976               		.cfi_def_cfa_offset 5
 11977 0b10 2F93      		push r18
 11978               		.cfi_def_cfa_offset 6
 11979 0b12 80E0      		ldi r24,lo8(__c.0.lto_priv.8)
 11980 0b14 90E0      		ldi r25,hi8(__c.0.lto_priv.8)
 11981 0b16 9F93      		push r25
 11982               		.cfi_def_cfa_offset 7
 11983 0b18 8F93      		push r24
 11984               		.cfi_def_cfa_offset 8
 11985 0b1a 81E0      		ldi r24,lo8(1)
 11986 0b1c 8F93      		push r24
 11987               		.cfi_def_cfa_offset 9
 11988 0b1e 0E94 0000 		call log_boot_P
 11989               	.LBE683:
 11990               	.LBE682:
 11991               	.LBE669:
 11992               	.LBE668:
  71:main.c        **** 
  72:main.c        **** 	/* --- READY --- */
  73:main.c        **** 
  74:main.c        **** 	/* Load initial ram disk */
  75:main.c        **** 	initrd_load();
 11993               		.loc 15 75 2 is_stmt 1 view .LVU2468
 11994 0b22 0E94 0000 		call initrd_load
  76:main.c        **** 
  77:main.c        **** 	log_boot_P(LOG_NONE, PSTR("\nStarting RISC-V Emulator Kernel ...\n\n"));
 11995               		.loc 15 77 2 view .LVU2469
 11996               		.loc 15 77 23 view .LVU2470
 11997               		.loc 15 77 23 view .LVU2471
 11998               		.loc 15 77 2 is_stmt 0 view .LVU2472
 11999 0b26 80E0      		ldi r24,lo8(__c.1.lto_priv.0)
 12000 0b28 90E0      		ldi r25,hi8(__c.1.lto_priv.0)
 12001 0b2a 9F93      		push r25
 12002               		.cfi_def_cfa_offset 10
 12003 0b2c 8F93      		push r24
 12004               		.cfi_def_cfa_offset 11
 12005 0b2e 86E0      		ldi r24,lo8(6)
 12006 0b30 8F93      		push r24
 12007               		.cfi_def_cfa_offset 12
 12008 0b32 0E94 0000 		call log_boot_P
  78:main.c        **** 
  79:main.c        **** 	kernel_init();
 12009               		.loc 15 79 2 is_stmt 1 view .LVU2473
 12010               	.LBB688:
 12011               	.LBI688:
 123:../../emulator/emulator.c **** {
 12012               		.loc 6 123 6 view .LVU2474
 12013               	.LBB689:
 125:../../emulator/emulator.c **** 	_emu->SegmentStart = 0;
 12014               		.loc 6 125 2 view .LVU2475
 125:../../emulator/emulator.c **** 	_emu->SegmentStart = 0;
 12015               		.loc 6 125 15 is_stmt 0 view .LVU2476
 12016 0b36 80E0      		ldi r24,0
 12017 0b38 90E0      		ldi r25,0
 12018 0b3a A6E0      		ldi r26,lo8(6)
 12019 0b3c B0E0      		ldi r27,0
 12020 0b3e 8093 0000 		sts _memory_size,r24
 12021 0b42 9093 0000 		sts _memory_size+1,r25
 12022 0b46 A093 0000 		sts _memory_size+2,r26
 12023 0b4a B093 0000 		sts _memory_size+3,r27
 126:../../emulator/emulator.c **** 	_emu->SegmentSize = _memory_size;
 12024               		.loc 6 126 2 is_stmt 1 view .LVU2477
 126:../../emulator/emulator.c **** 	_emu->SegmentSize = _memory_size;
 12025               		.loc 6 126 21 is_stmt 0 view .LVU2478
 12026 0b4e 1092 0000 		sts _tasks,__zero_reg__
 12027 0b52 1092 0000 		sts _tasks+1,__zero_reg__
 12028 0b56 1092 0000 		sts _tasks+2,__zero_reg__
 12029 0b5a 1092 0000 		sts _tasks+3,__zero_reg__
 127:../../emulator/emulator.c **** 	_emu->SegmentEnd = _memory_size;
 12030               		.loc 6 127 2 is_stmt 1 view .LVU2479
 127:../../emulator/emulator.c **** 	_emu->SegmentEnd = _memory_size;
 12031               		.loc 6 127 20 is_stmt 0 view .LVU2480
 12032 0b5e 8093 0000 		sts _tasks+4,r24
 12033 0b62 9093 0000 		sts _tasks+4+1,r25
 12034 0b66 A093 0000 		sts _tasks+4+2,r26
 12035 0b6a B093 0000 		sts _tasks+4+3,r27
 128:../../emulator/emulator.c **** 	emulator_call(_emu, 0, NULL, 0, _memory_size);
 12036               		.loc 6 128 2 is_stmt 1 view .LVU2481
 128:../../emulator/emulator.c **** 	emulator_call(_emu, 0, NULL, 0, _memory_size);
 12037               		.loc 6 128 19 is_stmt 0 view .LVU2482
 12038 0b6e 8093 0000 		sts _tasks+8,r24
 12039 0b72 9093 0000 		sts _tasks+8+1,r25
 12040 0b76 A093 0000 		sts _tasks+8+2,r26
 12041 0b7a B093 0000 		sts _tasks+8+3,r27
 129:../../emulator/emulator.c **** }
 12042               		.loc 6 129 2 is_stmt 1 view .LVU2483
 12043               	.LBB690:
 12044               	.LBI690:
1161:../../emulator/emulator.c **** 
1162:../../emulator/emulator.c **** u8 emulator_call(Emulator *emu, u32 addr, u32 *args, u8 num, u32 sp)
 12045               		.loc 6 1162 4 view .LVU2484
 12046               	.LBB691:
1163:../../emulator/emulator.c **** {
1164:../../emulator/emulator.c **** 	u32 i;
1165:../../emulator/emulator.c **** 
1166:../../emulator/emulator.c **** 	/* Initialize Stack Pointer at end of memory */
1167:../../emulator/emulator.c **** 	emu->Registers[2] = sp - 4;
 12047               		.loc 6 1167 20 is_stmt 0 view .LVU2485
 12048 0b7e 8CEF      		ldi r24,lo8(-4)
 12049 0b80 9FEF      		ldi r25,lo8(-1)
 12050 0b82 A5E0      		ldi r26,lo8(5)
 12051 0b84 B0E0      		ldi r27,0
 12052 0b86 8093 0000 		sts _tasks+32,r24
 12053 0b8a 9093 0000 		sts _tasks+32+1,r25
 12054 0b8e A093 0000 		sts _tasks+32+2,r26
 12055 0b92 B093 0000 		sts _tasks+32+3,r27
1168:../../emulator/emulator.c **** 	emu->PC = addr;
 12056               		.loc 6 1168 10 view .LVU2486
 12057 0b96 1092 0000 		sts _tasks+20,__zero_reg__
 12058 0b9a 1092 0000 		sts _tasks+20+1,__zero_reg__
 12059 0b9e 1092 0000 		sts _tasks+20+2,__zero_reg__
 12060 0ba2 1092 0000 		sts _tasks+20+3,__zero_reg__
1169:../../emulator/emulator.c **** 	memcpy(&emu->Registers[10], args, num * sizeof(*emu->Registers));
 12061               		.loc 6 1169 2 view .LVU2487
 12062 0ba6 40E0      		ldi r20,0
 12063 0ba8 50E0      		ldi r21,0
 12064 0baa 60E0      		ldi r22,0
 12065 0bac 70E0      		ldi r23,0
 12066 0bae 80E0      		ldi r24,lo8(_tasks+64)
 12067 0bb0 90E0      		ldi r25,hi8(_tasks+64)
 12068 0bb2 0E94 0000 		call memcpy
1170:../../emulator/emulator.c **** 	i = 0;
1171:../../emulator/emulator.c **** 	_finished = false;
 12069               		.loc 6 1171 12 view .LVU2488
 12070 0bb6 1092 0000 		sts _finished,__zero_reg__
1172:../../emulator/emulator.c **** 	while(!_finished)
 12071               		.loc 6 1172 7 view .LVU2489
 12072 0bba 2DB7      		in r18,__SP_L__
 12073 0bbc 3EB7      		in r19,__SP_H__
 12074 0bbe 265F      		subi r18,-10
 12075 0bc0 3F4F      		sbci r19,-1
 12076 0bc2 0FB6      		in __tmp_reg__,__SREG__
 12077 0bc4 F894      		cli
 12078 0bc6 3EBF      		out __SP_H__,r19
 12079 0bc8 0FBE      		out __SREG__,__tmp_reg__
 12080 0bca 2DBF      		out __SP_L__,r18
 12081               		.cfi_def_cfa_offset 2
 12082               	.L359:
 12083               		.loc 6 1172 8 view .LVU2490
 12084 0bcc 8091 0000 		lds r24,_finished
 12085 0bd0 8111      		cpse r24,__zero_reg__
 12086 0bd2 00C0      		rjmp .L361
1173:../../emulator/emulator.c **** 	{
1174:../../emulator/emulator.c **** 		++i;
1175:../../emulator/emulator.c **** 		if(emulator_next(emu))
 12087               		.loc 6 1175 6 view .LVU2491
 12088 0bd4 80E0      		ldi r24,lo8(_tasks)
 12089 0bd6 90E0      		ldi r25,hi8(_tasks)
 12090 0bd8 0E94 0000 		call emulator_next
 12091               		.loc 6 1175 5 view .LVU2492
 12092 0bdc 8823      		tst r24
 12093 0bde 01F0      		breq .L359
 12094               	.L361:
 12095               	.LBE691:
 12096               	.LBE690:
 12097               	.LBE689:
 12098               	.LBE688:
  80:main.c        **** 	log_boot_P(LOG_EXT, PSTR("Setup done!"));
 12099               		.loc 15 80 2 is_stmt 1 view .LVU2493
 12100               		.loc 15 80 22 view .LVU2494
 12101               		.loc 15 80 22 view .LVU2495
 12102               		.loc 15 80 2 is_stmt 0 view .LVU2496
 12103 0be0 80E0      		ldi r24,lo8(__c.0.lto_priv.0)
 12104 0be2 90E0      		ldi r25,hi8(__c.0.lto_priv.0)
 12105 0be4 9F93      		push r25
 12106               		.cfi_def_cfa_offset 3
 12107 0be6 8F93      		push r24
 12108               		.cfi_def_cfa_offset 4
 12109 0be8 87E0      		ldi r24,lo8(7)
 12110 0bea 8F93      		push r24
 12111               		.cfi_def_cfa_offset 5
 12112 0bec 0E94 0000 		call log_boot_P
 12113 0bf0 0F90      		pop __tmp_reg__
 12114 0bf2 0F90      		pop __tmp_reg__
 12115 0bf4 0F90      		pop __tmp_reg__
 12116               		.cfi_def_cfa_offset 2
 12117               	.L360:
  81:main.c        **** 
  82:main.c        **** 	/* Infinite loop */
  83:main.c        **** 	for(;;)
 12118               		.loc 15 83 2 is_stmt 1 discriminator 1 view .LVU2497
  84:main.c        **** 	{
  85:main.c        **** 	}
 12119               		.loc 15 85 2 discriminator 1 view .LVU2498
  83:main.c        **** 	{
 12120               		.loc 15 83 2 discriminator 1 view .LVU2499
 12121 0bf6 00C0      		rjmp .L360
 12122               	.L343:
 12123               	.LBB692:
 12124               	.LBB687:
 12125               	.LBB685:
 490:sd/sd.c       **** 
 12126               		.loc 5 490 8 view .LVU2500
 490:sd/sd.c       **** 
 12127               		.loc 5 490 10 is_stmt 0 view .LVU2501
 12128 0bf8 8F73      		andi r24,lo8(63)
 12129               	.L345:
 494:sd/sd.c       **** 							csd_c_size |= b;
 12130               		.loc 5 494 8 is_stmt 1 view .LVU2502
 495:sd/sd.c       **** 							++csd_c_size;
 12131               		.loc 5 495 8 view .LVU2503
 495:sd/sd.c       **** 							++csd_c_size;
 12132               		.loc 5 495 19 is_stmt 0 view .LVU2504
 12133 0bfa 282F      		mov r18,r24
 12134 0bfc 3C2F      		mov r19,r28
 12135 0bfe E901      		movw r28,r18
 496:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 12136               		.loc 5 496 8 is_stmt 1 view .LVU2505
 12137 0c00 2196      		adiw r28,1
 497:sd/sd.c       **** 					}
 12138               		.loc 5 497 8 view .LVU2506
 497:sd/sd.c       **** 					}
 12139               		.loc 5 497 20 is_stmt 0 view .LVU2507
 12140 0c02 CE01      		movw r24,r28
 12141 0c04 A0E0      		ldi r26,0
 12142 0c06 B0E0      		ldi r27,0
 497:sd/sd.c       **** 					}
 12143               		.loc 5 497 36 view .LVU2508
 12144 0c08 2AE0      		ldi r18,10
 12145               		1:
 12146 0c0a 880F      		lsl r24
 12147 0c0c 991F      		rol r25
 12148 0c0e AA1F      		rol r26
 12149 0c10 BB1F      		rol r27
 12150 0c12 2A95      		dec r18
 12151 0c14 01F4      		brne 1b
 497:sd/sd.c       **** 					}
 12152               		.loc 5 497 18 view .LVU2509
 12153 0c16 8093 0000 		sts _capacity,r24
 12154 0c1a 9093 0000 		sts _capacity+1,r25
 12155 0c1e A093 0000 		sts _capacity+2,r26
 12156 0c22 B093 0000 		sts _capacity+3,r27
 12157 0c26 00C0      		rjmp .L344
 12158               	.L342:
 500:sd/sd.c       **** 				{
 12159               		.loc 5 500 10 is_stmt 1 view .LVU2510
 500:sd/sd.c       **** 				{
 12160               		.loc 5 500 12 is_stmt 0 view .LVU2511
 12161 0c28 1111      		cpse r17,__zero_reg__
 12162 0c2a 00C0      		rjmp .L344
 502:sd/sd.c       **** 					{
 12163               		.loc 5 502 6 is_stmt 1 view .LVU2512
 12164 0c2c 38E0      		ldi r19,lo8(8)
 12165 0c2e D316      		cp r13,r19
 12166 0c30 01F4      		brne .+2
 12167 0c32 00C0      		rjmp .L346
 12168 0c34 3D15      		cp r19,r13
 12169 0c36 00F0      		brlo .L347
 12170 0c38 46E0      		ldi r20,lo8(6)
 12171 0c3a D416      		cp r13,r20
 12172 0c3c 01F0      		breq .L348
 12173 0c3e 57E0      		ldi r21,lo8(7)
 12174 0c40 D516      		cp r13,r21
 12175 0c42 01F4      		brne .+2
 12176 0c44 00C0      		rjmp .L349
 12177 0c46 95E0      		ldi r25,lo8(5)
 12178 0c48 D916      		cp r13,r25
 12179 0c4a 01F0      		breq .L350
 457:sd/sd.c       **** 		{
 12180               		.loc 5 457 22 view .LVU2513
 12181 0c4c D394      		inc r13
 457:sd/sd.c       **** 		{
 12182               		.loc 5 457 16 view .LVU2514
 12183 0c4e 00C0      		rjmp .L355
 12184               	.L347:
 502:sd/sd.c       **** 					{
 12185               		.loc 5 502 6 is_stmt 0 view .LVU2515
 12186 0c50 E9E0      		ldi r30,lo8(9)
 12187 0c52 DE16      		cp r13,r30
 12188 0c54 01F4      		brne .+2
 12189 0c56 00C0      		rjmp .L352
 12190 0c58 FAE0      		ldi r31,lo8(10)
 12191 0c5a DF12      		cpse r13,r31
 12192 0c5c 00C0      		rjmp .L344
 529:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 12193               		.loc 5 529 8 is_stmt 1 view .LVU2516
 529:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 12194               		.loc 5 529 24 is_stmt 0 view .LVU2517
 12195 0c5e 881F      		rol r24
 12196 0c60 8827      		clr r24
 12197 0c62 881F      		rol r24
 12198 0c64 E82A      		or r14,r24
 530:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 12199               		.loc 5 530 8 is_stmt 1 view .LVU2518
 530:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 12200               		.loc 5 530 21 is_stmt 0 view .LVU2519
 12201 0c66 CE01      		movw r24,r28
 12202 0c68 A0E0      		ldi r26,0
 12203 0c6a B0E0      		ldi r27,0
 531:sd/sd.c       **** 							break;
 12204               		.loc 5 531 26 view .LVU2520
 12205 0c6c 4E2D      		mov r20,r14
 12206 0c6e 4F0D      		add r20,r15
 12207 0c70 5527      		clr r21
 12208 0c72 551F      		rol r21
 12209 0c74 9A01      		movw r18,r20
 531:sd/sd.c       **** 							break;
 12210               		.loc 5 531 44 view .LVU2521
 12211 0c76 2E5F      		subi r18,-2
 12212 0c78 3F4F      		sbci r19,-1
 530:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 12213               		.loc 5 530 37 view .LVU2522
 12214 0c7a 00C0      		rjmp 2f
 12215               		1:
 12216 0c7c 880F      		lsl r24
 12217 0c7e 991F      		rol r25
 12218 0c80 AA1F      		rol r26
 12219 0c82 BB1F      		rol r27
 12220               		2:
 12221 0c84 2A95      		dec r18
 12222 0c86 02F4      		brpl 1b
 531:sd/sd.c       **** 							break;
 12223               		.loc 5 531 50 view .LVU2523
 12224 0c88 39E0      		ldi r19,9
 12225               		1:
 12226 0c8a B695      		lsr r27
 12227 0c8c A795      		ror r26
 12228 0c8e 9795      		ror r25
 12229 0c90 8795      		ror r24
 12230 0c92 3A95      		dec r19
 12231 0c94 01F4      		brne 1b
 530:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 12232               		.loc 5 530 18 view .LVU2524
 12233 0c96 8093 0000 		sts _capacity,r24
 12234 0c9a 9093 0000 		sts _capacity+1,r25
 12235 0c9e A093 0000 		sts _capacity+2,r26
 12236 0ca2 B093 0000 		sts _capacity+3,r27
 532:sd/sd.c       **** 					}
 12237               		.loc 5 532 8 is_stmt 1 view .LVU2525
 457:sd/sd.c       **** 		{
 12238               		.loc 5 457 22 view .LVU2526
 457:sd/sd.c       **** 		{
 12239               		.loc 5 457 16 view .LVU2527
 457:sd/sd.c       **** 		{
 12240               		.loc 5 457 22 is_stmt 0 view .LVU2528
 12241 0ca6 4BE0      		ldi r20,lo8(11)
 12242 0ca8 D42E      		mov r13,r20
 12243 0caa 00C0      		rjmp .L355
 12244               	.L350:
 505:sd/sd.c       **** 							break;
 12245               		.loc 5 505 8 is_stmt 1 view .LVU2529
 505:sd/sd.c       **** 							break;
 12246               		.loc 5 505 24 is_stmt 0 view .LVU2530
 12247 0cac 8F70      		andi r24,lo8(15)
 12248 0cae F82E      		mov r15,r24
 506:sd/sd.c       **** 
 12249               		.loc 5 506 8 is_stmt 1 view .LVU2531
 457:sd/sd.c       **** 		{
 12250               		.loc 5 457 22 view .LVU2532
 457:sd/sd.c       **** 		{
 12251               		.loc 5 457 16 view .LVU2533
 457:sd/sd.c       **** 		{
 12252               		.loc 5 457 22 is_stmt 0 view .LVU2534
 12253 0cb0 B6E0      		ldi r27,lo8(6)
 12254 0cb2 DB2E      		mov r13,r27
 12255 0cb4 00C0      		rjmp .L355
 12256               	.L348:
 509:sd/sd.c       **** 							csd_c_size <<= 8;
 12257               		.loc 5 509 8 is_stmt 1 view .LVU2535
 509:sd/sd.c       **** 							csd_c_size <<= 8;
 12258               		.loc 5 509 19 is_stmt 0 view .LVU2536
 12259 0cb6 8370      		andi r24,lo8(3)
 12260 0cb8 C82F      		mov r28,r24
 12261 0cba D0E0      		ldi r29,0
 510:sd/sd.c       **** 							break;
 12262               		.loc 5 510 8 is_stmt 1 view .LVU2537
 510:sd/sd.c       **** 							break;
 12263               		.loc 5 510 19 is_stmt 0 view .LVU2538
 12264 0cbc DC2F      		mov r29,r28
 12265 0cbe CC27      		clr r28
 511:sd/sd.c       **** 
 12266               		.loc 5 511 8 is_stmt 1 view .LVU2539
 457:sd/sd.c       **** 		{
 12267               		.loc 5 457 22 view .LVU2540
 457:sd/sd.c       **** 		{
 12268               		.loc 5 457 16 view .LVU2541
 457:sd/sd.c       **** 		{
 12269               		.loc 5 457 22 is_stmt 0 view .LVU2542
 12270 0cc0 A7E0      		ldi r26,lo8(7)
 12271 0cc2 DA2E      		mov r13,r26
 12272 0cc4 00C0      		rjmp .L355
 12273               	.L349:
 514:sd/sd.c       **** 							csd_c_size <<= 2;
 12274               		.loc 5 514 8 is_stmt 1 view .LVU2543
 514:sd/sd.c       **** 							csd_c_size <<= 2;
 12275               		.loc 5 514 19 is_stmt 0 view .LVU2544
 12276 0cc6 C82B      		or r28,r24
 515:sd/sd.c       **** 							break;
 12277               		.loc 5 515 8 is_stmt 1 view .LVU2545
 515:sd/sd.c       **** 							break;
 12278               		.loc 5 515 19 is_stmt 0 view .LVU2546
 12279 0cc8 CC0F      		lsl r28
 12280 0cca DD1F      		rol r29
 12281 0ccc CC0F      		lsl r28
 12282 0cce DD1F      		rol r29
 516:sd/sd.c       **** 
 12283               		.loc 5 516 8 is_stmt 1 view .LVU2547
 457:sd/sd.c       **** 		{
 12284               		.loc 5 457 22 view .LVU2548
 457:sd/sd.c       **** 		{
 12285               		.loc 5 457 16 view .LVU2549
 457:sd/sd.c       **** 		{
 12286               		.loc 5 457 22 is_stmt 0 view .LVU2550
 12287 0cd0 E8E0      		ldi r30,lo8(8)
 12288 0cd2 DE2E      		mov r13,r30
 12289 0cd4 00C0      		rjmp .L355
 12290               	.L346:
 519:sd/sd.c       **** 							++csd_c_size;
 12291               		.loc 5 519 8 is_stmt 1 view .LVU2551
 519:sd/sd.c       **** 							++csd_c_size;
 12292               		.loc 5 519 24 is_stmt 0 view .LVU2552
 12293 0cd6 8295      		swap r24
 12294 0cd8 8695      		lsr r24
 12295 0cda 8695      		lsr r24
 12296 0cdc 8370      		andi r24,lo8(3)
 519:sd/sd.c       **** 							++csd_c_size;
 12297               		.loc 5 519 19 view .LVU2553
 12298 0cde C82B      		or r28,r24
 520:sd/sd.c       **** 							break;
 12299               		.loc 5 520 8 is_stmt 1 view .LVU2554
 12300 0ce0 2196      		adiw r28,1
 521:sd/sd.c       **** 
 12301               		.loc 5 521 8 view .LVU2555
 457:sd/sd.c       **** 		{
 12302               		.loc 5 457 22 view .LVU2556
 457:sd/sd.c       **** 		{
 12303               		.loc 5 457 16 view .LVU2557
 457:sd/sd.c       **** 		{
 12304               		.loc 5 457 22 is_stmt 0 view .LVU2558
 12305 0ce2 69E0      		ldi r22,lo8(9)
 12306 0ce4 D62E      		mov r13,r22
 12307 0ce6 00C0      		rjmp .L355
 12308               	.L352:
 524:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 12309               		.loc 5 524 8 is_stmt 1 view .LVU2559
 525:sd/sd.c       **** 							break;
 12310               		.loc 5 525 8 view .LVU2560
 525:sd/sd.c       **** 							break;
 12311               		.loc 5 525 24 is_stmt 0 view .LVU2561
 12312 0ce8 880F      		lsl r24
 12313 0cea 8670      		andi r24,lo8(6)
 12314 0cec E82E      		mov r14,r24
 526:sd/sd.c       **** 
 12315               		.loc 5 526 8 is_stmt 1 view .LVU2562
 457:sd/sd.c       **** 		{
 12316               		.loc 5 457 22 view .LVU2563
 457:sd/sd.c       **** 		{
 12317               		.loc 5 457 16 view .LVU2564
 457:sd/sd.c       **** 		{
 12318               		.loc 5 457 22 is_stmt 0 view .LVU2565
 12319 0cee 5AE0      		ldi r21,lo8(10)
 12320 0cf0 D52E      		mov r13,r21
 12321 0cf2 00C0      		rjmp .L355
 12322               	.L364:
 12323               	.LBE685:
 12324               	.LBB686:
 12325               	.LBB684:
 227:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 12326               		.loc 5 227 2 view .LVU2566
 12327 0cf4 80E0      		ldi r24,lo8(__c.17)
 12328 0cf6 90E0      		ldi r25,hi8(__c.17)
 12329 0cf8 00C0      		rjmp .L356
 12330               	.L365:
 260:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 12331               		.loc 5 260 2 view .LVU2567
 12332 0cfa 80E0      		ldi r24,lo8(__c.5.lto_priv.1)
 12333 0cfc 90E0      		ldi r25,hi8(__c.5.lto_priv.1)
 12334 0cfe 00C0      		rjmp .L357
 12335               	.L366:
 263:sd/sd.c       **** 			PSTR("Rewritable")));
 12336               		.loc 5 263 51 view .LVU2568
 12337 0d00 80E0      		ldi r24,lo8(__c.3.lto_priv.1)
 12338 0d02 90E0      		ldi r25,hi8(__c.3.lto_priv.1)
 12339 0d04 00C0      		rjmp .L357
 12340               	.L367:
 260:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 12341               		.loc 5 260 2 view .LVU2569
 12342 0d06 20E0      		ldi r18,lo8(__c.1.lto_priv.4)
 12343 0d08 30E0      		ldi r19,hi8(__c.1.lto_priv.4)
 12344 0d0a 00C0      		rjmp .L358
 12345               	.LBE684:
 12346               	.LBE686:
 12347               	.LBE687:
 12348               	.LBE692:
 12349               		.cfi_endproc
 12350               	.LFE80:
 12352               		.section	.rodata.str1.1,"aMS",@progbits,1
 12353               	.LC0:
 12354 0000 3132 3334 		.string	"1234567890"
 12354      3536 3738 
 12354      3930 00
 12355               		.text
 12356               	.global	__vector_1
 12358               	__vector_1:
 12359               	.LFB105:
 181:ps2/ps2.c     **** }
 182:ps2/ps2.c     **** 
 183:ps2/ps2.c     **** /**
 184:ps2/ps2.c     ****  * @brief Event function that is called when a byte is
 185:ps2/ps2.c     ****  *        received from the keyboard
 186:ps2/ps2.c     ****  *
 187:ps2/ps2.c     ****  * @param byte The byte
 188:ps2/ps2.c     ****  */
 189:ps2/ps2.c     **** static void ps2_event(u8 byte)
 190:ps2/ps2.c     **** {
 191:ps2/ps2.c     **** 	static u8 state;
 192:ps2/ps2.c     **** 	static Key mods;
 193:ps2/ps2.c     **** 	Key key;
 194:ps2/ps2.c     **** 
 195:ps2/ps2.c     **** 	/* TODO: Doesn't work, All keys, Buffering */
 196:ps2/ps2.c     **** 
 197:ps2/ps2.c     **** 	/*
 198:ps2/ps2.c     **** 	 * The following code translates PS/2 keyboard scancodes to USB HID
 199:ps2/ps2.c     **** 	 * scancodes, which are then converted to characters by another
 200:ps2/ps2.c     **** 	 * equally bad piece of code. This is horrible, but at least somewhat
 201:ps2/ps2.c     **** 	 * maintainable.
 202:ps2/ps2.c     **** 	 */
 203:ps2/ps2.c     **** 
 204:ps2/ps2.c     **** 	key = 0;
 205:ps2/ps2.c     **** 	if(byte == PS2_BREAK)
 206:ps2/ps2.c     **** 	{
 207:ps2/ps2.c     **** 		state |= PS2_STATE_RELEASE;
 208:ps2/ps2.c     **** 		return;
 209:ps2/ps2.c     **** 	}
 210:ps2/ps2.c     **** 	else if(byte == PS2_EXTRA)
 211:ps2/ps2.c     **** 	{
 212:ps2/ps2.c     **** 		state |= PS2_STATE_EXTRA;
 213:ps2/ps2.c     **** 		return;
 214:ps2/ps2.c     **** 	}
 215:ps2/ps2.c     **** 
 216:ps2/ps2.c     **** 	if(state & PS2_STATE_EXTRA)
 217:ps2/ps2.c     **** 	{
 218:ps2/ps2.c     **** 		switch(byte)
 219:ps2/ps2.c     **** 		{
 220:ps2/ps2.c     **** 			/* --- Keycodes with E0 prefix --- */
 221:ps2/ps2.c     **** 			case PS2_R_ALT:       key = KEY_R_ALT;       break;
 222:ps2/ps2.c     **** 			case PS2_R_CTRL:      key = KEY_R_CTRL;      break;
 223:ps2/ps2.c     **** 			case PS2_L_GUI:       key = KEY_L_GUI;       break;
 224:ps2/ps2.c     **** 			case PS2_R_GUI:       key = KEY_R_GUI;       break;
 225:ps2/ps2.c     **** 			case PS2_END:         key = KEY_END;         break;
 226:ps2/ps2.c     **** 			case PS2_HOME:        key = KEY_HOME;        break;
 227:ps2/ps2.c     **** 			case PS2_INSERT:      key = KEY_INSERT;      break;
 228:ps2/ps2.c     **** 			case PS2_DELETE:      key = KEY_DELETE;      break;
 229:ps2/ps2.c     **** 			case PS2_UP:          key = KEY_UP;          break;
 230:ps2/ps2.c     **** 			case PS2_DOWN:        key = KEY_DOWN;        break;
 231:ps2/ps2.c     **** 			case PS2_RIGHT:       key = KEY_RIGHT;       break;
 232:ps2/ps2.c     **** 			case PS2_LEFT:        key = KEY_LEFT;        break;
 233:ps2/ps2.c     **** 			case PS2_PAGE_UP:     key = KEY_PAGE_UP;     break;
 234:ps2/ps2.c     **** 			case PS2_PAGE_DOWN:   key = KEY_PAGE_DOWN;   break;
 235:ps2/ps2.c     **** 			case PS2_KP_DIVIDE:   key = KEY_KP_DIVIDE;   break;
 236:ps2/ps2.c     **** 			case PS2_KP_ENTER:    key = KEY_KP_ENTER;    break;
 237:ps2/ps2.c     **** 		}
 238:ps2/ps2.c     **** 
 239:ps2/ps2.c     **** 		state &= ~PS2_STATE_EXTRA;
 240:ps2/ps2.c     **** 	}
 241:ps2/ps2.c     **** 	else
 242:ps2/ps2.c     **** 	{
 243:ps2/ps2.c     **** 		switch(byte)
 244:ps2/ps2.c     **** 		{
 245:ps2/ps2.c     **** 			/* --- 0 to 9 --- */
 246:ps2/ps2.c     **** 			case PS2_0:           key = KEY_0;           break;
 247:ps2/ps2.c     **** 			case PS2_1:           key = KEY_1;           break;
 248:ps2/ps2.c     **** 			case PS2_2:           key = KEY_2;           break;
 249:ps2/ps2.c     **** 			case PS2_3:           key = KEY_3;           break;
 250:ps2/ps2.c     **** 			case PS2_4:           key = KEY_4;           break;
 251:ps2/ps2.c     **** 			case PS2_5:           key = KEY_5;           break;
 252:ps2/ps2.c     **** 			case PS2_6:           key = KEY_6;           break;
 253:ps2/ps2.c     **** 			case PS2_7:           key = KEY_7;           break;
 254:ps2/ps2.c     **** 			case PS2_8:           key = KEY_8;           break;
 255:ps2/ps2.c     **** 			case PS2_9:           key = KEY_9;           break;
 256:ps2/ps2.c     **** 
 257:ps2/ps2.c     **** 			/* --- A to Z --- */
 258:ps2/ps2.c     **** 			case PS2_A:           key = KEY_A;           break;
 259:ps2/ps2.c     **** 			case PS2_B:           key = KEY_B;           break;
 260:ps2/ps2.c     **** 			case PS2_C:           key = KEY_C;           break;
 261:ps2/ps2.c     **** 			case PS2_D:           key = KEY_D;           break;
 262:ps2/ps2.c     **** 			case PS2_E:           key = KEY_E;           break;
 263:ps2/ps2.c     **** 			case PS2_F:           key = KEY_F;           break;
 264:ps2/ps2.c     **** 			case PS2_G:           key = KEY_G;           break;
 265:ps2/ps2.c     **** 			case PS2_H:           key = KEY_H;           break;
 266:ps2/ps2.c     **** 			case PS2_I:           key = KEY_I;           break;
 267:ps2/ps2.c     **** 			case PS2_J:           key = KEY_J;           break;
 268:ps2/ps2.c     **** 			case PS2_K:           key = KEY_K;           break;
 269:ps2/ps2.c     **** 			case PS2_L:           key = KEY_L;           break;
 270:ps2/ps2.c     **** 			case PS2_M:           key = KEY_M;           break;
 271:ps2/ps2.c     **** 			case PS2_N:           key = KEY_N;           break;
 272:ps2/ps2.c     **** 			case PS2_O:           key = KEY_O;           break;
 273:ps2/ps2.c     **** 			case PS2_P:           key = KEY_P;           break;
 274:ps2/ps2.c     **** 			case PS2_Q:           key = KEY_Q;           break;
 275:ps2/ps2.c     **** 			case PS2_R:           key = KEY_R;           break;
 276:ps2/ps2.c     **** 			case PS2_S:           key = KEY_S;           break;
 277:ps2/ps2.c     **** 			case PS2_T:           key = KEY_T;           break;
 278:ps2/ps2.c     **** 			case PS2_U:           key = KEY_U;           break;
 279:ps2/ps2.c     **** 			case PS2_V:           key = KEY_V;           break;
 280:ps2/ps2.c     **** 			case PS2_W:           key = KEY_W;           break;
 281:ps2/ps2.c     **** 			case PS2_X:           key = KEY_X;           break;
 282:ps2/ps2.c     **** 			case PS2_Y:           key = KEY_Y;           break;
 283:ps2/ps2.c     **** 			case PS2_Z:           key = KEY_Z;           break;
 284:ps2/ps2.c     **** 
 285:ps2/ps2.c     **** 			/* --- Function Keys --- */
 286:ps2/ps2.c     **** 			case PS2_F1:          key = KEY_F1;          break;
 287:ps2/ps2.c     **** 			case PS2_F2:          key = KEY_F2;          break;
 288:ps2/ps2.c     **** 			case PS2_F3:          key = KEY_F3;          break;
 289:ps2/ps2.c     **** 			case PS2_F4:          key = KEY_F4;          break;
 290:ps2/ps2.c     **** 			case PS2_F5:          key = KEY_F5;          break;
 291:ps2/ps2.c     **** 			case PS2_F6:          key = KEY_F6;          break;
 292:ps2/ps2.c     **** 			case PS2_F7:          key = KEY_F7;          break;
 293:ps2/ps2.c     **** 			case PS2_F8:          key = KEY_F8;          break;
 294:ps2/ps2.c     **** 			case PS2_F9:          key = KEY_F9;          break;
 295:ps2/ps2.c     **** 			case PS2_F10:         key = KEY_F10;         break;
 296:ps2/ps2.c     **** 			case PS2_F11:         key = KEY_F11;         break;
 297:ps2/ps2.c     **** 			case PS2_F12:         key = KEY_F12;         break;
 298:ps2/ps2.c     **** 
 299:ps2/ps2.c     **** 			/* --- Keypad --- */
 300:ps2/ps2.c     **** 			case PS2_KP_0:        key = KEY_KP_0;        break;
 301:ps2/ps2.c     **** 			case PS2_KP_1:        key = KEY_KP_1;        break;
 302:ps2/ps2.c     **** 			case PS2_KP_2:        key = KEY_KP_2;        break;
 303:ps2/ps2.c     **** 			case PS2_KP_3:        key = KEY_KP_3;        break;
 304:ps2/ps2.c     **** 			case PS2_KP_4:        key = KEY_KP_4;        break;
 305:ps2/ps2.c     **** 			case PS2_KP_5:        key = KEY_KP_5;        break;
 306:ps2/ps2.c     **** 			case PS2_KP_6:        key = KEY_KP_6;        break;
 307:ps2/ps2.c     **** 			case PS2_KP_7:        key = KEY_KP_7;        break;
 308:ps2/ps2.c     **** 			case PS2_KP_8:        key = KEY_KP_8;        break;
 309:ps2/ps2.c     **** 			case PS2_KP_9:        key = KEY_KP_9;        break;
 310:ps2/ps2.c     **** 			case PS2_KP_PERIOD:   key = KEY_KP_PERIOD;   break;
 311:ps2/ps2.c     **** 			case PS2_KP_PLUS:     key = KEY_KP_PLUS;     break;
 312:ps2/ps2.c     **** 			case PS2_KP_MINUS:    key = KEY_KP_MINUS;    break;
 313:ps2/ps2.c     **** 			case PS2_KP_MULTIPLY: key = KEY_KP_MULTIPLY; break;
 314:ps2/ps2.c     **** 
 315:ps2/ps2.c     **** 			/* --- Modifiers --- */
 316:ps2/ps2.c     **** 			case PS2_L_ALT:       key = KEY_L_ALT;       break;
 317:ps2/ps2.c     **** 			case PS2_L_SHIFT:     key = KEY_L_SHIFT;     break;
 318:ps2/ps2.c     **** 			case PS2_L_CTRL:      key = KEY_L_CTRL;      break;
 319:ps2/ps2.c     **** 
 320:ps2/ps2.c     **** 			/* --- Other --- */
 321:ps2/ps2.c     **** 			case PS2_ESCAPE:      key = KEY_ESCAPE;      break;
 322:ps2/ps2.c     **** 			case PS2_TAB:         key = KEY_TAB;         break;
 323:ps2/ps2.c     **** 			case PS2_SPACE:       key = KEY_SPACE;       break;
 324:ps2/ps2.c     **** 			case PS2_BACKSPACE:   key = KEY_BACKSPACE;   break;
 325:ps2/ps2.c     **** 			case PS2_CAPSLOCK:    key = KEY_CAPSLOCK;    break;
 326:ps2/ps2.c     **** 			case PS2_RETURN:      key = KEY_RETURN;      break;
 327:ps2/ps2.c     **** 
 328:ps2/ps2.c     **** /*
 329:ps2/ps2.c     **** 			case PS2_COMMA:       key = KEY_COMMA;       break;
 330:ps2/ps2.c     **** 			case PS2_BACKTICK:    key = KEY_BACKTICK;    break;
 331:ps2/ps2.c     **** 			case PS2_PERIOD:      key = KEY_PERIOD;      break;
 332:ps2/ps2.c     **** 			case PS2_SLASH:       key = KEY_SLASH;       break;
 333:ps2/ps2.c     **** 			case PS2_SEMICOLON:   key = KEY_SEMICOLON;   break;
 334:ps2/ps2.c     **** 			case PS2_MINUS:       key = KEY_MINUS;       break;
 335:ps2/ps2.c     **** 			case PS2_APOSTROPHE:  key = KEY_APOSTROPHE;  break;
 336:ps2/ps2.c     **** 			case PS2_L_BRACKET:   key = KEY_L_BRACKET;   break;
 337:ps2/ps2.c     **** 			case PS2_EQUAL:       key = KEY_EQUAL;       break;
 338:ps2/ps2.c     **** 			case PS2_R_SHIFT:     key = KEY_R_SHIFT;     break;
 339:ps2/ps2.c     **** 			case PS2_R_BRACKET:   key = KEY_R_BRACKET;   break;
 340:ps2/ps2.c     **** 			case PS2_BACKSLASH:   key = KEY_BACKSLASH;   break;
 341:ps2/ps2.c     **** */
 342:ps2/ps2.c     **** 		}
 343:ps2/ps2.c     **** 	}
 344:ps2/ps2.c     **** 
 345:ps2/ps2.c     **** 	if(key)
 346:ps2/ps2.c     **** 	{
 347:ps2/ps2.c     **** 		Key mod;
 348:ps2/ps2.c     **** 
 349:ps2/ps2.c     **** 		/* handle modifiers */
 350:ps2/ps2.c     **** 		mod = 0;
 351:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 352:ps2/ps2.c     **** 		{
 353:ps2/ps2.c     **** 			mod = MOD_ALT;
 354:ps2/ps2.c     **** 		}
 355:ps2/ps2.c     **** 		else if(key == KEY_R_ALT)
 356:ps2/ps2.c     **** 		{
 357:ps2/ps2.c     **** 			mod = MOD_ALT_GR;
 358:ps2/ps2.c     **** 		}
 359:ps2/ps2.c     **** 		else if(key == KEY_L_SHIFT || key == KEY_R_SHIFT)
 360:ps2/ps2.c     **** 		{
 361:ps2/ps2.c     **** 			mod = MOD_SHIFT;
 362:ps2/ps2.c     **** 		}
 363:ps2/ps2.c     **** 		else if(key == KEY_L_CTRL || key == KEY_R_CTRL)
 364:ps2/ps2.c     **** 		{
 365:ps2/ps2.c     **** 			mod = MOD_CTRL;
 366:ps2/ps2.c     **** 		}
 367:ps2/ps2.c     **** 		else if(key == KEY_L_GUI || key == KEY_R_GUI)
 368:ps2/ps2.c     **** 		{
 369:ps2/ps2.c     **** 			mod = MOD_OS;
 370:ps2/ps2.c     **** 		}
 371:ps2/ps2.c     **** 
 372:ps2/ps2.c     **** 		if(mod)
 373:ps2/ps2.c     **** 		{
 374:ps2/ps2.c     **** 			if(state & PS2_STATE_RELEASE)
 375:ps2/ps2.c     **** 			{
 376:ps2/ps2.c     **** 				mods &= ~mod;
 377:ps2/ps2.c     **** 			}
 378:ps2/ps2.c     **** 			else
 379:ps2/ps2.c     **** 			{
 380:ps2/ps2.c     **** 				mods |= mod;
 381:ps2/ps2.c     **** 			}
 382:ps2/ps2.c     **** 		}
 383:ps2/ps2.c     **** 
 384:ps2/ps2.c     **** 		/* trigger key event */
 385:ps2/ps2.c     **** 		key |= mods;
 386:ps2/ps2.c     **** 		keyboard_event(key, key_to_codepoint(key),
 387:ps2/ps2.c     **** 			state & PS2_STATE_RELEASE ? KEYSTATE_RELEASED : KEYSTATE_PRESSED);
 388:ps2/ps2.c     **** 	}
 389:ps2/ps2.c     **** 
 390:ps2/ps2.c     **** 	state &= ~PS2_STATE_RELEASE;
 391:ps2/ps2.c     **** }
 392:ps2/ps2.c     **** 
 393:ps2/ps2.c     **** /**
 394:ps2/ps2.c     ****  * @brief Get the PS/2 data line state
 395:ps2/ps2.c     ****  *
 396:ps2/ps2.c     ****  * @return 0 if LOW, non-zero if HIGH
 397:ps2/ps2.c     ****  */
 398:ps2/ps2.c     **** static inline u8 _ps2_data_read(void)
 399:ps2/ps2.c     **** {
 400:ps2/ps2.c     **** 	/* Read keyboard data pin */
 401:ps2/ps2.c     **** 	return PS2_DATA_PORT_IN & (1 << PS2_DATA_PIN);
 402:ps2/ps2.c     **** }
 403:ps2/ps2.c     **** 
 404:ps2/ps2.c     **** /**
 405:ps2/ps2.c     ****  * @brief Called when a falling edge is detected on the PS/2 clock pin
 406:ps2/ps2.c     ****  */
 407:ps2/ps2.c     **** static inline void _ps2_clock_falling_edge(void)
 408:ps2/ps2.c     **** {
 409:ps2/ps2.c     **** 	if(_bit == 0)
 410:ps2/ps2.c     **** 	{
 411:ps2/ps2.c     **** 		/* Start bit, reset byte */
 412:ps2/ps2.c     **** 		_byte = 0;
 413:ps2/ps2.c     **** 	}
 414:ps2/ps2.c     **** 	else if(_bit >= 1 && _bit <= 8)
 415:ps2/ps2.c     **** 	{
 416:ps2/ps2.c     **** 		/* Data bit */
 417:ps2/ps2.c     **** 		if(_ps2_data_read())
 418:ps2/ps2.c     **** 		{
 419:ps2/ps2.c     **** 			/* Set bit */
 420:ps2/ps2.c     **** 			_byte |= (1 << (_bit - 1));
 421:ps2/ps2.c     **** 		}
 422:ps2/ps2.c     **** 	}
 423:ps2/ps2.c     **** 	else if(_bit == 9)
 424:ps2/ps2.c     **** 	{
 425:ps2/ps2.c     **** 		/* Ignore parity bit */
 426:ps2/ps2.c     **** 		/* TODO: Check parity bit */
 427:ps2/ps2.c     **** 		ps2_event(_byte);
 428:ps2/ps2.c     **** 	}
 429:ps2/ps2.c     **** 	else if(_bit == 10)
 430:ps2/ps2.c     **** 	{
 431:ps2/ps2.c     **** 		/* Stop bit, reset bit counter */
 432:ps2/ps2.c     **** 		_bit = 0;
 433:ps2/ps2.c     **** 
 434:ps2/ps2.c     **** 		/* Return immediately so it stays 0 */
 435:ps2/ps2.c     **** 		return;
 436:ps2/ps2.c     **** 	}
 437:ps2/ps2.c     **** 
 438:ps2/ps2.c     **** 	++_bit;
 439:ps2/ps2.c     **** }
 440:ps2/ps2.c     **** 
 441:ps2/ps2.c     **** /** External interrupt */
 442:ps2/ps2.c     **** ISR(INT0_vect)
 443:ps2/ps2.c     **** {
 12360               		.loc 19 443 1 is_stmt 1 view -0
 12361               		.cfi_startproc
 12362 28a4 1F92      		push r1
 12363               		.cfi_def_cfa_offset 3
 12364               		.cfi_offset 1, -2
 12365 28a6 0F92      		push r0
 12366               		.cfi_def_cfa_offset 4
 12367               		.cfi_offset 0, -3
 12368 28a8 0FB6      		in r0,__SREG__
 12369 28aa 0F92      		push r0
 12370 28ac 1124      		clr __zero_reg__
 12371 28ae CF92      		push r12
 12372               		.cfi_def_cfa_offset 5
 12373               		.cfi_offset 12, -4
 12374 28b0 DF92      		push r13
 12375               		.cfi_def_cfa_offset 6
 12376               		.cfi_offset 13, -5
 12377 28b2 EF92      		push r14
 12378               		.cfi_def_cfa_offset 7
 12379               		.cfi_offset 14, -6
 12380 28b4 FF92      		push r15
 12381               		.cfi_def_cfa_offset 8
 12382               		.cfi_offset 15, -7
 12383 28b6 1F93      		push r17
 12384               		.cfi_def_cfa_offset 9
 12385               		.cfi_offset 17, -8
 12386 28b8 2F93      		push r18
 12387               		.cfi_def_cfa_offset 10
 12388               		.cfi_offset 18, -9
 12389 28ba 3F93      		push r19
 12390               		.cfi_def_cfa_offset 11
 12391               		.cfi_offset 19, -10
 12392 28bc 4F93      		push r20
 12393               		.cfi_def_cfa_offset 12
 12394               		.cfi_offset 20, -11
 12395 28be 5F93      		push r21
 12396               		.cfi_def_cfa_offset 13
 12397               		.cfi_offset 21, -12
 12398 28c0 6F93      		push r22
 12399               		.cfi_def_cfa_offset 14
 12400               		.cfi_offset 22, -13
 12401 28c2 7F93      		push r23
 12402               		.cfi_def_cfa_offset 15
 12403               		.cfi_offset 23, -14
 12404 28c4 8F93      		push r24
 12405               		.cfi_def_cfa_offset 16
 12406               		.cfi_offset 24, -15
 12407 28c6 9F93      		push r25
 12408               		.cfi_def_cfa_offset 17
 12409               		.cfi_offset 25, -16
 12410 28c8 AF93      		push r26
 12411               		.cfi_def_cfa_offset 18
 12412               		.cfi_offset 26, -17
 12413 28ca BF93      		push r27
 12414               		.cfi_def_cfa_offset 19
 12415               		.cfi_offset 27, -18
 12416 28cc EF93      		push r30
 12417               		.cfi_def_cfa_offset 20
 12418               		.cfi_offset 30, -19
 12419 28ce FF93      		push r31
 12420               		.cfi_def_cfa_offset 21
 12421               		.cfi_offset 31, -20
 12422 28d0 CF93      		push r28
 12423               		.cfi_def_cfa_offset 22
 12424               		.cfi_offset 28, -21
 12425 28d2 DF93      		push r29
 12426               		.cfi_def_cfa_offset 23
 12427               		.cfi_offset 29, -22
 12428 28d4 CDB7      		in r28,__SP_L__
 12429 28d6 DEB7      		in r29,__SP_H__
 12430               		.cfi_def_cfa_register 28
 12431 28d8 2C97      		sbiw r28,12
 12432               		.cfi_def_cfa_offset 35
 12433 28da DEBF      		out __SP_H__,r29
 12434 28dc CDBF      		out __SP_L__,r28
 12435               	/* prologue: Signal */
 12436               	/* frame size = 12 */
 12437               	/* stack size = 34 */
 12438               	.L__stack_usage = 34
 444:ps2/ps2.c     **** 	_ps2_clock_falling_edge();
 12439               		.loc 19 444 2 view .LVU2571
 12440               	.LBB711:
 12441               	.LBI711:
 407:ps2/ps2.c     **** {
 12442               		.loc 19 407 20 view .LVU2572
 12443               	.LBB712:
 409:ps2/ps2.c     **** 	{
 12444               		.loc 19 409 2 view .LVU2573
 409:ps2/ps2.c     **** 	{
 12445               		.loc 19 409 10 is_stmt 0 view .LVU2574
 12446 28de 8091 0000 		lds r24,_bit
 409:ps2/ps2.c     **** 	{
 12447               		.loc 19 409 4 view .LVU2575
 12448 28e2 8111      		cpse r24,__zero_reg__
 12449 28e4 00C0      		rjmp .L411
 412:ps2/ps2.c     **** 	}
 12450               		.loc 19 412 3 is_stmt 1 view .LVU2576
 412:ps2/ps2.c     **** 	}
 12451               		.loc 19 412 9 is_stmt 0 view .LVU2577
 12452 28e6 1092 0000 		sts _byte,__zero_reg__
 12453               	.L412:
 438:ps2/ps2.c     **** }
 12454               		.loc 19 438 2 is_stmt 1 view .LVU2578
 12455 28ea 8091 0000 		lds r24,_bit
 12456 28ee 8F5F      		subi r24,lo8(-(1))
 12457               	.L544:
 432:ps2/ps2.c     **** 
 12458               		.loc 19 432 8 is_stmt 0 view .LVU2579
 12459 28f0 8093 0000 		sts _bit,r24
 12460               	/* epilogue start */
 12461               	.LBE712:
 12462               	.LBE711:
 445:ps2/ps2.c     **** }
 12463               		.loc 19 445 1 view .LVU2580
 12464 28f4 2C96      		adiw r28,12
 12465 28f6 0FB6      		in __tmp_reg__,__SREG__
 12466 28f8 F894      		cli
 12467 28fa DEBF      		out __SP_H__,r29
 12468 28fc 0FBE      		out __SREG__,__tmp_reg__
 12469 28fe CDBF      		out __SP_L__,r28
 12470 2900 DF91      		pop r29
 12471 2902 CF91      		pop r28
 12472 2904 FF91      		pop r31
 12473 2906 EF91      		pop r30
 12474 2908 BF91      		pop r27
 12475 290a AF91      		pop r26
 12476 290c 9F91      		pop r25
 12477 290e 8F91      		pop r24
 12478 2910 7F91      		pop r23
 12479 2912 6F91      		pop r22
 12480 2914 5F91      		pop r21
 12481 2916 4F91      		pop r20
 12482 2918 3F91      		pop r19
 12483 291a 2F91      		pop r18
 12484 291c 1F91      		pop r17
 12485 291e FF90      		pop r15
 12486 2920 EF90      		pop r14
 12487 2922 DF90      		pop r13
 12488 2924 CF90      		pop r12
 12489 2926 0F90      		pop r0
 12490 2928 0FBE      		out __SREG__,r0
 12491 292a 0F90      		pop r0
 12492 292c 1F90      		pop r1
 12493 292e 1895      		reti
 12494               	.L411:
 12495               	.LBB815:
 12496               	.LBB813:
 414:ps2/ps2.c     **** 	{
 12497               		.loc 19 414 7 is_stmt 1 view .LVU2581
 414:ps2/ps2.c     **** 	{
 12498               		.loc 19 414 20 is_stmt 0 view .LVU2582
 12499 2930 9FEF      		ldi r25,lo8(-1)
 12500 2932 980F      		add r25,r24
 414:ps2/ps2.c     **** 	{
 12501               		.loc 19 414 9 view .LVU2583
 12502 2934 9830      		cpi r25,lo8(8)
 12503 2936 00F4      		brsh .L413
 417:ps2/ps2.c     **** 		{
 12504               		.loc 19 417 3 is_stmt 1 view .LVU2584
 12505               	.LBB713:
 12506               	.LBI713:
 398:ps2/ps2.c     **** {
 12507               		.loc 19 398 18 view .LVU2585
 12508               	.LBB714:
 401:ps2/ps2.c     **** }
 12509               		.loc 19 401 2 view .LVU2586
 12510               	.LBE714:
 12511               	.LBE713:
 417:ps2/ps2.c     **** 		{
 12512               		.loc 19 417 5 is_stmt 0 view .LVU2587
 12513 2938 1B9B      		sbis 0x3,3
 12514 293a 00C0      		rjmp .L412
 420:ps2/ps2.c     **** 		}
 12515               		.loc 19 420 4 is_stmt 1 view .LVU2588
 420:ps2/ps2.c     **** 		}
 12516               		.loc 19 420 25 is_stmt 0 view .LVU2589
 12517 293c 8150      		subi r24,1
 12518 293e 990B      		sbc r25,r25
 420:ps2/ps2.c     **** 		}
 12519               		.loc 19 420 16 view .LVU2590
 12520 2940 21E0      		ldi r18,lo8(1)
 12521 2942 30E0      		ldi r19,0
 12522 2944 00C0      		rjmp 2f
 12523               		1:
 12524 2946 220F      		lsl r18
 12525               		2:
 12526 2948 8A95      		dec r24
 12527 294a 02F4      		brpl 1b
 420:ps2/ps2.c     **** 		}
 12528               		.loc 19 420 10 view .LVU2591
 12529 294c 8091 0000 		lds r24,_byte
 12530 2950 822B      		or r24,r18
 12531 2952 8093 0000 		sts _byte,r24
 12532 2956 00C0      		rjmp .L412
 12533               	.L413:
 423:ps2/ps2.c     **** 	{
 12534               		.loc 19 423 7 is_stmt 1 view .LVU2592
 423:ps2/ps2.c     **** 	{
 12535               		.loc 19 423 9 is_stmt 0 view .LVU2593
 12536 2958 8930      		cpi r24,lo8(9)
 12537 295a 01F0      		breq .+2
 12538 295c 00C0      		rjmp .L414
 427:ps2/ps2.c     **** 	}
 12539               		.loc 19 427 3 is_stmt 1 view .LVU2594
 12540 295e E091 0000 		lds r30,_byte
 12541               	.LVL689:
 12542               	.LBB715:
 12543               	.LBI715:
 189:ps2/ps2.c     **** {
 12544               		.loc 19 189 13 view .LVU2595
 12545               	.LBB716:
 191:ps2/ps2.c     **** 	static Key mods;
 12546               		.loc 19 191 2 view .LVU2596
 192:ps2/ps2.c     **** 	Key key;
 12547               		.loc 19 192 2 view .LVU2597
 193:ps2/ps2.c     **** 
 12548               		.loc 19 193 2 view .LVU2598
 204:ps2/ps2.c     **** 	if(byte == PS2_BREAK)
 12549               		.loc 19 204 2 view .LVU2599
 205:ps2/ps2.c     **** 	{
 12550               		.loc 19 205 2 view .LVU2600
 207:ps2/ps2.c     **** 		return;
 12551               		.loc 19 207 9 is_stmt 0 view .LVU2601
 12552 2962 8091 0000 		lds r24,state.1
 205:ps2/ps2.c     **** 	{
 12553               		.loc 19 205 4 view .LVU2602
 12554 2966 E03F      		cpi r30,lo8(-16)
 12555 2968 01F4      		brne .L415
 207:ps2/ps2.c     **** 		return;
 12556               		.loc 19 207 3 is_stmt 1 view .LVU2603
 207:ps2/ps2.c     **** 		return;
 12557               		.loc 19 207 9 is_stmt 0 view .LVU2604
 12558 296a 8260      		ori r24,lo8(2)
 12559               	.LVL690:
 12560               	.L599:
 212:ps2/ps2.c     **** 		return;
 12561               		.loc 19 212 9 view .LVU2605
 12562 296c 8093 0000 		sts state.1,r24
 213:ps2/ps2.c     **** 	}
 12563               		.loc 19 213 3 is_stmt 1 view .LVU2606
 12564 2970 00C0      		rjmp .L412
 12565               	.LVL691:
 12566               	.L415:
 210:ps2/ps2.c     **** 	{
 12567               		.loc 19 210 7 view .LVU2607
 210:ps2/ps2.c     **** 	{
 12568               		.loc 19 210 9 is_stmt 0 view .LVU2608
 12569 2972 E03E      		cpi r30,lo8(-32)
 12570 2974 01F4      		brne .L416
 212:ps2/ps2.c     **** 		return;
 12571               		.loc 19 212 3 is_stmt 1 view .LVU2609
 212:ps2/ps2.c     **** 		return;
 12572               		.loc 19 212 9 is_stmt 0 view .LVU2610
 12573 2976 8160      		ori r24,lo8(1)
 12574 2978 00C0      		rjmp .L599
 12575               	.L416:
 216:ps2/ps2.c     **** 	{
 12576               		.loc 19 216 2 is_stmt 1 view .LVU2611
 216:ps2/ps2.c     **** 	{
 12577               		.loc 19 216 4 is_stmt 0 view .LVU2612
 12578 297a 80FF      		sbrs r24,0
 12579 297c 00C0      		rjmp .L417
 218:ps2/ps2.c     **** 		{
 12580               		.loc 19 218 3 is_stmt 1 view .LVU2613
 12581 297e E151      		subi r30,lo8(-(-17))
 12582               	.LVL692:
 239:ps2/ps2.c     **** 	}
 12583               		.loc 19 239 9 is_stmt 0 view .LVU2614
 12584 2980 282F      		mov r18,r24
 12585 2982 2E7F      		andi r18,lo8(-2)
 12586 2984 ED36      		cpi r30,lo8(109)
 12587 2986 00F0      		brlo .L418
 239:ps2/ps2.c     **** 	}
 12588               		.loc 19 239 3 is_stmt 1 view .LVU2615
 239:ps2/ps2.c     **** 	}
 12589               		.loc 19 239 9 is_stmt 0 view .LVU2616
 12590 2988 2093 0000 		sts state.1,r18
 345:ps2/ps2.c     **** 	{
 12591               		.loc 19 345 2 is_stmt 1 view .LVU2617
 12592               	.LVL693:
 12593               	.L419:
 390:ps2/ps2.c     **** }
 12594               		.loc 19 390 2 view .LVU2618
 390:ps2/ps2.c     **** }
 12595               		.loc 19 390 8 is_stmt 0 view .LVU2619
 12596 298c 8091 0000 		lds r24,state.1
 12597 2990 8D7F      		andi r24,lo8(-3)
 12598 2992 00C0      		rjmp .L599
 12599               	.LVL694:
 12600               	.L418:
 390:ps2/ps2.c     **** }
 12601               		.loc 19 390 8 view .LVU2620
 12602 2994 F0E0      		ldi r31,0
 12603 2996 E050      		subi r30,lo8(-(CSWTCH.21))
 12604 2998 F040      		sbci r31,hi8(-(CSWTCH.21))
 12605 299a 3081      		ld r19,Z
 12606 299c 832F      		mov r24,r19
 12607 299e 90E0      		ldi r25,0
 12608 29a0 A0E0      		ldi r26,0
 12609 29a2 B0E0      		ldi r27,0
 12610               	.LVL695:
 239:ps2/ps2.c     **** 	}
 12611               		.loc 19 239 3 is_stmt 1 view .LVU2621
 239:ps2/ps2.c     **** 	}
 12612               		.loc 19 239 9 is_stmt 0 view .LVU2622
 12613 29a4 2093 0000 		sts state.1,r18
 345:ps2/ps2.c     **** 	{
 12614               		.loc 19 345 2 is_stmt 1 view .LVU2623
 345:ps2/ps2.c     **** 	{
 12615               		.loc 19 345 4 is_stmt 0 view .LVU2624
 12616 29a8 3323      		tst r19
 12617 29aa 01F0      		breq .L419
 12618               	.LVL696:
 12619               	.LBB717:
 347:ps2/ps2.c     **** 
 12620               		.loc 19 347 3 is_stmt 1 view .LVU2625
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 12621               		.loc 19 350 3 view .LVU2626
 351:ps2/ps2.c     **** 		{
 12622               		.loc 19 351 3 view .LVU2627
 351:ps2/ps2.c     **** 		{
 12623               		.loc 19 351 5 is_stmt 0 view .LVU2628
 12624 29ac 823E      		cpi r24,-30
 12625 29ae 9105      		cpc r25,__zero_reg__
 12626 29b0 A105      		cpc r26,__zero_reg__
 12627 29b2 B105      		cpc r27,__zero_reg__
 12628 29b4 01F0      		breq .+2
 12629 29b6 00C0      		rjmp .L493
 12630               	.LVL697:
 12631               	.L481:
 351:ps2/ps2.c     **** 		{
 12632               		.loc 19 351 5 view .LVU2629
 12633               	.LBE717:
 12634               	.LBE716:
 12635               	.LBE715:
 12636               	.LBE813:
 12637               	.LBE815:
 443:ps2/ps2.c     **** 	_ps2_clock_falling_edge();
 12638               		.loc 19 443 1 view .LVU2630
 12639 29b8 82EE      		ldi r24,lo8(-30)
 12640 29ba 90E0      		ldi r25,0
 12641 29bc A0E0      		ldi r26,0
 12642 29be B0E0      		ldi r27,0
 12643               	.LBB816:
 12644               	.LBB814:
 12645               	.LBB812:
 12646               	.LBB811:
 12647               	.LBB743:
 353:ps2/ps2.c     **** 		}
 12648               		.loc 19 353 8 view .LVU2631
 12649 29c0 40E0      		ldi r20,0
 12650 29c2 50E0      		ldi r21,0
 12651 29c4 60E0      		ldi r22,0
 12652 29c6 70E1      		ldi r23,lo8(16)
 12653               	.L494:
 374:ps2/ps2.c     **** 			{
 12654               		.loc 19 374 4 is_stmt 1 view .LVU2632
 376:ps2/ps2.c     **** 			}
 12655               		.loc 19 376 10 is_stmt 0 view .LVU2633
 12656 29c8 C090 0000 		lds r12,mods.0
 12657 29cc D090 0000 		lds r13,mods.0+1
 12658 29d0 E090 0000 		lds r14,mods.0+2
 12659 29d4 F090 0000 		lds r15,mods.0+3
 374:ps2/ps2.c     **** 			{
 12660               		.loc 19 374 6 view .LVU2634
 12661 29d8 2091 0000 		lds r18,state.1
 12662 29dc 21FF      		sbrs r18,1
 12663 29de 00C0      		rjmp .L496
 376:ps2/ps2.c     **** 			}
 12664               		.loc 19 376 5 is_stmt 1 view .LVU2635
 376:ps2/ps2.c     **** 			}
 12665               		.loc 19 376 13 is_stmt 0 view .LVU2636
 12666 29e0 4095      		com r20
 12667 29e2 5095      		com r21
 12668 29e4 6095      		com r22
 12669 29e6 7095      		com r23
 376:ps2/ps2.c     **** 			}
 12670               		.loc 19 376 10 view .LVU2637
 12671 29e8 4C21      		and r20,r12
 12672 29ea 5D21      		and r21,r13
 12673 29ec 6E21      		and r22,r14
 12674 29ee 7F21      		and r23,r15
 12675               	.L497:
 12676 29f0 4093 0000 		sts mods.0,r20
 12677 29f4 5093 0000 		sts mods.0+1,r21
 12678 29f8 6093 0000 		sts mods.0+2,r22
 12679 29fc 7093 0000 		sts mods.0+3,r23
 12680 2a00 00C0      		rjmp .L460
 12681               	.LVL698:
 12682               	.L417:
 376:ps2/ps2.c     **** 			}
 12683               		.loc 19 376 10 view .LVU2638
 12684               	.LBE743:
 243:ps2/ps2.c     **** 		{
 12685               		.loc 19 243 3 is_stmt 1 view .LVU2639
 12686 2a02 E150      		subi r30,lo8(-(-1))
 12687               	.LVL699:
 243:ps2/ps2.c     **** 		{
 12688               		.loc 19 243 3 is_stmt 0 view .LVU2640
 12689 2a04 E338      		cpi r30,lo8(-125)
 12690 2a06 00F4      		brsh .L419
 12691 2a08 F0E0      		ldi r31,0
 12692 2a0a E050      		subi r30,lo8(-(gs(.L422)))
 12693 2a0c F040      		sbci r31,hi8(-(gs(.L422)))
 12694 2a0e 0C94 0000 		jmp __tablejump2__
 12695               		.section	.jumptables.gcc.__vector_1,"a",@progbits
 12696               		.p2align	1
 12697               	.L422:
 12698 0000 0000      		.word gs(.L492)
 12699 0002 0000      		.word gs(.L419)
 12700 0004 0000      		.word gs(.L491)
 12701 0006 0000      		.word gs(.L490)
 12702 0008 0000      		.word gs(.L489)
 12703 000a 0000      		.word gs(.L488)
 12704 000c 0000      		.word gs(.L487)
 12705 000e 0000      		.word gs(.L419)
 12706 0010 0000      		.word gs(.L486)
 12707 0012 0000      		.word gs(.L485)
 12708 0014 0000      		.word gs(.L484)
 12709 0016 0000      		.word gs(.L483)
 12710 0018 0000      		.word gs(.L482)
 12711 001a 0000      		.word gs(.L419)
 12712 001c 0000      		.word gs(.L419)
 12713 001e 0000      		.word gs(.L419)
 12714 0020 0000      		.word gs(.L481)
 12715 0022 0000      		.word gs(.L480)
 12716 0024 0000      		.word gs(.L419)
 12717 0026 0000      		.word gs(.L479)
 12718 0028 0000      		.word gs(.L478)
 12719 002a 0000      		.word gs(.L477)
 12720 002c 0000      		.word gs(.L419)
 12721 002e 0000      		.word gs(.L419)
 12722 0030 0000      		.word gs(.L419)
 12723 0032 0000      		.word gs(.L476)
 12724 0034 0000      		.word gs(.L475)
 12725 0036 0000      		.word gs(.L474)
 12726 0038 0000      		.word gs(.L473)
 12727 003a 0000      		.word gs(.L472)
 12728 003c 0000      		.word gs(.L419)
 12729 003e 0000      		.word gs(.L419)
 12730 0040 0000      		.word gs(.L471)
 12731 0042 0000      		.word gs(.L470)
 12732 0044 0000      		.word gs(.L469)
 12733 0046 0000      		.word gs(.L468)
 12734 0048 0000      		.word gs(.L467)
 12735 004a 0000      		.word gs(.L466)
 12736 004c 0000      		.word gs(.L419)
 12737 004e 0000      		.word gs(.L419)
 12738 0050 0000      		.word gs(.L465)
 12739 0052 0000      		.word gs(.L464)
 12740 0054 0000      		.word gs(.L463)
 12741 0056 0000      		.word gs(.L462)
 12742 0058 0000      		.word gs(.L461)
 12743 005a 0000      		.word gs(.L545)
 12744 005c 0000      		.word gs(.L419)
 12745 005e 0000      		.word gs(.L419)
 12746 0060 0000      		.word gs(.L459)
 12747 0062 0000      		.word gs(.L458)
 12748 0064 0000      		.word gs(.L457)
 12749 0066 0000      		.word gs(.L456)
 12750 0068 0000      		.word gs(.L455)
 12751 006a 0000      		.word gs(.L454)
 12752 006c 0000      		.word gs(.L419)
 12753 006e 0000      		.word gs(.L419)
 12754 0070 0000      		.word gs(.L419)
 12755 0072 0000      		.word gs(.L453)
 12756 0074 0000      		.word gs(.L452)
 12757 0076 0000      		.word gs(.L451)
 12758 0078 0000      		.word gs(.L450)
 12759 007a 0000      		.word gs(.L449)
 12760 007c 0000      		.word gs(.L419)
 12761 007e 0000      		.word gs(.L419)
 12762 0080 0000      		.word gs(.L419)
 12763 0082 0000      		.word gs(.L448)
 12764 0084 0000      		.word gs(.L447)
 12765 0086 0000      		.word gs(.L446)
 12766 0088 0000      		.word gs(.L445)
 12767 008a 0000      		.word gs(.L444)
 12768 008c 0000      		.word gs(.L419)
 12769 008e 0000      		.word gs(.L419)
 12770 0090 0000      		.word gs(.L419)
 12771 0092 0000      		.word gs(.L419)
 12772 0094 0000      		.word gs(.L443)
 12773 0096 0000      		.word gs(.L419)
 12774 0098 0000      		.word gs(.L442)
 12775 009a 0000      		.word gs(.L419)
 12776 009c 0000      		.word gs(.L419)
 12777 009e 0000      		.word gs(.L419)
 12778 00a0 0000      		.word gs(.L419)
 12779 00a2 0000      		.word gs(.L419)
 12780 00a4 0000      		.word gs(.L419)
 12781 00a6 0000      		.word gs(.L419)
 12782 00a8 0000      		.word gs(.L419)
 12783 00aa 0000      		.word gs(.L419)
 12784 00ac 0000      		.word gs(.L419)
 12785 00ae 0000      		.word gs(.L441)
 12786 00b0 0000      		.word gs(.L419)
 12787 00b2 0000      		.word gs(.L440)
 12788 00b4 0000      		.word gs(.L419)
 12789 00b6 0000      		.word gs(.L419)
 12790 00b8 0000      		.word gs(.L419)
 12791 00ba 0000      		.word gs(.L419)
 12792 00bc 0000      		.word gs(.L419)
 12793 00be 0000      		.word gs(.L419)
 12794 00c0 0000      		.word gs(.L419)
 12795 00c2 0000      		.word gs(.L419)
 12796 00c4 0000      		.word gs(.L419)
 12797 00c6 0000      		.word gs(.L419)
 12798 00c8 0000      		.word gs(.L419)
 12799 00ca 0000      		.word gs(.L439)
 12800 00cc 0000      		.word gs(.L419)
 12801 00ce 0000      		.word gs(.L419)
 12802 00d0 0000      		.word gs(.L438)
 12803 00d2 0000      		.word gs(.L419)
 12804 00d4 0000      		.word gs(.L437)
 12805 00d6 0000      		.word gs(.L436)
 12806 00d8 0000      		.word gs(.L419)
 12807 00da 0000      		.word gs(.L419)
 12808 00dc 0000      		.word gs(.L419)
 12809 00de 0000      		.word gs(.L435)
 12810 00e0 0000      		.word gs(.L434)
 12811 00e2 0000      		.word gs(.L433)
 12812 00e4 0000      		.word gs(.L432)
 12813 00e6 0000      		.word gs(.L431)
 12814 00e8 0000      		.word gs(.L430)
 12815 00ea 0000      		.word gs(.L429)
 12816 00ec 0000      		.word gs(.L419)
 12817 00ee 0000      		.word gs(.L428)
 12818 00f0 0000      		.word gs(.L427)
 12819 00f2 0000      		.word gs(.L426)
 12820 00f4 0000      		.word gs(.L425)
 12821 00f6 0000      		.word gs(.L424)
 12822 00f8 0000      		.word gs(.L423)
 12823 00fa 0000      		.word gs(.L419)
 12824 00fc 0000      		.word gs(.L419)
 12825 00fe 0000      		.word gs(.L419)
 12826 0100 0000      		.word gs(.L419)
 12827 0102 0000      		.word gs(.L419)
 12828 0104 0000      		.word gs(.L421)
 12829               		.text
 12830               	.L477:
 12831 2a12 8EE1      		ldi r24,lo8(30)
 12832 2a14 90E0      		ldi r25,0
 12833 2a16 A0E0      		ldi r26,0
 12834 2a18 B0E0      		ldi r27,0
 12835               	.LVL700:
 12836               	.L460:
 12837               	.LBB744:
 385:ps2/ps2.c     **** 		keyboard_event(key, key_to_codepoint(key),
 12838               		.loc 19 385 3 is_stmt 1 view .LVU2641
 385:ps2/ps2.c     **** 		keyboard_event(key, key_to_codepoint(key),
 12839               		.loc 19 385 7 is_stmt 0 view .LVU2642
 12840 2a1a C090 0000 		lds r12,mods.0
 12841 2a1e D090 0000 		lds r13,mods.0+1
 12842 2a22 E090 0000 		lds r14,mods.0+2
 12843 2a26 F090 0000 		lds r15,mods.0+3
 12844 2a2a C82A      		or r12,r24
 12845 2a2c D92A      		or r13,r25
 12846 2a2e EA2A      		or r14,r26
 12847 2a30 FB2A      		or r15,r27
 12848               	.LVL701:
 386:ps2/ps2.c     **** 			state & PS2_STATE_RELEASE ? KEYSTATE_RELEASED : KEYSTATE_PRESSED);
 12849               		.loc 19 386 3 is_stmt 1 view .LVU2643
 387:ps2/ps2.c     **** 	}
 12850               		.loc 19 387 10 is_stmt 0 view .LVU2644
 12851 2a32 1091 0000 		lds r17,state.1
 12852               	.LVL702:
 12853               	.LBB718:
 12854               	.LBI718:
 12855               		.file 20 "../../keyboard/german.c"
   1:../../keyboard/german.c **** /**
   2:../../keyboard/german.c ****  * @file    german.c
   3:../../keyboard/german.c ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:../../keyboard/german.c ****  * @version 0.1
   5:../../keyboard/german.c ****  * @date    14.05.2023
   6:../../keyboard/german.c ****  * @brief   German keyboard layout conversion
   7:../../keyboard/german.c ****  */
   8:../../keyboard/german.c **** 
   9:../../keyboard/german.c **** #include <keyboard-shared.h>
  10:../../keyboard/german.c **** #include <ctype.h>
  11:../../keyboard/german.c **** 
  12:../../keyboard/german.c **** /** Uniocde codepoint for section sign (paragraph) */
  13:../../keyboard/german.c **** #define UNICODE_SECTION_SIGN               0xA7
  14:../../keyboard/german.c **** 
  15:../../keyboard/german.c **** /** Uniocde codepoint for degree sign */
  16:../../keyboard/german.c **** #define UNICODE_DEGREE_SIGN                0xB0
  17:../../keyboard/german.c **** 
  18:../../keyboard/german.c **** /** Uniocde codepoint for superscript two */
  19:../../keyboard/german.c **** #define UNICODE_SUPERSCRIPT_TWO            0xB2
  20:../../keyboard/german.c **** 
  21:../../keyboard/german.c **** /** Uniocde codepoint for superscript three */
  22:../../keyboard/german.c **** #define UNICODE_SUPERSCRIPT_THREE          0xB3
  23:../../keyboard/german.c **** 
  24:../../keyboard/german.c **** /** Uniocde codepoint for euro sign */
  25:../../keyboard/german.c **** #define UNICODE_EURO_SIGN                  0x20AC
  26:../../keyboard/german.c **** 
  27:../../keyboard/german.c **** /** Uniocde codepoint for german sharp S */
  28:../../keyboard/german.c **** #define UNICODE_SMALL_SHARP_S              0xDF
  29:../../keyboard/german.c **** 
  30:../../keyboard/german.c **** /** Uniocde codepoint for german capital A-Umlaut */
  31:../../keyboard/german.c **** #define UNICODE_CAPITAL_A_UMLAUT           0xE4
  32:../../keyboard/german.c **** 
  33:../../keyboard/german.c **** /** Uniocde codepoint for german small A-Umlaut */
  34:../../keyboard/german.c **** #define UNICODE_SMALL_A_UMLAUT             0xC4
  35:../../keyboard/german.c **** 
  36:../../keyboard/german.c **** /** Uniocde codepoint for german capital O-Umlaut */
  37:../../keyboard/german.c **** #define UNICODE_CAPITAL_O_UMLAUT           0xD6
  38:../../keyboard/german.c **** 
  39:../../keyboard/german.c **** /** Uniocde codepoint for german small O-Umlaut */
  40:../../keyboard/german.c **** #define UNICODE_SMALL_O_UMLAUT             0xF6
  41:../../keyboard/german.c **** 
  42:../../keyboard/german.c **** /** Uniocde codepoint for german capital U-Umlaut */
  43:../../keyboard/german.c **** #define UNICODE_CAPITAL_U_UMLAUT           0xFC
  44:../../keyboard/german.c **** 
  45:../../keyboard/german.c **** /** Uniocde codepoint for german small U-Umlaut */
  46:../../keyboard/german.c **** #define UNICODE_SMALL_U_UMLAUT             0xDC
  47:../../keyboard/german.c **** 
  48:../../keyboard/german.c **** /* This is horrible, but it works */
  49:../../keyboard/german.c **** i32 key_to_codepoint(Key k)
 12856               		.loc 20 49 5 is_stmt 1 view .LVU2645
 12857               	.LBB719:
  50:../../keyboard/german.c **** {
  51:../../keyboard/german.c **** 	Key nomods = key_mod_remove(k);
 12858               		.loc 20 51 2 view .LVU2646
 12859               	.LBB720:
 12860               	.LBI720:
 12861               		.file 21 "../../keyboard/keyboard-shared.h"
   1:../../keyboard/keyboard-shared.h **** /**
   2:../../keyboard/keyboard-shared.h ****  * @file    keyboard-shared.h
   3:../../keyboard/keyboard-shared.h ****  * @author  Tim Gabrikowski, Anton Tchekov
   4:../../keyboard/keyboard-shared.h ****  * @version 0.1
   5:../../keyboard/keyboard-shared.h ****  * @date    14.05.2023
   6:../../keyboard/keyboard-shared.h ****  * @brief   Keyboard types and utilities
   7:../../keyboard/keyboard-shared.h ****  */
   8:../../keyboard/keyboard-shared.h **** 
   9:../../keyboard/keyboard-shared.h **** #ifndef __KEYBOARD_SHARED_H__
  10:../../keyboard/keyboard-shared.h **** #define __KEYBOARD_SHARED_H__
  11:../../keyboard/keyboard-shared.h **** 
  12:../../keyboard/keyboard-shared.h **** #include <types.h>
  13:../../keyboard/keyboard-shared.h **** #include <keys.h>
  14:../../keyboard/keyboard-shared.h **** 
  15:../../keyboard/keyboard-shared.h **** /** Key State: Released (Key Up), Pressed (Key Down), Repeat (Held Down) */
  16:../../keyboard/keyboard-shared.h **** typedef enum
  17:../../keyboard/keyboard-shared.h **** {
  18:../../keyboard/keyboard-shared.h **** 	KEYSTATE_RELEASED,
  19:../../keyboard/keyboard-shared.h **** 	KEYSTATE_PRESSED,
  20:../../keyboard/keyboard-shared.h **** 	KEYSTATE_REPEAT
  21:../../keyboard/keyboard-shared.h **** } KeyState;
  22:../../keyboard/keyboard-shared.h **** 
  23:../../keyboard/keyboard-shared.h **** /** Keycode */
  24:../../keyboard/keyboard-shared.h **** typedef u32 Key;
  25:../../keyboard/keyboard-shared.h **** 
  26:../../keyboard/keyboard-shared.h **** /**
  27:../../keyboard/keyboard-shared.h ****  * @brief Remove modifiers from key
  28:../../keyboard/keyboard-shared.h ****  *
  29:../../keyboard/keyboard-shared.h ****  * @param key Scancode
  30:../../keyboard/keyboard-shared.h ****  * @return Scancode with modifiers removed
  31:../../keyboard/keyboard-shared.h ****  */
  32:../../keyboard/keyboard-shared.h **** static inline Key key_mod_remove(Key key)
 12862               		.loc 21 32 19 view .LVU2647
 12863               	.LBB721:
  33:../../keyboard/keyboard-shared.h **** {
  34:../../keyboard/keyboard-shared.h **** 	return key & 0xFFFF;
 12864               		.loc 21 34 2 view .LVU2648
 12865               		.loc 21 34 13 is_stmt 0 view .LVU2649
 12866 2a36 B701      		movw r22,r14
 12867 2a38 A601      		movw r20,r12
 12868 2a3a 6627      		clr r22
 12869 2a3c 7727      		clr r23
 12870               	.LVL703:
 12871               		.loc 21 34 13 view .LVU2650
 12872               	.LBE721:
 12873               	.LBE720:
  52:../../keyboard/german.c **** 
  53:../../keyboard/german.c **** 	if(nomods == KEY_TAB)                             { return '\t'; }
 12874               		.loc 20 53 2 is_stmt 1 view .LVU2651
 12875               		.loc 20 53 61 is_stmt 0 view .LVU2652
 12876 2a3e 89E0      		ldi r24,lo8(9)
 12877 2a40 90E0      		ldi r25,0
 12878 2a42 A0E0      		ldi r26,0
 12879 2a44 B0E0      		ldi r27,0
 12880               		.loc 20 53 4 view .LVU2653
 12881 2a46 4B32      		cpi r20,43
 12882 2a48 5105      		cpc r21,__zero_reg__
 12883 2a4a 6105      		cpc r22,__zero_reg__
 12884 2a4c 7105      		cpc r23,__zero_reg__
 12885 2a4e 01F4      		brne .+2
 12886 2a50 00C0      		rjmp .L498
  54:../../keyboard/german.c **** 	else if(nomods == KEY_BACKSPACE)                  { return '\b'; }
 12887               		.loc 20 54 7 is_stmt 1 view .LVU2654
 12888               		.loc 20 54 61 is_stmt 0 view .LVU2655
 12889 2a52 88E0      		ldi r24,lo8(8)
 12890 2a54 90E0      		ldi r25,0
 12891 2a56 A0E0      		ldi r26,0
 12892 2a58 B0E0      		ldi r27,0
 12893               		.loc 20 54 9 view .LVU2656
 12894 2a5a 4A32      		cpi r20,42
 12895 2a5c 5105      		cpc r21,__zero_reg__
 12896 2a5e 6105      		cpc r22,__zero_reg__
 12897 2a60 7105      		cpc r23,__zero_reg__
 12898 2a62 01F4      		brne .+2
 12899 2a64 00C0      		rjmp .L498
  55:../../keyboard/german.c **** 	else if(nomods == KEY_RETURN)                     { return '\n'; }
 12900               		.loc 20 55 7 is_stmt 1 view .LVU2657
 12901               		.loc 20 55 61 is_stmt 0 view .LVU2658
 12902 2a66 8AE0      		ldi r24,lo8(10)
 12903 2a68 90E0      		ldi r25,0
 12904 2a6a A0E0      		ldi r26,0
 12905 2a6c B0E0      		ldi r27,0
 12906               		.loc 20 55 9 view .LVU2659
 12907 2a6e 4832      		cpi r20,40
 12908 2a70 5105      		cpc r21,__zero_reg__
 12909 2a72 6105      		cpc r22,__zero_reg__
 12910 2a74 7105      		cpc r23,__zero_reg__
 12911 2a76 01F4      		brne .+2
 12912 2a78 00C0      		rjmp .L498
  56:../../keyboard/german.c **** 	else if(nomods == KEY_SPACE)                      { return ' '; }
 12913               		.loc 20 56 7 is_stmt 1 view .LVU2660
 12914               		.loc 20 56 61 is_stmt 0 view .LVU2661
 12915 2a7a 80E2      		ldi r24,lo8(32)
 12916 2a7c 90E0      		ldi r25,0
 12917 2a7e A0E0      		ldi r26,0
 12918 2a80 B0E0      		ldi r27,0
 12919               		.loc 20 56 9 view .LVU2662
 12920 2a82 4C32      		cpi r20,44
 12921 2a84 5105      		cpc r21,__zero_reg__
 12922 2a86 6105      		cpc r22,__zero_reg__
 12923 2a88 7105      		cpc r23,__zero_reg__
 12924 2a8a 01F4      		brne .+2
 12925 2a8c 00C0      		rjmp .L498
  57:../../keyboard/german.c **** 	else if(k == (KEY_COMMA | MOD_SHIFT))             { return ';'; }
 12926               		.loc 20 57 7 is_stmt 1 view .LVU2663
 12927 2a8e 84E6      		ldi r24,100
 12928 2a90 C816      		cp r12,r24
 12929 2a92 D104      		cpc r13,__zero_reg__
 12930 2a94 E104      		cpc r14,__zero_reg__
 12931 2a96 88E0      		ldi r24,8
 12932 2a98 F806      		cpc r15,r24
 12933 2a9a 01F4      		brne .+2
 12934 2a9c 00C0      		rjmp .L554
 12935 2a9e 00F0      		brlo .+2
 12936 2aa0 00C0      		rjmp .L499
 12937 2aa2 F9E3      		ldi r31,57
 12938 2aa4 CF16      		cp r12,r31
 12939 2aa6 D104      		cpc r13,__zero_reg__
 12940 2aa8 E104      		cpc r14,__zero_reg__
 12941 2aaa F104      		cpc r15,__zero_reg__
 12942 2aac 00F0      		brlo .+2
 12943 2aae 00C0      		rjmp .L500
 12944 2ab0 8DE2      		ldi r24,45
 12945 2ab2 C816      		cp r12,r24
 12946 2ab4 D104      		cpc r13,__zero_reg__
 12947 2ab6 E104      		cpc r14,__zero_reg__
 12948 2ab8 F104      		cpc r15,__zero_reg__
 12949 2aba 00F0      		brlo .+2
 12950 2abc 00C0      		rjmp .L501
  58:../../keyboard/german.c **** 	else if(k == (KEY_COMMA))                         { return ','; }
  59:../../keyboard/german.c **** 	else if(k == (KEY_PERIOD | MOD_SHIFT))            { return ':'; }
  60:../../keyboard/german.c **** 	else if(k == (KEY_PERIOD))                        { return '.'; }
  61:../../keyboard/german.c **** 	else if(k == (KEY_SLASH | MOD_SHIFT))             { return '_'; }
  62:../../keyboard/german.c **** 	else if(k == (KEY_SLASH))                         { return '-'; }
  63:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH | MOD_SHIFT))         { return '\''; }
  64:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH))                     { return '#'; }
  65:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_SHIFT))         { return '*'; }
  66:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_ALT_GR))        { return '~'; }
  67:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET))                     { return '+'; }
  68:../../keyboard/german.c **** 	else if(k == (KEY_NON_US_BACKSLASH | MOD_SHIFT))  { return '>'; }
  69:../../keyboard/german.c **** 	else if(k == (KEY_NON_US_BACKSLASH | MOD_ALT_GR)) { return '|'; }
  70:../../keyboard/german.c **** 	else if(k == KEY_NON_US_BACKSLASH)                { return '<'; }
  71:../../keyboard/german.c **** 	else if(k == (KEY_MINUS | MOD_SHIFT))             { return '?'; }
  72:../../keyboard/german.c **** 	else if(k == (KEY_MINUS | MOD_ALT_GR))            { return '\\'; }
  73:../../keyboard/german.c **** 	else if(k == KEY_MINUS)                           { return UNICODE_SMALL_SHARP_S; }
  74:../../keyboard/german.c **** 	else if(k == (KEY_EQUALS | MOD_SHIFT))            { return '`'; }
  75:../../keyboard/german.c **** 	else if(k == (KEY_GRAVE | MOD_SHIFT))             { return UNICODE_DEGREE_SIGN; }
  76:../../keyboard/german.c **** 	else if(k == KEY_GRAVE)                           { return '^'; }
  77:../../keyboard/german.c **** 	else if(k == (KEY_APOSTROPHE | MOD_SHIFT))        { return UNICODE_CAPITAL_A_UMLAUT; }
  78:../../keyboard/german.c **** 	else if(k == KEY_APOSTROPHE)                      { return UNICODE_SMALL_A_UMLAUT; }
  79:../../keyboard/german.c **** 	else if(k == (KEY_SEMICOLON | MOD_SHIFT))         { return UNICODE_CAPITAL_O_UMLAUT; }
  80:../../keyboard/german.c **** 	else if(k == KEY_SEMICOLON)                       { return UNICODE_SMALL_O_UMLAUT; }
  81:../../keyboard/german.c **** 	else if(k == (KEY_L_BRACKET | MOD_SHIFT))         { return UNICODE_CAPITAL_U_UMLAUT; }
  82:../../keyboard/german.c **** 	else if(k == KEY_L_BRACKET)                       { return UNICODE_SMALL_U_UMLAUT; }
  83:../../keyboard/german.c **** 	else if(nomods >= KEY_A && nomods <= KEY_Z)
 12951               		.loc 20 83 7 view .LVU2664
 12952               		.loc 20 83 26 is_stmt 0 view .LVU2665
 12953 2abe DB01      		movw r26,r22
 12954 2ac0 CA01      		movw r24,r20
 12955 2ac2 0497      		sbiw r24,4
 12956 2ac4 A109      		sbc r26,__zero_reg__
 12957 2ac6 B109      		sbc r27,__zero_reg__
 12958               		.loc 20 83 9 view .LVU2666
 12959 2ac8 4A97      		sbiw r24,26
 12960 2aca A105      		cpc r26,__zero_reg__
 12961 2acc B105      		cpc r27,__zero_reg__
 12962 2ace 00F0      		brlo .+2
 12963 2ad0 00C0      		rjmp .L531
 12964               	.LBB722:
  84:../../keyboard/german.c **** 	{
  85:../../keyboard/german.c **** 		i32 c = nomods - KEY_A + 'a';
 12965               		.loc 20 85 3 is_stmt 1 view .LVU2667
 12966               		.loc 20 85 26 is_stmt 0 view .LVU2668
 12967 2ad2 DB01      		movw r26,r22
 12968 2ad4 CA01      		movw r24,r20
 12969 2ad6 835A      		subi r24,-93
 12970 2ad8 9F4F      		sbci r25,-1
 12971 2ada AF4F      		sbci r26,-1
 12972 2adc BF4F      		sbci r27,-1
 12973               	.LVL704:
  86:../../keyboard/german.c **** 
  87:../../keyboard/german.c **** 		if(c == 'z') { c = 'y'; }
 12974               		.loc 20 87 3 is_stmt 1 view .LVU2669
 12975               		.loc 20 87 5 is_stmt 0 view .LVU2670
 12976 2ade 4D31      		cpi r20,29
 12977 2ae0 5105      		cpc r21,__zero_reg__
 12978 2ae2 6105      		cpc r22,__zero_reg__
 12979 2ae4 7105      		cpc r23,__zero_reg__
 12980 2ae6 01F4      		brne .+2
 12981 2ae8 00C0      		rjmp .L564
  88:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 12982               		.loc 20 88 8 is_stmt 1 view .LVU2671
 12983               		.loc 20 88 10 is_stmt 0 view .LVU2672
 12984 2aea 8937      		cpi r24,121
 12985 2aec 9105      		cpc r25,__zero_reg__
 12986 2aee A105      		cpc r26,__zero_reg__
 12987 2af0 B105      		cpc r27,__zero_reg__
 12988 2af2 01F0      		breq .+2
 12989 2af4 00C0      		rjmp .L498
 12990               		.loc 20 88 25 view .LVU2673
 12991 2af6 8AE7      		ldi r24,lo8(122)
 12992 2af8 90E0      		ldi r25,0
 12993 2afa A0E0      		ldi r26,0
 12994 2afc B0E0      		ldi r27,0
 12995               	.LVL705:
 12996               		.loc 20 88 25 view .LVU2674
 12997 2afe 00C0      		rjmp .L498
 12998               	.LVL706:
 12999               	.L450:
 13000               		.loc 20 88 25 view .LVU2675
 13001               	.LBE722:
 13002               	.LBE719:
 13003               	.LBE718:
 347:ps2/ps2.c     **** 
 13004               		.loc 19 347 3 is_stmt 1 view .LVU2676
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13005               		.loc 19 350 3 view .LVU2677
 351:ps2/ps2.c     **** 		{
 13006               		.loc 19 351 3 view .LVU2678
 13007               	.LBE744:
 243:ps2/ps2.c     **** 		{
 13008               		.loc 19 243 3 is_stmt 0 view .LVU2679
 13009 2b00 84E2      		ldi r24,lo8(36)
 13010 2b02 90E0      		ldi r25,0
 13011 2b04 A0E0      		ldi r26,0
 13012 2b06 B0E0      		ldi r27,0
 13013 2b08 00C0      		rjmp .L460
 13014               	.LVL707:
 13015               	.L444:
 13016               	.LBB745:
 347:ps2/ps2.c     **** 
 13017               		.loc 19 347 3 is_stmt 1 view .LVU2680
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13018               		.loc 19 350 3 view .LVU2681
 351:ps2/ps2.c     **** 		{
 13019               		.loc 19 351 3 view .LVU2682
 13020               	.LBE745:
 243:ps2/ps2.c     **** 		{
 13021               		.loc 19 243 3 is_stmt 0 view .LVU2683
 13022 2b0a 86E2      		ldi r24,lo8(38)
 13023 2b0c 90E0      		ldi r25,0
 13024 2b0e A0E0      		ldi r26,0
 13025 2b10 B0E0      		ldi r27,0
 13026 2b12 00C0      		rjmp .L460
 13027               	.LVL708:
 13028               	.L458:
 13029               	.LBB746:
 347:ps2/ps2.c     **** 
 13030               		.loc 19 347 3 is_stmt 1 view .LVU2684
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13031               		.loc 19 350 3 view .LVU2685
 351:ps2/ps2.c     **** 		{
 13032               		.loc 19 351 3 view .LVU2686
 13033               	.LBE746:
 243:ps2/ps2.c     **** 		{
 13034               		.loc 19 243 3 is_stmt 0 view .LVU2687
 13035 2b14 85E0      		ldi r24,lo8(5)
 13036 2b16 90E0      		ldi r25,0
 13037 2b18 A0E0      		ldi r26,0
 13038 2b1a B0E0      		ldi r27,0
 13039 2b1c 00C0      		rjmp .L460
 13040               	.LVL709:
 13041               	.L469:
 13042               	.LBB747:
 347:ps2/ps2.c     **** 
 13043               		.loc 19 347 3 is_stmt 1 view .LVU2688
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13044               		.loc 19 350 3 view .LVU2689
 351:ps2/ps2.c     **** 		{
 13045               		.loc 19 351 3 view .LVU2690
 13046               	.LBE747:
 243:ps2/ps2.c     **** 		{
 13047               		.loc 19 243 3 is_stmt 0 view .LVU2691
 13048 2b1e 87E0      		ldi r24,lo8(7)
 13049 2b20 90E0      		ldi r25,0
 13050 2b22 A0E0      		ldi r26,0
 13051 2b24 B0E0      		ldi r27,0
 13052 2b26 00C0      		rjmp .L460
 13053               	.LVL710:
 13054               	.L463:
 13055               	.LBB748:
 347:ps2/ps2.c     **** 
 13056               		.loc 19 347 3 is_stmt 1 view .LVU2692
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13057               		.loc 19 350 3 view .LVU2693
 351:ps2/ps2.c     **** 		{
 13058               		.loc 19 351 3 view .LVU2694
 13059               	.LBE748:
 243:ps2/ps2.c     **** 		{
 13060               		.loc 19 243 3 is_stmt 0 view .LVU2695
 13061 2b28 89E0      		ldi r24,lo8(9)
 13062 2b2a 90E0      		ldi r25,0
 13063 2b2c A0E0      		ldi r26,0
 13064 2b2e B0E0      		ldi r27,0
 13065 2b30 00C0      		rjmp .L460
 13066               	.LVL711:
 13067               	.L457:
 13068               	.LBB749:
 347:ps2/ps2.c     **** 
 13069               		.loc 19 347 3 is_stmt 1 view .LVU2696
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13070               		.loc 19 350 3 view .LVU2697
 351:ps2/ps2.c     **** 		{
 13071               		.loc 19 351 3 view .LVU2698
 13072               	.LBE749:
 243:ps2/ps2.c     **** 		{
 13073               		.loc 19 243 3 is_stmt 0 view .LVU2699
 13074 2b32 8BE0      		ldi r24,lo8(11)
 13075 2b34 90E0      		ldi r25,0
 13076 2b36 A0E0      		ldi r26,0
 13077 2b38 B0E0      		ldi r27,0
 13078 2b3a 00C0      		rjmp .L460
 13079               	.LVL712:
 13080               	.L452:
 13081               	.LBB750:
 347:ps2/ps2.c     **** 
 13082               		.loc 19 347 3 is_stmt 1 view .LVU2700
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13083               		.loc 19 350 3 view .LVU2701
 351:ps2/ps2.c     **** 		{
 13084               		.loc 19 351 3 view .LVU2702
 13085               	.LBE750:
 243:ps2/ps2.c     **** 		{
 13086               		.loc 19 243 3 is_stmt 0 view .LVU2703
 13087 2b3c 8DE0      		ldi r24,lo8(13)
 13088 2b3e 90E0      		ldi r25,0
 13089 2b40 A0E0      		ldi r26,0
 13090 2b42 B0E0      		ldi r27,0
 13091 2b44 00C0      		rjmp .L460
 13092               	.LVL713:
 13093               	.L443:
 13094               	.LBB751:
 347:ps2/ps2.c     **** 
 13095               		.loc 19 347 3 is_stmt 1 view .LVU2704
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13096               		.loc 19 350 3 view .LVU2705
 351:ps2/ps2.c     **** 		{
 13097               		.loc 19 351 3 view .LVU2706
 13098               	.LBE751:
 243:ps2/ps2.c     **** 		{
 13099               		.loc 19 243 3 is_stmt 0 view .LVU2707
 13100 2b46 8FE0      		ldi r24,lo8(15)
 13101 2b48 90E0      		ldi r25,0
 13102 2b4a A0E0      		ldi r26,0
 13103 2b4c B0E0      		ldi r27,0
 13104 2b4e 00C0      		rjmp .L460
 13105               	.LVL714:
 13106               	.L459:
 13107               	.LBB752:
 347:ps2/ps2.c     **** 
 13108               		.loc 19 347 3 is_stmt 1 view .LVU2708
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13109               		.loc 19 350 3 view .LVU2709
 351:ps2/ps2.c     **** 		{
 13110               		.loc 19 351 3 view .LVU2710
 13111               	.LBE752:
 243:ps2/ps2.c     **** 		{
 13112               		.loc 19 243 3 is_stmt 0 view .LVU2711
 13113 2b50 81E1      		ldi r24,lo8(17)
 13114 2b52 90E0      		ldi r25,0
 13115 2b54 A0E0      		ldi r26,0
 13116 2b56 B0E0      		ldi r27,0
 13117 2b58 00C0      		rjmp .L460
 13118               	.LVL715:
 13119               	.L442:
 13120               	.LBB753:
 347:ps2/ps2.c     **** 
 13121               		.loc 19 347 3 is_stmt 1 view .LVU2712
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13122               		.loc 19 350 3 view .LVU2713
 351:ps2/ps2.c     **** 		{
 13123               		.loc 19 351 3 view .LVU2714
 13124               	.LBE753:
 243:ps2/ps2.c     **** 		{
 13125               		.loc 19 243 3 is_stmt 0 view .LVU2715
 13126 2b5a 83E1      		ldi r24,lo8(19)
 13127 2b5c 90E0      		ldi r25,0
 13128 2b5e A0E0      		ldi r26,0
 13129 2b60 B0E0      		ldi r27,0
 13130 2b62 00C0      		rjmp .L460
 13131               	.LVL716:
 13132               	.L461:
 13133               	.LBB754:
 347:ps2/ps2.c     **** 
 13134               		.loc 19 347 3 is_stmt 1 view .LVU2716
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13135               		.loc 19 350 3 view .LVU2717
 351:ps2/ps2.c     **** 		{
 13136               		.loc 19 351 3 view .LVU2718
 13137               	.LBE754:
 243:ps2/ps2.c     **** 		{
 13138               		.loc 19 243 3 is_stmt 0 view .LVU2719
 13139 2b64 85E1      		ldi r24,lo8(21)
 13140 2b66 90E0      		ldi r25,0
 13141 2b68 A0E0      		ldi r26,0
 13142 2b6a B0E0      		ldi r27,0
 13143 2b6c 00C0      		rjmp .L460
 13144               	.LVL717:
 13145               	.L462:
 13146               	.LBB755:
 347:ps2/ps2.c     **** 
 13147               		.loc 19 347 3 is_stmt 1 view .LVU2720
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13148               		.loc 19 350 3 view .LVU2721
 351:ps2/ps2.c     **** 		{
 13149               		.loc 19 351 3 view .LVU2722
 13150               	.LBE755:
 243:ps2/ps2.c     **** 		{
 13151               		.loc 19 243 3 is_stmt 0 view .LVU2723
 13152 2b6e 87E1      		ldi r24,lo8(23)
 13153 2b70 90E0      		ldi r25,0
 13154 2b72 A0E0      		ldi r26,0
 13155 2b74 B0E0      		ldi r27,0
 13156 2b76 00C0      		rjmp .L460
 13157               	.LVL718:
 13158               	.L464:
 13159               	.LBB756:
 347:ps2/ps2.c     **** 
 13160               		.loc 19 347 3 is_stmt 1 view .LVU2724
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13161               		.loc 19 350 3 view .LVU2725
 351:ps2/ps2.c     **** 		{
 13162               		.loc 19 351 3 view .LVU2726
 13163               	.LBE756:
 243:ps2/ps2.c     **** 		{
 13164               		.loc 19 243 3 is_stmt 0 view .LVU2727
 13165 2b78 89E1      		ldi r24,lo8(25)
 13166 2b7a 90E0      		ldi r25,0
 13167 2b7c A0E0      		ldi r26,0
 13168 2b7e B0E0      		ldi r27,0
 13169 2b80 00C0      		rjmp .L460
 13170               	.LVL719:
 13171               	.L470:
 13172               	.LBB757:
 347:ps2/ps2.c     **** 
 13173               		.loc 19 347 3 is_stmt 1 view .LVU2728
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13174               		.loc 19 350 3 view .LVU2729
 351:ps2/ps2.c     **** 		{
 13175               		.loc 19 351 3 view .LVU2730
 13176               	.LBE757:
 243:ps2/ps2.c     **** 		{
 13177               		.loc 19 243 3 is_stmt 0 view .LVU2731
 13178 2b82 8BE1      		ldi r24,lo8(27)
 13179 2b84 90E0      		ldi r25,0
 13180 2b86 A0E0      		ldi r26,0
 13181 2b88 B0E0      		ldi r27,0
 13182 2b8a 00C0      		rjmp .L460
 13183               	.LVL720:
 13184               	.L476:
 13185               	.LBB758:
 347:ps2/ps2.c     **** 
 13186               		.loc 19 347 3 is_stmt 1 view .LVU2732
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13187               		.loc 19 350 3 view .LVU2733
 351:ps2/ps2.c     **** 		{
 13188               		.loc 19 351 3 view .LVU2734
 13189               	.LBE758:
 243:ps2/ps2.c     **** 		{
 13190               		.loc 19 243 3 is_stmt 0 view .LVU2735
 13191 2b8c 8DE1      		ldi r24,lo8(29)
 13192 2b8e 90E0      		ldi r25,0
 13193 2b90 A0E0      		ldi r26,0
 13194 2b92 B0E0      		ldi r27,0
 13195 2b94 00C0      		rjmp .L460
 13196               	.LVL721:
 13197               	.L488:
 13198               	.LBB759:
 347:ps2/ps2.c     **** 
 13199               		.loc 19 347 3 is_stmt 1 view .LVU2736
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13200               		.loc 19 350 3 view .LVU2737
 351:ps2/ps2.c     **** 		{
 13201               		.loc 19 351 3 view .LVU2738
 13202               	.LBE759:
 243:ps2/ps2.c     **** 		{
 13203               		.loc 19 243 3 is_stmt 0 view .LVU2739
 13204 2b96 8BE3      		ldi r24,lo8(59)
 13205 2b98 90E0      		ldi r25,0
 13206 2b9a A0E0      		ldi r26,0
 13207 2b9c B0E0      		ldi r27,0
 13208 2b9e 00C0      		rjmp .L460
 13209               	.LVL722:
 13210               	.L483:
 13211               	.LBB760:
 347:ps2/ps2.c     **** 
 13212               		.loc 19 347 3 is_stmt 1 view .LVU2740
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13213               		.loc 19 350 3 view .LVU2741
 351:ps2/ps2.c     **** 		{
 13214               		.loc 19 351 3 view .LVU2742
 13215               	.LBE760:
 243:ps2/ps2.c     **** 		{
 13216               		.loc 19 243 3 is_stmt 0 view .LVU2743
 13217 2ba0 8DE3      		ldi r24,lo8(61)
 13218 2ba2 90E0      		ldi r25,0
 13219 2ba4 A0E0      		ldi r26,0
 13220 2ba6 B0E0      		ldi r27,0
 13221 2ba8 00C0      		rjmp .L460
 13222               	.LVL723:
 13223               	.L484:
 13224               	.LBB761:
 347:ps2/ps2.c     **** 
 13225               		.loc 19 347 3 is_stmt 1 view .LVU2744
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13226               		.loc 19 350 3 view .LVU2745
 351:ps2/ps2.c     **** 		{
 13227               		.loc 19 351 3 view .LVU2746
 13228               	.LBE761:
 243:ps2/ps2.c     **** 		{
 13229               		.loc 19 243 3 is_stmt 0 view .LVU2747
 13230 2baa 8FE3      		ldi r24,lo8(63)
 13231 2bac 90E0      		ldi r25,0
 13232 2bae A0E0      		ldi r26,0
 13233 2bb0 B0E0      		ldi r27,0
 13234 2bb2 00C0      		rjmp .L460
 13235               	.LVL724:
 13236               	.L485:
 13237               	.LBB762:
 347:ps2/ps2.c     **** 
 13238               		.loc 19 347 3 is_stmt 1 view .LVU2748
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13239               		.loc 19 350 3 view .LVU2749
 351:ps2/ps2.c     **** 		{
 13240               		.loc 19 351 3 view .LVU2750
 13241               	.LBE762:
 243:ps2/ps2.c     **** 		{
 13242               		.loc 19 243 3 is_stmt 0 view .LVU2751
 13243 2bb4 81E4      		ldi r24,lo8(65)
 13244 2bb6 90E0      		ldi r25,0
 13245 2bb8 A0E0      		ldi r26,0
 13246 2bba B0E0      		ldi r27,0
 13247 2bbc 00C0      		rjmp .L460
 13248               	.LVL725:
 13249               	.L486:
 13250               	.LBB763:
 347:ps2/ps2.c     **** 
 13251               		.loc 19 347 3 is_stmt 1 view .LVU2752
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13252               		.loc 19 350 3 view .LVU2753
 351:ps2/ps2.c     **** 		{
 13253               		.loc 19 351 3 view .LVU2754
 13254               	.LBE763:
 243:ps2/ps2.c     **** 		{
 13255               		.loc 19 243 3 is_stmt 0 view .LVU2755
 13256 2bbe 83E4      		ldi r24,lo8(67)
 13257 2bc0 90E0      		ldi r25,0
 13258 2bc2 A0E0      		ldi r26,0
 13259 2bc4 B0E0      		ldi r27,0
 13260 2bc6 00C0      		rjmp .L460
 13261               	.LVL726:
 13262               	.L487:
 13263               	.LBB764:
 347:ps2/ps2.c     **** 
 13264               		.loc 19 347 3 is_stmt 1 view .LVU2756
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13265               		.loc 19 350 3 view .LVU2757
 351:ps2/ps2.c     **** 		{
 13266               		.loc 19 351 3 view .LVU2758
 13267               	.LBE764:
 243:ps2/ps2.c     **** 		{
 13268               		.loc 19 243 3 is_stmt 0 view .LVU2759
 13269 2bc8 85E4      		ldi r24,lo8(69)
 13270 2bca 90E0      		ldi r25,0
 13271 2bcc A0E0      		ldi r26,0
 13272 2bce B0E0      		ldi r27,0
 13273 2bd0 00C0      		rjmp .L460
 13274               	.LVL727:
 13275               	.L438:
 13276               	.LBB765:
 347:ps2/ps2.c     **** 
 13277               		.loc 19 347 3 is_stmt 1 view .LVU2760
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13278               		.loc 19 350 3 view .LVU2761
 351:ps2/ps2.c     **** 		{
 13279               		.loc 19 351 3 view .LVU2762
 13280               	.LBE765:
 243:ps2/ps2.c     **** 		{
 13281               		.loc 19 243 3 is_stmt 0 view .LVU2763
 13282 2bd2 89E5      		ldi r24,lo8(89)
 13283 2bd4 90E0      		ldi r25,0
 13284 2bd6 A0E0      		ldi r26,0
 13285 2bd8 B0E0      		ldi r27,0
 13286 2bda 00C0      		rjmp .L460
 13287               	.LVL728:
 13288               	.L426:
 13289               	.LBB766:
 347:ps2/ps2.c     **** 
 13290               		.loc 19 347 3 is_stmt 1 view .LVU2764
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13291               		.loc 19 350 3 view .LVU2765
 351:ps2/ps2.c     **** 		{
 13292               		.loc 19 351 3 view .LVU2766
 13293               	.LBE766:
 243:ps2/ps2.c     **** 		{
 13294               		.loc 19 243 3 is_stmt 0 view .LVU2767
 13295 2bdc 8BE5      		ldi r24,lo8(91)
 13296 2bde 90E0      		ldi r25,0
 13297 2be0 A0E0      		ldi r26,0
 13298 2be2 B0E0      		ldi r27,0
 13299 2be4 00C0      		rjmp .L460
 13300               	.LVL729:
 13301               	.L432:
 13302               	.LBB767:
 347:ps2/ps2.c     **** 
 13303               		.loc 19 347 3 is_stmt 1 view .LVU2768
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13304               		.loc 19 350 3 view .LVU2769
 351:ps2/ps2.c     **** 		{
 13305               		.loc 19 351 3 view .LVU2770
 13306               	.LBE767:
 243:ps2/ps2.c     **** 		{
 13307               		.loc 19 243 3 is_stmt 0 view .LVU2771
 13308 2be6 8DE5      		ldi r24,lo8(93)
 13309 2be8 90E0      		ldi r25,0
 13310 2bea A0E0      		ldi r26,0
 13311 2bec B0E0      		ldi r27,0
 13312 2bee 00C0      		rjmp .L460
 13313               	.LVL730:
 13314               	.L436:
 13315               	.LBB768:
 347:ps2/ps2.c     **** 
 13316               		.loc 19 347 3 is_stmt 1 view .LVU2772
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13317               		.loc 19 350 3 view .LVU2773
 351:ps2/ps2.c     **** 		{
 13318               		.loc 19 351 3 view .LVU2774
 13319               	.LBE768:
 243:ps2/ps2.c     **** 		{
 13320               		.loc 19 243 3 is_stmt 0 view .LVU2775
 13321 2bf0 8FE5      		ldi r24,lo8(95)
 13322 2bf2 90E0      		ldi r25,0
 13323 2bf4 A0E0      		ldi r26,0
 13324 2bf6 B0E0      		ldi r27,0
 13325 2bf8 00C0      		rjmp .L460
 13326               	.LVL731:
 13327               	.L423:
 13328               	.LBB769:
 347:ps2/ps2.c     **** 
 13329               		.loc 19 347 3 is_stmt 1 view .LVU2776
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13330               		.loc 19 350 3 view .LVU2777
 351:ps2/ps2.c     **** 		{
 13331               		.loc 19 351 3 view .LVU2778
 13332               	.LBE769:
 243:ps2/ps2.c     **** 		{
 13333               		.loc 19 243 3 is_stmt 0 view .LVU2779
 13334 2bfa 81E6      		ldi r24,lo8(97)
 13335 2bfc 90E0      		ldi r25,0
 13336 2bfe A0E0      		ldi r26,0
 13337 2c00 B0E0      		ldi r27,0
 13338 2c02 00C0      		rjmp .L460
 13339               	.LVL732:
 13340               	.L427:
 13341               	.LBB770:
 347:ps2/ps2.c     **** 
 13342               		.loc 19 347 3 is_stmt 1 view .LVU2780
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13343               		.loc 19 350 3 view .LVU2781
 351:ps2/ps2.c     **** 		{
 13344               		.loc 19 351 3 view .LVU2782
 13345               	.LBE770:
 243:ps2/ps2.c     **** 		{
 13346               		.loc 19 243 3 is_stmt 0 view .LVU2783
 13347 2c04 87E5      		ldi r24,lo8(87)
 13348 2c06 90E0      		ldi r25,0
 13349 2c08 A0E0      		ldi r26,0
 13350 2c0a B0E0      		ldi r27,0
 13351 2c0c 00C0      		rjmp .L460
 13352               	.LVL733:
 13353               	.L424:
 13354               	.LBB771:
 347:ps2/ps2.c     **** 
 13355               		.loc 19 347 3 is_stmt 1 view .LVU2784
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13356               		.loc 19 350 3 view .LVU2785
 351:ps2/ps2.c     **** 		{
 13357               		.loc 19 351 3 view .LVU2786
 13358               	.LBE771:
 243:ps2/ps2.c     **** 		{
 13359               		.loc 19 243 3 is_stmt 0 view .LVU2787
 13360 2c0e 85E5      		ldi r24,lo8(85)
 13361 2c10 90E0      		ldi r25,0
 13362 2c12 A0E0      		ldi r26,0
 13363 2c14 B0E0      		ldi r27,0
 13364 2c16 00C0      		rjmp .L460
 13365               	.LVL734:
 13366               	.L482:
 13367               	.LBB772:
 347:ps2/ps2.c     **** 
 13368               		.loc 19 347 3 is_stmt 1 view .LVU2788
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13369               		.loc 19 350 3 view .LVU2789
 351:ps2/ps2.c     **** 		{
 13370               		.loc 19 351 3 view .LVU2790
 13371               	.LBE772:
 243:ps2/ps2.c     **** 		{
 13372               		.loc 19 243 3 is_stmt 0 view .LVU2791
 13373 2c18 8BE2      		ldi r24,lo8(43)
 13374 2c1a 90E0      		ldi r25,0
 13375 2c1c A0E0      		ldi r26,0
 13376 2c1e B0E0      		ldi r27,0
 13377 2c20 00C0      		rjmp .L460
 13378               	.LVL735:
 13379               	.L439:
 13380               	.LBB773:
 347:ps2/ps2.c     **** 
 13381               		.loc 19 347 3 is_stmt 1 view .LVU2792
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13382               		.loc 19 350 3 view .LVU2793
 351:ps2/ps2.c     **** 		{
 13383               		.loc 19 351 3 view .LVU2794
 13384               	.LBE773:
 243:ps2/ps2.c     **** 		{
 13385               		.loc 19 243 3 is_stmt 0 view .LVU2795
 13386 2c22 8AE2      		ldi r24,lo8(42)
 13387 2c24 90E0      		ldi r25,0
 13388 2c26 A0E0      		ldi r26,0
 13389 2c28 B0E0      		ldi r27,0
 13390 2c2a 00C0      		rjmp .L460
 13391               	.LVL736:
 13392               	.L440:
 13393               	.LBB774:
 347:ps2/ps2.c     **** 
 13394               		.loc 19 347 3 is_stmt 1 view .LVU2796
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13395               		.loc 19 350 3 view .LVU2797
 351:ps2/ps2.c     **** 		{
 13396               		.loc 19 351 3 view .LVU2798
 13397               	.LBE774:
 243:ps2/ps2.c     **** 		{
 13398               		.loc 19 243 3 is_stmt 0 view .LVU2799
 13399 2c2c 88E2      		ldi r24,lo8(40)
 13400 2c2e 90E0      		ldi r25,0
 13401 2c30 A0E0      		ldi r26,0
 13402 2c32 B0E0      		ldi r27,0
 13403 2c34 00C0      		rjmp .L460
 13404               	.LVL737:
 13405               	.L472:
 13406               	.LBB775:
 347:ps2/ps2.c     **** 
 13407               		.loc 19 347 3 is_stmt 1 view .LVU2800
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13408               		.loc 19 350 3 view .LVU2801
 351:ps2/ps2.c     **** 		{
 13409               		.loc 19 351 3 view .LVU2802
 13410               	.LBE775:
 243:ps2/ps2.c     **** 		{
 13411               		.loc 19 243 3 is_stmt 0 view .LVU2803
 13412 2c36 8FE1      		ldi r24,lo8(31)
 13413 2c38 90E0      		ldi r25,0
 13414 2c3a A0E0      		ldi r26,0
 13415 2c3c B0E0      		ldi r27,0
 13416 2c3e 00C0      		rjmp .L460
 13417               	.LVL738:
 13418               	.L467:
 13419               	.LBB776:
 347:ps2/ps2.c     **** 
 13420               		.loc 19 347 3 is_stmt 1 view .LVU2804
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13421               		.loc 19 350 3 view .LVU2805
 351:ps2/ps2.c     **** 		{
 13422               		.loc 19 351 3 view .LVU2806
 13423               	.LBE776:
 243:ps2/ps2.c     **** 		{
 13424               		.loc 19 243 3 is_stmt 0 view .LVU2807
 13425 2c40 81E2      		ldi r24,lo8(33)
 13426 2c42 90E0      		ldi r25,0
 13427 2c44 A0E0      		ldi r26,0
 13428 2c46 B0E0      		ldi r27,0
 13429 2c48 00C0      		rjmp .L460
 13430               	.LVL739:
 13431               	.L454:
 13432               	.LBB777:
 347:ps2/ps2.c     **** 
 13433               		.loc 19 347 3 is_stmt 1 view .LVU2808
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13434               		.loc 19 350 3 view .LVU2809
 351:ps2/ps2.c     **** 		{
 13435               		.loc 19 351 3 view .LVU2810
 13436               	.LBE777:
 243:ps2/ps2.c     **** 		{
 13437               		.loc 19 243 3 is_stmt 0 view .LVU2811
 13438 2c4a 83E2      		ldi r24,lo8(35)
 13439 2c4c 90E0      		ldi r25,0
 13440 2c4e A0E0      		ldi r26,0
 13441 2c50 B0E0      		ldi r27,0
 13442 2c52 00C0      		rjmp .L460
 13443               	.LVL740:
 13444               	.L449:
 13445               	.LBB778:
 347:ps2/ps2.c     **** 
 13446               		.loc 19 347 3 is_stmt 1 view .LVU2812
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13447               		.loc 19 350 3 view .LVU2813
 351:ps2/ps2.c     **** 		{
 13448               		.loc 19 351 3 view .LVU2814
 13449               	.LBE778:
 243:ps2/ps2.c     **** 		{
 13450               		.loc 19 243 3 is_stmt 0 view .LVU2815
 13451 2c54 85E2      		ldi r24,lo8(37)
 13452 2c56 90E0      		ldi r25,0
 13453 2c58 A0E0      		ldi r26,0
 13454 2c5a B0E0      		ldi r27,0
 13455 2c5c 00C0      		rjmp .L460
 13456               	.LVL741:
 13457               	.L474:
 13458               	.LBB779:
 347:ps2/ps2.c     **** 
 13459               		.loc 19 347 3 is_stmt 1 view .LVU2816
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13460               		.loc 19 350 3 view .LVU2817
 351:ps2/ps2.c     **** 		{
 13461               		.loc 19 351 3 view .LVU2818
 13462               	.LBE779:
 243:ps2/ps2.c     **** 		{
 13463               		.loc 19 243 3 is_stmt 0 view .LVU2819
 13464 2c5e 84E0      		ldi r24,lo8(4)
 13465 2c60 90E0      		ldi r25,0
 13466 2c62 A0E0      		ldi r26,0
 13467 2c64 B0E0      		ldi r27,0
 13468 2c66 00C0      		rjmp .L460
 13469               	.LVL742:
 13470               	.L471:
 13471               	.LBB780:
 347:ps2/ps2.c     **** 
 13472               		.loc 19 347 3 is_stmt 1 view .LVU2820
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13473               		.loc 19 350 3 view .LVU2821
 351:ps2/ps2.c     **** 		{
 13474               		.loc 19 351 3 view .LVU2822
 13475               	.LBE780:
 243:ps2/ps2.c     **** 		{
 13476               		.loc 19 243 3 is_stmt 0 view .LVU2823
 13477 2c68 86E0      		ldi r24,lo8(6)
 13478 2c6a 90E0      		ldi r25,0
 13479 2c6c A0E0      		ldi r26,0
 13480 2c6e B0E0      		ldi r27,0
 13481 2c70 00C0      		rjmp .L460
 13482               	.LVL743:
 13483               	.L468:
 13484               	.LBB781:
 347:ps2/ps2.c     **** 
 13485               		.loc 19 347 3 is_stmt 1 view .LVU2824
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13486               		.loc 19 350 3 view .LVU2825
 351:ps2/ps2.c     **** 		{
 13487               		.loc 19 351 3 view .LVU2826
 13488               	.LBE781:
 243:ps2/ps2.c     **** 		{
 13489               		.loc 19 243 3 is_stmt 0 view .LVU2827
 13490 2c72 88E0      		ldi r24,lo8(8)
 13491 2c74 90E0      		ldi r25,0
 13492 2c76 A0E0      		ldi r26,0
 13493 2c78 B0E0      		ldi r27,0
 13494 2c7a 00C0      		rjmp .L460
 13495               	.LVL744:
 13496               	.L456:
 13497               	.LBB782:
 347:ps2/ps2.c     **** 
 13498               		.loc 19 347 3 is_stmt 1 view .LVU2828
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13499               		.loc 19 350 3 view .LVU2829
 351:ps2/ps2.c     **** 		{
 13500               		.loc 19 351 3 view .LVU2830
 13501               	.LBE782:
 243:ps2/ps2.c     **** 		{
 13502               		.loc 19 243 3 is_stmt 0 view .LVU2831
 13503 2c7c 8AE0      		ldi r24,lo8(10)
 13504 2c7e 90E0      		ldi r25,0
 13505 2c80 A0E0      		ldi r26,0
 13506 2c82 B0E0      		ldi r27,0
 13507 2c84 00C0      		rjmp .L460
 13508               	.LVL745:
 13509               	.L447:
 13510               	.LBB783:
 347:ps2/ps2.c     **** 
 13511               		.loc 19 347 3 is_stmt 1 view .LVU2832
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13512               		.loc 19 350 3 view .LVU2833
 351:ps2/ps2.c     **** 		{
 13513               		.loc 19 351 3 view .LVU2834
 13514               	.LBE783:
 243:ps2/ps2.c     **** 		{
 13515               		.loc 19 243 3 is_stmt 0 view .LVU2835
 13516 2c86 8CE0      		ldi r24,lo8(12)
 13517 2c88 90E0      		ldi r25,0
 13518 2c8a A0E0      		ldi r26,0
 13519 2c8c B0E0      		ldi r27,0
 13520 2c8e 00C0      		rjmp .L460
 13521               	.LVL746:
 13522               	.L448:
 13523               	.LBB784:
 347:ps2/ps2.c     **** 
 13524               		.loc 19 347 3 is_stmt 1 view .LVU2836
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13525               		.loc 19 350 3 view .LVU2837
 351:ps2/ps2.c     **** 		{
 13526               		.loc 19 351 3 view .LVU2838
 13527               	.LBE784:
 243:ps2/ps2.c     **** 		{
 13528               		.loc 19 243 3 is_stmt 0 view .LVU2839
 13529 2c90 8EE0      		ldi r24,lo8(14)
 13530 2c92 90E0      		ldi r25,0
 13531 2c94 A0E0      		ldi r26,0
 13532 2c96 B0E0      		ldi r27,0
 13533 2c98 00C0      		rjmp .L460
 13534               	.LVL747:
 13535               	.L453:
 13536               	.LBB785:
 347:ps2/ps2.c     **** 
 13537               		.loc 19 347 3 is_stmt 1 view .LVU2840
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13538               		.loc 19 350 3 view .LVU2841
 351:ps2/ps2.c     **** 		{
 13539               		.loc 19 351 3 view .LVU2842
 13540               	.LBE785:
 243:ps2/ps2.c     **** 		{
 13541               		.loc 19 243 3 is_stmt 0 view .LVU2843
 13542 2c9a 80E1      		ldi r24,lo8(16)
 13543 2c9c 90E0      		ldi r25,0
 13544 2c9e A0E0      		ldi r26,0
 13545 2ca0 B0E0      		ldi r27,0
 13546 2ca2 00C0      		rjmp .L460
 13547               	.LVL748:
 13548               	.L446:
 13549               	.LBB786:
 347:ps2/ps2.c     **** 
 13550               		.loc 19 347 3 is_stmt 1 view .LVU2844
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13551               		.loc 19 350 3 view .LVU2845
 351:ps2/ps2.c     **** 		{
 13552               		.loc 19 351 3 view .LVU2846
 13553               	.LBE786:
 243:ps2/ps2.c     **** 		{
 13554               		.loc 19 243 3 is_stmt 0 view .LVU2847
 13555 2ca4 82E1      		ldi r24,lo8(18)
 13556 2ca6 90E0      		ldi r25,0
 13557 2ca8 A0E0      		ldi r26,0
 13558 2caa B0E0      		ldi r27,0
 13559 2cac 00C0      		rjmp .L460
 13560               	.LVL749:
 13561               	.L478:
 13562               	.LBB787:
 347:ps2/ps2.c     **** 
 13563               		.loc 19 347 3 is_stmt 1 view .LVU2848
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13564               		.loc 19 350 3 view .LVU2849
 351:ps2/ps2.c     **** 		{
 13565               		.loc 19 351 3 view .LVU2850
 13566               	.LBE787:
 243:ps2/ps2.c     **** 		{
 13567               		.loc 19 243 3 is_stmt 0 view .LVU2851
 13568 2cae 84E1      		ldi r24,lo8(20)
 13569 2cb0 90E0      		ldi r25,0
 13570 2cb2 A0E0      		ldi r26,0
 13571 2cb4 B0E0      		ldi r27,0
 13572 2cb6 00C0      		rjmp .L460
 13573               	.LVL750:
 13574               	.L475:
 13575               	.LBB788:
 347:ps2/ps2.c     **** 
 13576               		.loc 19 347 3 is_stmt 1 view .LVU2852
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13577               		.loc 19 350 3 view .LVU2853
 351:ps2/ps2.c     **** 		{
 13578               		.loc 19 351 3 view .LVU2854
 13579               	.LBE788:
 243:ps2/ps2.c     **** 		{
 13580               		.loc 19 243 3 is_stmt 0 view .LVU2855
 13581 2cb8 86E1      		ldi r24,lo8(22)
 13582 2cba 90E0      		ldi r25,0
 13583 2cbc A0E0      		ldi r26,0
 13584 2cbe B0E0      		ldi r27,0
 13585 2cc0 00C0      		rjmp .L460
 13586               	.LVL751:
 13587               	.L451:
 13588               	.LBB789:
 347:ps2/ps2.c     **** 
 13589               		.loc 19 347 3 is_stmt 1 view .LVU2856
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13590               		.loc 19 350 3 view .LVU2857
 351:ps2/ps2.c     **** 		{
 13591               		.loc 19 351 3 view .LVU2858
 13592               	.LBE789:
 243:ps2/ps2.c     **** 		{
 13593               		.loc 19 243 3 is_stmt 0 view .LVU2859
 13594 2cc2 88E1      		ldi r24,lo8(24)
 13595 2cc4 90E0      		ldi r25,0
 13596 2cc6 A0E0      		ldi r26,0
 13597 2cc8 B0E0      		ldi r27,0
 13598 2cca 00C0      		rjmp .L460
 13599               	.LVL752:
 13600               	.L473:
 13601               	.LBB790:
 347:ps2/ps2.c     **** 
 13602               		.loc 19 347 3 is_stmt 1 view .LVU2860
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13603               		.loc 19 350 3 view .LVU2861
 351:ps2/ps2.c     **** 		{
 13604               		.loc 19 351 3 view .LVU2862
 13605               	.LBE790:
 243:ps2/ps2.c     **** 		{
 13606               		.loc 19 243 3 is_stmt 0 view .LVU2863
 13607 2ccc 8AE1      		ldi r24,lo8(26)
 13608 2cce 90E0      		ldi r25,0
 13609 2cd0 A0E0      		ldi r26,0
 13610 2cd2 B0E0      		ldi r27,0
 13611 2cd4 00C0      		rjmp .L460
 13612               	.LVL753:
 13613               	.L455:
 13614               	.LBB791:
 347:ps2/ps2.c     **** 
 13615               		.loc 19 347 3 is_stmt 1 view .LVU2864
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13616               		.loc 19 350 3 view .LVU2865
 351:ps2/ps2.c     **** 		{
 13617               		.loc 19 351 3 view .LVU2866
 13618               	.LBE791:
 243:ps2/ps2.c     **** 		{
 13619               		.loc 19 243 3 is_stmt 0 view .LVU2867
 13620 2cd6 8CE1      		ldi r24,lo8(28)
 13621 2cd8 90E0      		ldi r25,0
 13622 2cda A0E0      		ldi r26,0
 13623 2cdc B0E0      		ldi r27,0
 13624 2cde 00C0      		rjmp .L460
 13625               	.LVL754:
 13626               	.L489:
 13627               	.LBB792:
 347:ps2/ps2.c     **** 
 13628               		.loc 19 347 3 is_stmt 1 view .LVU2868
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13629               		.loc 19 350 3 view .LVU2869
 351:ps2/ps2.c     **** 		{
 13630               		.loc 19 351 3 view .LVU2870
 13631               	.LBE792:
 243:ps2/ps2.c     **** 		{
 13632               		.loc 19 243 3 is_stmt 0 view .LVU2871
 13633 2ce0 8AE3      		ldi r24,lo8(58)
 13634 2ce2 90E0      		ldi r25,0
 13635 2ce4 A0E0      		ldi r26,0
 13636 2ce6 B0E0      		ldi r27,0
 13637 2ce8 00C0      		rjmp .L460
 13638               	.LVL755:
 13639               	.L490:
 13640               	.LBB793:
 347:ps2/ps2.c     **** 
 13641               		.loc 19 347 3 is_stmt 1 view .LVU2872
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13642               		.loc 19 350 3 view .LVU2873
 351:ps2/ps2.c     **** 		{
 13643               		.loc 19 351 3 view .LVU2874
 13644               	.LBE793:
 243:ps2/ps2.c     **** 		{
 13645               		.loc 19 243 3 is_stmt 0 view .LVU2875
 13646 2cea 8CE3      		ldi r24,lo8(60)
 13647 2cec 90E0      		ldi r25,0
 13648 2cee A0E0      		ldi r26,0
 13649 2cf0 B0E0      		ldi r27,0
 13650 2cf2 00C0      		rjmp .L460
 13651               	.LVL756:
 13652               	.L491:
 13653               	.LBB794:
 347:ps2/ps2.c     **** 
 13654               		.loc 19 347 3 is_stmt 1 view .LVU2876
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13655               		.loc 19 350 3 view .LVU2877
 351:ps2/ps2.c     **** 		{
 13656               		.loc 19 351 3 view .LVU2878
 13657               	.LBE794:
 243:ps2/ps2.c     **** 		{
 13658               		.loc 19 243 3 is_stmt 0 view .LVU2879
 13659 2cf4 8EE3      		ldi r24,lo8(62)
 13660 2cf6 90E0      		ldi r25,0
 13661 2cf8 A0E0      		ldi r26,0
 13662 2cfa B0E0      		ldi r27,0
 13663 2cfc 00C0      		rjmp .L460
 13664               	.LVL757:
 13665               	.L421:
 13666               	.LBB795:
 347:ps2/ps2.c     **** 
 13667               		.loc 19 347 3 is_stmt 1 view .LVU2880
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13668               		.loc 19 350 3 view .LVU2881
 351:ps2/ps2.c     **** 		{
 13669               		.loc 19 351 3 view .LVU2882
 13670               	.LBE795:
 243:ps2/ps2.c     **** 		{
 13671               		.loc 19 243 3 is_stmt 0 view .LVU2883
 13672 2cfe 80E4      		ldi r24,lo8(64)
 13673 2d00 90E0      		ldi r25,0
 13674 2d02 A0E0      		ldi r26,0
 13675 2d04 B0E0      		ldi r27,0
 13676 2d06 00C0      		rjmp .L460
 13677               	.LVL758:
 13678               	.L492:
 13679               	.LBB796:
 347:ps2/ps2.c     **** 
 13680               		.loc 19 347 3 is_stmt 1 view .LVU2884
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13681               		.loc 19 350 3 view .LVU2885
 351:ps2/ps2.c     **** 		{
 13682               		.loc 19 351 3 view .LVU2886
 13683               	.LBE796:
 243:ps2/ps2.c     **** 		{
 13684               		.loc 19 243 3 is_stmt 0 view .LVU2887
 13685 2d08 82E4      		ldi r24,lo8(66)
 13686 2d0a 90E0      		ldi r25,0
 13687 2d0c A0E0      		ldi r26,0
 13688 2d0e B0E0      		ldi r27,0
 13689 2d10 00C0      		rjmp .L460
 13690               	.LVL759:
 13691               	.L428:
 13692               	.LBB797:
 347:ps2/ps2.c     **** 
 13693               		.loc 19 347 3 is_stmt 1 view .LVU2888
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13694               		.loc 19 350 3 view .LVU2889
 351:ps2/ps2.c     **** 		{
 13695               		.loc 19 351 3 view .LVU2890
 13696               	.LBE797:
 243:ps2/ps2.c     **** 		{
 13697               		.loc 19 243 3 is_stmt 0 view .LVU2891
 13698 2d12 84E4      		ldi r24,lo8(68)
 13699 2d14 90E0      		ldi r25,0
 13700 2d16 A0E0      		ldi r26,0
 13701 2d18 B0E0      		ldi r27,0
 13702 2d1a 00C0      		rjmp .L460
 13703               	.LVL760:
 13704               	.L435:
 13705               	.LBB798:
 347:ps2/ps2.c     **** 
 13706               		.loc 19 347 3 is_stmt 1 view .LVU2892
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13707               		.loc 19 350 3 view .LVU2893
 351:ps2/ps2.c     **** 		{
 13708               		.loc 19 351 3 view .LVU2894
 13709               	.LBE798:
 243:ps2/ps2.c     **** 		{
 13710               		.loc 19 243 3 is_stmt 0 view .LVU2895
 13711 2d1c 82E6      		ldi r24,lo8(98)
 13712 2d1e 90E0      		ldi r25,0
 13713 2d20 A0E0      		ldi r26,0
 13714 2d22 B0E0      		ldi r27,0
 13715 2d24 00C0      		rjmp .L460
 13716               	.LVL761:
 13717               	.L433:
 13718               	.LBB799:
 347:ps2/ps2.c     **** 
 13719               		.loc 19 347 3 is_stmt 1 view .LVU2896
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13720               		.loc 19 350 3 view .LVU2897
 351:ps2/ps2.c     **** 		{
 13721               		.loc 19 351 3 view .LVU2898
 13722               	.LBE799:
 243:ps2/ps2.c     **** 		{
 13723               		.loc 19 243 3 is_stmt 0 view .LVU2899
 13724 2d26 8AE5      		ldi r24,lo8(90)
 13725 2d28 90E0      		ldi r25,0
 13726 2d2a A0E0      		ldi r26,0
 13727 2d2c B0E0      		ldi r27,0
 13728 2d2e 00C0      		rjmp .L460
 13729               	.LVL762:
 13730               	.L437:
 13731               	.LBB800:
 347:ps2/ps2.c     **** 
 13732               		.loc 19 347 3 is_stmt 1 view .LVU2900
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13733               		.loc 19 350 3 view .LVU2901
 351:ps2/ps2.c     **** 		{
 13734               		.loc 19 351 3 view .LVU2902
 13735               	.LBE800:
 243:ps2/ps2.c     **** 		{
 13736               		.loc 19 243 3 is_stmt 0 view .LVU2903
 13737 2d30 8CE5      		ldi r24,lo8(92)
 13738 2d32 90E0      		ldi r25,0
 13739 2d34 A0E0      		ldi r26,0
 13740 2d36 B0E0      		ldi r27,0
 13741 2d38 00C0      		rjmp .L460
 13742               	.LVL763:
 13743               	.L431:
 13744               	.LBB801:
 347:ps2/ps2.c     **** 
 13745               		.loc 19 347 3 is_stmt 1 view .LVU2904
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13746               		.loc 19 350 3 view .LVU2905
 351:ps2/ps2.c     **** 		{
 13747               		.loc 19 351 3 view .LVU2906
 13748               	.LBE801:
 243:ps2/ps2.c     **** 		{
 13749               		.loc 19 243 3 is_stmt 0 view .LVU2907
 13750 2d3a 8EE5      		ldi r24,lo8(94)
 13751 2d3c 90E0      		ldi r25,0
 13752 2d3e A0E0      		ldi r26,0
 13753 2d40 B0E0      		ldi r27,0
 13754 2d42 00C0      		rjmp .L460
 13755               	.LVL764:
 13756               	.L430:
 13757               	.LBB802:
 347:ps2/ps2.c     **** 
 13758               		.loc 19 347 3 is_stmt 1 view .LVU2908
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13759               		.loc 19 350 3 view .LVU2909
 351:ps2/ps2.c     **** 		{
 13760               		.loc 19 351 3 view .LVU2910
 13761               	.LBE802:
 243:ps2/ps2.c     **** 		{
 13762               		.loc 19 243 3 is_stmt 0 view .LVU2911
 13763 2d44 80E6      		ldi r24,lo8(96)
 13764 2d46 90E0      		ldi r25,0
 13765 2d48 A0E0      		ldi r26,0
 13766 2d4a B0E0      		ldi r27,0
 13767 2d4c 00C0      		rjmp .L460
 13768               	.LVL765:
 13769               	.L434:
 13770               	.LBB803:
 347:ps2/ps2.c     **** 
 13771               		.loc 19 347 3 is_stmt 1 view .LVU2912
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13772               		.loc 19 350 3 view .LVU2913
 351:ps2/ps2.c     **** 		{
 13773               		.loc 19 351 3 view .LVU2914
 13774               	.LBE803:
 243:ps2/ps2.c     **** 		{
 13775               		.loc 19 243 3 is_stmt 0 view .LVU2915
 13776 2d4e 83E6      		ldi r24,lo8(99)
 13777 2d50 90E0      		ldi r25,0
 13778 2d52 A0E0      		ldi r26,0
 13779 2d54 B0E0      		ldi r27,0
 13780 2d56 00C0      		rjmp .L460
 13781               	.LVL766:
 13782               	.L425:
 13783               	.LBB804:
 347:ps2/ps2.c     **** 
 13784               		.loc 19 347 3 is_stmt 1 view .LVU2916
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13785               		.loc 19 350 3 view .LVU2917
 351:ps2/ps2.c     **** 		{
 13786               		.loc 19 351 3 view .LVU2918
 13787               	.LBE804:
 243:ps2/ps2.c     **** 		{
 13788               		.loc 19 243 3 is_stmt 0 view .LVU2919
 13789 2d58 86E5      		ldi r24,lo8(86)
 13790 2d5a 90E0      		ldi r25,0
 13791 2d5c A0E0      		ldi r26,0
 13792 2d5e B0E0      		ldi r27,0
 13793 2d60 00C0      		rjmp .L460
 13794               	.LVL767:
 13795               	.L429:
 13796               	.LBB805:
 347:ps2/ps2.c     **** 
 13797               		.loc 19 347 3 is_stmt 1 view .LVU2920
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13798               		.loc 19 350 3 view .LVU2921
 351:ps2/ps2.c     **** 		{
 13799               		.loc 19 351 3 view .LVU2922
 13800               	.LBE805:
 243:ps2/ps2.c     **** 		{
 13801               		.loc 19 243 3 is_stmt 0 view .LVU2923
 13802 2d62 89E2      		ldi r24,lo8(41)
 13803 2d64 90E0      		ldi r25,0
 13804 2d66 A0E0      		ldi r26,0
 13805 2d68 B0E0      		ldi r27,0
 13806 2d6a 00C0      		rjmp .L460
 13807               	.LVL768:
 13808               	.L465:
 13809               	.LBB806:
 347:ps2/ps2.c     **** 
 13810               		.loc 19 347 3 is_stmt 1 view .LVU2924
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13811               		.loc 19 350 3 view .LVU2925
 351:ps2/ps2.c     **** 		{
 13812               		.loc 19 351 3 view .LVU2926
 13813               	.LBE806:
 243:ps2/ps2.c     **** 		{
 13814               		.loc 19 243 3 is_stmt 0 view .LVU2927
 13815 2d6c 8CE2      		ldi r24,lo8(44)
 13816 2d6e 90E0      		ldi r25,0
 13817 2d70 A0E0      		ldi r26,0
 13818 2d72 B0E0      		ldi r27,0
 13819 2d74 00C0      		rjmp .L460
 13820               	.LVL769:
 13821               	.L441:
 13822               	.LBB807:
 347:ps2/ps2.c     **** 
 13823               		.loc 19 347 3 is_stmt 1 view .LVU2928
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13824               		.loc 19 350 3 view .LVU2929
 351:ps2/ps2.c     **** 		{
 13825               		.loc 19 351 3 view .LVU2930
 13826               	.LBE807:
 243:ps2/ps2.c     **** 		{
 13827               		.loc 19 243 3 is_stmt 0 view .LVU2931
 13828 2d76 89E3      		ldi r24,lo8(57)
 13829 2d78 90E0      		ldi r25,0
 13830 2d7a A0E0      		ldi r26,0
 13831 2d7c B0E0      		ldi r27,0
 13832 2d7e 00C0      		rjmp .L460
 13833               	.LVL770:
 13834               	.L445:
 13835               	.LBB808:
 347:ps2/ps2.c     **** 
 13836               		.loc 19 347 3 is_stmt 1 view .LVU2932
 350:ps2/ps2.c     **** 		if(key == KEY_L_ALT)
 13837               		.loc 19 350 3 view .LVU2933
 351:ps2/ps2.c     **** 		{
 13838               		.loc 19 351 3 view .LVU2934
 13839               	.LBE808:
 243:ps2/ps2.c     **** 		{
 13840               		.loc 19 243 3 is_stmt 0 view .LVU2935
 13841 2d80 87E2      		ldi r24,lo8(39)
 13842 2d82 90E0      		ldi r25,0
 13843 2d84 A0E0      		ldi r26,0
 13844 2d86 B0E0      		ldi r27,0
 13845 2d88 00C0      		rjmp .L460
 13846               	.L493:
 13847               	.LBB809:
 355:ps2/ps2.c     **** 		{
 13848               		.loc 19 355 8 is_stmt 1 view .LVU2936
 13849 2d8a 343E      		cpi r19,lo8(-28)
 13850 2d8c 01F0      		breq .L546
 13851 2d8e 00F4      		brsh .L495
 13852 2d90 313E      		cpi r19,lo8(-31)
 13853 2d92 01F0      		breq .L480
 13854 2d94 333E      		cpi r19,lo8(-29)
 13855 2d96 01F0      		breq .L547
 13856 2d98 303E      		cpi r19,lo8(-32)
 13857 2d9a 01F0      		breq .+2
 13858 2d9c 00C0      		rjmp .L460
 13859               	.LVL771:
 13860               	.L479:
 351:ps2/ps2.c     **** 		{
 13861               		.loc 19 351 5 is_stmt 0 view .LVU2937
 13862 2d9e 80EE      		ldi r24,lo8(-32)
 13863 2da0 90E0      		ldi r25,0
 13864 2da2 A0E0      		ldi r26,0
 13865 2da4 B0E0      		ldi r27,0
 13866               	.L597:
 13867 2da6 40E0      		ldi r20,0
 13868 2da8 50E0      		ldi r21,0
 13869 2daa 60E0      		ldi r22,0
 13870 2dac 70E4      		ldi r23,lo8(64)
 13871 2dae 00C0      		rjmp .L494
 13872               	.LVL772:
 13873               	.L495:
 351:ps2/ps2.c     **** 		{
 13874               		.loc 19 351 5 view .LVU2938
 13875 2db0 363E      		cpi r19,lo8(-26)
 13876 2db2 01F0      		breq .L548
 13877 2db4 373E      		cpi r19,lo8(-25)
 13878 2db6 01F0      		breq .+2
 13879 2db8 00C0      		rjmp .L460
 13880 2dba 87EE      		ldi r24,lo8(-25)
 13881 2dbc 90E0      		ldi r25,0
 13882 2dbe A0E0      		ldi r26,0
 13883 2dc0 B0E0      		ldi r27,0
 13884 2dc2 00C0      		rjmp .L596
 13885               	.LVL773:
 13886               	.L480:
 351:ps2/ps2.c     **** 		{
 13887               		.loc 19 351 5 view .LVU2939
 13888 2dc4 81EE      		ldi r24,lo8(-31)
 13889 2dc6 90E0      		ldi r25,0
 13890 2dc8 A0E0      		ldi r26,0
 13891 2dca B0E0      		ldi r27,0
 13892 2dcc 40E0      		ldi r20,0
 13893 2dce 50E0      		ldi r21,0
 13894 2dd0 60E0      		ldi r22,0
 13895 2dd2 70E8      		ldi r23,lo8(-128)
 13896 2dd4 00C0      		rjmp .L494
 13897               	.LVL774:
 13898               	.L546:
 351:ps2/ps2.c     **** 		{
 13899               		.loc 19 351 5 view .LVU2940
 13900 2dd6 84EE      		ldi r24,lo8(-28)
 13901 2dd8 90E0      		ldi r25,0
 13902 2dda A0E0      		ldi r26,0
 13903 2ddc B0E0      		ldi r27,0
 13904 2dde 00C0      		rjmp .L597
 13905               	.L547:
 13906 2de0 83EE      		ldi r24,lo8(-29)
 13907 2de2 90E0      		ldi r25,0
 13908 2de4 A0E0      		ldi r26,0
 13909 2de6 B0E0      		ldi r27,0
 13910               	.L596:
 13911 2de8 40E0      		ldi r20,0
 13912 2dea 50E0      		ldi r21,0
 13913 2dec 60E0      		ldi r22,0
 13914 2dee 70E2      		ldi r23,lo8(32)
 13915 2df0 00C0      		rjmp .L494
 13916               	.L548:
 13917 2df2 86EE      		ldi r24,lo8(-26)
 13918 2df4 90E0      		ldi r25,0
 13919 2df6 A0E0      		ldi r26,0
 13920 2df8 B0E0      		ldi r27,0
 13921 2dfa 40E0      		ldi r20,0
 13922 2dfc 50E0      		ldi r21,0
 13923 2dfe 60E0      		ldi r22,0
 13924 2e00 78E0      		ldi r23,lo8(8)
 13925 2e02 00C0      		rjmp .L494
 13926               	.LVL775:
 13927               	.L496:
 380:ps2/ps2.c     **** 			}
 13928               		.loc 19 380 5 is_stmt 1 view .LVU2941
 380:ps2/ps2.c     **** 			}
 13929               		.loc 19 380 10 is_stmt 0 view .LVU2942
 13930 2e04 4C29      		or r20,r12
 13931 2e06 5D29      		or r21,r13
 13932 2e08 6E29      		or r22,r14
 13933 2e0a 7F29      		or r23,r15
 13934 2e0c 00C0      		rjmp .L497
 13935               	.LVL776:
 13936               	.L466:
 380:ps2/ps2.c     **** 			}
 13937               		.loc 19 380 10 view .LVU2943
 13938               	.LBE809:
 243:ps2/ps2.c     **** 		{
 13939               		.loc 19 243 3 view .LVU2944
 13940 2e0e 80E2      		ldi r24,lo8(32)
 13941 2e10 90E0      		ldi r25,0
 13942 2e12 A0E0      		ldi r26,0
 13943 2e14 B0E0      		ldi r27,0
 13944 2e16 00C0      		rjmp .L460
 13945               	.L545:
 13946 2e18 82E2      		ldi r24,lo8(34)
 13947 2e1a 90E0      		ldi r25,0
 13948 2e1c A0E0      		ldi r26,0
 13949 2e1e B0E0      		ldi r27,0
 13950 2e20 00C0      		rjmp .L460
 13951               	.LVL777:
 13952               	.L528:
 243:ps2/ps2.c     **** 		{
 13953               		.loc 19 243 3 view .LVU2945
 13954 2e22 D701      		movw r26,r14
 13955 2e24 C601      		movw r24,r12
 13956 2e26 8D97      		sbiw r24,45
 13957 2e28 A109      		sbc r26,__zero_reg__
 13958 2e2a B048      		sbci r27,-128
 13959 2e2c 8C30      		cpi r24,12
 13960 2e2e 9105      		cpc r25,__zero_reg__
 13961 2e30 A105      		cpc r26,__zero_reg__
 13962 2e32 B105      		cpc r27,__zero_reg__
 13963 2e34 00F0      		brlo .+2
 13964 2e36 00C0      		rjmp .L503
 13965 2e38 FC01      		movw r30,r24
 13966 2e3a E050      		subi r30,lo8(-(gs(.L505)))
 13967 2e3c F040      		sbci r31,hi8(-(gs(.L505)))
 13968 2e3e 0C94 0000 		jmp __tablejump2__
 13969               		.section	.jumptables.gcc.__vector_1,"a",@progbits
 13970               		.p2align	1
 13971               	.L505:
 13972 0106 0000      		.word gs(.L514)
 13973 0108 0000      		.word gs(.L513)
 13974 010a 0000      		.word gs(.L512)
 13975 010c 0000      		.word gs(.L511)
 13976 010e 0000      		.word gs(.L510)
 13977 0110 0000      		.word gs(.L503)
 13978 0112 0000      		.word gs(.L509)
 13979 0114 0000      		.word gs(.L508)
 13980 0116 0000      		.word gs(.L507)
 13981 0118 0000      		.word gs(.L555)
 13982 011a 0000      		.word gs(.L506)
 13983 011c 0000      		.word gs(.L504)
 13984               		.text
 13985               	.L506:
 13986               	.LBB810:
 13987               	.LBB733:
 13988               	.LBB731:
  59:../../keyboard/german.c **** 	else if(k == (KEY_PERIOD))                        { return '.'; }
 13989               		.loc 20 59 61 view .LVU2946
 13990 2e42 8AE3      		ldi r24,lo8(58)
 13991 2e44 90E0      		ldi r25,0
 13992 2e46 A0E0      		ldi r26,0
 13993 2e48 B0E0      		ldi r27,0
 13994               	.LVL778:
 13995               	.L498:
  59:../../keyboard/german.c **** 	else if(k == (KEY_PERIOD))                        { return '.'; }
 13996               		.loc 20 59 61 view .LVU2947
 13997               	.LBE731:
 13998               	.LBE733:
 13999               	.LBB734:
 14000               	.LBI734:
 141:../../emulator/emulator.c **** {
 14001               		.loc 6 141 6 is_stmt 1 view .LVU2948
 14002               	.LBB735:
 143:../../emulator/emulator.c **** 	if(addr)
 14003               		.loc 6 143 2 view .LVU2949
 143:../../emulator/emulator.c **** 	if(addr)
 14004               		.loc 6 143 6 is_stmt 0 view .LVU2950
 14005 2e4a 4091 0000 		lds r20,_tasks+16
 14006 2e4e 5091 0000 		lds r21,_tasks+16+1
 14007 2e52 6091 0000 		lds r22,_tasks+16+2
 14008 2e56 7091 0000 		lds r23,_tasks+16+3
 14009               	.LVL779:
 144:../../emulator/emulator.c **** 	{
 14010               		.loc 6 144 2 is_stmt 1 view .LVU2951
 144:../../emulator/emulator.c **** 	{
 14011               		.loc 6 144 4 is_stmt 0 view .LVU2952
 14012 2e5a 4115      		cp r20,__zero_reg__
 14013 2e5c 5105      		cpc r21,__zero_reg__
 14014 2e5e 6105      		cpc r22,__zero_reg__
 14015 2e60 7105      		cpc r23,__zero_reg__
 14016 2e62 01F4      		brne .+2
 14017 2e64 00C0      		rjmp .L419
 14018               	.LBB736:
 146:../../emulator/emulator.c **** 		emulator_call(_emu, addr, args, ARRLEN(args), _memory_size);
 14019               		.loc 6 146 3 is_stmt 1 view .LVU2953
 146:../../emulator/emulator.c **** 		emulator_call(_emu, addr, args, ARRLEN(args), _memory_size);
 14020               		.loc 6 146 7 is_stmt 0 view .LVU2954
 14021 2e66 C982      		std Y+1,r12
 14022 2e68 DA82      		std Y+2,r13
 14023 2e6a EB82      		std Y+3,r14
 14024 2e6c FC82      		std Y+4,r15
 14025 2e6e 8D83      		std Y+5,r24
 14026 2e70 9E83      		std Y+6,r25
 14027 2e72 AF83      		std Y+7,r26
 14028 2e74 B887      		std Y+8,r27
 14029               	.LBE736:
 14030               	.LBE735:
 14031               	.LBE734:
 386:ps2/ps2.c     **** 			state & PS2_STATE_RELEASE ? KEYSTATE_RELEASED : KEYSTATE_PRESSED);
 14032               		.loc 19 386 3 view .LVU2955
 14033 2e76 1695      		lsr r17
 14034               	.LVL780:
 386:ps2/ps2.c     **** 			state & PS2_STATE_RELEASE ? KEYSTATE_RELEASED : KEYSTATE_PRESSED);
 14035               		.loc 19 386 3 view .LVU2956
 14036 2e78 81E0      		ldi r24,lo8(1)
 14037               	.LVL781:
 386:ps2/ps2.c     **** 			state & PS2_STATE_RELEASE ? KEYSTATE_RELEASED : KEYSTATE_PRESSED);
 14038               		.loc 19 386 3 view .LVU2957
 14039 2e7a 1827      		eor r17,r24
 14040 2e7c 812F      		mov r24,r17
 14041 2e7e 90E0      		ldi r25,0
 14042 2e80 A0E0      		ldi r26,0
 14043 2e82 B0E0      		ldi r27,0
 14044 2e84 8170      		andi r24,1
 14045 2e86 9927      		clr r25
 14046 2e88 AA27      		clr r26
 14047 2e8a BB27      		clr r27
 14048               	.LBB741:
 14049               	.LBB740:
 14050               	.LBB739:
 146:../../emulator/emulator.c **** 		emulator_call(_emu, addr, args, ARRLEN(args), _memory_size);
 14051               		.loc 6 146 7 view .LVU2958
 14052 2e8c 8987      		std Y+9,r24
 14053 2e8e 9A87      		std Y+10,r25
 14054 2e90 AB87      		std Y+11,r26
 14055 2e92 BC87      		std Y+12,r27
 147:../../emulator/emulator.c **** 	}
 14056               		.loc 6 147 3 is_stmt 1 view .LVU2959
 14057               	.LVL782:
 14058               	.LBB737:
 14059               	.LBI737:
1162:../../emulator/emulator.c **** {
 14060               		.loc 6 1162 4 view .LVU2960
 14061               	.LBB738:
1167:../../emulator/emulator.c **** 	emu->PC = addr;
 14062               		.loc 6 1167 25 is_stmt 0 view .LVU2961
 14063 2e94 8091 0000 		lds r24,_memory_size
 14064 2e98 9091 0000 		lds r25,_memory_size+1
 14065 2e9c A091 0000 		lds r26,_memory_size+2
 14066 2ea0 B091 0000 		lds r27,_memory_size+3
 14067 2ea4 0497      		sbiw r24,4
 14068 2ea6 A109      		sbc r26,__zero_reg__
 14069 2ea8 B109      		sbc r27,__zero_reg__
1167:../../emulator/emulator.c **** 	emu->PC = addr;
 14070               		.loc 6 1167 20 view .LVU2962
 14071 2eaa 8093 0000 		sts _tasks+32,r24
 14072 2eae 9093 0000 		sts _tasks+32+1,r25
 14073 2eb2 A093 0000 		sts _tasks+32+2,r26
 14074 2eb6 B093 0000 		sts _tasks+32+3,r27
1168:../../emulator/emulator.c **** 	memcpy(&emu->Registers[10], args, num * sizeof(*emu->Registers));
 14075               		.loc 6 1168 10 view .LVU2963
 14076 2eba 4093 0000 		sts _tasks+20,r20
 14077 2ebe 5093 0000 		sts _tasks+20+1,r21
 14078 2ec2 6093 0000 		sts _tasks+20+2,r22
 14079 2ec6 7093 0000 		sts _tasks+20+3,r23
1169:../../emulator/emulator.c **** 	i = 0;
 14080               		.loc 6 1169 2 view .LVU2964
 14081 2eca 4CE0      		ldi r20,lo8(12)
 14082 2ecc 50E0      		ldi r21,0
 14083               	.LVL783:
1169:../../emulator/emulator.c **** 	i = 0;
 14084               		.loc 6 1169 2 view .LVU2965
 14085 2ece BE01      		movw r22,r28
 14086 2ed0 6F5F      		subi r22,-1
 14087 2ed2 7F4F      		sbci r23,-1
 14088               	.LVL784:
1169:../../emulator/emulator.c **** 	i = 0;
 14089               		.loc 6 1169 2 view .LVU2966
 14090 2ed4 80E0      		ldi r24,lo8(_tasks+64)
 14091 2ed6 90E0      		ldi r25,hi8(_tasks+64)
 14092 2ed8 0E94 0000 		call memcpy
 14093               	.LVL785:
1171:../../emulator/emulator.c **** 	while(!_finished)
 14094               		.loc 6 1171 12 view .LVU2967
 14095 2edc 1092 0000 		sts _finished,__zero_reg__
 14096               	.LVL786:
 14097               	.L541:
1172:../../emulator/emulator.c **** 	{
 14098               		.loc 6 1172 8 view .LVU2968
 14099 2ee0 8091 0000 		lds r24,_finished
 14100 2ee4 8111      		cpse r24,__zero_reg__
 14101 2ee6 00C0      		rjmp .L419
 14102               		.loc 6 1175 6 view .LVU2969
 14103 2ee8 80E0      		ldi r24,lo8(_tasks)
 14104 2eea 90E0      		ldi r25,hi8(_tasks)
 14105 2eec 0E94 0000 		call emulator_next
 14106               	.LVL787:
 14107               		.loc 6 1175 5 view .LVU2970
 14108 2ef0 8823      		tst r24
 14109 2ef2 01F0      		breq .L541
 14110 2ef4 00C0      		rjmp .L419
 14111               	.LVL788:
 14112               	.L501:
 14113               		.loc 6 1175 5 view .LVU2971
 14114 2ef6 D701      		movw r26,r14
 14115 2ef8 C601      		movw r24,r12
 14116 2efa 8D97      		sbiw r24,45
 14117 2efc A109      		sbc r26,__zero_reg__
 14118 2efe B109      		sbc r27,__zero_reg__
 14119 2f00 8C30      		cpi r24,12
 14120 2f02 9105      		cpc r25,__zero_reg__
 14121 2f04 A105      		cpc r26,__zero_reg__
 14122 2f06 B105      		cpc r27,__zero_reg__
 14123 2f08 00F0      		brlo .+2
 14124 2f0a 00C0      		rjmp .L569
 14125 2f0c FC01      		movw r30,r24
 14126 2f0e E050      		subi r30,lo8(-(gs(.L517)))
 14127 2f10 F040      		sbci r31,hi8(-(gs(.L517)))
 14128 2f12 0C94 0000 		jmp __tablejump2__
 14129               		.section	.jumptables.gcc.__vector_1,"a",@progbits
 14130               		.p2align	1
 14131               	.L517:
 14132 011e 0000      		.word gs(.L525)
 14133 0120 0000      		.word gs(.L569)
 14134 0122 0000      		.word gs(.L524)
 14135 0124 0000      		.word gs(.L523)
 14136 0126 0000      		.word gs(.L522)
 14137 0128 0000      		.word gs(.L569)
 14138 012a 0000      		.word gs(.L521)
 14139 012c 0000      		.word gs(.L520)
 14140 012e 0000      		.word gs(.L519)
 14141 0130 0000      		.word gs(.L556)
 14142 0132 0000      		.word gs(.L518)
 14143 0134 0000      		.word gs(.L516)
 14144               		.text
 14145               	.L518:
 14146               	.LBE738:
 14147               	.LBE737:
 14148               	.LBE739:
 14149               	.LBE740:
 14150               	.LBE741:
 14151               	.LBB742:
 14152               	.LBB732:
  60:../../keyboard/german.c **** 	else if(k == (KEY_SLASH | MOD_SHIFT))             { return '_'; }
 14153               		.loc 20 60 61 view .LVU2972
 14154 2f16 8EE2      		ldi r24,lo8(46)
 14155 2f18 90E0      		ldi r25,0
 14156 2f1a A0E0      		ldi r26,0
 14157 2f1c B0E0      		ldi r27,0
 14158 2f1e 00C0      		rjmp .L498
 14159               	.L500:
  72:../../keyboard/german.c **** 	else if(k == KEY_MINUS)                           { return UNICODE_SMALL_SHARP_S; }
 14160               		.loc 20 72 61 view .LVU2973
 14161 2f20 8CE5      		ldi r24,lo8(92)
 14162 2f22 90E0      		ldi r25,0
 14163 2f24 A0E0      		ldi r26,0
 14164 2f26 B0E0      		ldi r27,0
 14165 2f28 EDE2      		ldi r30,45
 14166 2f2a CE16      		cp r12,r30
 14167 2f2c D104      		cpc r13,__zero_reg__
 14168 2f2e E104      		cpc r14,__zero_reg__
 14169 2f30 E8E0      		ldi r30,8
 14170 2f32 FE06      		cpc r15,r30
 14171 2f34 01F4      		brne .+2
 14172 2f36 00C0      		rjmp .L498
  66:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET))                     { return '+'; }
 14173               		.loc 20 66 61 view .LVU2974
 14174 2f38 8EE7      		ldi r24,lo8(126)
 14175 2f3a 90E0      		ldi r25,0
 14176 2f3c A0E0      		ldi r26,0
 14177 2f3e B0E0      		ldi r27,0
 14178 2f40 F0E3      		ldi r31,48
 14179 2f42 CF16      		cp r12,r31
 14180 2f44 D104      		cpc r13,__zero_reg__
 14181 2f46 E104      		cpc r14,__zero_reg__
 14182 2f48 F8E0      		ldi r31,8
 14183 2f4a FF06      		cpc r15,r31
 14184 2f4c 01F4      		brne .+2
 14185 2f4e 00C0      		rjmp .L498
 14186 2f50 84E6      		ldi r24,100
 14187 2f52 C816      		cp r12,r24
 14188 2f54 D104      		cpc r13,__zero_reg__
 14189 2f56 E104      		cpc r14,__zero_reg__
 14190 2f58 F104      		cpc r15,__zero_reg__
 14191 2f5a 01F4      		brne .+2
 14192 2f5c 00C0      		rjmp .L559
  83:../../keyboard/german.c **** 	{
 14193               		.loc 20 83 7 is_stmt 1 view .LVU2975
  83:../../keyboard/german.c **** 	{
 14194               		.loc 20 83 26 is_stmt 0 view .LVU2976
 14195 2f5e DB01      		movw r26,r22
 14196 2f60 CA01      		movw r24,r20
 14197 2f62 0497      		sbiw r24,4
 14198 2f64 A109      		sbc r26,__zero_reg__
 14199 2f66 B109      		sbc r27,__zero_reg__
  83:../../keyboard/german.c **** 	{
 14200               		.loc 20 83 9 view .LVU2977
 14201 2f68 4A97      		sbiw r24,26
 14202 2f6a A105      		cpc r26,__zero_reg__
 14203 2f6c B105      		cpc r27,__zero_reg__
 14204 2f6e 00F0      		brlo .+2
 14205 2f70 00C0      		rjmp .L536
 14206               	.LBB723:
  85:../../keyboard/german.c **** 
 14207               		.loc 20 85 3 is_stmt 1 view .LVU2978
  85:../../keyboard/german.c **** 
 14208               		.loc 20 85 26 is_stmt 0 view .LVU2979
 14209 2f72 DB01      		movw r26,r22
 14210 2f74 CA01      		movw r24,r20
 14211 2f76 835A      		subi r24,-93
 14212 2f78 9F4F      		sbci r25,-1
 14213 2f7a AF4F      		sbci r26,-1
 14214 2f7c BF4F      		sbci r27,-1
 14215               	.LVL789:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14216               		.loc 20 87 3 is_stmt 1 view .LVU2980
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14217               		.loc 20 87 5 is_stmt 0 view .LVU2981
 14218 2f7e 4D31      		cpi r20,29
 14219 2f80 5105      		cpc r21,__zero_reg__
 14220 2f82 6105      		cpc r22,__zero_reg__
 14221 2f84 7105      		cpc r23,__zero_reg__
 14222 2f86 01F4      		brne .L534
 14223               	.L564:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14224               		.loc 20 87 20 view .LVU2982
 14225 2f88 89E7      		ldi r24,lo8(121)
 14226 2f8a 90E0      		ldi r25,0
 14227 2f8c A0E0      		ldi r26,0
 14228 2f8e B0E0      		ldi r27,0
 14229               	.LVL790:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14230               		.loc 20 87 20 view .LVU2983
 14231 2f90 00C0      		rjmp .L498
 14232               	.LVL791:
 14233               	.L499:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14234               		.loc 20 87 20 view .LVU2984
 14235 2f92 E9E3      		ldi r30,57
 14236 2f94 CE16      		cp r12,r30
 14237 2f96 D104      		cpc r13,__zero_reg__
 14238 2f98 E104      		cpc r14,__zero_reg__
 14239 2f9a E0E8      		ldi r30,-128
 14240 2f9c FE06      		cpc r15,r30
 14241 2f9e 00F4      		brsh .L527
 14242 2fa0 FDE2      		ldi r31,45
 14243 2fa2 CF16      		cp r12,r31
 14244 2fa4 D104      		cpc r13,__zero_reg__
 14245 2fa6 E104      		cpc r14,__zero_reg__
 14246 2fa8 F0E8      		ldi r31,-128
 14247 2faa FF06      		cpc r15,r31
 14248 2fac 00F0      		brlo .+2
 14249 2fae 00C0      		rjmp .L528
 14250               	.LBE723:
  83:../../keyboard/german.c **** 	{
 14251               		.loc 20 83 7 is_stmt 1 view .LVU2985
  83:../../keyboard/german.c **** 	{
 14252               		.loc 20 83 26 is_stmt 0 view .LVU2986
 14253 2fb0 DB01      		movw r26,r22
 14254 2fb2 CA01      		movw r24,r20
 14255 2fb4 0497      		sbiw r24,4
 14256 2fb6 A109      		sbc r26,__zero_reg__
 14257 2fb8 B109      		sbc r27,__zero_reg__
  83:../../keyboard/german.c **** 	{
 14258               		.loc 20 83 9 view .LVU2987
 14259 2fba 4A97      		sbiw r24,26
 14260 2fbc A105      		cpc r26,__zero_reg__
 14261 2fbe B105      		cpc r27,__zero_reg__
 14262 2fc0 00F0      		brlo .+2
 14263 2fc2 00C0      		rjmp .L503
 14264               	.LBB724:
  85:../../keyboard/german.c **** 
 14265               		.loc 20 85 3 is_stmt 1 view .LVU2988
  85:../../keyboard/german.c **** 
 14266               		.loc 20 85 26 is_stmt 0 view .LVU2989
 14267 2fc4 DB01      		movw r26,r22
 14268 2fc6 CA01      		movw r24,r20
 14269 2fc8 835A      		subi r24,-93
 14270 2fca 9F4F      		sbci r25,-1
 14271 2fcc AF4F      		sbci r26,-1
 14272 2fce BF4F      		sbci r27,-1
 14273               	.LVL792:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14274               		.loc 20 87 3 is_stmt 1 view .LVU2990
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14275               		.loc 20 87 5 is_stmt 0 view .LVU2991
 14276 2fd0 4D31      		cpi r20,29
 14277 2fd2 5105      		cpc r21,__zero_reg__
 14278 2fd4 6105      		cpc r22,__zero_reg__
 14279 2fd6 7105      		cpc r23,__zero_reg__
 14280 2fd8 01F4      		brne .+2
 14281 2fda 00C0      		rjmp .L565
 14282               	.L534:
 14283               		.loc 20 88 8 is_stmt 1 view .LVU2992
 14284               		.loc 20 88 10 is_stmt 0 view .LVU2993
 14285 2fdc 8937      		cpi r24,121
 14286 2fde 9105      		cpc r25,__zero_reg__
 14287 2fe0 A105      		cpc r26,__zero_reg__
 14288 2fe2 B105      		cpc r27,__zero_reg__
 14289 2fe4 01F4      		brne .+2
 14290 2fe6 00C0      		rjmp .L566
  89:../../keyboard/german.c **** 
  90:../../keyboard/german.c **** 		if(k & MOD_ALT_GR)
 14291               		.loc 20 90 3 is_stmt 1 view .LVU2994
 14292               		.loc 20 90 5 is_stmt 0 view .LVU2995
 14293 2fe8 F3FE      		sbrs r15,3
 14294 2fea 00C0      		rjmp .L537
  91:../../keyboard/german.c **** 		{
  92:../../keyboard/german.c **** 			if(c == 'q') { return '@'; }
 14295               		.loc 20 92 4 is_stmt 1 view .LVU2996
 14296               		.loc 20 92 6 is_stmt 0 view .LVU2997
 14297 2fec 8137      		cpi r24,113
 14298 2fee 9105      		cpc r25,__zero_reg__
 14299 2ff0 A105      		cpc r26,__zero_reg__
 14300 2ff2 B105      		cpc r27,__zero_reg__
 14301 2ff4 01F4      		brne .+2
 14302 2ff6 00C0      		rjmp .L567
  93:../../keyboard/german.c **** 			else if(c == 'e') { return UNICODE_EURO_SIGN; }
 14303               		.loc 20 93 9 is_stmt 1 view .LVU2998
 14304               		.loc 20 93 11 is_stmt 0 view .LVU2999
 14305 2ff8 8536      		cpi r24,101
 14306 2ffa 9105      		cpc r25,__zero_reg__
 14307 2ffc A105      		cpc r26,__zero_reg__
 14308 2ffe B105      		cpc r27,__zero_reg__
 14309 3000 01F4      		brne .+2
 14310 3002 00C0      		rjmp .L568
 14311               	.LVL793:
 14312               	.L537:
  94:../../keyboard/german.c **** 		}
  95:../../keyboard/german.c **** 
  96:../../keyboard/german.c **** 		if(k & MOD_SHIFT)
 14313               		.loc 20 96 3 is_stmt 1 view .LVU3000
 14314               		.loc 20 96 5 is_stmt 0 view .LVU3001
 14315 3004 F7FE      		sbrs r15,7
 14316 3006 00C0      		rjmp .L498
 14317               	.L533:
  97:../../keyboard/german.c **** 		{
  98:../../keyboard/german.c **** 			c = toupper(c);
 14318               		.loc 20 98 4 is_stmt 1 view .LVU3002
 14319               		.loc 20 98 8 is_stmt 0 view .LVU3003
 14320 3008 0E94 0000 		call toupper
 14321               	.LVL794:
 14322               		.loc 20 98 6 view .LVU3004
 14323 300c 092E      		mov __tmp_reg__,r25
 14324 300e 000C      		lsl r0
 14325 3010 AA0B      		sbc r26,r26
 14326 3012 BB0B      		sbc r27,r27
 14327               	.LVL795:
 14328               		.loc 20 98 6 view .LVU3005
 14329 3014 00C0      		rjmp .L498
 14330               	.LVL796:
 14331               	.L527:
 14332               		.loc 20 98 6 view .LVU3006
 14333 3016 84E6      		ldi r24,100
 14334 3018 C816      		cp r12,r24
 14335 301a D104      		cpc r13,__zero_reg__
 14336 301c E104      		cpc r14,__zero_reg__
 14337 301e 80E8      		ldi r24,-128
 14338 3020 F806      		cpc r15,r24
 14339 3022 01F4      		brne .+2
 14340 3024 00C0      		rjmp .L560
 14341               	.LBE724:
  83:../../keyboard/german.c **** 	{
 14342               		.loc 20 83 7 is_stmt 1 view .LVU3007
  83:../../keyboard/german.c **** 	{
 14343               		.loc 20 83 26 is_stmt 0 view .LVU3008
 14344 3026 DB01      		movw r26,r22
 14345 3028 CA01      		movw r24,r20
 14346 302a 0497      		sbiw r24,4
 14347 302c A109      		sbc r26,__zero_reg__
 14348 302e B109      		sbc r27,__zero_reg__
  83:../../keyboard/german.c **** 	{
 14349               		.loc 20 83 9 view .LVU3009
 14350 3030 4A97      		sbiw r24,26
 14351 3032 A105      		cpc r26,__zero_reg__
 14352 3034 B105      		cpc r27,__zero_reg__
 14353 3036 00F0      		brlo .+2
 14354 3038 00C0      		rjmp .L532
 14355               	.LBB725:
  85:../../keyboard/german.c **** 
 14356               		.loc 20 85 3 is_stmt 1 view .LVU3010
  85:../../keyboard/german.c **** 
 14357               		.loc 20 85 26 is_stmt 0 view .LVU3011
 14358 303a DB01      		movw r26,r22
 14359 303c CA01      		movw r24,r20
 14360 303e 835A      		subi r24,-93
 14361 3040 9F4F      		sbci r25,-1
 14362 3042 AF4F      		sbci r26,-1
 14363 3044 BF4F      		sbci r27,-1
 14364               	.LVL797:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14365               		.loc 20 87 3 is_stmt 1 view .LVU3012
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14366               		.loc 20 87 5 is_stmt 0 view .LVU3013
 14367 3046 4D31      		cpi r20,29
 14368 3048 5105      		cpc r21,__zero_reg__
 14369 304a 6105      		cpc r22,__zero_reg__
 14370 304c 7105      		cpc r23,__zero_reg__
 14371 304e 01F4      		brne .L534
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14372               		.loc 20 87 20 view .LVU3014
 14373 3050 89E7      		ldi r24,lo8(121)
 14374 3052 90E0      		ldi r25,0
 14375 3054 A0E0      		ldi r26,0
 14376 3056 B0E0      		ldi r27,0
 14377               	.LVL798:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14378               		.loc 20 87 20 view .LVU3015
 14379 3058 00C0      		rjmp .L533
 14380               	.LVL799:
 14381               	.L504:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14382               		.loc 20 87 20 view .LVU3016
 14383               	.LBE725:
  61:../../keyboard/german.c **** 	else if(k == (KEY_SLASH))                         { return '-'; }
 14384               		.loc 20 61 54 is_stmt 1 view .LVU3017
  61:../../keyboard/german.c **** 	else if(k == (KEY_SLASH))                         { return '-'; }
 14385               		.loc 20 61 61 is_stmt 0 view .LVU3018
 14386 305a 8FE5      		ldi r24,lo8(95)
 14387 305c 90E0      		ldi r25,0
 14388 305e A0E0      		ldi r26,0
 14389 3060 B0E0      		ldi r27,0
 14390 3062 00C0      		rjmp .L498
 14391               	.L516:
  62:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH | MOD_SHIFT))         { return '\''; }
 14392               		.loc 20 62 54 is_stmt 1 view .LVU3019
  62:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH | MOD_SHIFT))         { return '\''; }
 14393               		.loc 20 62 61 is_stmt 0 view .LVU3020
 14394 3064 8DE2      		ldi r24,lo8(45)
 14395 3066 90E0      		ldi r25,0
 14396 3068 A0E0      		ldi r26,0
 14397 306a B0E0      		ldi r27,0
 14398 306c 00C0      		rjmp .L498
 14399               	.L510:
  63:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH))                     { return '#'; }
 14400               		.loc 20 63 54 is_stmt 1 view .LVU3021
  63:../../keyboard/german.c **** 	else if(k == (KEY_BACKSLASH))                     { return '#'; }
 14401               		.loc 20 63 61 is_stmt 0 view .LVU3022
 14402 306e 87E2      		ldi r24,lo8(39)
 14403 3070 90E0      		ldi r25,0
 14404 3072 A0E0      		ldi r26,0
 14405 3074 B0E0      		ldi r27,0
 14406 3076 00C0      		rjmp .L498
 14407               	.L522:
  64:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_SHIFT))         { return '*'; }
 14408               		.loc 20 64 54 is_stmt 1 view .LVU3023
  64:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_SHIFT))         { return '*'; }
 14409               		.loc 20 64 61 is_stmt 0 view .LVU3024
 14410 3078 83E2      		ldi r24,lo8(35)
 14411 307a 90E0      		ldi r25,0
 14412 307c A0E0      		ldi r26,0
 14413 307e B0E0      		ldi r27,0
 14414 3080 00C0      		rjmp .L498
 14415               	.L511:
  65:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_ALT_GR))        { return '~'; }
 14416               		.loc 20 65 54 is_stmt 1 view .LVU3025
  65:../../keyboard/german.c **** 	else if(k == (KEY_R_BRACKET | MOD_ALT_GR))        { return '~'; }
 14417               		.loc 20 65 61 is_stmt 0 view .LVU3026
 14418 3082 8AE2      		ldi r24,lo8(42)
 14419 3084 90E0      		ldi r25,0
 14420 3086 A0E0      		ldi r26,0
 14421 3088 B0E0      		ldi r27,0
 14422 308a 00C0      		rjmp .L498
 14423               	.L523:
  67:../../keyboard/german.c **** 	else if(k == (KEY_NON_US_BACKSLASH | MOD_SHIFT))  { return '>'; }
 14424               		.loc 20 67 54 is_stmt 1 view .LVU3027
  67:../../keyboard/german.c **** 	else if(k == (KEY_NON_US_BACKSLASH | MOD_SHIFT))  { return '>'; }
 14425               		.loc 20 67 61 is_stmt 0 view .LVU3028
 14426 308c 8BE2      		ldi r24,lo8(43)
 14427 308e 90E0      		ldi r25,0
 14428 3090 A0E0      		ldi r26,0
 14429 3092 B0E0      		ldi r27,0
 14430 3094 00C0      		rjmp .L498
 14431               	.L514:
  71:../../keyboard/german.c **** 	else if(k == (KEY_MINUS | MOD_ALT_GR))            { return '\\'; }
 14432               		.loc 20 71 54 is_stmt 1 view .LVU3029
  71:../../keyboard/german.c **** 	else if(k == (KEY_MINUS | MOD_ALT_GR))            { return '\\'; }
 14433               		.loc 20 71 61 is_stmt 0 view .LVU3030
 14434 3096 8FE3      		ldi r24,lo8(63)
 14435 3098 90E0      		ldi r25,0
 14436 309a A0E0      		ldi r26,0
 14437 309c B0E0      		ldi r27,0
 14438 309e 00C0      		rjmp .L498
 14439               	.L525:
  73:../../keyboard/german.c **** 	else if(k == (KEY_EQUALS | MOD_SHIFT))            { return '`'; }
 14440               		.loc 20 73 54 is_stmt 1 view .LVU3031
  73:../../keyboard/german.c **** 	else if(k == (KEY_EQUALS | MOD_SHIFT))            { return '`'; }
 14441               		.loc 20 73 61 is_stmt 0 view .LVU3032
 14442 30a0 8FED      		ldi r24,lo8(-33)
 14443 30a2 90E0      		ldi r25,0
 14444 30a4 A0E0      		ldi r26,0
 14445 30a6 B0E0      		ldi r27,0
 14446 30a8 00C0      		rjmp .L498
 14447               	.L513:
  74:../../keyboard/german.c **** 	else if(k == (KEY_GRAVE | MOD_SHIFT))             { return UNICODE_DEGREE_SIGN; }
 14448               		.loc 20 74 54 is_stmt 1 view .LVU3033
  74:../../keyboard/german.c **** 	else if(k == (KEY_GRAVE | MOD_SHIFT))             { return UNICODE_DEGREE_SIGN; }
 14449               		.loc 20 74 61 is_stmt 0 view .LVU3034
 14450 30aa 80E6      		ldi r24,lo8(96)
 14451 30ac 90E0      		ldi r25,0
 14452 30ae A0E0      		ldi r26,0
 14453 30b0 B0E0      		ldi r27,0
 14454 30b2 00C0      		rjmp .L498
 14455               	.L507:
  75:../../keyboard/german.c **** 	else if(k == KEY_GRAVE)                           { return '^'; }
 14456               		.loc 20 75 54 is_stmt 1 view .LVU3035
  75:../../keyboard/german.c **** 	else if(k == KEY_GRAVE)                           { return '^'; }
 14457               		.loc 20 75 61 is_stmt 0 view .LVU3036
 14458 30b4 80EB      		ldi r24,lo8(-80)
 14459 30b6 90E0      		ldi r25,0
 14460 30b8 A0E0      		ldi r26,0
 14461 30ba B0E0      		ldi r27,0
 14462 30bc 00C0      		rjmp .L498
 14463               	.L519:
  76:../../keyboard/german.c **** 	else if(k == (KEY_APOSTROPHE | MOD_SHIFT))        { return UNICODE_CAPITAL_A_UMLAUT; }
 14464               		.loc 20 76 54 is_stmt 1 view .LVU3037
  76:../../keyboard/german.c **** 	else if(k == (KEY_APOSTROPHE | MOD_SHIFT))        { return UNICODE_CAPITAL_A_UMLAUT; }
 14465               		.loc 20 76 61 is_stmt 0 view .LVU3038
 14466 30be 8EE5      		ldi r24,lo8(94)
 14467 30c0 90E0      		ldi r25,0
 14468 30c2 A0E0      		ldi r26,0
 14469 30c4 B0E0      		ldi r27,0
 14470 30c6 00C0      		rjmp .L498
 14471               	.L508:
  77:../../keyboard/german.c **** 	else if(k == KEY_APOSTROPHE)                      { return UNICODE_SMALL_A_UMLAUT; }
 14472               		.loc 20 77 54 is_stmt 1 view .LVU3039
  77:../../keyboard/german.c **** 	else if(k == KEY_APOSTROPHE)                      { return UNICODE_SMALL_A_UMLAUT; }
 14473               		.loc 20 77 61 is_stmt 0 view .LVU3040
 14474 30c8 84EE      		ldi r24,lo8(-28)
 14475 30ca 90E0      		ldi r25,0
 14476 30cc A0E0      		ldi r26,0
 14477 30ce B0E0      		ldi r27,0
 14478 30d0 00C0      		rjmp .L498
 14479               	.L520:
  78:../../keyboard/german.c **** 	else if(k == (KEY_SEMICOLON | MOD_SHIFT))         { return UNICODE_CAPITAL_O_UMLAUT; }
 14480               		.loc 20 78 54 is_stmt 1 view .LVU3041
  78:../../keyboard/german.c **** 	else if(k == (KEY_SEMICOLON | MOD_SHIFT))         { return UNICODE_CAPITAL_O_UMLAUT; }
 14481               		.loc 20 78 61 is_stmt 0 view .LVU3042
 14482 30d2 84EC      		ldi r24,lo8(-60)
 14483 30d4 90E0      		ldi r25,0
 14484 30d6 A0E0      		ldi r26,0
 14485 30d8 B0E0      		ldi r27,0
 14486 30da 00C0      		rjmp .L498
 14487               	.L509:
  79:../../keyboard/german.c **** 	else if(k == KEY_SEMICOLON)                       { return UNICODE_SMALL_O_UMLAUT; }
 14488               		.loc 20 79 54 is_stmt 1 view .LVU3043
  79:../../keyboard/german.c **** 	else if(k == KEY_SEMICOLON)                       { return UNICODE_SMALL_O_UMLAUT; }
 14489               		.loc 20 79 61 is_stmt 0 view .LVU3044
 14490 30dc 86ED      		ldi r24,lo8(-42)
 14491 30de 90E0      		ldi r25,0
 14492 30e0 A0E0      		ldi r26,0
 14493 30e2 B0E0      		ldi r27,0
 14494 30e4 00C0      		rjmp .L498
 14495               	.L521:
  80:../../keyboard/german.c **** 	else if(k == (KEY_L_BRACKET | MOD_SHIFT))         { return UNICODE_CAPITAL_U_UMLAUT; }
 14496               		.loc 20 80 54 is_stmt 1 view .LVU3045
  80:../../keyboard/german.c **** 	else if(k == (KEY_L_BRACKET | MOD_SHIFT))         { return UNICODE_CAPITAL_U_UMLAUT; }
 14497               		.loc 20 80 61 is_stmt 0 view .LVU3046
 14498 30e6 86EF      		ldi r24,lo8(-10)
 14499 30e8 90E0      		ldi r25,0
 14500 30ea A0E0      		ldi r26,0
 14501 30ec B0E0      		ldi r27,0
 14502 30ee 00C0      		rjmp .L498
 14503               	.L512:
  81:../../keyboard/german.c **** 	else if(k == KEY_L_BRACKET)                       { return UNICODE_SMALL_U_UMLAUT; }
 14504               		.loc 20 81 54 is_stmt 1 view .LVU3047
  81:../../keyboard/german.c **** 	else if(k == KEY_L_BRACKET)                       { return UNICODE_SMALL_U_UMLAUT; }
 14505               		.loc 20 81 61 is_stmt 0 view .LVU3048
 14506 30f0 8CEF      		ldi r24,lo8(-4)
 14507 30f2 90E0      		ldi r25,0
 14508 30f4 A0E0      		ldi r26,0
 14509 30f6 B0E0      		ldi r27,0
 14510 30f8 00C0      		rjmp .L498
 14511               	.L524:
  82:../../keyboard/german.c **** 	else if(nomods >= KEY_A && nomods <= KEY_Z)
 14512               		.loc 20 82 54 is_stmt 1 view .LVU3049
  82:../../keyboard/german.c **** 	else if(nomods >= KEY_A && nomods <= KEY_Z)
 14513               		.loc 20 82 61 is_stmt 0 view .LVU3050
 14514 30fa 8CED      		ldi r24,lo8(-36)
 14515 30fc 90E0      		ldi r25,0
 14516 30fe A0E0      		ldi r26,0
 14517 3100 B0E0      		ldi r27,0
 14518 3102 00C0      		rjmp .L498
 14519               	.L532:
  99:../../keyboard/german.c **** 		}
 100:../../keyboard/german.c **** 
 101:../../keyboard/german.c **** 		return c;
 102:../../keyboard/german.c **** 	}
 103:../../keyboard/german.c **** 	else if(nomods >= KEY_1 && nomods <= KEY_0)
 14520               		.loc 20 103 7 is_stmt 1 view .LVU3051
 14521               		.loc 20 103 26 is_stmt 0 view .LVU3052
 14522 3104 4E51      		subi r20,30
 14523 3106 5109      		sbc r21,__zero_reg__
 14524 3108 6109      		sbc r22,__zero_reg__
 14525 310a 7109      		sbc r23,__zero_reg__
 14526               	.LVL800:
 14527               		.loc 20 103 9 view .LVU3053
 14528 310c 4A30      		cpi r20,10
 14529 310e 5105      		cpc r21,__zero_reg__
 14530 3110 6105      		cpc r22,__zero_reg__
 14531 3112 7105      		cpc r23,__zero_reg__
 14532 3114 00F0      		brlo .L535
 14533               	.LVL801:
 14534               	.L569:
 104:../../keyboard/german.c **** 	{
 105:../../keyboard/german.c **** 		static const char *numbers = "1234567890";
 106:../../keyboard/german.c **** 
 107:../../keyboard/german.c **** 		static const i32 numbers_shift[] = { '!', '\"', UNICODE_SECTION_SIGN,
 108:../../keyboard/german.c **** 			'$', '%', '&', '/', '(', ')', '=' };
 109:../../keyboard/german.c **** 
 110:../../keyboard/german.c **** 		static const i32 numbers_altgr[] = { 0, UNICODE_SUPERSCRIPT_TWO,
 111:../../keyboard/german.c **** 			UNICODE_SUPERSCRIPT_THREE, 0, 0, 0, '{', '[', ']', '}' };
 112:../../keyboard/german.c **** 
 113:../../keyboard/german.c **** 		u32 idx = nomods - KEY_1;
 114:../../keyboard/german.c **** 
 115:../../keyboard/german.c **** 		if(k & MOD_SHIFT)
 116:../../keyboard/german.c **** 		{
 117:../../keyboard/german.c **** 			return numbers_shift[idx];
 118:../../keyboard/german.c **** 		}
 119:../../keyboard/german.c **** 		else if(k & MOD_ALT_GR)
 120:../../keyboard/german.c **** 		{
 121:../../keyboard/german.c **** 			return numbers_altgr[idx];
 122:../../keyboard/german.c **** 		}
 123:../../keyboard/german.c **** 		else
 124:../../keyboard/german.c **** 		{
 125:../../keyboard/german.c **** 			return numbers[idx];
 126:../../keyboard/german.c **** 		}
 127:../../keyboard/german.c **** 	}
 128:../../keyboard/german.c **** 
 129:../../keyboard/german.c **** 	return 0;
 14535               		.loc 20 129 9 view .LVU3054
 14536 3116 80E0      		ldi r24,0
 14537 3118 90E0      		ldi r25,0
 14538 311a DC01      		movw r26,r24
 14539 311c 00C0      		rjmp .L498
 14540               	.LVL802:
 14541               	.L565:
 14542               	.LBB726:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14543               		.loc 20 87 20 view .LVU3055
 14544 311e 89E7      		ldi r24,lo8(121)
 14545 3120 90E0      		ldi r25,0
 14546 3122 A0E0      		ldi r26,0
 14547 3124 B0E0      		ldi r27,0
 14548               	.LVL803:
  87:../../keyboard/german.c **** 		else if(c == 'y') { c = 'z'; }
 14549               		.loc 20 87 20 view .LVU3056
 14550 3126 00C0      		rjmp .L537
 14551               	.LVL804:
 14552               	.L566:
  88:../../keyboard/german.c **** 
 14553               		.loc 20 88 25 view .LVU3057
 14554 3128 8AE7      		ldi r24,lo8(122)
 14555 312a 90E0      		ldi r25,0
 14556 312c A0E0      		ldi r26,0
 14557 312e B0E0      		ldi r27,0
 14558               	.LVL805:
  88:../../keyboard/german.c **** 
 14559               		.loc 20 88 25 view .LVU3058
 14560 3130 00C0      		rjmp .L537
 14561               	.LVL806:
 14562               	.L531:
  88:../../keyboard/german.c **** 
 14563               		.loc 20 88 25 view .LVU3059
 14564               	.LBE726:
 103:../../keyboard/german.c **** 	{
 14565               		.loc 20 103 7 is_stmt 1 view .LVU3060
 103:../../keyboard/german.c **** 	{
 14566               		.loc 20 103 26 is_stmt 0 view .LVU3061
 14567 3132 4E51      		subi r20,30
 14568 3134 5109      		sbc r21,__zero_reg__
 14569 3136 6109      		sbc r22,__zero_reg__
 14570 3138 7109      		sbc r23,__zero_reg__
 14571               	.LVL807:
 103:../../keyboard/german.c **** 	{
 14572               		.loc 20 103 9 view .LVU3062
 14573 313a 4A30      		cpi r20,10
 14574 313c 5105      		cpc r21,__zero_reg__
 14575 313e 6105      		cpc r22,__zero_reg__
 14576 3140 7105      		cpc r23,__zero_reg__
 14577 3142 00F4      		brsh .L569
 14578               	.LVL808:
 14579               	.L538:
 14580               	.LBB727:
 125:../../keyboard/german.c **** 		}
 14581               		.loc 20 125 4 is_stmt 1 view .LVU3063
 125:../../keyboard/german.c **** 		}
 14582               		.loc 20 125 18 is_stmt 0 view .LVU3064
 14583 3144 4050      		subi r20,lo8(-(.LC0))
 14584 3146 5040      		sbci r21,hi8(-(.LC0))
 14585 3148 FA01      		movw r30,r20
 14586 314a 8081      		ld r24,Z
 14587 314c 90E0      		ldi r25,0
 14588 314e A0E0      		ldi r26,0
 14589 3150 B0E0      		ldi r27,0
 14590 3152 00C0      		rjmp .L498
 14591               	.LVL809:
 14592               	.L536:
 125:../../keyboard/german.c **** 		}
 14593               		.loc 20 125 18 view .LVU3065
 14594               	.LBE727:
 103:../../keyboard/german.c **** 	{
 14595               		.loc 20 103 7 is_stmt 1 view .LVU3066
 103:../../keyboard/german.c **** 	{
 14596               		.loc 20 103 26 is_stmt 0 view .LVU3067
 14597 3154 4E51      		subi r20,30
 14598 3156 5109      		sbc r21,__zero_reg__
 14599 3158 6109      		sbc r22,__zero_reg__
 14600 315a 7109      		sbc r23,__zero_reg__
 14601               	.LVL810:
 103:../../keyboard/german.c **** 	{
 14602               		.loc 20 103 9 view .LVU3068
 14603 315c 4A30      		cpi r20,10
 14604 315e 5105      		cpc r21,__zero_reg__
 14605 3160 6105      		cpc r22,__zero_reg__
 14606 3162 7105      		cpc r23,__zero_reg__
 14607 3164 00F4      		brsh .L569
 14608               	.LVL811:
 14609               	.L539:
 14610               	.LBB728:
 119:../../keyboard/german.c **** 		{
 14611               		.loc 20 119 8 is_stmt 1 view .LVU3069
 119:../../keyboard/german.c **** 		{
 14612               		.loc 20 119 10 is_stmt 0 view .LVU3070
 14613 3166 F3FE      		sbrs r15,3
 14614 3168 00C0      		rjmp .L538
 121:../../keyboard/german.c **** 		}
 14615               		.loc 20 121 4 is_stmt 1 view .LVU3071
 121:../../keyboard/german.c **** 		}
 14616               		.loc 20 121 24 is_stmt 0 view .LVU3072
 14617 316a FA01      		movw r30,r20
 14618 316c EE0F      		lsl r30
 14619 316e FF1F      		rol r31
 14620 3170 EE0F      		lsl r30
 14621 3172 FF1F      		rol r31
 14622 3174 E050      		subi r30,lo8(-(numbers_altgr.1))
 14623 3176 F040      		sbci r31,hi8(-(numbers_altgr.1))
 14624 3178 00C0      		rjmp .L598
 14625               	.LVL812:
 14626               	.L503:
 121:../../keyboard/german.c **** 		}
 14627               		.loc 20 121 24 view .LVU3073
 14628               	.LBE728:
 103:../../keyboard/german.c **** 	{
 14629               		.loc 20 103 7 is_stmt 1 view .LVU3074
 103:../../keyboard/german.c **** 	{
 14630               		.loc 20 103 26 is_stmt 0 view .LVU3075
 14631 317a 4E51      		subi r20,30
 14632 317c 5109      		sbc r21,__zero_reg__
 14633 317e 6109      		sbc r22,__zero_reg__
 14634 3180 7109      		sbc r23,__zero_reg__
 14635               	.LVL813:
 103:../../keyboard/german.c **** 	{
 14636               		.loc 20 103 9 view .LVU3076
 14637 3182 4A30      		cpi r20,10
 14638 3184 5105      		cpc r21,__zero_reg__
 14639 3186 6105      		cpc r22,__zero_reg__
 14640 3188 7105      		cpc r23,__zero_reg__
 14641 318a 00F4      		brsh .L569
 14642               	.LBB729:
 105:../../keyboard/german.c **** 
 14643               		.loc 20 105 3 is_stmt 1 view .LVU3077
 107:../../keyboard/german.c **** 			'$', '%', '&', '/', '(', ')', '=' };
 14644               		.loc 20 107 3 view .LVU3078
 110:../../keyboard/german.c **** 			UNICODE_SUPERSCRIPT_THREE, 0, 0, 0, '{', '[', ']', '}' };
 14645               		.loc 20 110 3 view .LVU3079
 113:../../keyboard/german.c **** 
 14646               		.loc 20 113 3 view .LVU3080
 115:../../keyboard/german.c **** 		{
 14647               		.loc 20 115 3 view .LVU3081
 115:../../keyboard/german.c **** 		{
 14648               		.loc 20 115 5 is_stmt 0 view .LVU3082
 14649 318c F7FE      		sbrs r15,7
 14650 318e 00C0      		rjmp .L539
 14651               	.LVL814:
 14652               	.L535:
 117:../../keyboard/german.c **** 		}
 14653               		.loc 20 117 4 is_stmt 1 view .LVU3083
 117:../../keyboard/german.c **** 		}
 14654               		.loc 20 117 24 is_stmt 0 view .LVU3084
 14655 3190 FA01      		movw r30,r20
 14656 3192 EE0F      		lsl r30
 14657 3194 FF1F      		rol r31
 14658 3196 EE0F      		lsl r30
 14659 3198 FF1F      		rol r31
 14660 319a E050      		subi r30,lo8(-(numbers_shift.2))
 14661 319c F040      		sbci r31,hi8(-(numbers_shift.2))
 14662               	.L598:
 121:../../keyboard/german.c **** 		}
 14663               		.loc 20 121 24 view .LVU3085
 14664 319e 8081      		ld r24,Z
 14665 31a0 9181      		ldd r25,Z+1
 14666 31a2 A281      		ldd r26,Z+2
 14667 31a4 B381      		ldd r27,Z+3
 14668 31a6 00C0      		rjmp .L498
 14669               	.LVL815:
 14670               	.L554:
 121:../../keyboard/german.c **** 		}
 14671               		.loc 20 121 24 view .LVU3086
 14672               	.LBE729:
  69:../../keyboard/german.c **** 	else if(k == KEY_NON_US_BACKSLASH)                { return '<'; }
 14673               		.loc 20 69 61 view .LVU3087
 14674 31a8 8CE7      		ldi r24,lo8(124)
 14675 31aa 90E0      		ldi r25,0
 14676 31ac A0E0      		ldi r26,0
 14677 31ae B0E0      		ldi r27,0
 14678 31b0 00C0      		rjmp .L498
 14679               	.L555:
  56:../../keyboard/german.c **** 	else if(k == (KEY_COMMA | MOD_SHIFT))             { return ';'; }
 14680               		.loc 20 56 9 view .LVU3088
 14681 31b2 8BE3      		ldi r24,lo8(59)
 14682 31b4 90E0      		ldi r25,0
 14683 31b6 A0E0      		ldi r26,0
 14684 31b8 B0E0      		ldi r27,0
 14685 31ba 00C0      		rjmp .L498
 14686               	.L556:
  58:../../keyboard/german.c **** 	else if(k == (KEY_PERIOD | MOD_SHIFT))            { return ':'; }
 14687               		.loc 20 58 61 view .LVU3089
 14688 31bc 8CE2      		ldi r24,lo8(44)
 14689 31be 90E0      		ldi r25,0
 14690 31c0 A0E0      		ldi r26,0
 14691 31c2 B0E0      		ldi r27,0
 14692 31c4 00C0      		rjmp .L498
 14693               	.L559:
  70:../../keyboard/german.c **** 	else if(k == (KEY_MINUS | MOD_SHIFT))             { return '?'; }
 14694               		.loc 20 70 61 view .LVU3090
 14695 31c6 8CE3      		ldi r24,lo8(60)
 14696 31c8 90E0      		ldi r25,0
 14697 31ca A0E0      		ldi r26,0
 14698 31cc B0E0      		ldi r27,0
 14699 31ce 00C0      		rjmp .L498
 14700               	.L560:
  68:../../keyboard/german.c **** 	else if(k == (KEY_NON_US_BACKSLASH | MOD_ALT_GR)) { return '|'; }
 14701               		.loc 20 68 61 view .LVU3091
 14702 31d0 8EE3      		ldi r24,lo8(62)
 14703 31d2 90E0      		ldi r25,0
 14704 31d4 A0E0      		ldi r26,0
 14705 31d6 B0E0      		ldi r27,0
 14706 31d8 00C0      		rjmp .L498
 14707               	.LVL816:
 14708               	.L567:
 14709               	.LBB730:
  92:../../keyboard/german.c **** 			else if(c == 'e') { return UNICODE_EURO_SIGN; }
 14710               		.loc 20 92 26 view .LVU3092
 14711 31da 80E4      		ldi r24,lo8(64)
 14712 31dc 90E0      		ldi r25,0
 14713 31de A0E0      		ldi r26,0
 14714 31e0 B0E0      		ldi r27,0
 14715               	.LVL817:
  92:../../keyboard/german.c **** 			else if(c == 'e') { return UNICODE_EURO_SIGN; }
 14716               		.loc 20 92 26 view .LVU3093
 14717 31e2 00C0      		rjmp .L498
 14718               	.LVL818:
 14719               	.L568:
  93:../../keyboard/german.c **** 		}
 14720               		.loc 20 93 31 view .LVU3094
 14721 31e4 8CEA      		ldi r24,lo8(-84)
 14722 31e6 90E2      		ldi r25,lo8(32)
 14723 31e8 A0E0      		ldi r26,0
 14724 31ea B0E0      		ldi r27,0
 14725               	.LVL819:
  93:../../keyboard/german.c **** 		}
 14726               		.loc 20 93 31 view .LVU3095
 14727 31ec 00C0      		rjmp .L498
 14728               	.LVL820:
 14729               	.L414:
  93:../../keyboard/german.c **** 		}
 14730               		.loc 20 93 31 view .LVU3096
 14731               	.LBE730:
 14732               	.LBE732:
 14733               	.LBE742:
 14734               	.LBE810:
 14735               	.LBE811:
 14736               	.LBE812:
 429:ps2/ps2.c     **** 	{
 14737               		.loc 19 429 7 is_stmt 1 view .LVU3097
 429:ps2/ps2.c     **** 	{
 14738               		.loc 19 429 9 is_stmt 0 view .LVU3098
 14739 31ee 8A30      		cpi r24,lo8(10)
 14740 31f0 01F0      		breq .+2
 14741 31f2 00C0      		rjmp .L412
 14742 31f4 80E0      		ldi r24,0
 14743 31f6 00C0      		rjmp .L544
 14744               	.LBE814:
 14745               	.LBE816:
 14746               		.cfi_endproc
 14747               	.LFE105:
 14749               	.global	__vector_14
 14751               	__vector_14:
 14752               	.LFB110:
  40:timer/timer.c **** }
  41:timer/timer.c **** 
  42:timer/timer.c **** /** Timer0 compare interrupt */
  43:timer/timer.c **** ISR(TIMER0_COMPA_vect)
  44:timer/timer.c **** {
 14753               		.loc 7 44 1 is_stmt 1 view -0
 14754               		.cfi_startproc
 14755 31f8 1F92 1FB6 		__gcc_isr 1
 14755      1F92 1124 
 14755      8F93 
 14756 3202 9F93      		push r25
 14757               		.cfi_def_cfa_offset 3
 14758               		.cfi_offset 25, -2
 14759 3204 AF93      		push r26
 14760               		.cfi_def_cfa_offset 4
 14761               		.cfi_offset 26, -3
 14762 3206 BF93      		push r27
 14763               		.cfi_def_cfa_offset 5
 14764               		.cfi_offset 27, -4
 14765               	/* prologue: Signal */
 14766               	/* frame size = 0 */
 14767               	/* stack size = 3...7 */
 14768               	.L__stack_usage = 3 + __gcc_isr.n_pushed
  45:timer/timer.c **** 	/* Increment overflows after approx. 50 days */
  46:timer/timer.c **** 	++_ms;
 14769               		.loc 7 46 2 view .LVU3100
 14770 3208 8091 0000 		lds r24,_ms
 14771 320c 9091 0000 		lds r25,_ms+1
 14772 3210 A091 0000 		lds r26,_ms+2
 14773 3214 B091 0000 		lds r27,_ms+3
 14774 3218 0196      		adiw r24,1
 14775 321a A11D      		adc r26,__zero_reg__
 14776 321c B11D      		adc r27,__zero_reg__
 14777 321e 8093 0000 		sts _ms,r24
 14778 3222 9093 0000 		sts _ms+1,r25
 14779 3226 A093 0000 		sts _ms+2,r26
 14780 322a B093 0000 		sts _ms+3,r27
 14781               	/* epilogue start */
  47:timer/timer.c **** }
 14782               		.loc 7 47 1 is_stmt 0 view .LVU3101
 14783 322e BF91      		pop r27
 14784 3230 AF91      		pop r26
 14785 3232 9F91      		pop r25
 14786 3234 8F91 1F90 		__gcc_isr 2
 14786      1FBE 1F90 
 14787 323c 1895      		reti
 14788               		__gcc_isr 0,r24
 14789               		.cfi_endproc
 14790               	.LFE110:
 14792               		.section	.progmem.data,"a",@progbits
 14795               	_panic:
 14796 0000 5041 4E49 		.string	"PANIC"
 14796      4300 
 14799               	_error:
 14800 0006 4552 524F 		.string	"ERROR"
 14800      5200 
 14803               	_warn:
 14804 000c 5741 524E 		.string	"WARN"
 14804      00
 14807               	_debug:
 14808 0011 4445 4255 		.string	"DEBUG"
 14808      4700 
 14811               	_init:
 14812 0017 494E 4954 		.string	"INIT"
 14812      00
 14813               		.local	_tasks
 14814               		.comm	_tasks,152,1
 14817               	_font5x7:
 14818 001c 00        		.string	""
 14819 001d 00        		.string	""
 14820 001e 00        		.string	""
 14821 001f 00        		.string	""
 14822 0020 00        		.string	""
 14823 0021 00        		.string	""
 14824 0022 00        		.string	""
 14825 0023 5F00      		.string	"_"
 14826 0025 00        		.string	""
 14827 0026 00        		.string	""
 14828 0027 0700      		.string	"\007"
 14829 0029 0700      		.string	"\007"
 14830 002b 147F 147F 		.string	"\024\177\024\177\024$*\177*\022#\023\bdb6IU\"P"
 14830      1424 2A7F 
 14830      2A12 2313 
 14830      0864 6236 
 14830      4955 2250 
 14831 0040 00        		.string	""
 14832 0041 0300      		.string	"\003"
 14833 0043 00        		.string	""
 14834 0044 00        		.string	""
 14835 0045 1C22 4100 		.string	"\034\"A"
 14836 0049 00        		.string	""
 14837 004a 4122 1C00 		.string	"A\"\034"
 14838 004e 1408 3E08 		.string	"\024\b>\b\024\b\b>\b\b"
 14838      1408 083E 
 14838      0808 00
 14839 0059 5030 00   		.string	"P0"
 14840 005c 00        		.string	""
 14841 005d 0808 0808 		.string	"\b\b\b\b\b"
 14841      0800 
 14842 0063 6060 00   		.string	"``"
 14843 0066 00        		.string	""
 14844 0067 2010 0804 		.string	" \020\b\004\002>QIE>"
 14844      023E 5149 
 14844      453E 00
 14845 0072 427F 4000 		.string	"B\177@"
 14846 0076 6251 4949 		.string	"bQIIF\"AII6\030\024\022\177\020'EEE9<JII0\001q\t\005\0036III6\006II)\036"
 14846      4622 4149 
 14846      4936 1814 
 14846      127F 1027 
 14846      4545 4539 
 14847 009f 3636 00   		.string	"66"
 14848 00a2 00        		.string	""
 14849 00a3 00        		.string	""
 14850 00a4 5636 00   		.string	"V6"
 14851 00a7 00        		.string	""
 14852 00a8 0814 2241 		.string	"\b\024\"A"
 14852      00
 14853 00ad 1414 1414 		.string	"\024\024\024\024\024"
 14853      1400 
 14854 00b3 4122 1408 		.string	"A\"\024\b\002\001Q\t\0062IyA>|\022\021\022|A\177II6>AAA\"A\177AA>\177IIIA\177\t\t\t\001>A
 14854      0201 5109 
 14854      0632 4979 
 14854      413E 7C12 
 14854      1112 7C41 
 14855 00ea 417F 4100 		.string	"A\177A"
 14856 00ee 2040 413F 		.string	" @A?\001\177\b\024\"A\177@@@@\177\002\f\002\177\177\004\b\020\177>AAA>\177\t\t\t\006>AQ!^
 14856      017F 0814 
 14856      2241 7F40 
 14856      4040 407F 
 14856      020C 027F 
 14857 0144 7F41 4100 		.string	"\177AA"
 14858 0148 0204 0810 		.string	"\002\004\b\020 "
 14858      2000 
 14859 014e 4141 7F00 		.string	"AA\177"
 14860 0152 0402 0102 		.string	"\004\002\001\002\004@@@@@"
 14860      0440 4040 
 14860      4040 00
 14861 015d 0102 0400 		.string	"\001\002\004"
 14862 0161 2054 5454 		.string	" TTTx\177HDD88DDD 8DDH\1778TTT\030\b~\t\001\002\bTTT<\177\b\004\004x"
 14862      787F 4844 
 14862      4438 3844 
 14862      4444 2038 
 14862      4444 487F 
 14863 018a 487D 4000 		.string	"H}@"
 14864 018e 2040 443D 		.string	" @D="
 14864      00
 14865 0193 7F10 2844 		.string	"\177\020(D"
 14865      00
 14866 0198 00        		.string	""
 14867 0199 417F 4000 		.string	"A\177@"
 14868 019d 7C04 7804 		.string	"|\004x\004x|\b\004\004x8DDD8|\024\024\024\b\b\024\024\030||\b\004\004\bHTTT \004?D@ <@@ |
 14868      787C 0804 
 14868      0478 3844 
 14868      4444 387C 
 14868      1414 1408 
 14869 01e4 0836 4100 		.string	"\b6A"
 14870 01e8 00        		.string	""
 14871 01e9 00        		.string	""
 14872 01ea 7F00      		.string	"\177"
 14873 01ec 00        		.string	""
 14874 01ed 00        		.string	""
 14875 01ee 4136 0800 		.string	"A6\b"
 14876 01f2 1008 0810 		.ascii	"\020\b\b\020\b"
 14876      08
 14877               		.section	.rodata
 14880               	syscalls:
 14881 0000 0000      		.word	gs(syscall_exit)
 14882 0002 0000      		.word	gs(syscall_finish)
 14883 0004 0000      		.word	gs(syscall_event_register)
 14884 0006 0000      		.word	gs(syscall_gfx_rect)
 14885 0008 0000      		.word	gs(syscall_gfx_image_rgb565)
 14886 000a 0000      		.word	gs(syscall_gfx_image_grayscale)
 14887 000c 0000      		.word	gs(syscall_gfx_image_1bit)
 14888 000e 0000      		.word	gs(syscall_rand)
 14889 0010 0000      		.word	gs(syscall_serial_write)
 14890 0012 0000      		.word	gs(syscall_millis)
 14891               		.section	.progmem.data,"a",@progbits
 14894               	__c.0.lto_priv.9:
 14895 01f7 4C6F 6164 		.string	"Loading INIT failed"
 14895      696E 6720 
 14895      494E 4954 
 14895      2066 6169 
 14895      6C65 6400 
 14898               	__c.1.lto_priv.5:
 14899 020b 494E 4954 		.string	"INIT Sectors: %u"
 14899      2053 6563 
 14899      746F 7273 
 14899      3A20 2575 
 14899      00
 14902               	__c.2.lto_priv.4:
 14903 021c 494E 4954 		.string	"INIT Size: %lu"
 14903      2053 697A 
 14903      653A 2025 
 14903      6C75 00
 14906               	__c.3.lto_priv.2:
 14907 022b 494E 4954 		.string	"INIT Start: %lu"
 14907      2053 7461 
 14907      7274 3A20 
 14907      256C 7500 
 14910               	__c.4.lto_priv.2:
 14911 023b 556E 7375 		.string	"Unsupported ATFS revision"
 14911      7070 6F72 
 14911      7465 6420 
 14911      4154 4653 
 14911      2072 6576 
 14914               	__c.5.lto_priv.2:
 14915 0255 5772 6F6E 		.string	"Wrong FS signature"
 14915      6720 4653 
 14915      2073 6967 
 14915      6E61 7475 
 14915      7265 00
 14916               		.section	.rodata
 14919               	_atfs_signature:
 14920 0014 4154 4653 		.ascii	"ATFS"
 14921               		.section	.progmem.data,"a",@progbits
 14924               	__c.6.lto_priv.2:
 14925 0268 4C6F 6164 		.string	"Loading INIT Binary"
 14925      696E 6720 
 14925      494E 4954 
 14925      2042 696E 
 14925      6172 7900 
 14928               	__c.20:
 14929 027c 5344 2065 		.string	"SD error"
 14929      7272 6F72 
 14929      00
 14932               	__c.19:
 14933 0285 5344 2074 		.string	"SD timeout"
 14933      696D 656F 
 14933      7574 00
 14936               	__c.0.lto_priv.5:
 14937 0290 0A3E 3E3E 		.string	"\n>>> RESET REQUIRED\n"
 14937      2052 4553 
 14937      4554 2052 
 14937      4551 5549 
 14937      5245 440A 
 14938               		.data
 14941               	_log_y:
 14942 0000 7800      		.word	120
 14943               		.section	.progmem.data,"a",@progbits
 14946               	_log_color:
 14947 02a5 FF07      		.word	2047
 14948 02a7 E007      		.word	2016
 14949 02a9 E0FF      		.word	-32
 14950 02ab 00F8      		.word	-2048
 14951 02ad 1FF8      		.word	-2017
 14954               	_log_msg:
 14955 02af 0000      		.word	_init
 14956 02b1 0000      		.word	_debug
 14957 02b3 0000      		.word	_warn
 14958 02b5 0000      		.word	_error
 14959 02b7 0000      		.word	_panic
 14962               	__c.0.lto_priv.4:
 14963 02b9 5350 4920 		.string	"SPI timeout"
 14963      7469 6D65 
 14963      6F75 7400 
 14964               		.local	_ms
 14965               		.comm	_ms,4,1
 14966               		.section	.rodata
 14969               	numbers_altgr.1:
 14970 0018 00        		.byte	0
 14971 0019 00        		.byte	0
 14972 001a 00        		.byte	0
 14973 001b 00        		.byte	0
 14974 001c B2        		.byte	-78
 14975 001d 00        		.byte	0
 14976 001e 00        		.byte	0
 14977 001f 00        		.byte	0
 14978 0020 B3        		.byte	-77
 14979 0021 00        		.byte	0
 14980 0022 00        		.byte	0
 14981 0023 00        		.byte	0
 14982 0024 00        		.byte	0
 14983 0025 00        		.byte	0
 14984 0026 00        		.byte	0
 14985 0027 00        		.byte	0
 14986 0028 00        		.byte	0
 14987 0029 00        		.byte	0
 14988 002a 00        		.byte	0
 14989 002b 00        		.byte	0
 14990 002c 00        		.byte	0
 14991 002d 00        		.byte	0
 14992 002e 00        		.byte	0
 14993 002f 00        		.byte	0
 14994 0030 7B        		.byte	123
 14995 0031 00        		.byte	0
 14996 0032 00        		.byte	0
 14997 0033 00        		.byte	0
 14998 0034 5B        		.byte	91
 14999 0035 00        		.byte	0
 15000 0036 00        		.byte	0
 15001 0037 00        		.byte	0
 15002 0038 5D        		.byte	93
 15003 0039 00        		.byte	0
 15004 003a 00        		.byte	0
 15005 003b 00        		.byte	0
 15006 003c 7D        		.byte	125
 15007 003d 00        		.byte	0
 15008 003e 00        		.byte	0
 15009 003f 00        		.byte	0
 15012               	numbers_shift.2:
 15013 0040 21        		.byte	33
 15014 0041 00        		.byte	0
 15015 0042 00        		.byte	0
 15016 0043 00        		.byte	0
 15017 0044 22        		.byte	34
 15018 0045 00        		.byte	0
 15019 0046 00        		.byte	0
 15020 0047 00        		.byte	0
 15021 0048 A7        		.byte	-89
 15022 0049 00        		.byte	0
 15023 004a 00        		.byte	0
 15024 004b 00        		.byte	0
 15025 004c 24        		.byte	36
 15026 004d 00        		.byte	0
 15027 004e 00        		.byte	0
 15028 004f 00        		.byte	0
 15029 0050 25        		.byte	37
 15030 0051 00        		.byte	0
 15031 0052 00        		.byte	0
 15032 0053 00        		.byte	0
 15033 0054 26        		.byte	38
 15034 0055 00        		.byte	0
 15035 0056 00        		.byte	0
 15036 0057 00        		.byte	0
 15037 0058 2F        		.byte	47
 15038 0059 00        		.byte	0
 15039 005a 00        		.byte	0
 15040 005b 00        		.byte	0
 15041 005c 28        		.byte	40
 15042 005d 00        		.byte	0
 15043 005e 00        		.byte	0
 15044 005f 00        		.byte	0
 15045 0060 29        		.byte	41
 15046 0061 00        		.byte	0
 15047 0062 00        		.byte	0
 15048 0063 00        		.byte	0
 15049 0064 3D        		.byte	61
 15050 0065 00        		.byte	0
 15051 0066 00        		.byte	0
 15052 0067 00        		.byte	0
 15053               		.local	mods.0
 15054               		.comm	mods.0,4,1
 15057               	CSWTCH.21:
 15058 0068 E6        		.byte	-26
 15059 0069 00        		.byte	0
 15060 006a 00        		.byte	0
 15061 006b E4        		.byte	-28
 15062 006c 00        		.byte	0
 15063 006d 00        		.byte	0
 15064 006e 00        		.byte	0
 15065 006f 00        		.byte	0
 15066 0070 00        		.byte	0
 15067 0071 00        		.byte	0
 15068 0072 00        		.byte	0
 15069 0073 00        		.byte	0
 15070 0074 00        		.byte	0
 15071 0075 00        		.byte	0
 15072 0076 E3        		.byte	-29
 15073 0077 00        		.byte	0
 15074 0078 00        		.byte	0
 15075 0079 00        		.byte	0
 15076 007a 00        		.byte	0
 15077 007b 00        		.byte	0
 15078 007c 00        		.byte	0
 15079 007d 00        		.byte	0
 15080 007e E7        		.byte	-25
 15081 007f 00        		.byte	0
 15082 0080 00        		.byte	0
 15083 0081 00        		.byte	0
 15084 0082 00        		.byte	0
 15085 0083 00        		.byte	0
 15086 0084 00        		.byte	0
 15087 0085 00        		.byte	0
 15088 0086 00        		.byte	0
 15089 0087 00        		.byte	0
 15090 0088 00        		.byte	0
 15091 0089 00        		.byte	0
 15092 008a 00        		.byte	0
 15093 008b 00        		.byte	0
 15094 008c 00        		.byte	0
 15095 008d 00        		.byte	0
 15096 008e 00        		.byte	0
 15097 008f 00        		.byte	0
 15098 0090 00        		.byte	0
 15099 0091 00        		.byte	0
 15100 0092 00        		.byte	0
 15101 0093 00        		.byte	0
 15102 0094 00        		.byte	0
 15103 0095 00        		.byte	0
 15104 0096 00        		.byte	0
 15105 0097 00        		.byte	0
 15106 0098 00        		.byte	0
 15107 0099 00        		.byte	0
 15108 009a 00        		.byte	0
 15109 009b 00        		.byte	0
 15110 009c 00        		.byte	0
 15111 009d 00        		.byte	0
 15112 009e 00        		.byte	0
 15113 009f 00        		.byte	0
 15114 00a0 00        		.byte	0
 15115 00a1 54        		.byte	84
 15116 00a2 00        		.byte	0
 15117 00a3 00        		.byte	0
 15118 00a4 00        		.byte	0
 15119 00a5 00        		.byte	0
 15120 00a6 00        		.byte	0
 15121 00a7 00        		.byte	0
 15122 00a8 00        		.byte	0
 15123 00a9 00        		.byte	0
 15124 00aa 00        		.byte	0
 15125 00ab 00        		.byte	0
 15126 00ac 00        		.byte	0
 15127 00ad 00        		.byte	0
 15128 00ae 00        		.byte	0
 15129 00af 00        		.byte	0
 15130 00b0 00        		.byte	0
 15131 00b1 58        		.byte	88
 15132 00b2 00        		.byte	0
 15133 00b3 00        		.byte	0
 15134 00b4 00        		.byte	0
 15135 00b5 00        		.byte	0
 15136 00b6 00        		.byte	0
 15137 00b7 00        		.byte	0
 15138 00b8 00        		.byte	0
 15139 00b9 00        		.byte	0
 15140 00ba 00        		.byte	0
 15141 00bb 00        		.byte	0
 15142 00bc 00        		.byte	0
 15143 00bd 00        		.byte	0
 15144 00be 00        		.byte	0
 15145 00bf 00        		.byte	0
 15146 00c0 4D        		.byte	77
 15147 00c1 00        		.byte	0
 15148 00c2 50        		.byte	80
 15149 00c3 4A        		.byte	74
 15150 00c4 00        		.byte	0
 15151 00c5 00        		.byte	0
 15152 00c6 00        		.byte	0
 15153 00c7 49        		.byte	73
 15154 00c8 4C        		.byte	76
 15155 00c9 51        		.byte	81
 15156 00ca 00        		.byte	0
 15157 00cb 4F        		.byte	79
 15158 00cc 52        		.byte	82
 15159 00cd 00        		.byte	0
 15160 00ce 00        		.byte	0
 15161 00cf 00        		.byte	0
 15162 00d0 00        		.byte	0
 15163 00d1 4E        		.byte	78
 15164 00d2 00        		.byte	0
 15165 00d3 00        		.byte	0
 15166 00d4 4B        		.byte	75
 15167               		.local	state.1
 15168               		.comm	state.1,1,1
 15169               		.local	_byte
 15170               		.comm	_byte,1,1
 15171               		.local	_bit
 15172               		.comm	_bit,1,1
 15173               		.section	.progmem.data,"a",@progbits
 15176               	_gamma:
 15177 02c5 00        		.string	""
 15178 02c6 151C 2227 		.ascii	"\025\034\"'+.258;=@BDFHJLNPRTUWYZ\\]_`bcefgijkmnoprstuvwxz{|"
 15178      2B2E 3235 
 15178      383B 3D40 
 15178      4244 4648 
 15178      4A4C 4E50 
 15179 02fa 7D7E 7F80 		.ascii	"}~\177\200\201\202\203\204\205\206\207\210\211\212\213\214\215"
 15179      8182 8384 
 15179      8586 8788 
 15179      898A 8B8C 
 15179      8D
 15180 030b 8E8F 9090 		.ascii	"\216\217\220\220\221\222\223\224\225\226\227\227\230\231\232"
 15180      9192 9394 
 15180      9596 9797 
 15180      9899 9A
 15181 031a 9B9C 9C9D 		.ascii	"\233\234\234\235\236\237\240\240\241\242\243\244\244\245\246"
 15181      9E9F A0A0 
 15181      A1A2 A3A4 
 15181      A4A5 A6
 15182 0329 A7A7 A8A9 		.ascii	"\247\247\250\251\252\252\253\254\255\255\256\257\257\260\261"
 15182      AAAA ABAC 
 15182      ADAD AEAF 
 15182      AFB0 B1
 15183 0338 B2B2 B3B4 		.ascii	"\262\262\263\264\264\265\266\266\267\270\270\271\272\272\273"
 15183      B4B5 B6B6 
 15183      B7B8 B8B9 
 15183      BABA BB
 15184 0347 BCBC BDBE 		.ascii	"\274\274\275\276\276\277\300\300\301\302\302\303\303\304\305"
 15184      BEBF C0C0 
 15184      C1C2 C2C3 
 15184      C3C4 C5
 15185 0356 C5C6 C7C7 		.ascii	"\305\306\307\307\310\310\311\312\312\313\313\314\315\315\316"
 15185      C8C8 C9CA 
 15185      CACB CBCC 
 15185      CDCD CE
 15186 0365 CECF CFD0 		.ascii	"\316\317\317\320\321\321\322\322\323\324\324\325\325\326\326"
 15186      D1D1 D2D2 
 15186      D3D4 D4D5 
 15186      D5D6 D6
 15187 0374 D7D7 D8D9 		.ascii	"\327\327\330\331\331\332\332\333\333\334\334\335\335\336\337"
 15187      D9DA DADB 
 15187      DBDC DCDD 
 15187      DDDE DF
 15188 0383 DFE0 E0E1 		.ascii	"\337\340\340\341\341\342\342\343\343\344\344\345\345\346\346"
 15188      E1E2 E2E3 
 15188      E3E4 E4E5 
 15188      E5E6 E6
 15189 0392 E7E7 E8E8 		.ascii	"\347\347\350\350\351\351\352\352\353\353\354\354\355\355\356"
 15189      E9E9 EAEA 
 15189      EBEB ECEC 
 15189      EDED EE
 15190 03a1 EEEF EFF0 		.ascii	"\356\357\357\360\360\361\361\362\362\363\363\364\364\365\365"
 15190      F0F1 F1F2 
 15190      F2F3 F3F4 
 15190      F4F5 F5
 15191 03b0 F6F6 F7F7 		.ascii	"\366\366\367\367\370\370\371\371\371\372\372\373\373\374\374"
 15191      F8F8 F9F9 
 15191      F9FA FAFB 
 15191      FBFC FC
 15192 03bf FDFD FEFE 		.ascii	"\375\375\376\376\377\377"
 15192      FFFF 
 15195               	__c.0.lto_priv.3:
 15196 03c5 4D69 6C6C 		.string	"Millisecond timer initialized"
 15196      6973 6563 
 15196      6F6E 6420 
 15196      7469 6D65 
 15196      7220 696E 
 15199               	__c.1.lto_priv.1:
 15200 03e3 5350 4920 		.string	"SPI initialized"
 15200      696E 6974 
 15200      6961 6C69 
 15200      7A65 6400 
 15203               	__c.0.lto_priv.7:
 15204 03f3 4C43 4420 		.string	"LCD driver initialized"
 15204      6472 6976 
 15204      6572 2069 
 15204      6E69 7469 
 15204      616C 697A 
 15207               	__c.1.lto_priv.3:
 15208 040a 4C43 4420 		.string	"LCD driver starting"
 15208      6472 6976 
 15208      6572 2073 
 15208      7461 7274 
 15208      696E 6700 
 15211               	logo_text:
 15212 041e 00        		.string	""
 15213 041f 00        		.string	""
 15214 0420 DFFF FFBC 		.string	"\337\377\377\274"
 15214      00
 15215 0425 00        		.string	""
 15216 0426 00        		.string	""
 15217 0427 00        		.string	""
 15218 0428 00        		.string	""
 15219 0429 00        		.string	""
 15220 042a 00        		.string	""
 15221 042b 00        		.string	""
 15222 042c 00        		.string	""
 15223 042d 00        		.string	""
 15224 042e 00        		.string	""
 15225 042f 00        		.string	""
 15226 0430 00        		.string	""
 15227 0431 00        		.string	""
 15228 0432 00        		.string	""
 15229 0433 00        		.string	""
 15230 0434 00        		.string	""
 15231 0435 00        		.string	""
 15232 0436 00        		.string	""
 15233 0437 00        		.string	""
 15234 0438 00        		.string	""
 15235 0439 00        		.string	""
 15236 043a 00        		.string	""
 15237 043b 00        		.string	""
 15238 043c 00        		.string	""
 15239 043d 00        		.string	""
 15240 043e 00        		.string	""
 15241 043f 00        		.string	""
 15242 0440 00        		.string	""
 15243 0441 00        		.string	""
 15244 0442 00        		.string	""
 15245 0443 00        		.string	""
 15246 0444 00        		.string	""
 15247 0445 00        		.string	""
 15248 0446 00        		.string	""
 15249 0447 00        		.string	""
 15250 0448 00        		.string	""
 15251 0449 00        		.string	""
 15252 044a 00        		.string	""
 15253 044b C5F9 9C00 		.string	"\305\371\234"
 15254 044f 00        		.string	""
 15255 0450 00        		.string	""
 15256 0451 00        		.string	""
 15257 0452 00        		.string	""
 15258 0453 00        		.string	""
 15259 0454 00        		.string	""
 15260 0455 00        		.string	""
 15261 0456 00        		.string	""
 15262 0457 00        		.string	""
 15263 0458 00        		.string	""
 15264 0459 00        		.string	""
 15265 045a 00        		.string	""
 15266 045b 00        		.string	""
 15267 045c 00        		.string	""
 15268 045d 00        		.string	""
 15269 045e 00        		.string	""
 15270 045f 00        		.string	""
 15271 0460 00        		.string	""
 15272 0461 00        		.string	""
 15273 0462 00        		.string	""
 15274 0463 00        		.string	""
 15275 0464 00        		.string	""
 15276 0465 00        		.string	""
 15277 0466 00        		.string	""
 15278 0467 00        		.string	""
 15279 0468 00        		.string	""
 15280 0469 00        		.string	""
 15281 046a 00        		.string	""
 15282 046b 00        		.string	""
 15283 046c 00        		.string	""
 15284 046d 00        		.string	""
 15285 046e 00        		.string	""
 15286 046f 00        		.string	""
 15287 0470 00        		.string	""
 15288 0471 00        		.string	""
 15289 0472 00        		.string	""
 15290 0473 00        		.string	""
 15291 0474 00        		.string	""
 15292 0475 00        		.string	""
 15293 0476 00        		.string	""
 15294 0477 00        		.string	""
 15295 0478 00        		.string	""
 15296 0479 00        		.string	""
 15297 047a 00        		.string	""
 15298 047b 00        		.string	""
 15299 047c 00        		.string	""
 15300 047d 00        		.string	""
 15301 047e 00        		.string	""
 15302 047f 00        		.string	""
 15303 0480 00        		.string	""
 15304 0481 00        		.string	""
 15305 0482 00        		.string	""
 15306 0483 00        		.string	""
 15307 0484 B0FF FFE5 		.string	"\260\377\377\345"
 15307      00
 15308 0489 0DF8 F8DC 		.string	"\r\370\370\334\210"
 15308      8800 
 15309 048f 00        		.string	""
 15310 0490 00        		.string	""
 15311 0491 00        		.string	""
 15312 0492 AAFF FFFF 		.string	"\252\377\377\377\3745"
 15312      FC35 00
 15313 0499 00        		.string	""
 15314 049a 00        		.string	""
 15315 049b 00        		.string	""
 15316 049c 00        		.string	""
 15317 049d 00        		.string	""
 15318 049e 00        		.string	""
 15319 049f 00        		.string	""
 15320 04a0 00        		.string	""
 15321 04a1 00        		.string	""
 15322 04a2 00        		.string	""
 15323 04a3 00        		.string	""
 15324 04a4 00        		.string	""
 15325 04a5 00        		.string	""
 15326 04a6 00        		.string	""
 15327 04a7 00        		.string	""
 15328 04a8 00        		.string	""
 15329 04a9 00        		.string	""
 15330 04aa 00        		.string	""
 15331 04ab 00        		.string	""
 15332 04ac 00        		.string	""
 15333 04ad 00        		.string	""
 15334 04ae 00        		.string	""
 15335 04af 00        		.string	""
 15336 04b0 00        		.string	""
 15337 04b1 00        		.string	""
 15338 04b2 00        		.string	""
 15339 04b3 00        		.string	""
 15340 04b4 00        		.string	""
 15341 04b5 ADD5 6700 		.string	"\255\325g"
 15342 04b9 00        		.string	""
 15343 04ba 00        		.string	""
 15344 04bb 00        		.string	""
 15345 04bc 00        		.string	""
 15346 04bd 00        		.string	""
 15347 04be 00        		.string	""
 15348 04bf 00        		.string	""
 15349 04c0 00        		.string	""
 15350 04c1 00        		.string	""
 15351 04c2 00        		.string	""
 15352 04c3 00        		.string	""
 15353 04c4 00        		.string	""
 15354 04c5 00        		.string	""
 15355 04c6 00        		.string	""
 15356 04c7 00        		.string	""
 15357 04c8 00        		.string	""
 15358 04c9 00        		.string	""
 15359 04ca 00        		.string	""
 15360 04cb 00        		.string	""
 15361 04cc 00        		.string	""
 15362 04cd 00        		.string	""
 15363 04ce 00        		.string	""
 15364 04cf 00        		.string	""
 15365 04d0 00        		.string	""
 15366 04d1 00        		.string	""
 15367 04d2 00        		.string	""
 15368 04d3 00        		.string	""
 15369 04d4 00        		.string	""
 15370 04d5 00        		.string	""
 15371 04d6 00        		.string	""
 15372 04d7 00        		.string	""
 15373 04d8 00        		.string	""
 15374 04d9 00        		.string	""
 15375 04da 00        		.string	""
 15376 04db 89DB F6F7 		.string	"\211\333\366\367\342\207"
 15376      E287 00
 15377 04e2 00        		.string	""
 15378 04e3 00        		.string	""
 15379 04e4 86E1 FAF5 		.string	"\206\341\372\365\337\206"
 15379      DF86 00
 15380 04eb 00        		.string	""
 15381 04ec 00        		.string	""
 15382 04ed 00        		.string	""
 15383 04ee ADE4 FFC9 		.string	"\255\344\377\311"
 15383      00
 15384 04f3 6AFF D200 		.string	"j\377\322"
 15385 04f7 00        		.string	""
 15386 04f8 00        		.string	""
 15387 04f9 00        		.string	""
 15388 04fa 00        		.string	""
 15389 04fb 00        		.string	""
 15390 04fc 7EED FFEE 		.string	"~\355\377\356\237"
 15390      9F00 
 15391 0502 00        		.string	""
 15392 0503 00        		.string	""
 15393 0504 00        		.string	""
 15394 0505 00        		.string	""
 15395 0506 00        		.string	""
 15396 0507 00        		.string	""
 15397 0508 00        		.string	""
 15398 0509 00        		.string	""
 15399 050a 00        		.string	""
 15400 050b 00        		.string	""
 15401 050c 00        		.string	""
 15402 050d 00        		.string	""
 15403 050e 00        		.string	""
 15404 050f 00        		.string	""
 15405 0510 00        		.string	""
 15406 0511 00        		.string	""
 15407 0512 00        		.string	""
 15408 0513 00        		.string	""
 15409 0514 00        		.string	""
 15410 0515 00        		.string	""
 15411 0516 00        		.string	""
 15412 0517 00        		.string	""
 15413 0518 00        		.string	""
 15414 0519 00        		.string	""
 15415 051a 00        		.string	""
 15416 051b 00        		.string	""
 15417 051c 00        		.string	""
 15418 051d 00        		.string	""
 15419 051e 00        		.string	""
 15420 051f 00        		.string	""
 15421 0520 00        		.string	""
 15422 0521 00        		.string	""
 15423 0522 00        		.string	""
 15424 0523 00        		.string	""
 15425 0524 00        		.string	""
 15426 0525 00        		.string	""
 15427 0526 00        		.string	""
 15428 0527 00        		.string	""
 15429 0528 00        		.string	""
 15430 0529 00        		.string	""
 15431 052a 00        		.string	""
 15432 052b 00        		.string	""
 15433 052c 00        		.string	""
 15434 052d 00        		.string	""
 15435 052e 00        		.string	""
 15436 052f 00        		.string	""
 15437 0530 00        		.string	""
 15438 0531 00        		.string	""
 15439 0532 00        		.string	""
 15440 0533 00        		.string	""
 15441 0534 00        		.string	""
 15442 0535 00        		.string	""
 15443 0536 00        		.string	""
 15444 0537 1C00      		.string	"\034"
 15445 0539 00        		.string	""
 15446 053a 00        		.string	""
 15447 053b 00        		.string	""
 15448 053c 00        		.string	""
 15449 053d 00        		.string	""
 15450 053e 00        		.string	""
 15451 053f 00        		.string	""
 15452 0540 00        		.string	""
 15453 0541 00        		.string	""
 15454 0542 00        		.string	""
 15455 0543 00        		.string	""
 15456 0544 ADFE FFE7 		.string	"\255\376\377\347\354\377\374t"
 15456      ECFF FC74 
 15456      00
 15457 054d 70FB FFE7 		.string	"p\373\377\347\350\375y"
 15457      E8FD 7900 
 15458 0555 00        		.string	""
 15459 0556 00        		.string	""
 15460 0557 00        		.string	""
 15461 0558 00        		.string	""
 15462 0559 A0FF A700 		.string	"\240\377\247"
 15463 055d 9EFF B000 		.string	"\236\377\260"
 15464 0561 00        		.string	""
 15465 0562 00        		.string	""
 15466 0563 00        		.string	""
 15467 0564 00        		.string	""
 15468 0565 00        		.string	""
 15469 0566 00        		.string	""
 15470 0567 D5FF AD00 		.string	"\325\377\255"
 15471 056b 84FF AAC7 		.string	"\204\377\252\307\371\351]\247\363\364\226"
 15471      F9E9 5DA7 
 15471      F3F4 9600 
 15472 0577 00        		.string	""
 15473 0578 00        		.string	""
 15474 0579 A1F0 F8B2 		.string	"\241\360\370\262\325\372\034"
 15474      D5FA 1C00 
 15475 0581 A2F1 F8AD 		.string	"\242\361\370\255\325\371\034\204\377\353"
 15475      D5F9 1C84 
 15475      FFEB 00
 15476 058c 84FF AAC7 		.string	"\204\377\252\307\371\353n"
 15476      F9EB 6E00 
 15477 0594 00        		.string	""
 15478 0595 A1F0 F8B2 		.string	"\241\360\370\262\325\372\034\204\377\260\321\372\274\377\343"
 15478      D5FA 1C84 
 15478      FFB0 D1FA 
 15478      BCFF E300 
 15479 05a5 00        		.string	""
 15480 05a6 BAFF DE00 		.string	"\272\377\336"
 15481 05aa 00        		.string	""
 15482 05ab 00        		.string	""
 15483 05ac 00        		.string	""
 15484 05ad 75FD FD9A 		.string	"u\375\375\232"
 15484      00
 15485 05b2 0DD7 FFCB 		.string	"\r\327\377\313"
 15485      00
 15486 05b7 BCFF D700 		.string	"\274\377\327"
 15487 05bb 00        		.string	""
 15488 05bc 5100      		.string	"Q"
 15489 05be 00        		.string	""
 15490 05bf 00        		.string	""
 15491 05c0 00        		.string	""
 15492 05c1 00        		.string	""
 15493 05c2 00        		.string	""
 15494 05c3 C5FF 7600 		.string	"\305\377v"
 15495 05c7 C2FF 8300 		.string	"\302\377\203"
 15496 05cb 00        		.string	""
 15497 05cc 00        		.string	""
 15498 05cd 00        		.string	""
 15499 05ce 00        		.string	""
 15500 05cf 00        		.string	""
 15501 05d0 00        		.string	""
 15502 05d1 F0FF 7D00 		.string	"\360\377}"
 15503 05d5 B0FF ECEE 		.string	"\260\377\354\356\366\377\344\366\356\377\353"
 15503      F6FF E4F6 
 15503      EEFF EB00 
 15504 05e1 00        		.string	""
 15505 05e2 90FE FDE3 		.string	"\220\376\375\343\374\374\343"
 15505      FCFC E300 
 15506 05ea 90FE FDE3 		.string	"\220\376\375\343\375\374\341"
 15506      FDFC E100 
 15507 05f2 B0FF CF00 		.string	"\260\377\317"
 15508 05f6 B0FF ECEE 		.string	"\260\377\354\356\365\377\315"
 15508      F5FF CD00 
 15509 05fe 90FE FDE3 		.string	"\220\376\375\343\374\374\343"
 15509      FCFC E300 
 15510 0606 B0FF F6F5 		.string	"\260\377\366\365\342f\377\360"
 15510      E266 FFF0 
 15510      00
 15511 060f 3DF6 FE7C 		.string	"=\366\376|"
 15511      00
 15512 0614 00        		.string	""
 15513 0615 00        		.string	""
 15514 0616 00        		.string	""
 15515 0617 D2FF D000 		.string	"\322\377\320"
 15516 061b 00        		.string	""
 15517 061c 00        		.string	""
 15518 061d A5FF DF00 		.string	"\245\377\337"
 15519 0621 B2FF E942 		.string	"\262\377\351B"
 15519      00
 15520 0626 00        		.string	""
 15521 0627 00        		.string	""
 15522 0628 00        		.string	""
 15523 0629 00        		.string	""
 15524 062a 00        		.string	""
 15525 062b 00        		.string	""
 15526 062c 00        		.string	""
 15527 062d E2FA 2200 		.string	"\342\372\""
 15528 0631 E0FC 3500 		.string	"\340\3745"
 15529 0635 00        		.string	""
 15530 0636 00        		.string	""
 15531 0637 00        		.string	""
 15532 0638 00        		.string	""
 15533 0639 00        		.string	""
 15534 063a 51FF FB2A 		.string	"Q\377\373*"
 15534      00
 15535 063f D0FF E72A 		.string	"\320\377\347*\264\377\373mp\377\364"
 15535      B4FF FB6D 
 15535      70FF F400 
 15536 064b 00        		.string	""
 15537 064c E4FF B200 		.string	"\344\377\262"
 15538 0650 D3FF C600 		.string	"\323\377\306"
 15539 0654 E4FF B200 		.string	"\344\377\262"
 15540 0658 D5FF C100 		.string	"\325\377\301"
 15541 065c D0FF AE00 		.string	"\320\377\256"
 15542 0660 D0FF E72A 		.string	"\320\377\347*\247\377\331"
 15542      A7FF D900 
 15543 0668 E4FF B200 		.string	"\344\377\262"
 15544 066c D3FF C600 		.string	"\323\377\306"
 15545 0670 D0FF E845 		.string	"\320\377\350E"
 15545      00
 15546 0675 00        		.string	""
 15547 0676 F7FC 0DB4 		.string	"\367\374\r\264\377\325"
 15547      FFD5 00
 15548 067d 00        		.string	""
 15549 067e 00        		.string	""
 15550 067f 00        		.string	""
 15551 0680 0DF7 FF85 		.string	"\r\367\377\205"
 15551      00
 15552 0685 00        		.string	""
 15553 0686 00        		.string	""
 15554 0687 AAFF DC00 		.string	"\252\377\334"
 15555 068b 58F5 FFEE 		.string	"X\365\377\356v"
 15555      7600 
 15556 0691 00        		.string	""
 15557 0692 00        		.string	""
 15558 0693 00        		.string	""
 15559 0694 00        		.string	""
 15560 0695 00        		.string	""
 15561 0696 1CFA E500 		.string	"\034\372\345"
 15562 069a 0DF8 E800 		.string	"\r\370\350"
 15563 069e 00        		.string	""
 15564 069f 00        		.string	""
 15565 06a0 00        		.string	""
 15566 06a1 00        		.string	""
 15567 06a2 00        		.string	""
 15568 06a3 00        		.string	""
 15569 06a4 94FF E500 		.string	"\224\377\345"
 15570 06a8 00        		.string	""
 15571 06a9 ECFF 9F00 		.string	"\354\377\237"
 15572 06ad C1FF D000 		.string	"\301\377\320"
 15573 06b1 8AFF E500 		.string	"\212\377\345"
 15574 06b5 6AFF F832 		.string	"j\377\3702"
 15574      00
 15575 06ba CBFF A26A 		.string	"\313\377\242j\377\3702"
 15575      FFF8 3200 
 15576 06c2 CDFF 9B00 		.string	"\315\377\233"
 15577 06c6 ECFF 8200 		.string	"\354\377\202"
 15578 06ca ECFF 9F00 		.string	"\354\377\237"
 15579 06ce B4FF C96A 		.string	"\264\377\311j\377\3702"
 15579      FFF8 3200 
 15580 06d6 CBFF A200 		.string	"\313\377\242"
 15581 06da ECFF 9200 		.string	"\354\377\222"
 15582 06de 00        		.string	""
 15583 06df 00        		.string	""
 15584 06e0 E5FF 5EF3 		.string	"\345\377^\363\374k"
 15584      FC6B 00
 15585 06e7 00        		.string	""
 15586 06e8 00        		.string	""
 15587 06e9 00        		.string	""
 15588 06ea 58FF FF49 		.string	"X\377\377I"
 15588      00
 15589 06ef 00        		.string	""
 15590 06f0 00        		.string	""
 15591 06f1 C8FF C500 		.string	"\310\377\305"
 15592 06f5 00        		.string	""
 15593 06f6 70EE FFF5 		.string	"p\356\377\365Q"
 15593      5100 
 15594 06fc 00        		.string	""
 15595 06fd 00        		.string	""
 15596 06fe 00        		.string	""
 15597 06ff 00        		.string	""
 15598 0700 75FF C800 		.string	"u\377\310"
 15599 0704 6BFF CB00 		.string	"k\377\313"
 15600 0708 00        		.string	""
 15601 0709 00        		.string	""
 15602 070a 00        		.string	""
 15603 070b 00        		.string	""
 15604 070c 00        		.string	""
 15605 070d 00        		.string	""
 15606 070e BCFF C600 		.string	"\274\377\306"
 15607 0712 3DFD FD49 		.string	"=\375\375I"
 15607      00
 15608 0717 DFFF 9C00 		.string	"\337\377\234"
 15609 071b B4FF CB00 		.string	"\264\377\313"
 15610 071f 94FF E300 		.string	"\224\377\343"
 15611 0723 00        		.string	""
 15612 0724 E9FF 6F94 		.string	"\351\377o\224\377\343"
 15612      FFE3 00
 15613 072b 00        		.string	""
 15614 072c EAFF 5E3D 		.string	"\352\377^=\375\3745=\375\375I"
 15614      FDFC 353D 
 15614      FDFD 4900 
 15615 0738 D4FF A794 		.string	"\324\377\247\224\377\343"
 15615      FFE3 00
 15616 073f 00        		.string	""
 15617 0740 E9FF 6F3D 		.string	"\351\377o=\375\373."
 15617      FDFB 2E00 
 15618 0748 00        		.string	""
 15619 0749 00        		.string	""
 15620 074a D2FF BCFF 		.string	"\322\377\274\377\313"
 15620      CB00 
 15621 0750 00        		.string	""
 15622 0751 00        		.string	""
 15623 0752 00        		.string	""
 15624 0753 00        		.string	""
 15625 0754 5EFF FE1C 		.string	"^\377\376\034"
 15625      00
 15626 0759 00        		.string	""
 15627 075a 35F3 FF8E 		.string	"5\363\377\216"
 15627      00
 15628 075f 00        		.string	""
 15629 0760 00        		.string	""
 15630 0761 49EE FFAA 		.string	"I\356\377\252"
 15630      00
 15631 0766 00        		.string	""
 15632 0767 00        		.string	""
 15633 0768 00        		.string	""
 15634 0769 00        		.string	""
 15635 076a A7FF A600 		.string	"\247\377\246"
 15636 076e 9FFF A700 		.string	"\237\377\247"
 15637 0772 00        		.string	""
 15638 0773 00        		.string	""
 15639 0774 00        		.string	""
 15640 0775 00        		.string	""
 15641 0776 00        		.string	""
 15642 0777 00        		.string	""
 15643 0778 DCFF A100 		.string	"\334\377\241"
 15644 077c 88FF EA00 		.string	"\210\377\352"
 15645 0780 0DF7 FF5D 		.string	"\r\367\377]"
 15645      00
 15646 0785 D4FF A800 		.string	"\324\377\250"
 15647 0789 A1FF E300 		.string	"\241\377\343"
 15648 078d 98FF F916 		.string	"\230\377\371\026\242\377\344"
 15648      A2FF E400 
 15649 0795 8DFF F300 		.string	"\215\377\363"
 15650 0799 88FF E900 		.string	"\210\377\351"
 15651 079d 88FF EA00 		.string	"\210\377\352"
 15652 07a1 00        		.string	""
 15653 07a2 EEFF 76A1 		.string	"\356\377v\241\377\343"
 15653      FFE3 00
 15654 07a9 98FF F916 		.string	"\230\377\371\026\210\377\347"
 15654      88FF E700 
 15655 07b1 00        		.string	""
 15656 07b2 00        		.string	""
 15657 07b3 00        		.string	""
 15658 07b4 BAFF F3FA 		.string	"\272\377\363\372Y"
 15658      5900 
 15659 07ba 00        		.string	""
 15660 07bb 00        		.string	""
 15661 07bc 00        		.string	""
 15662 07bd 00        		.string	""
 15663 07be 0DF9 FF93 		.string	"\r\371\377\223"
 15663      00
 15664 07c3 2AD0 FFE8 		.string	"*\320\377\350\026}\""
 15664      167D 2200 
 15665 07cb 00        		.string	""
 15666 07cc E1FF A800 		.string	"\341\377\250"
 15667 07d0 00        		.string	""
 15668 07d1 00        		.string	""
 15669 07d2 00        		.string	""
 15670 07d3 00        		.string	""
 15671 07d4 CAFF 7500 		.string	"\312\377u"
 15672 07d8 C3FF 7600 		.string	"\303\377v"
 15673 07dc 00        		.string	""
 15674 07dd 00        		.string	""
 15675 07de 00        		.string	""
 15676 07df 00        		.string	""
 15677 07e0 38B8 FAFF 		.string	"8\270\372\377\321I\262\377\316"
 15677      D149 B2FF 
 15677      CE00 
 15678 07ea 6BFF F400 		.string	"k\377\364"
 15679 07ee 00        		.string	""
 15680 07ef EFFF 7900 		.string	"\357\377y"
 15681 07f3 76FF FFE4 		.string	"v\377\377\344\371\377\341"
 15681      F9FF E100 
 15682 07fb 78FF FFE5 		.string	"x\377\377\345\367\377\330"
 15682      F7FF D800 
 15683 0803 B2FF CD00 		.string	"\262\377\315"
 15684 0807 B2FF CE00 		.string	"\262\377\316"
 15685 080b 4BFF FA22 		.string	"K\377\372\"v\377\377\344\371\377\341"
 15685      76FF FFE4 
 15685      F9FF E100 
 15686 0817 B2FF CC00 		.string	"\262\377\314"
 15687 081b 00        		.string	""
 15688 081c 00        		.string	""
 15689 081d 00        		.string	""
 15690 081e A0FF FFC1 		.string	"\240\377\377\301"
 15690      00
 15691 0823 00        		.string	""
 15692 0824 00        		.string	""
 15693 0825 00        		.string	""
 15694 0826 00        		.string	""
 15695 0827 00        		.string	""
 15696 0828 00        		.string	""
 15697 0829 BCFF FCE2 		.string	"\274\377\374\342\362\377\366p"
 15697      F2FF F670 
 15697      00
 15698 0832 DCF5 E2F1 		.string	"\334\365\342\361\377\366T"
 15698      FFF6 5400 
 15699 083a 00        		.string	""
 15700 083b 00        		.string	""
 15701 083c 00        		.string	""
 15702 083d 00        		.string	""
 15703 083e E7FA 2200 		.string	"\347\372\""
 15704 0842 E1FA 1C00 		.string	"\341\372\034"
 15705 0846 00        		.string	""
 15706 0847 00        		.string	""
 15707 0848 00        		.string	""
 15708 0849 00        		.string	""
 15709 084a 95FF FFFF 		.string	"\225\377\377\377\377`\322\377\254"
 15709      FF60 D2FF 
 15709      AC00 
 15710 0854 A0FF DA00 		.string	"\240\377\332"
 15711 0858 4BFF FB26 		.string	"K\377\373&"
 15711      00
 15712 085d 00        		.string	""
 15713 085e BDF9 EF98 		.string	"\275\371\357\230\377\303"
 15713      FFC3 00
 15714 0865 00        		.string	""
 15715 0866 BEFA E7CB 		.string	"\276\372\347\313\377\266"
 15715      FFB6 00
 15716 086d D2FF AB00 		.string	"\322\377\253"
 15717 0871 D2FF AC00 		.string	"\322\377\254"
 15718 0875 8EFF E300 		.string	"\216\377\343"
 15719 0879 00        		.string	""
 15720 087a BDF9 EF98 		.string	"\275\371\357\230\377\303"
 15720      FFC3 00
 15721 0881 D2FF AB00 		.string	"\322\377\253"
 15722 0885 00        		.string	""
 15723 0886 00        		.string	""
 15724 0887 00        		.string	""
 15725 0888 8AFF F749 		.string	"\212\377\367I"
 15725      00
 15726 088d 00        		.string	""
 15727 088e 00        		.string	""
 15728 088f 00        		.string	""
 15729 0890 00        		.string	""
 15730 0891 00        		.string	""
 15731 0892 00        		.string	""
 15732 0893 22BC F0FC 		.string	"\"\274\360\374\362\316^"
 15732      F2CE 5E00 
 15733 089b 00        		.string	""
 15734 089c AAED FBF6 		.string	"\252\355\373\366\326p"
 15734      D670 00
 15735 08a3 00        		.string	""
 15736 08a4 00        		.string	""
 15737 08a5 00        		.string	""
 15738 08a6 00        		.string	""
 15739 08a7 32FC E400 		.string	"2\374\344"
 15740 08ab 00        		.string	""
 15741 08ac F8F9 DC70 		.string	"\370\371\334p"
 15741      00
 15742 08b1 00        		.string	""
 15743 08b2 00        		.string	""
 15744 08b3 00        		.string	""
 15745 08b4 00        		.string	""
 15746 08b5 00        		.string	""
 15747 08b6 00        		.string	""
 15748 08b7 00        		.string	""
 15749 08b8 00        		.string	""
 15750 08b9 00        		.string	""
 15751 08ba 00        		.string	""
 15752 08bb 00        		.string	""
 15753 08bc 00        		.string	""
 15754 08bd 00        		.string	""
 15755 08be 00        		.string	""
 15756 08bf 00        		.string	""
 15757 08c0 00        		.string	""
 15758 08c1 00        		.string	""
 15759 08c2 00        		.string	""
 15760 08c3 00        		.string	""
 15761 08c4 00        		.string	""
 15762 08c5 00        		.string	""
 15763 08c6 00        		.string	""
 15764 08c7 00        		.string	""
 15765 08c8 00        		.string	""
 15766 08c9 00        		.string	""
 15767 08ca 00        		.string	""
 15768 08cb 00        		.string	""
 15769 08cc 00        		.string	""
 15770 08cd 00        		.string	""
 15771 08ce 00        		.string	""
 15772 08cf 4700      		.string	"G"
 15773 08d1 00        		.string	""
 15774 08d2 38EB FF7C 		.string	"8\353\377|"
 15774      00
 15775 08d7 00        		.string	""
 15776 08d8 00        		.string	""
 15777 08d9 00        		.string	""
 15778 08da 00        		.string	""
 15779 08db 00        		.string	""
 15780 08dc 00        		.string	""
 15781 08dd 00        		.string	""
 15782 08de 00        		.string	""
 15783 08df 00        		.string	""
 15784 08e0 00        		.string	""
 15785 08e1 00        		.string	""
 15786 08e2 00        		.string	""
 15787 08e3 00        		.string	""
 15788 08e4 00        		.string	""
 15789 08e5 00        		.string	""
 15790 08e6 00        		.string	""
 15791 08e7 00        		.string	""
 15792 08e8 00        		.string	""
 15793 08e9 00        		.string	""
 15794 08ea 00        		.string	""
 15795 08eb 00        		.string	""
 15796 08ec 00        		.string	""
 15797 08ed 00        		.string	""
 15798 08ee 00        		.string	""
 15799 08ef 00        		.string	""
 15800 08f0 00        		.string	""
 15801 08f1 26E2 FFB4 		.string	"&\342\377\264"
 15801      00
 15802 08f6 00        		.string	""
 15803 08f7 00        		.string	""
 15804 08f8 00        		.string	""
 15805 08f9 00        		.string	""
 15806 08fa 00        		.string	""
 15807 08fb 00        		.string	""
 15808 08fc 00        		.string	""
 15809 08fd 00        		.string	""
 15810 08fe 00        		.string	""
 15811 08ff 00        		.string	""
 15812 0900 00        		.string	""
 15813 0901 00        		.string	""
 15814 0902 00        		.string	""
 15815 0903 00        		.string	""
 15816 0904 00        		.string	""
 15817 0905 00        		.string	""
 15818 0906 00        		.string	""
 15819 0907 00        		.string	""
 15820 0908 00        		.string	""
 15821 0909 00        		.string	""
 15822 090a 00        		.string	""
 15823 090b 00        		.string	""
 15824 090c 00        		.string	""
 15825 090d 00        		.string	""
 15826 090e 00        		.string	""
 15827 090f 00        		.string	""
 15828 0910 BAE1 FFC8 		.string	"\272\341\377\310"
 15828      00
 15829 0915 00        		.string	""
 15830 0916 FFFF FF4D 		.string	"\377\377\377M"
 15830      00
 15831 091b 00        		.string	""
 15832 091c 00        		.string	""
 15833 091d 00        		.string	""
 15834 091e 00        		.string	""
 15835 091f 00        		.string	""
 15836 0920 00        		.string	""
 15837 0921 00        		.string	""
 15838 0922 00        		.string	""
 15839 0923 00        		.string	""
 15840 0924 00        		.string	""
 15841 0925 00        		.string	""
 15842 0926 00        		.string	""
 15843 0927 00        		.string	""
 15844 0928 00        		.string	""
 15845 0929 00        		.string	""
 15846 092a 00        		.string	""
 15847 092b 00        		.string	""
 15848 092c 00        		.string	""
 15849 092d 00        		.string	""
 15850 092e 00        		.string	""
 15851 092f 00        		.string	""
 15852 0930 00        		.string	""
 15853 0931 00        		.string	""
 15854 0932 00        		.string	""
 15855 0933 00        		.string	""
 15856 0934 00        		.string	""
 15857 0935 00        		.string	""
 15858 0936 00        		.string	""
 15859 0937 00        		.string	""
 15860 0938 00        		.string	""
 15861 0939 E7EB DFF3 		.string	"\347\353\337\363\377\336"
 15861      FFDE 00
 15862 0940 00        		.string	""
 15863 0941 00        		.string	""
 15864 0942 00        		.string	""
 15865 0943 00        		.string	""
 15866 0944 00        		.string	""
 15867 0945 00        		.string	""
 15868 0946 00        		.string	""
 15869 0947 00        		.string	""
 15870 0948 00        		.string	""
 15871 0949 00        		.string	""
 15872 094a 00        		.string	""
 15873 094b 00        		.string	""
 15874 094c 00        		.string	""
 15875 094d 00        		.string	""
 15876 094e 00        		.string	""
 15877 094f 00        		.string	""
 15878 0950 00        		.string	""
 15879 0951 00        		.string	""
 15880 0952 00        		.string	""
 15881 0953 00        		.string	""
 15882 0954 00        		.string	""
 15883 0955 00        		.string	""
 15884 0956 00        		.string	""
 15885 0957 00        		.string	""
 15886 0958 00        		.string	""
 15887 0959 00        		.string	""
 15888 095a DCF0 FFE7 		.string	"\334\360\377\347&"
 15888      2600 
 15889 0960 00        		.string	""
 15890 0961 00        		.string	""
 15891 0962 00        		.string	""
 15892 0963 00        		.string	""
 15893 0964 00        		.string	""
 15894 0965 00        		.string	""
 15895 0966 00        		.string	""
 15896 0967 00        		.string	""
 15897 0968 00        		.string	""
 15898 0969 00        		.string	""
 15899 096a 00        		.string	""
 15900 096b 00        		.string	""
 15901 096c 00        		.string	""
 15902 096d 00        		.string	""
 15903 096e 00        		.string	""
 15904 096f 00        		.string	""
 15905 0970 00        		.string	""
 15906 0971 00        		.string	""
 15907 0972 00        		.string	""
 15908 0973 00        		.string	""
 15909 0974 00        		.string	""
 15910 0975 00        		.string	""
 15911 0976 00        		.string	""
 15912 0977 00        		.string	""
 15913 0978 00        		.string	""
 15914 0979 00        		.string	""
 15915 097a EDFF FFA5 		.string	"\355\377\377\245"
 15915      00
 15916 097f 00        		.string	""
 15917 0980 00        		.string	""
 15918 0981 00        		.string	""
 15919 0982 00        		.string	""
 15920 0983 00        		.string	""
 15921 0984 00        		.string	""
 15922 0985 00        		.string	""
 15923 0986 00        		.string	""
 15924 0987 00        		.string	""
 15925 0988 00        		.string	""
 15926 0989 00        		.string	""
 15927 098a 00        		.string	""
 15928 098b 00        		.string	""
 15929 098c 00        		.string	""
 15930 098d 00        		.string	""
 15931 098e 00        		.string	""
 15932 098f 00        		.string	""
 15933 0990 00        		.string	""
 15934 0991 00        		.string	""
 15935 0992 00        		.string	""
 15936 0993 00        		.string	""
 15937 0994 00        		.string	""
 15938 0995 00        		.string	""
 15939 0996 00        		.string	""
 15940 0997 00        		.string	""
 15941 0998 00        		.string	""
 15942 0999 00        		.string	""
 15943 099a 00        		.string	""
 15944 099b 00        		.string	""
 15945 099c 00        		.string	""
 15946 099d 00        		.string	""
 15947 099e 00        		.string	""
 15948 099f 00        		.string	""
 15949 09a0 00        		.string	""
 15950 09a1 00        		.string	""
 15951 09a2 00        		.string	""
 15952 09a3 C1F3 FDF5 		.string	"\301\363\375\365\313E"
 15952      CB45 00
 15953 09aa 00        		.string	""
 15954 09ab 00        		.string	""
 15955 09ac 00        		.string	""
 15956 09ad 00        		.string	""
 15957 09ae 00        		.string	""
 15958 09af 00        		.string	""
 15959 09b0 00        		.string	""
 15960 09b1 00        		.string	""
 15961 09b2 00        		.string	""
 15962 09b3 00        		.string	""
 15963 09b4 00        		.string	""
 15964 09b5 00        		.string	""
 15965 09b6 00        		.string	""
 15966 09b7 00        		.string	""
 15967 09b8 00        		.string	""
 15968 09b9 00        		.string	""
 15969 09ba 00        		.string	""
 15970 09bb 00        		.string	""
 15971 09bc 00        		.string	""
 15972 09bd 00        		.string	""
 15973 09be 00        		.string	""
 15974 09bf 00        		.string	""
 15975 09c0 00        		.string	""
 15976 09c1 00        		.string	""
 15977 09c2 00        		.string	""
 15978 09c3 00        		.string	""
 15979 09c4 F6F7 D049 		.string	"\366\367\320I"
 15979      00
 15980 09c9 00        		.string	""
 15981 09ca 00        		.string	""
 15982 09cb 00        		.string	""
 15983 09cc 00        		.string	""
 15984 09cd 00        		.string	""
 15985 09ce 00        		.string	""
 15986 09cf 00        		.string	""
 15987 09d0 00        		.string	""
 15988 09d1 00        		.string	""
 15989 09d2 00        		.string	""
 15990 09d3 00        		.string	""
 15991 09d4 00        		.string	""
 15992 09d5 00        		.string	""
 15993 09d6 00        		.string	""
 15994 09d7 00        		.string	""
 15995 09d8 00        		.string	""
 15996 09d9 00        		.string	""
 15997 09da 00        		.string	""
 15998 09db 00        		.string	""
 15999 09dc 00        		.string	""
 16000 09dd 00        		.string	""
 16001 09de 00        		.string	""
 16002 09df 00        		.string	""
 16003 09e0 00        		.string	""
 16004 09e1 00        		.string	""
 16005 09e2 00        		.string	""
 16006 09e3 00        		.string	""
 16007 09e4 00        		.string	""
 16008 09e5 00        		.string	""
 16009 09e6 00        		.string	""
 16010 09e7 00        		.string	""
 16011 09e8 00        		.string	""
 16012 09e9 00        		.string	""
 16015               	logo_tiny:
 16016 09ea 00        		.string	""
 16017 09eb 00        		.string	""
 16018 09ec 00        		.string	""
 16019 09ed 00        		.string	""
 16020 09ee 00        		.string	""
 16021 09ef 00        		.string	""
 16022 09f0 00        		.string	""
 16023 09f1 00        		.string	""
 16024 09f2 00        		.string	""
 16025 09f3 00        		.string	""
 16026 09f4 00        		.string	""
 16027 09f5 00        		.string	""
 16028 09f6 00        		.string	""
 16029 09f7 0B13 1A1F 		.string	"\013\023\032\037##\037\032\023\013\013"
 16029      2323 1F1A 
 16029      130B 0B00 
 16030 0a03 00        		.string	""
 16031 0a04 00        		.string	""
 16032 0a05 00        		.string	""
 16033 0a06 00        		.string	""
 16034 0a07 00        		.string	""
 16035 0a08 00        		.string	""
 16036 0a09 00        		.string	""
 16037 0a0a 00        		.string	""
 16038 0a0b 00        		.string	""
 16039 0a0c 00        		.string	""
 16040 0a0d 00        		.string	""
 16041 0a0e 00        		.string	""
 16042 0a0f 00        		.string	""
 16043 0a10 00        		.string	""
 16044 0a11 00        		.string	""
 16045 0a12 00        		.string	""
 16046 0a13 00        		.string	""
 16047 0a14 00        		.string	""
 16048 0a15 00        		.string	""
 16049 0a16 00        		.string	""
 16050 0a17 00        		.string	""
 16051 0a18 00        		.string	""
 16052 0a19 00        		.string	""
 16053 0a1a 0B13 1A23 		.string	"\013\023\032#.691'\037\023\013\013"
 16053      2E36 3931 
 16053      271F 130B 
 16053      0B00 
 16054 0a28 00        		.string	""
 16055 0a29 00        		.string	""
 16056 0a2a 00        		.string	""
 16057 0a2b 00        		.string	""
 16058 0a2c 00        		.string	""
 16059 0a2d 00        		.string	""
 16060 0a2e 00        		.string	""
 16061 0a2f 00        		.string	""
 16062 0a30 00        		.string	""
 16063 0a31 00        		.string	""
 16064 0a32 00        		.string	""
 16065 0a33 00        		.string	""
 16066 0a34 00        		.string	""
 16067 0a35 00        		.string	""
 16068 0a36 00        		.string	""
 16069 0a37 00        		.string	""
 16070 0a38 00        		.string	""
 16071 0a39 00        		.string	""
 16072 0a3a 00        		.string	""
 16073 0a3b 00        		.string	""
 16074 0a3c 00        		.string	""
 16075 0a3d 0B13 1F27 		.string	"\013\023\037'3AQTI9.\037\023\013"
 16075      3341 5154 
 16075      4939 2E1F 
 16075      130B 00
 16076 0a4c 00        		.string	""
 16077 0a4d 00        		.string	""
 16078 0a4e 00        		.string	""
 16079 0a4f 00        		.string	""
 16080 0a50 00        		.string	""
 16081 0a51 00        		.string	""
 16082 0a52 00        		.string	""
 16083 0a53 00        		.string	""
 16084 0a54 00        		.string	""
 16085 0a55 00        		.string	""
 16086 0a56 00        		.string	""
 16087 0a57 00        		.string	""
 16088 0a58 00        		.string	""
 16089 0a59 00        		.string	""
 16090 0a5a 00        		.string	""
 16091 0a5b 00        		.string	""
 16092 0a5c 00        		.string	""
 16093 0a5d 00        		.string	""
 16094 0a5e 00        		.string	""
 16095 0a5f 00        		.string	""
 16096 0a60 0B13 1A27 		.string	"\013\023\032'6Ib\205\215oQ<.\037\023\013"
 16096      3649 6285 
 16096      8D6F 513C 
 16096      2E1F 130B 
 16096      00
 16097 0a71 00        		.string	""
 16098 0a72 00        		.string	""
 16099 0a73 00        		.string	""
 16100 0a74 00        		.string	""
 16101 0a75 00        		.string	""
 16102 0a76 00        		.string	""
 16103 0a77 00        		.string	""
 16104 0a78 00        		.string	""
 16105 0a79 00        		.string	""
 16106 0a7a 00        		.string	""
 16107 0a7b 00        		.string	""
 16108 0a7c 00        		.string	""
 16109 0a7d 00        		.string	""
 16110 0a7e 00        		.string	""
 16111 0a7f 00        		.string	""
 16112 0a80 00        		.string	""
 16113 0a81 00        		.string	""
 16114 0a82 00        		.string	""
 16115 0a83 0B0B 1A23 		.string	"\013\013\032#3Gb\223\377\377\251oO9'\032\023\013"
 16115      3347 6293 
 16115      FFFF A96F 
 16115      4F39 271A 
 16115      130B 00
 16116 0a96 00        		.string	""
 16117 0a97 00        		.string	""
 16118 0a98 00        		.string	""
 16119 0a99 00        		.string	""
 16120 0a9a 00        		.string	""
 16121 0a9b 00        		.string	""
 16122 0a9c 00        		.string	""
 16123 0a9d 00        		.string	""
 16124 0a9e 00        		.string	""
 16125 0a9f 00        		.string	""
 16126 0aa0 00        		.string	""
 16127 0aa1 00        		.string	""
 16128 0aa2 00        		.string	""
 16129 0aa3 00        		.string	""
 16130 0aa4 00        		.string	""
 16131 0aa5 00        		.string	""
 16132 0aa6 00        		.string	""
 16133 0aa7 0B13 1F2E 		.string	"\013\023\037.AW\200\317\377\377\377\223bI3#\023\013"
 16133      4157 80CF 
 16133      FFFF FF93 
 16133      6249 3323 
 16133      130B 00
 16134 0aba 00        		.string	""
 16135 0abb 00        		.string	""
 16136 0abc 00        		.string	""
 16137 0abd 00        		.string	""
 16138 0abe 00        		.string	""
 16139 0abf 00        		.string	""
 16140 0ac0 00        		.string	""
 16141 0ac1 00        		.string	""
 16142 0ac2 00        		.string	""
 16143 0ac3 00        		.string	""
 16144 0ac4 00        		.string	""
 16145 0ac5 00        		.string	""
 16146 0ac6 00        		.string	""
 16147 0ac7 00        		.string	""
 16148 0ac8 00        		.string	""
 16149 0ac9 00        		.string	""
 16150 0aca 0B13 1A27 		.string	"\013\023\032'9Om\243\377\377\377\377\266xT>*\037\023\013"
 16150      394F 6DA3 
 16150      FFFF FFFF 
 16150      B678 543E 
 16150      2A1F 130B 
 16151 0adf 00        		.string	""
 16152 0ae0 00        		.string	""
 16153 0ae1 00        		.string	""
 16154 0ae2 00        		.string	""
 16155 0ae3 00        		.string	""
 16156 0ae4 00        		.string	""
 16157 0ae5 00        		.string	""
 16158 0ae6 00        		.string	""
 16159 0ae7 00        		.string	""
 16160 0ae8 00        		.string	""
 16161 0ae9 00        		.string	""
 16162 0aea 00        		.string	""
 16163 0aeb 00        		.string	""
 16164 0aec 00        		.string	""
 16165 0aed 00        		.string	""
 16166 0aee 0B13 1F2E 		.string	"\013\023\037.AZ\210\377\377\377\377\377\377\223bG3#\023\013"
 16166      415A 88FF 
 16166      FFFF FFFF 
 16166      FF93 6247 
 16166      3323 130B 
 16167 0b03 00        		.string	""
 16168 0b04 00        		.string	""
 16169 0b05 00        		.string	""
 16170 0b06 00        		.string	""
 16171 0b07 00        		.string	""
 16172 0b08 00        		.string	""
 16173 0b09 00        		.string	""
 16174 0b0a 00        		.string	""
 16175 0b0b 00        		.string	""
 16176 0b0c 00        		.string	""
 16177 0b0d 00        		.string	""
 16178 0b0e 00        		.string	""
 16179 0b0f 00        		.string	""
 16180 0b10 00        		.string	""
 16181 0b11 0B13 1A27 		.string	"\013\023\032'6Lo\251\377\377\377\377\377\377\256rQ9'\032\023\013"
 16181      364C 6FA9 
 16181      FFFF FFFF 
 16181      FFFF AE72 
 16181      5139 271A 
 16182 0b28 00        		.string	""
 16183 0b29 00        		.string	""
 16184 0b2a 00        		.string	""
 16185 0b2b 00        		.string	""
 16186 0b2c 00        		.string	""
 16187 0b2d 00        		.string	""
 16188 0b2e 00        		.string	""
 16189 0b2f 00        		.string	""
 16190 0b30 00        		.string	""
 16191 0b31 00        		.string	""
 16192 0b32 00        		.string	""
 16193 0b33 00        		.string	""
 16194 0b34 0B0B 131F 		.string	"\013\013\023\037.AZ\215\377\377\345\377\327\377\377\377\213ZA.\037\023\013"
 16194      2E41 5A8D 
 16194      FFFF E5FF 
 16194      D7FF FFFF 
 16194      8B5A 412E 
 16195 0b4c 00        		.string	""
 16196 0b4d 00        		.string	""
 16197 0b4e 00        		.string	""
 16198 0b4f 00        		.string	""
 16199 0b50 00        		.string	""
 16200 0b51 00        		.string	""
 16201 0b52 00        		.string	""
 16202 0b53 00        		.string	""
 16203 0b54 00        		.string	""
 16204 0b55 00        		.string	""
 16205 0b56 00        		.string	""
 16206 0b57 00        		.string	""
 16207 0b58 0B13 1F27 		.string	"\013\023\037'9Ou\324\377\311\377\377\276\377\377\377\246mL6#\032\013\013"
 16207      394F 75D4 
 16207      FFC9 FFFF 
 16207      BEFF FFFF 
 16207      A66D 4C36 
 16208 0b71 00        		.string	""
 16209 0b72 00        		.string	""
 16210 0b73 00        		.string	""
 16211 0b74 00        		.string	""
 16212 0b75 00        		.string	""
 16213 0b76 00        		.string	""
 16214 0b77 00        		.string	""
 16215 0b78 00        		.string	""
 16216 0b79 00        		.string	""
 16217 0b7a 00        		.string	""
 16218 0b7b 0B0B 1A23 		.string	"\013\013\032#1Ab\230\377\377\256\377\377\251\377\377\377\377\205W>*\037\023\013"
 16218      3141 6298 
 16218      FFFF AEFF 
 16218      FFA9 FFFF 
 16218      FFFF 8557 
 16219 0b95 00        		.string	""
 16220 0b96 00        		.string	""
 16221 0b97 00        		.string	""
 16222 0b98 00        		.string	""
 16223 0b99 00        		.string	""
 16224 0b9a 00        		.string	""
 16225 0b9b 00        		.string	""
 16226 0b9c 00        		.string	""
 16227 0b9d 00        		.string	""
 16228 0b9e 00        		.string	""
 16229 0b9f 0B13 1F2A 		.string	"\013\023\037*<Q\202\377\377\246\240\377\324\226\307\377\370\377\240jG3#\032\013\013"
 16229      3C51 82FF 
 16229      FFA6 A0FF 
 16229      D496 C7FF 
 16229      F8FF A06A 
 16230 0bba 00        		.string	""
 16231 0bbb 00        		.string	""
 16232 0bbc 00        		.string	""
 16233 0bbd 00        		.string	""
 16234 0bbe 00        		.string	""
 16235 0bbf 00        		.string	""
 16236 0bc0 00        		.string	""
 16237 0bc1 00        		.string	""
 16238 0bc2 0B13 1A23 		.string	"\013\023\032#3Gm\256\377\324\215\240\377\246\205\246\377\317\377\377\205T<*\037\023\013"
 16238      3347 6DAE 
 16238      FFD4 8DA0 
 16238      FFA6 85A6 
 16238      FFCF FFFF 
 16239 0bde 00        		.string	""
 16240 0bdf 00        		.string	""
 16241 0be0 00        		.string	""
 16242 0be1 00        		.string	""
 16243 0be2 00        		.string	""
 16244 0be3 00        		.string	""
 16245 0be4 00        		.string	""
 16246 0be5 0B0B 131F 		.string	"\013\013\023\037.>Z\215\377\377\220}\251\377\230u\223\377\377\345\377\240gD1#\023\013\013
 16246      2E3E 5A8D 
 16246      FFFF 907D 
 16246      A9FF 9875 
 16246      93FF FFE5 
 16247 0c03 00        		.string	""
 16248 0c04 00        		.string	""
 16249 0c05 00        		.string	""
 16250 0c06 00        		.string	""
 16251 0c07 00        		.string	""
 16252 0c08 00        		.string	""
 16253 0c09 0B13 1F27 		.string	"\013\023\037'9Lx\355\377\240uz\342\377\213g\200\377\377\266\377\377\202Q9'\037\023\013"
 16253      394C 78ED 
 16253      FFA0 757A 
 16253      E2FF 8B67 
 16253      80FF FFB6 
 16254 0c27 00        		.string	""
 16255 0c28 00        		.string	""
 16256 0c29 00        		.string	""
 16257 0c2a 00        		.string	""
 16258 0c2b 00        		.string	""
 16259 0c2c 0B13 1A23 		.string	"\013\023\032#3Ad\233\377\372\200d}\377\377}_o\253\377\264\327\377\240gD1#\023\013\013"
 16259      3341 649B 
 16259      FFFA 8064 
 16259      7DFF FF7D 
 16259      5F6F ABFF 
 16260 0c4c 00        		.string	""
 16261 0c4d 00        		.string	""
 16262 0c4e 00        		.string	""
 16263 0c4f 00        		.string	""
 16264 0c50 0B13 1F2A 		.string	"\013\023\037*<T\205\377\377\223g_\210\377\355rTd\230\377\276\246\377\377\202Q9'\037\023\0
 16264      3C54 85FF 
 16264      FF93 675F 
 16264      88FF ED72 
 16264      5464 98FF 
 16265 0c70 00        		.string	""
 16266 0c71 00        		.string	""
 16267 0c72 00        		.string	""
 16268 0c73 0B13 1A27 		.string	"\013\023\032'6Io\307\377\266uWb\220\377\246gQZ\210\377\377\233\311\377\243gD1#\023\013\01
 16268      3649 6FC7 
 16268      FFB6 7557 
 16268      6290 FFA6 
 16268      6751 5A88 
 16269 0c95 00        		.string	""
 16270 0c96 0B0B 1323 		.string	"\013\013\023#1A_\223\377\377\205_Qg\233\377\226bOTx\370\377\233\236\377\377\202Q9'\037\02
 16270      3141 5F93 
 16270      FFFF 855F 
 16270      5167 9BFF 
 16270      9662 4F54 
 16271 0cb9 00        		.string	""
 16272 0cba 0B13 1F2A 		.string	"\013\023\037*<T\200\377\377\230gTQm\274\377\215_QTm\246\377\246\215\311\377\246gD1#\032\0
 16272      3C54 80FF 
 16272      FF98 6754 
 16272      516D BCFF 
 16272      8D5F 5154 
 16273 0cde 131A 2736 		.string	"\023\032'6Lm\251\377\334}ZQWz\377\377\205_TZm\236\377\321\213\230\377\377\205T<*\037\023\
 16273      4C6D A9FF 
 16273      DC7D 5A51 
 16273      577A FFFF 
 16273      855F 545A 
 16274 0d02 131F 2E41 		.ascii	"\023\037.A_\223\377\377\223jZZb\213\377\377\213ruz\213\251\377"
 16274      5F93 FFFF 
 16274      936A 5A5A 
 16274      628B FFFF 
 16274      8B72 757A 
 16275 0d19 FFA0 8DC7 		.ascii	"\377\240\215\307\377\246jI3#\032\023\013\032'9Q\200\355\377\264"
 16275      FFA6 6A49 
 16275      3323 1A13 
 16275      0B1A 2739 
 16275      5180 EDFF 
 16276 0d2e 8875 7578 		.ascii	"\210uux\210\251\377\342\251\256\337\377\377\377\377\377\332\236"
 16276      88A9 FFE2 
 16276      A9AE DFFF 
 16276      FFFF FFFF 
 16276      DA9E 
 16277 0d40 A3FF FF8B 		.ascii	"\243\377\377\213Z>.\037\023\013\037.Ag\251\377\377\266\246\243"
 16277      5A3E 2E1F 
 16277      130B 1F2E 
 16277      4167 A9FF 
 16277      FFB6 A6A3 
 16278 0d54 BCF5 FFFF 		.ascii	"\274\365\377\377\377\377\377\377\377\377\377\342\377\377\377"
 16278      FFFF FFFF 
 16278      FFFF FFE2 
 16278      FFFF FF
 16279 0d63 FDAB C9FF 		.ascii	"\375\253\311\377\256rL9'\037\023#3L\200\377\377\377\377\377\377"
 16279      AE72 4C39 
 16279      271F 1323 
 16279      334C 80FF 
 16279      FFFF FFFF 
 16280 0d78 FFFF FFFF 		.ascii	"\377\377\377\377\377\301\240\220\210\202\202\236\377\377\377"
 16280      FFC1 A090 
 16280      8882 829E 
 16280      FFFF FF
 16281 0d87 FFFF C1FF 		.ascii	"\377\377\301\377\377\220_A3#\023#3O\205\377\377\377\334\266\243"
 16281      FF90 5F41 
 16281      3323 1323 
 16281      334F 85FF 
 16281      FFFF DCB6 
 16282 0d9c 9690 9BFD 		.ascii	"\226\220\233\375\377\230obZZg\226\377\332\240\314\377\377\347"
 16282      FF98 6F62 
 16282      5A5A 6796 
 16282      FFDA A0CC 
 16282      FFFF E7
 16283 0daf FFBC 78   		.ascii	"\377\274x"
 16284 0db2 513C 2A1A 		.string	"Q<*\032#3Iu\311\377\377\377\256\215xr\215\377\377\202ZQQTg\236\377\246\202\215\256\377\37
 16284      2333 4975 
 16284      C9FF FFFF 
 16284      AE8D 7872 
 16284      8DFF FF82 
 16285 0eb3 0B13 1F2A 		.string	"\013\023\037*<T\210\377\377\230\213\266\377\251zd__u\324\377\215bTWo\240\377\365}Q<*\037\
 16285      3C54 88FF 
 16285      FF98 8BB6 
 16285      FFA9 7A64 
 16285      5F5F 75D4 
 16286 0ed7 0B0B 1A23 		.string	"\013\013\032#3Dj\251\377\307\215\240\377\266uWQTz\377\377\200ZTb\213\377\377\220_A.#\023\
 16286      3344 6AA9 
 16286      FFC7 8DA0 
 16286      FFB6 7557 
 16286      5154 7AFF 
 16287 0efb 00        		.string	""
 16288 0efc 0B13 1F27 		.string	"\013\023\037'9Q\205\377\377\230\226\377\377}WOW\202\377\377uTWu\311\377\256mI6'\032\023\0
 16288      3951 85FF 
 16288      FF98 96FF 
 16288      FF7D 574F 
 16288      5782 FFFF 
 16289 0f1f 00        		.string	""
 16290 0f20 0B0B 1323 		.string	"\013\013\023#1Dg\243\377\307\230\372\377\215_QZ\215\377\251mWg\223\377\377\202Q<*\037\023
 16290      3144 67A3 
 16290      FFC7 98FA 
 16290      FF8D 5F51 
 16290      5A8D FFA9 
 16291 0f42 00        		.string	""
 16292 0f43 00        		.string	""
 16293 0f44 00        		.string	""
 16294 0f45 0B13 1F27 		.string	"\013\023\037'9Q\202\377\377\243\256\377\233gTd\230\377\230g_\200\377\377\230bA1#\032\013\
 16294      3951 82FF 
 16294      FFA3 AEFF 
 16294      9B67 5464 
 16294      98FF 9867 
 16295 0f66 00        		.string	""
 16296 0f67 00        		.string	""
 16297 0f68 00        		.string	""
 16298 0f69 0B0B 1323 		.string	"\013\013\023#1Dg\246\377\321\253\377\311uZm\271\377\215gr\246\377\334uL6'\032\023\013"
 16298      3144 67A6 
 16298      FFD1 ABFF 
 16298      C975 5A6D 
 16298      B9FF 8D67 
 16299 0f89 00        		.string	""
 16300 0f8a 00        		.string	""
 16301 0f8b 00        		.string	""
 16302 0f8c 00        		.string	""
 16303 0f8d 00        		.string	""
 16304 0f8e 0B13 1F27 		.string	"\013\023\037'9Q\202\377\377\264\377\377\202bz\377\377\210m\220\377\377\213W>.\037\023\013
 16304      3951 82FF 
 16304      FFB4 FFFF 
 16304      8262 7AFF 
 16304      FF88 6D90 
 16305 0fac 00        		.string	""
 16306 0fad 00        		.string	""
 16307 0fae 00        		.string	""
 16308 0faf 00        		.string	""
 16309 0fb0 00        		.string	""
 16310 0fb1 00        		.string	""
 16311 0fb2 0B0B 1323 		.string	"\013\013\023#1Dg\243\377\334\365\377\226o\210\377\377\205\202\337\377\246gD3#\032\023\013
 16311      3144 67A3 
 16311      FFDC F5FF 
 16311      966F 88FF 
 16311      FF85 82DF 
 16312 0fd0 00        		.string	""
 16313 0fd1 00        		.string	""
 16314 0fd2 00        		.string	""
 16315 0fd3 00        		.string	""
 16316 0fd4 00        		.string	""
 16317 0fd5 00        		.string	""
 16318 0fd6 00        		.string	""
 16319 0fd7 0B13 1F2A 		.string	"\013\023\037*9T\205\377\377\311\377\246\200\226\377\301\210\240\377\377}Q9'\037\023\013"
 16319      3954 85FF 
 16319      FFC9 FFA6 
 16319      8096 FFC1 
 16319      88A0 FFFF 
 16320 0ff3 00        		.string	""
 16321 0ff4 00        		.string	""
 16322 0ff5 00        		.string	""
 16323 0ff6 00        		.string	""
 16324 0ff7 00        		.string	""
 16325 0ff8 00        		.string	""
 16326 0ff9 00        		.string	""
 16327 0ffa 00        		.string	""
 16328 0ffb 0B0B 1323 		.string	"\013\013\023#3Gg\243\377\362\377\345\220\246\377\251\230\377\377\223_A.\037\023\013\013"
 16328      3347 67A3 
 16328      FFF2 FFE5 
 16328      90A6 FFA9 
 16328      98FF FF93 
 16329 1017 00        		.string	""
 16330 1018 00        		.string	""
 16331 1019 00        		.string	""
 16332 101a 00        		.string	""
 16333 101b 00        		.string	""
 16334 101c 00        		.string	""
 16335 101d 00        		.string	""
 16336 101e 00        		.string	""
 16337 101f 00        		.string	""
 16338 1020 0B13 1F2A 		.string	"\013\023\037*>T\210\377\377\377\377\246\274\377\256\301\377\311uL6'\032\023\013"
 16338      3E54 88FF 
 16338      FFFF FFA6 
 16338      BCFF AEC1 
 16338      FFC9 754C 
 16339 103a 00        		.string	""
 16340 103b 00        		.string	""
 16341 103c 00        		.string	""
 16342 103d 00        		.string	""
 16343 103e 00        		.string	""
 16344 103f 00        		.string	""
 16345 1040 00        		.string	""
 16346 1041 00        		.string	""
 16347 1042 00        		.string	""
 16348 1043 00        		.string	""
 16349 1044 0B0B 1A23 		.string	"\013\013\032#6Lm\246\377\377\377\271\377\377\274\377\377\213W>.\037\023\013"
 16349      364C 6DA6 
 16349      FFFF FFB9 
 16349      FFFF BCFF 
 16349      FF8B 573E 
 16350 105d 00        		.string	""
 16351 105e 00        		.string	""
 16352 105f 00        		.string	""
 16353 1060 00        		.string	""
 16354 1061 00        		.string	""
 16355 1062 00        		.string	""
 16356 1063 00        		.string	""
 16357 1064 00        		.string	""
 16358 1065 00        		.string	""
 16359 1066 00        		.string	""
 16360 1067 00        		.string	""
 16361 1068 00        		.string	""
 16362 1069 0B13 1F2E 		.string	"\013\023\037.AZ\213\377\377\377\321\377\377\377\377\246mI3#\032\023\013"
 16362      415A 8BFF 
 16362      FFFF D1FF 
 16362      FFFF FFA6 
 16362      6D49 3323 
 16363 1081 00        		.string	""
 16364 1082 00        		.string	""
 16365 1083 00        		.string	""
 16366 1084 00        		.string	""
 16367 1085 00        		.string	""
 16368 1086 00        		.string	""
 16369 1087 00        		.string	""
 16370 1088 00        		.string	""
 16371 1089 00        		.string	""
 16372 108a 00        		.string	""
 16373 108b 00        		.string	""
 16374 108c 00        		.string	""
 16375 108d 0B13 1A27 		.string	"\013\023\032'9Or\256\377\377\377\377\375\377\377\202T>.\037\023\013"
 16375      394F 72AE 
 16375      FFFF FFFF 
 16375      FDFF FF82 
 16375      543E 2E1F 
 16376 10a4 00        		.string	""
 16377 10a5 00        		.string	""
 16378 10a6 00        		.string	""
 16379 10a7 00        		.string	""
 16380 10a8 00        		.string	""
 16381 10a9 00        		.string	""
 16382 10aa 00        		.string	""
 16383 10ab 00        		.string	""
 16384 10ac 00        		.string	""
 16385 10ad 00        		.string	""
 16386 10ae 00        		.string	""
 16387 10af 00        		.string	""
 16388 10b0 00        		.string	""
 16389 10b1 00        		.string	""
 16390 10b2 0B13 1F31 		.string	"\013\023\0371D_\223\377\377\377\377\377\377\236gI3#\032\023\013"
 16390      445F 93FF 
 16390      FFFF FFFF 
 16390      FF9E 6749 
 16390      3323 1A13 
 16391 10c8 00        		.string	""
 16392 10c9 00        		.string	""
 16393 10ca 00        		.string	""
 16394 10cb 00        		.string	""
 16395 10cc 00        		.string	""
 16396 10cd 00        		.string	""
 16397 10ce 00        		.string	""
 16398 10cf 00        		.string	""
 16399 10d0 00        		.string	""
 16400 10d1 00        		.string	""
 16401 10d2 00        		.string	""
 16402 10d3 00        		.string	""
 16403 10d4 00        		.string	""
 16404 10d5 00        		.string	""
 16405 10d6 0B13 1F2A 		.string	"\013\023\037*>Tx\266\377\377\377\377\311}T>.\037\023\013"
 16405      3E54 78B6 
 16405      FFFF FFFF 
 16405      C97D 543E 
 16405      2E1F 130B 
 16406 10eb 00        		.string	""
 16407 10ec 00        		.string	""
 16408 10ed 00        		.string	""
 16409 10ee 00        		.string	""
 16410 10ef 00        		.string	""
 16411 10f0 00        		.string	""
 16412 10f1 00        		.string	""
 16413 10f2 00        		.string	""
 16414 10f3 00        		.string	""
 16415 10f4 00        		.string	""
 16416 10f5 00        		.string	""
 16417 10f6 00        		.string	""
 16418 10f7 00        		.string	""
 16419 10f8 00        		.string	""
 16420 10f9 00        		.string	""
 16421 10fa 00        		.string	""
 16422 10fb 0B13 2333 		.string	"\013\023#3Ib\226\377\377\377\377\230dI6#\032\013\013"
 16422      4962 96FF 
 16422      FFFF FF98 
 16422      6449 3623 
 16422      1A0B 0B00 
 16423 110f 00        		.string	""
 16424 1110 00        		.string	""
 16425 1111 00        		.string	""
 16426 1112 00        		.string	""
 16427 1113 00        		.string	""
 16428 1114 00        		.string	""
 16429 1115 00        		.string	""
 16430 1116 00        		.string	""
 16431 1117 00        		.string	""
 16432 1118 00        		.string	""
 16433 1119 00        		.string	""
 16434 111a 00        		.string	""
 16435 111b 00        		.string	""
 16436 111c 00        		.string	""
 16437 111d 00        		.string	""
 16438 111e 00        		.string	""
 16439 111f 0B13 1F2A 		.string	"\013\023\037*<Qu\264\377\377\264uQ<*\037\023\013"
 16439      3C51 75B4 
 16439      FFFF B475 
 16439      513C 2A1F 
 16439      130B 00
 16440 1132 00        		.string	""
 16441 1133 00        		.string	""
 16442 1134 00        		.string	""
 16443 1135 00        		.string	""
 16444 1136 00        		.string	""
 16445 1137 00        		.string	""
 16446 1138 00        		.string	""
 16447 1139 00        		.string	""
 16448 113a 00        		.string	""
 16449 113b 00        		.string	""
 16450 113c 00        		.string	""
 16451 113d 00        		.string	""
 16452 113e 00        		.string	""
 16453 113f 00        		.string	""
 16454 1140 00        		.string	""
 16455 1141 00        		.string	""
 16456 1142 00        		.string	""
 16457 1143 00        		.string	""
 16458 1144 0B13 1F2E 		.string	"\013\023\037.>T}\334\317zT>.\037\023\013"
 16458      3E54 7DDC 
 16458      CF7A 543E 
 16458      2E1F 130B 
 16458      00
 16459 1155 00        		.string	""
 16460 1156 00        		.string	""
 16461 1157 00        		.string	""
 16462 1158 00        		.string	""
 16463 1159 00        		.string	""
 16464 115a 00        		.string	""
 16465 115b 00        		.string	""
 16466 115c 00        		.string	""
 16467 115d 00        		.string	""
 16468 115e 00        		.string	""
 16469 115f 00        		.string	""
 16470 1160 00        		.string	""
 16471 1161 00        		.string	""
 16472 1162 00        		.string	""
 16473 1163 00        		.string	""
 16474 1164 00        		.string	""
 16475 1165 00        		.string	""
 16476 1166 00        		.string	""
 16477 1167 00        		.string	""
 16478 1168 0B0B 1323 		.string	"\013\013\023#.>QdbQ>.#\023\013\013"
 16478      2E3E 5164 
 16478      6251 3E2E 
 16478      2313 0B0B 
 16478      00
 16479 1179 00        		.string	""
 16480 117a 00        		.string	""
 16481 117b 00        		.string	""
 16482 117c 00        		.string	""
 16483 117d 00        		.string	""
 16484 117e 00        		.string	""
 16485 117f 00        		.string	""
 16486 1180 00        		.string	""
 16487 1181 00        		.string	""
 16488 1182 00        		.string	""
 16489 1183 00        		.string	""
 16490 1184 00        		.string	""
 16491 1185 00        		.string	""
 16492 1186 00        		.string	""
 16493 1187 00        		.string	""
 16494 1188 00        		.string	""
 16495 1189 00        		.string	""
 16496 118a 00        		.string	""
 16497 118b 00        		.string	""
 16498 118c 00        		.string	""
 16499 118d 0B0B 1A1F 		.string	"\013\013\032\037.9>>9.\037\032\023\013"
 16499      2E39 3E3E 
 16499      392E 1F1A 
 16499      130B 00
 16500 119c 00        		.string	""
 16501 119d 00        		.string	""
 16502 119e 00        		.string	""
 16503 119f 00        		.string	""
 16504 11a0 00        		.string	""
 16505 11a1 00        		.string	""
 16506 11a2 00        		.string	""
 16507 11a3 00        		.string	""
 16508 11a4 00        		.string	""
 16509 11a5 00        		.string	""
 16510 11a6 00        		.string	""
 16511 11a7 00        		.string	""
 16512 11a8 00        		.string	""
 16513 11a9 00        		.string	""
 16514 11aa 00        		.string	""
 16515 11ab 00        		.string	""
 16516 11ac 00        		.string	""
 16517 11ad 00        		.string	""
 16518 11ae 00        		.string	""
 16519 11af 00        		.string	""
 16520 11b0 00        		.string	""
 16521 11b1 00        		.string	""
 16522 11b2 0B13 131F 		.ascii	"\013\023\023\037'**#"
 16522      272A 2A23 
 16523 11ba 1F13 130B 		.string	"\037\023\023\013"
 16523      00
 16524 11bf 00        		.string	""
 16525 11c0 00        		.string	""
 16526 11c1 00        		.string	""
 16527 11c2 00        		.string	""
 16528 11c3 00        		.string	""
 16529 11c4 00        		.string	""
 16530 11c5 00        		.string	""
 16531 11c6 00        		.string	""
 16532 11c7 00        		.string	""
 16533 11c8 00        		.string	""
 16534 11c9 00        		.string	""
 16535               		.local	_lcd_initialized
 16536               		.comm	_lcd_initialized,1,1
 16539               	__c.2.lto_priv.1:
 16540 11ca 5053 2F32 		.string	"PS/2 keyboard initialized"
 16540      206B 6579 
 16540      626F 6172 
 16540      6420 696E 
 16540      6974 6961 
 16543               	__c.0.lto_priv.1:
 16544 11e4 4144 4320 		.string	"ADC initialized"
 16544      696E 6974 
 16544      6961 6C69 
 16544      7A65 6400 
 16547               	__c.0.lto_priv.2:
 16548 11f4 524E 4720 		.string	"RNG initialized"
 16548      696E 6974 
 16548      6961 6C69 
 16548      7A65 6400 
 16551               	__c.0.lto_priv.6:
 16552 1204 4D65 6D6F 		.string	"Memory test failed at address 0x%06lX\n         [0x%02X != 0x%02X]"
 16552      7279 2074 
 16552      6573 7420 
 16552      6661 696C 
 16552      6564 2061 
 16555               	__c.1.lto_priv.2:
 16556 1246 3078 2530 		.string	"0x%06lX"
 16556      366C 5800 
 16559               	__c.2.lto_priv.2:
 16560 124e 5665 7269 		.string	"Verifying pattern"
 16560      6679 696E 
 16560      6720 7061 
 16560      7474 6572 
 16560      6E00 
 16563               	__c.3.lto_priv.0:
 16564 1260 3078 2530 		.string	"0x%06lX"
 16564      366C 5800 
 16567               	__c.4.lto_priv.0:
 16568 1268 5772 6974 		.string	"Writing pattern"
 16568      696E 6720 
 16568      7061 7474 
 16568      6572 6E00 
 16571               	__c.5.lto_priv.0:
 16572 1278 5465 7374 		.string	"Testing memory bank [%02d]"
 16572      696E 6720 
 16572      6D65 6D6F 
 16572      7279 2062 
 16572      616E 6B20 
 16575               	__c.6.lto_priv.0:
 16576 1293 5374 6172 		.string	"Starting complete memory test"
 16576      7469 6E67 
 16576      2063 6F6D 
 16576      706C 6574 
 16576      6520 6D65 
 16579               	__c.7.lto_priv.0:
 16580 12b1 4578 7465 		.string	"External memory driver initialized"
 16580      726E 616C 
 16580      206D 656D 
 16580      6F72 7920 
 16580      6472 6976 
 16583               	__c.1.lto_priv.4:
 16584 12d4 4F72 6967 		.string	"Original, "
 16584      696E 616C 
 16584      2C20 00
 16587               	__c.2.lto_priv.3:
 16588 12df 436F 7079 		.string	"Copy, "
 16588      2C20 00
 16591               	__c.0.lto_priv.8:
 16592 12e6 466C 6167 		.string	"Flags            : %S%S"
 16592      7320 2020 
 16592      2020 2020 
 16592      2020 2020 
 16592      203A 2025 
 16595               	__c.4.lto_priv.1:
 16596 12fe 5772 6974 		.string	"Write Protected"
 16596      6520 5072 
 16596      6F74 6563 
 16596      7465 6400 
 16599               	__c.3.lto_priv.1:
 16600 130e 5265 7772 		.string	"Rewritable"
 16600      6974 6162 
 16600      6C65 00
 16603               	__c.5.lto_priv.1:
 16604 1319 5465 6D70 		.string	"Temporarily Write Protected"
 16604      6F72 6172 
 16604      696C 7920 
 16604      5772 6974 
 16604      6520 5072 
 16607               	__c.17:
 16608 1335 5344 00   		.string	"SD"
 16611               	__c.18:
 16612 1338 5344 4843 		.string	"SDHC"
 16612      00
 16615               	__c.6.lto_priv.1:
 16616 133d 466F 726D 		.string	"Format           : 0x%02X"
 16616      6174 2020 
 16616      2020 2020 
 16616      2020 2020 
 16616      203A 2030 
 16619               	__c.7.lto_priv.1:
 16620 1357 2020 2020 		.string	"                   (%lu bytes)"
 16620      2020 2020 
 16620      2020 2020 
 16620      2020 2020 
 16620      2020 2028 
 16623               	__c.8:
 16624 1376 4361 7061 		.string	"Capacity         : %lu blocks"
 16624      6369 7479 
 16624      2020 2020 
 16624      2020 2020 
 16624      203A 2025 
 16627               	__c.9:
 16628 1394 4D61 6E75 		.string	"Manufacture Date : %02d-%d"
 16628      6661 6374 
 16628      7572 6520 
 16628      4461 7465 
 16628      203A 2025 
 16631               	__c.10:
 16632 13af 5365 7269 		.string	"Serial Number    : 0x%08lx"
 16632      616C 204E 
 16632      756D 6265 
 16632      7220 2020 
 16632      203A 2030 
 16635               	__c.11:
 16636 13ca 5265 7669 		.string	"Revision         : %c.%c"
 16636      7369 6F6E 
 16636      2020 2020 
 16636      2020 2020 
 16636      203A 2025 
 16639               	__c.12:
 16640 13e3 5072 6F64 		.string	"Product Name     : %s"
 16640      7563 7420 
 16640      4E61 6D65 
 16640      2020 2020 
 16640      203A 2025 
 16643               	__c.13:
 16644 13f9 4F45 4D20 		.string	"OEM              : %s"
 16644      2020 2020 
 16644      2020 2020 
 16644      2020 2020 
 16644      203A 2025 
 16647               	__c.14:
 16648 140f 4D61 6E75 		.string	"Manufacturer ID  : %02X"
 16648      6661 6374 
 16648      7572 6572 
 16648      2049 4420 
 16648      203A 2025 
 16651               	__c.15:
 16652 1427 426C 6F63 		.string	"Block Size       : %d"
 16652      6B20 5369 
 16652      7A65 2020 
 16652      2020 2020 
 16652      203A 2025 
 16655               	__c.16:
 16656 143d 4361 7264 		.string	"Card Type        : %S"
 16656      2054 7970 
 16656      6520 2020 
 16656      2020 2020 
 16656      203A 2025 
 16657               		.local	_capacity
 16658               		.comm	_capacity,4,1
 16659               		.local	_format
 16660               		.comm	_format,1,1
 16661               		.local	_flag_write_protect_temp
 16662               		.comm	_flag_write_protect_temp,1,1
 16663               		.local	_flag_write_protect
 16664               		.comm	_flag_write_protect,1,1
 16665               		.local	_flag_copy
 16666               		.comm	_flag_copy,1,1
 16667               		.local	_manufacturing_month
 16668               		.comm	_manufacturing_month,1,1
 16669               		.local	_manufacturing_year
 16670               		.comm	_manufacturing_year,1,1
 16671               		.local	_serial
 16672               		.comm	_serial,4,1
 16673               		.local	_revision
 16674               		.comm	_revision,1,1
 16675               		.local	_product
 16676               		.comm	_product,6,1
 16677               		.local	_oem
 16678               		.comm	_oem,3,1
 16679               		.local	_manufacturer
 16680               		.comm	_manufacturer,1,1
 16683               	__c.21:
 16684 1453 5265 6164 		.string	"Reading SD card parameters"
 16684      696E 6720 
 16684      5344 2063 
 16684      6172 6420 
 16684      7061 7261 
 16687               	__c.22:
 16688 146e 5344 2063 		.string	"SD card initialized"
 16688      6172 6420 
 16688      696E 6974 
 16688      6961 6C69 
 16688      7A65 6400 
 16689               		.local	_card_type
 16690               		.comm	_card_type,1,1
 16693               	__c.23:
 16694 1482 5344 2064 		.string	"SD driver starting"
 16694      7269 7665 
 16694      7220 7374 
 16694      6172 7469 
 16694      6E67 00
 16695               		.local	_finished
 16696               		.comm	_finished,1,1
 16697               		.local	_memory_size
 16698               		.comm	_memory_size,4,1
 16701               	__c.0.lto_priv.0:
 16702 1495 5365 7475 		.string	"Setup done!"
 16702      7020 646F 
 16702      6E65 2100 
 16705               	__c.1.lto_priv.0:
 16706 14a1 0A53 7461 		.string	"\nStarting RISC-V Emulator Kernel ...\n\n"
 16706      7274 696E 
 16706      6720 5249 
 16706      5343 2D56 
 16706      2045 6D75 
 16709               	__c.2.lto_priv.0:
 16710 14c8 0A49 6D61 		.string	"\nImaginaryOS Version 0.1 Booting ...\n"
 16710      6769 6E61 
 16710      7279 4F53 
 16710      2056 6572 
 16710      7369 6F6E 
 16711               		.text
 16712               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 <artificial>
     /tmp/cclVlxlC.s:2      *ABS*:0000003e __SP_H__
     /tmp/cclVlxlC.s:3      *ABS*:0000003d __SP_L__
     /tmp/cclVlxlC.s:4      *ABS*:0000003f __SREG__
     /tmp/cclVlxlC.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cclVlxlC.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cclVlxlC.s:12     .text:00000000 _abgr_to_rgb565
     /tmp/cclVlxlC.s:16     .text:00000000 .Loc.0
     /tmp/cclVlxlC.s:17     .text:00000000 L0
     /tmp/cclVlxlC.s:22     .text:00000000 .Loc.1
     /tmp/cclVlxlC.s:28     .text:00000008 .Loc.2
     /tmp/cclVlxlC.s:31     .text:00000008 .Loc.3
     /tmp/cclVlxlC.s:33     .text:00000008 .Loc.4
     /tmp/cclVlxlC.s:34     .text:00000008 .Loc.5
     /tmp/cclVlxlC.s:39     .text:00000008 .Loc.6
     /tmp/cclVlxlC.s:40     .text:00000008 .Loc.7
     /tmp/cclVlxlC.s:42     .text:00000008 .Loc.8
     /tmp/cclVlxlC.s:43     .text:00000008 .Loc.9
     /tmp/cclVlxlC.s:44     .text:00000008 .Loc.10
     /tmp/cclVlxlC.s:15176  .progmem.data:000002c5 _gamma
     /tmp/cclVlxlC.s:55     .text:00000012 .Loc.11
     /tmp/cclVlxlC.s:56     .text:00000012 .Loc.12
     /tmp/cclVlxlC.s:62     .text:00000012 .Loc.13
     /tmp/cclVlxlC.s:64     .text:00000012 .Loc.14
     /tmp/cclVlxlC.s:65     .text:00000012 .Loc.15
     /tmp/cclVlxlC.s:70     .text:00000012 .Loc.16
     /tmp/cclVlxlC.s:71     .text:00000012 .Loc.17
     /tmp/cclVlxlC.s:73     .text:00000012 .Loc.18
     /tmp/cclVlxlC.s:74     .text:00000012 .Loc.19
     /tmp/cclVlxlC.s:75     .text:00000012 .Loc.20
     /tmp/cclVlxlC.s:86     .text:0000001c .Loc.21
     /tmp/cclVlxlC.s:87     .text:0000001c .Loc.22
     /tmp/cclVlxlC.s:93     .text:0000001c .Loc.23
     /tmp/cclVlxlC.s:95     .text:0000001c .Loc.24
     /tmp/cclVlxlC.s:96     .text:0000001c .Loc.25
     /tmp/cclVlxlC.s:101    .text:0000001c .Loc.26
     /tmp/cclVlxlC.s:102    .text:0000001c .Loc.27
     /tmp/cclVlxlC.s:104    .text:0000001c .Loc.28
     /tmp/cclVlxlC.s:105    .text:0000001c .Loc.29
     /tmp/cclVlxlC.s:106    .text:0000001c .Loc.30
     /tmp/cclVlxlC.s:111    .text:0000001c .Loc.31
     /tmp/cclVlxlC.s:117    .text:00000024 .Loc.32
     /tmp/cclVlxlC.s:122    .text:00000024 .Loc.33
     /tmp/cclVlxlC.s:132    .text:0000002c .Loc.34
     /tmp/cclVlxlC.s:133    .text:0000002c .Loc.35
     /tmp/cclVlxlC.s:140    .text:0000002c .Loc.36
     /tmp/cclVlxlC.s:142    .text:0000002c .Loc.37
     /tmp/cclVlxlC.s:143    .text:0000002c .Loc.38
     /tmp/cclVlxlC.s:149    .text:00000036 .Loc.39
     /tmp/cclVlxlC.s:156    .text:00000042 .Loc.40
     /tmp/cclVlxlC.s:159    .text:00000046 .Loc.41
     /tmp/cclVlxlC.s:165    .text:0000004c .Loc.42
     /tmp/cclVlxlC.s:169    .text:00000050 L0
     /tmp/cclVlxlC.s:173    .text:00000050 serial_tx
     /tmp/cclVlxlC.s:176    .text:00000050 .Loc.43
     /tmp/cclVlxlC.s:177    .text:00000050 L0
     /tmp/cclVlxlC.s:184    .text:00000050 .Loc.44
     /tmp/cclVlxlC.s:185    .text:00000050 .Loc.45
     /tmp/cclVlxlC.s:186    .text:00000050 .Loc.46
     /tmp/cclVlxlC.s:188    .text:00000054 .Loc.47
     /tmp/cclVlxlC.s:191    .text:00000058 .Loc.48
     /tmp/cclVlxlC.s:192    .text:00000058 .Loc.49
     /tmp/cclVlxlC.s:195    .text:0000005c .Loc.50
     /tmp/cclVlxlC.s:197    .text:0000005e L0
     /tmp/cclVlxlC.s:201    .text:0000005e spi_fast
     /tmp/cclVlxlC.s:204    .text:0000005e .Loc.51
     /tmp/cclVlxlC.s:205    .text:0000005e L0
     /tmp/cclVlxlC.s:210    .text:0000005e .Loc.52
     /tmp/cclVlxlC.s:211    .text:0000005e .Loc.53
     /tmp/cclVlxlC.s:215    .text:00000064 .Loc.54
     /tmp/cclVlxlC.s:217    .text:00000066 .Loc.55
     /tmp/cclVlxlC.s:221    .text:0000006a .Loc.56
     /tmp/cclVlxlC.s:223    .text:0000006c L0
     /tmp/cclVlxlC.s:227    .text:0000006c spi_xchg_try
     /tmp/cclVlxlC.s:230    .text:0000006c .Loc.57
     /tmp/cclVlxlC.s:231    .text:0000006c L0
     /tmp/cclVlxlC.s:236    .text:0000006c .Loc.58
     /tmp/cclVlxlC.s:238    .text:0000006e .Loc.59
     /tmp/cclVlxlC.s:240    .text:0000006e .Loc.60
     /tmp/cclVlxlC.s:241    .text:0000006e .Loc.61
     /tmp/cclVlxlC.s:243    .text:00000070 .Loc.62
     /tmp/cclVlxlC.s:244    .text:00000070 .Loc.63
     /tmp/cclVlxlC.s:249    .text:00000074 .Loc.64
     /tmp/cclVlxlC.s:253    .text:0000007a .Loc.65
     /tmp/cclVlxlC.s:254    .text:0000007a .Loc.66
     /tmp/cclVlxlC.s:257    .text:0000007c .Loc.67
     /tmp/cclVlxlC.s:260    .text:0000007e .Loc.68
     /tmp/cclVlxlC.s:261    .text:0000007e .Loc.69
     /tmp/cclVlxlC.s:264    .text:00000080 .Loc.70
     /tmp/cclVlxlC.s:268    .text:00000082 .Loc.71
     /tmp/cclVlxlC.s:269    .text:00000082 .Loc.72
     /tmp/cclVlxlC.s:272    .text:00000084 .Loc.73
     /tmp/cclVlxlC.s:277    .text:00000088 .Loc.74
     /tmp/cclVlxlC.s:280    .text:00000088 .Loc.75
     /tmp/cclVlxlC.s:282    .text:0000008a .Loc.76
     /tmp/cclVlxlC.s:284    .text:0000008a .Loc.77
     /tmp/cclVlxlC.s:287    .text:0000008c .Loc.78
     /tmp/cclVlxlC.s:291    .text:0000008e L0
     /tmp/cclVlxlC.s:295    .text:0000008e spi_tx_try
     /tmp/cclVlxlC.s:298    .text:0000008e .Loc.79
     /tmp/cclVlxlC.s:299    .text:0000008e L0
     /tmp/cclVlxlC.s:300    .text:0000008e .Loc.80
     /tmp/cclVlxlC.s:316    .text:00000098 .Loc.81
     /tmp/cclVlxlC.s:317    .text:00000098 .Loc.82
     /tmp/cclVlxlC.s:318    .text:00000098 .Loc.83
     /tmp/cclVlxlC.s:325    .text:000000a2 .Loc.84
     /tmp/cclVlxlC.s:330    .text:000000aa L0
     /tmp/cclVlxlC.s:334    .text:000000aa _lcd_window_end
     /tmp/cclVlxlC.s:336    .text:000000aa .Loc.85
     /tmp/cclVlxlC.s:337    .text:000000aa L0
     /tmp/cclVlxlC.s:342    .text:000000aa .Loc.86
     /tmp/cclVlxlC.s:345    .text:000000ac .Loc.87
     /tmp/cclVlxlC.s:347    .text:000000ae L0
     /tmp/cclVlxlC.s:351    .text:000000ae sd_read
     /tmp/cclVlxlC.s:355    .text:000000ae .Loc.88
     /tmp/cclVlxlC.s:356    .text:000000ae L0
     /tmp/cclVlxlC.s:357    .text:000000ae .Loc.89
     /tmp/cclVlxlC.s:400    .text:000000ce .Loc.90
     /tmp/cclVlxlC.s:401    .text:000000ce .Loc.91
     /tmp/cclVlxlC.s:402    .text:000000ce .Loc.92
     /tmp/cclVlxlC.s:404    .text:000000ce .Loc.93
     /tmp/cclVlxlC.s:406    .text:000000d0 .Loc.94
     /tmp/cclVlxlC.s:408    .text:000000d0 .Loc.95
     /tmp/cclVlxlC.s:412    .text:000000d0 .Loc.96
     /tmp/cclVlxlC.s:414    .text:000000d0 .Loc.97
     /tmp/cclVlxlC.s:415    .text:000000d0 .Loc.98
     /tmp/cclVlxlC.s:16680  .bss:000000bd _card_type
     /tmp/cclVlxlC.s:429    .text:000000e6 .Loc.99
     /tmp/cclVlxlC.s:434    .text:000000e6 .Loc.100
     /tmp/cclVlxlC.s:437    .text:000000e6 .Loc.101
     /tmp/cclVlxlC.s:441    .text:000000ec .Loc.102
     /tmp/cclVlxlC.s:446    .text:000000f0 .Loc.103
     /tmp/cclVlxlC.s:449    .text:000000f2 .Loc.104
     /tmp/cclVlxlC.s:452    .text:000000f6 .Loc.105
     /tmp/cclVlxlC.s:457    .text:000000fa .Loc.106
     /tmp/cclVlxlC.s:460    .text:000000fc .Loc.107
     /tmp/cclVlxlC.s:463    .text:00000100 .Loc.108
     /tmp/cclVlxlC.s:469    .text:00000104 .Loc.109
     /tmp/cclVlxlC.s:472    .text:00000104 .Loc.110
     /tmp/cclVlxlC.s:473    .text:00000104 .Loc.111
     /tmp/cclVlxlC.s:474    .text:00000104 .Loc.112
     /tmp/cclVlxlC.s:476    .text:00000104 .Loc.113
     /tmp/cclVlxlC.s:479    .text:00000106 .Loc.114
     /tmp/cclVlxlC.s:482    .text:0000010a .Loc.115
     /tmp/cclVlxlC.s:486    .text:0000010e .Loc.116
     /tmp/cclVlxlC.s:487    .text:0000010e .Loc.117
     /tmp/cclVlxlC.s:488    .text:0000010e .Loc.118
     /tmp/cclVlxlC.s:490    .text:0000010e .Loc.119
     /tmp/cclVlxlC.s:493    .text:00000110 .Loc.120
     /tmp/cclVlxlC.s:496    .text:00000114 .Loc.121
     /tmp/cclVlxlC.s:500    .text:00000118 .Loc.122
     /tmp/cclVlxlC.s:501    .text:00000118 .Loc.123
     /tmp/cclVlxlC.s:502    .text:00000118 .Loc.124
     /tmp/cclVlxlC.s:504    .text:00000118 .Loc.125
     /tmp/cclVlxlC.s:507    .text:0000011a .Loc.126
     /tmp/cclVlxlC.s:510    .text:0000011e .Loc.127
     /tmp/cclVlxlC.s:514    .text:00000122 .Loc.128
     /tmp/cclVlxlC.s:515    .text:00000122 .Loc.129
     /tmp/cclVlxlC.s:516    .text:00000122 .Loc.130
     /tmp/cclVlxlC.s:518    .text:00000122 .Loc.131
     /tmp/cclVlxlC.s:521    .text:00000124 .Loc.132
     /tmp/cclVlxlC.s:524    .text:00000128 .Loc.133
     /tmp/cclVlxlC.s:530    .text:00000130 .Loc.134
     /tmp/cclVlxlC.s:535    .text:00000130 .Loc.135
     /tmp/cclVlxlC.s:541    .text:00000136 .Loc.136
     /tmp/cclVlxlC.s:545    .text:00000136 .Loc.137
     /tmp/cclVlxlC.s:547    .text:00000136 .Loc.138
     /tmp/cclVlxlC.s:550    .text:00000136 .Loc.139
     /tmp/cclVlxlC.s:552    .text:00000136 .Loc.140
     /tmp/cclVlxlC.s:553    .text:00000136 .Loc.141
     /tmp/cclVlxlC.s:558    .text:0000013e .Loc.142
     /tmp/cclVlxlC.s:561    .text:0000013e .Loc.143
     /tmp/cclVlxlC.s:567    .text:00000146 .Loc.144
     /tmp/cclVlxlC.s:568    .text:00000146 .Loc.145
     /tmp/cclVlxlC.s:569    .text:00000146 .Loc.146
     /tmp/cclVlxlC.s:570    .text:00000146 .Loc.147
     /tmp/cclVlxlC.s:573    .text:00000148 .Loc.148
     /tmp/cclVlxlC.s:576    .text:0000014c .Loc.149
     /tmp/cclVlxlC.s:577    .text:0000014c .Loc.150
     /tmp/cclVlxlC.s:580    .text:0000014e .Loc.151
     /tmp/cclVlxlC.s:585    .text:00000152 .Loc.152
     /tmp/cclVlxlC.s:593    .text:00000152 .Loc.153
     /tmp/cclVlxlC.s:594    .text:00000152 .Loc.154
     /tmp/cclVlxlC.s:599    .text:00000156 .Loc.155
     /tmp/cclVlxlC.s:607    .text:00000156 .Loc.156
     /tmp/cclVlxlC.s:615    .text:00000156 .Loc.157
     /tmp/cclVlxlC.s:625    .text:0000015a .Loc.158
     /tmp/cclVlxlC.s:628    .text:0000015e .Loc.159
     /tmp/cclVlxlC.s:630    .text:00000160 .Loc.160
     /tmp/cclVlxlC.s:632    .text:00000160 .Loc.161
     /tmp/cclVlxlC.s:637    .text:00000160 .Loc.162
     /tmp/cclVlxlC.s:642    .text:00000160 .Loc.163
     /tmp/cclVlxlC.s:647    .text:00000162 .Loc.164
     /tmp/cclVlxlC.s:653    .text:00000162 .Loc.165
     /tmp/cclVlxlC.s:660    .text:0000016c .Loc.166
     /tmp/cclVlxlC.s:672    .text:0000017a .Loc.167
     /tmp/cclVlxlC.s:677    .text:00000180 .Loc.168
     /tmp/cclVlxlC.s:679    .text:00000180 .Loc.169
     /tmp/cclVlxlC.s:681    .text:00000180 .Loc.170
     /tmp/cclVlxlC.s:684    .text:00000180 .Loc.171
     /tmp/cclVlxlC.s:686    .text:00000180 .Loc.172
     /tmp/cclVlxlC.s:687    .text:00000180 .Loc.173
     /tmp/cclVlxlC.s:693    .text:0000018a .Loc.174
     /tmp/cclVlxlC.s:696    .text:0000018a .Loc.175
     /tmp/cclVlxlC.s:700    .text:0000018e .Loc.176
     /tmp/cclVlxlC.s:701    .text:0000018e .Loc.177
     /tmp/cclVlxlC.s:702    .text:0000018e .Loc.178
     /tmp/cclVlxlC.s:703    .text:0000018e .Loc.179
     /tmp/cclVlxlC.s:706    .text:00000190 .Loc.180
     /tmp/cclVlxlC.s:709    .text:00000194 .Loc.181
     /tmp/cclVlxlC.s:710    .text:00000194 .Loc.182
     /tmp/cclVlxlC.s:715    .text:0000019c .Loc.183
     /tmp/cclVlxlC.s:719    .text:000001a0 .Loc.184
     /tmp/cclVlxlC.s:724    .text:000001a4 .Loc.185
     /tmp/cclVlxlC.s:726    .text:000001a4 .Loc.186
     /tmp/cclVlxlC.s:729    .text:000001a4 .Loc.187
     /tmp/cclVlxlC.s:731    .text:000001a4 .Loc.188
     /tmp/cclVlxlC.s:734    .text:000001a4 .Loc.189
     /tmp/cclVlxlC.s:741    .text:000001aa .Loc.190
     /tmp/cclVlxlC.s:745    .text:000001b0 .Loc.191
     /tmp/cclVlxlC.s:748    .text:000001b0 .Loc.192
     /tmp/cclVlxlC.s:752    .text:000001b4 .Loc.193
     /tmp/cclVlxlC.s:753    .text:000001b4 .Loc.194
     /tmp/cclVlxlC.s:754    .text:000001b4 .Loc.195
     /tmp/cclVlxlC.s:759    .text:000001ba .Loc.196
     /tmp/cclVlxlC.s:764    .text:000001c0 .Loc.197
     /tmp/cclVlxlC.s:766    .text:000001c2 .Loc.198
     /tmp/cclVlxlC.s:768    .text:000001c2 .Loc.199
     /tmp/cclVlxlC.s:772    .text:000001c8 .Loc.200
     /tmp/cclVlxlC.s:776    .text:000001cc .Loc.201
     /tmp/cclVlxlC.s:777    .text:000001cc .Loc.202
     /tmp/cclVlxlC.s:778    .text:000001cc .Loc.203
     /tmp/cclVlxlC.s:780    .text:000001cc .Loc.204
     /tmp/cclVlxlC.s:783    .text:000001ce .Loc.205
     /tmp/cclVlxlC.s:786    .text:000001d2 .Loc.206
     /tmp/cclVlxlC.s:790    .text:000001d6 .Loc.207
     /tmp/cclVlxlC.s:791    .text:000001d6 .Loc.208
     /tmp/cclVlxlC.s:792    .text:000001d6 .Loc.209
     /tmp/cclVlxlC.s:794    .text:000001d6 .Loc.210
     /tmp/cclVlxlC.s:797    .text:000001d8 .Loc.211
     /tmp/cclVlxlC.s:800    .text:000001dc .Loc.212
     /tmp/cclVlxlC.s:804    .text:000001e0 .Loc.213
     /tmp/cclVlxlC.s:805    .text:000001e0 .Loc.214
     /tmp/cclVlxlC.s:806    .text:000001e0 .Loc.215
     /tmp/cclVlxlC.s:808    .text:000001e2 .Loc.216
     /tmp/cclVlxlC.s:809    .text:000001e2 .Loc.217
     /tmp/cclVlxlC.s:813    .text:000001e4 L0
     /tmp/cclVlxlC.s:817    .text:000001e4 _gfx_check_bounds
     /tmp/cclVlxlC.s:821    .text:000001e4 .Loc.218
     /tmp/cclVlxlC.s:822    .text:000001e4 L0
     /tmp/cclVlxlC.s:827    .text:000001e4 .Loc.219
     /tmp/cclVlxlC.s:831    .text:000001e8 .Loc.220
     /tmp/cclVlxlC.s:834    .text:000001ea .Loc.221
     /tmp/cclVlxlC.s:837    .text:000001ec .Loc.222
     /tmp/cclVlxlC.s:838    .text:000001ec .Loc.223
     /tmp/cclVlxlC.s:843    .text:000001f2 .Loc.224
     /tmp/cclVlxlC.s:845    .text:000001f4 .Loc.225
     /tmp/cclVlxlC.s:850    .text:000001fc .Loc.226
     /tmp/cclVlxlC.s:855    .text:00000204 .Loc.227
     /tmp/cclVlxlC.s:860    .text:0000020c .Loc.228
     /tmp/cclVlxlC.s:864    .text:00000210 .Loc.229
     /tmp/cclVlxlC.s:868    .text:00000216 .Loc.230
     /tmp/cclVlxlC.s:872    .text:0000021a .Loc.231
     /tmp/cclVlxlC.s:875    .text:0000021c .Loc.232
     /tmp/cclVlxlC.s:883    .text:00000226 .Loc.233
     /tmp/cclVlxlC.s:888    .text:00000228 .Loc.234
     /tmp/cclVlxlC.s:890    .text:0000022a L0
     /tmp/cclVlxlC.s:894    .text:0000022a _memory_check_bounds
     /tmp/cclVlxlC.s:897    .text:0000022a .Loc.235
     /tmp/cclVlxlC.s:898    .text:0000022a L0
     /tmp/cclVlxlC.s:899    .text:0000022a .Loc.236
     /tmp/cclVlxlC.s:926    .text:0000023e .Loc.237
     /tmp/cclVlxlC.s:927    .text:0000023e .Loc.238
                             .bss:00000000 _tasks
     /tmp/cclVlxlC.s:932    .text:0000024e .Loc.239
     /tmp/cclVlxlC.s:938    .text:00000258 .Loc.240
     /tmp/cclVlxlC.s:948    .text:00000272 .Loc.241
     /tmp/cclVlxlC.s:953    .text:0000027a .Loc.242
     /tmp/cclVlxlC.s:956    .text:0000027c .Loc.243
     /tmp/cclVlxlC.s:967    .text:0000028a .Loc.244
     /tmp/cclVlxlC.s:977    .text:00000298 .Loc.245
     /tmp/cclVlxlC.s:980    .text:0000029c L0
     /tmp/cclVlxlC.s:984    .text:0000029c syscall_exit
     /tmp/cclVlxlC.s:987    .text:0000029c .Loc.246
     /tmp/cclVlxlC.s:988    .text:0000029c L0
     /tmp/cclVlxlC.s:993    .text:0000029c .Loc.247
     /tmp/cclVlxlC.s:994    .text:0000029c .Loc.248
     /tmp/cclVlxlC.s:995    .text:0000029c .Loc.249
     /tmp/cclVlxlC.s:999    .text:0000029e .Loc.250
     /tmp/cclVlxlC.s:1001   .text:000002a0 L0
     /tmp/cclVlxlC.s:1005   .text:000002a0 syscall_finish
     /tmp/cclVlxlC.s:1008   .text:000002a0 .Loc.251
     /tmp/cclVlxlC.s:1009   .text:000002a0 L0
     /tmp/cclVlxlC.s:1014   .text:000002a0 .Loc.252
     /tmp/cclVlxlC.s:1015   .text:000002a0 .Loc.253
     /tmp/cclVlxlC.s:1018   .text:000002a2 .Loc.254
     /tmp/cclVlxlC.s:16690  .bss:000000be _finished
     /tmp/cclVlxlC.s:1020   .text:000002a6 .Loc.255
     /tmp/cclVlxlC.s:1021   .text:000002a6 .Loc.256
     /tmp/cclVlxlC.s:1022   .text:000002a6 .Loc.257
     /tmp/cclVlxlC.s:1026   .text:000002aa L0
     /tmp/cclVlxlC.s:1030   .text:000002aa syscall_event_register
     /tmp/cclVlxlC.s:1033   .text:000002aa .Loc.258
     /tmp/cclVlxlC.s:1034   .text:000002aa L0
     /tmp/cclVlxlC.s:1039   .text:000002aa .Loc.259
     /tmp/cclVlxlC.s:1041   .text:000002ac .Loc.260
     /tmp/cclVlxlC.s:1042   .text:000002ac .Loc.261
     /tmp/cclVlxlC.s:1043   .text:000002ac .Loc.262
     /tmp/cclVlxlC.s:1049   .text:000002b4 .Loc.263
     /tmp/cclVlxlC.s:1050   .text:000002b4 .Loc.264
     /tmp/cclVlxlC.s:1051   .text:000002b4 .Loc.265
     /tmp/cclVlxlC.s:1057   .text:000002be .Loc.266
     /tmp/cclVlxlC.s:1062   .text:000002c6 .Loc.267
     /tmp/cclVlxlC.s:1063   .text:000002c6 .Loc.268
     /tmp/cclVlxlC.s:1064   .text:000002c6 .Loc.269
     /tmp/cclVlxlC.s:1067   .text:000002c8 .Loc.270
     /tmp/cclVlxlC.s:1074   .text:000002d2 .Loc.271
     /tmp/cclVlxlC.s:1082   .text:000002de .Loc.272
     /tmp/cclVlxlC.s:1083   .text:000002de .Loc.273
     /tmp/cclVlxlC.s:1088   .text:000002e2 .Loc.274
     /tmp/cclVlxlC.s:1092   .text:000002e4 .Loc.275
     /tmp/cclVlxlC.s:1094   .text:000002e6 L0
     /tmp/cclVlxlC.s:1098   .text:000002e6 syscall_millis
     /tmp/cclVlxlC.s:1101   .text:000002e6 .Loc.276
     /tmp/cclVlxlC.s:1102   .text:000002e6 L0
     /tmp/cclVlxlC.s:1107   .text:000002e6 .Loc.277
     /tmp/cclVlxlC.s:1110   .text:000002e6 .Loc.278
     /tmp/cclVlxlC.s:1111   .text:000002e6 .Loc.279
     /tmp/cclVlxlC.s:1115   .text:000002e6 .Loc.280
     /tmp/cclVlxlC.s:1117   .text:000002e6 .Loc.281
     /tmp/cclVlxlC.s:1118   .text:000002e6 .Loc.282
     /tmp/cclVlxlC.s:14814  .bss:00000098 _ms
     /tmp/cclVlxlC.s:1126   .text:000002f6 .Loc.283
     /tmp/cclVlxlC.s:1132   .text:00000300 .Loc.284
     /tmp/cclVlxlC.s:1133   .text:00000300 .Loc.285
     /tmp/cclVlxlC.s:1137   .text:00000302 .Loc.286
     /tmp/cclVlxlC.s:1139   .text:00000304 L0
     /tmp/cclVlxlC.s:1143   .text:00000304 adc_read.constprop.0
     /tmp/cclVlxlC.s:1146   .text:00000304 .Loc.287
     /tmp/cclVlxlC.s:1147   .text:00000304 L0
     /tmp/cclVlxlC.s:1153   .text:00000304 .Loc.288
     /tmp/cclVlxlC.s:1157   .text:0000030c .Loc.289
     /tmp/cclVlxlC.s:1159   .text:00000310 .Loc.290
     /tmp/cclVlxlC.s:1161   .text:00000314 .Loc.291
     /tmp/cclVlxlC.s:1165   .text:0000031a .Loc.292
     /tmp/cclVlxlC.s:1169   .text:00000322 .Loc.293
     /tmp/cclVlxlC.s:1173   .text:0000032a .Loc.294
     /tmp/cclVlxlC.s:1175   .text:0000032c L0
     /tmp/cclVlxlC.s:1179   .text:0000032c panic
     /tmp/cclVlxlC.s:1183   .text:0000032c .Loc.295
     /tmp/cclVlxlC.s:1184   .text:0000032c L0
     /tmp/cclVlxlC.s:1185   .text:0000032c .Loc.296
     /tmp/cclVlxlC.s:1211   .text:00000348 .Loc.297
     /tmp/cclVlxlC.s:1216   .text:0000034e .Loc.298
     /tmp/cclVlxlC.s:1218   .text:00000350 .Loc.299
     /tmp/cclVlxlC.s:1219   .text:00000350 .Loc.300
     /tmp/cclVlxlC.s:1220   .text:00000350 .Loc.301
     /tmp/cclVlxlC.s:1222   .text:00000350 .Loc.302
     /tmp/cclVlxlC.s:1229   .text:0000035c .Loc.303
     /tmp/cclVlxlC.s:1230   .text:0000035c .Loc.304
     /tmp/cclVlxlC.s:8604   .text:00002446 _lcd_log
     /tmp/cclVlxlC.s:1237   .text:00000368 .Loc.305
     /tmp/cclVlxlC.s:1241   .text:0000036e .Loc.306
     /tmp/cclVlxlC.s:1242   .text:0000036e .Loc.307
     /tmp/cclVlxlC.s:1243   .text:0000036e .Loc.308
     /tmp/cclVlxlC.s:1244   .text:0000036e .Loc.309
     /tmp/cclVlxlC.s:14936  .progmem.data:00000290 __c.0.lto_priv.5
     /tmp/cclVlxlC.s:1251   .text:0000037a .Loc.310
     /tmp/cclVlxlC.s:1258   .text:00000386 .Loc.311
     /tmp/cclVlxlC.s:1265   .text:00000388 .Loc.312
     /tmp/cclVlxlC.s:1266   .text:00000388 .Loc.313
     /tmp/cclVlxlC.s:1267   .text:00000388 .Loc.314
     /tmp/cclVlxlC.s:1269   .text:0000038a L0
     /tmp/cclVlxlC.s:1273   .text:0000038a spi_xchg
     /tmp/cclVlxlC.s:1276   .text:0000038a .Loc.315
     /tmp/cclVlxlC.s:1277   .text:0000038a L0
     /tmp/cclVlxlC.s:1282   .text:0000038a .Loc.316
     /tmp/cclVlxlC.s:1283   .text:0000038a .Loc.317
     /tmp/cclVlxlC.s:1284   .text:0000038a .Loc.318
     /tmp/cclVlxlC.s:1286   .text:0000038c .Loc.319
     /tmp/cclVlxlC.s:1287   .text:0000038c .Loc.320
     /tmp/cclVlxlC.s:1292   .text:00000390 .Loc.321
     /tmp/cclVlxlC.s:1296   .text:00000396 .Loc.322
     /tmp/cclVlxlC.s:1297   .text:00000396 .Loc.323
     /tmp/cclVlxlC.s:1301   .text:00000398 .Loc.324
     /tmp/cclVlxlC.s:1305   .text:0000039a .Loc.325
     /tmp/cclVlxlC.s:1306   .text:0000039a .Loc.326
     /tmp/cclVlxlC.s:1309   .text:0000039c .Loc.327
     /tmp/cclVlxlC.s:1312   .text:000003a0 .Loc.328
     /tmp/cclVlxlC.s:1313   .text:000003a0 .Loc.329
     /tmp/cclVlxlC.s:1314   .text:000003a0 .Loc.330
     /tmp/cclVlxlC.s:1315   .text:000003a0 .Loc.331
     /tmp/cclVlxlC.s:14962  .progmem.data:000002b9 __c.0.lto_priv.4
     /tmp/cclVlxlC.s:1319   .text:000003a4 .Loc.332
     /tmp/cclVlxlC.s:1323   .text:000003a6 .Loc.333
     /tmp/cclVlxlC.s:1328   .text:000003ac L0
     /tmp/cclVlxlC.s:1332   .text:000003ac _xmem_start
     /tmp/cclVlxlC.s:1336   .text:000003ac .Loc.334
     /tmp/cclVlxlC.s:1337   .text:000003ac L0
     /tmp/cclVlxlC.s:1338   .text:000003ac .Loc.335
     /tmp/cclVlxlC.s:1350   .text:000003b2 .Loc.336
     /tmp/cclVlxlC.s:1363   .text:000003c6 .Loc.337
     /tmp/cclVlxlC.s:1366   .text:000003c8 .Loc.338
     /tmp/cclVlxlC.s:1369   .text:000003cc .Loc.339
     /tmp/cclVlxlC.s:1373   .text:000003d2 .Loc.340
     /tmp/cclVlxlC.s:1377   .text:000003d8 .Loc.341
     /tmp/cclVlxlC.s:1380   .text:000003da .Loc.342
     /tmp/cclVlxlC.s:1383   .text:000003de .Loc.343
     /tmp/cclVlxlC.s:1386   .text:000003e2 L0
     /tmp/cclVlxlC.s:1390   .text:000003e2 _xmem_read
     /tmp/cclVlxlC.s:1393   .text:000003e2 .Loc.344
     /tmp/cclVlxlC.s:1394   .text:000003e2 L0
     /tmp/cclVlxlC.s:1395   .text:000003e2 .Loc.345
     /tmp/cclVlxlC.s:1425   .text:000003f8 .Loc.346
     /tmp/cclVlxlC.s:1426   .text:000003f8 .Loc.347
     /tmp/cclVlxlC.s:1428   .text:000003f8 .Loc.348
     /tmp/cclVlxlC.s:1431   .text:000003fa .Loc.349
     /tmp/cclVlxlC.s:1435   .text:000003fe .Loc.350
     /tmp/cclVlxlC.s:1438   .text:00000400 .Loc.351
     /tmp/cclVlxlC.s:1441   .text:00000404 .Loc.352
     /tmp/cclVlxlC.s:1442   .text:00000404 .Loc.353
     /tmp/cclVlxlC.s:1449   .text:0000040c .Loc.354
     /tmp/cclVlxlC.s:1453   .text:00000412 .Loc.355
     /tmp/cclVlxlC.s:1466   .text:00000424 .Loc.356
     /tmp/cclVlxlC.s:1470   .text:00000428 .Loc.357
     /tmp/cclVlxlC.s:1475   .text:0000042e .Loc.358
     /tmp/cclVlxlC.s:1481   .text:00000434 .Loc.359
     /tmp/cclVlxlC.s:1482   .text:00000434 .Loc.360
     /tmp/cclVlxlC.s:1486   .text:0000043a .Loc.361
     /tmp/cclVlxlC.s:1489   .text:0000043c .Loc.362
     /tmp/cclVlxlC.s:1490   .text:0000043c .Loc.363
     /tmp/cclVlxlC.s:1492   .text:0000043e L0
     /tmp/cclVlxlC.s:1496   .text:0000043e xmem_read
     /tmp/cclVlxlC.s:1499   .text:0000043e .Loc.364
     /tmp/cclVlxlC.s:1500   .text:0000043e L0
     /tmp/cclVlxlC.s:1501   .text:0000043e .Loc.365
     /tmp/cclVlxlC.s:1556   .text:00000462 .Loc.366
     /tmp/cclVlxlC.s:1557   .text:00000462 .Loc.367
     /tmp/cclVlxlC.s:1561   .text:00000462 .Loc.368
     /tmp/cclVlxlC.s:1563   .text:00000462 .Loc.369
     /tmp/cclVlxlC.s:1564   .text:00000462 .Loc.370
     /tmp/cclVlxlC.s:1567   .text:00000462 .Loc.371
     /tmp/cclVlxlC.s:1569   .text:00000462 .Loc.372
     /tmp/cclVlxlC.s:1570   .text:00000462 .Loc.373
     /tmp/cclVlxlC.s:1573   .text:00000462 .Loc.374
     /tmp/cclVlxlC.s:1574   .text:00000462 .Loc.375
     /tmp/cclVlxlC.s:1582   .text:0000046e .Loc.376
     /tmp/cclVlxlC.s:1585   .text:0000046e .Loc.377
     /tmp/cclVlxlC.s:1587   .text:0000046e .Loc.378
     /tmp/cclVlxlC.s:1588   .text:0000046e .Loc.379
     /tmp/cclVlxlC.s:1600   .text:00000480 .Loc.380
     /tmp/cclVlxlC.s:1603   .text:00000480 .Loc.381
     /tmp/cclVlxlC.s:1606   .text:00000480 .Loc.382
     /tmp/cclVlxlC.s:1608   .text:00000480 .Loc.383
     /tmp/cclVlxlC.s:1609   .text:00000480 .Loc.384
     /tmp/cclVlxlC.s:1621   .text:00000492 .Loc.385
     /tmp/cclVlxlC.s:1624   .text:00000492 .Loc.386
     /tmp/cclVlxlC.s:1627   .text:00000492 .Loc.387
     /tmp/cclVlxlC.s:1631   .text:00000494 .Loc.388
     /tmp/cclVlxlC.s:1634   .text:00000498 .Loc.389
     /tmp/cclVlxlC.s:1637   .text:00000498 .Loc.390
     /tmp/cclVlxlC.s:1639   .text:00000498 .Loc.391
     /tmp/cclVlxlC.s:1641   .text:00000498 .Loc.392
     /tmp/cclVlxlC.s:1644   .text:00000498 .Loc.393
     /tmp/cclVlxlC.s:1645   .text:00000498 .Loc.394
     /tmp/cclVlxlC.s:1649   .text:0000049c .Loc.395
     /tmp/cclVlxlC.s:1652   .text:0000049c .Loc.396
     /tmp/cclVlxlC.s:1655   .text:0000049e .Loc.397
     /tmp/cclVlxlC.s:1658   .text:000004a2 .Loc.398
     /tmp/cclVlxlC.s:1659   .text:000004a2 .Loc.399
     /tmp/cclVlxlC.s:1670   .text:000004b0 .Loc.400
     /tmp/cclVlxlC.s:1676   .text:000004b8 .Loc.401
     /tmp/cclVlxlC.s:1689   .text:000004d0 .Loc.402
     /tmp/cclVlxlC.s:1692   .text:000004d4 L0
     /tmp/cclVlxlC.s:1696   .text:000004d4 memory_lw
     /tmp/cclVlxlC.s:1699   .text:000004d4 .Loc.403
     /tmp/cclVlxlC.s:1700   .text:000004d4 L0
     /tmp/cclVlxlC.s:1701   .text:000004d4 .Loc.404
     /tmp/cclVlxlC.s:1736   .text:000004f8 .Loc.405
     /tmp/cclVlxlC.s:1737   .text:000004f8 .Loc.406
     /tmp/cclVlxlC.s:1738   .text:000004f8 .Loc.407
     /tmp/cclVlxlC.s:1756   .text:00000520 .Loc.408
     /tmp/cclVlxlC.s:1757   .text:00000520 .Loc.409
     /tmp/cclVlxlC.s:1763   .text:00000528 .Loc.410
     /tmp/cclVlxlC.s:1769   .text:00000530 .Loc.411
     /tmp/cclVlxlC.s:1772   .text:00000534 .Loc.412
     /tmp/cclVlxlC.s:1774   .text:00000536 .Loc.413
     /tmp/cclVlxlC.s:1777   .text:0000053a .Loc.414
     /tmp/cclVlxlC.s:1781   .text:0000053a .Loc.415
     /tmp/cclVlxlC.s:1783   .text:0000053a .Loc.416
     /tmp/cclVlxlC.s:1795   .text:00000550 .Loc.417
     /tmp/cclVlxlC.s:1798   .text:00000550 .Loc.418
     /tmp/cclVlxlC.s:1799   .text:00000550 .Loc.419
     /tmp/cclVlxlC.s:1809   .text:00000562 .Loc.420
     /tmp/cclVlxlC.s:1811   .text:00000562 .Loc.421
     /tmp/cclVlxlC.s:1826   .text:0000057a .Loc.422
     /tmp/cclVlxlC.s:1830   .text:0000057c .Loc.423
     /tmp/cclVlxlC.s:1833   .text:00000580 L0
     /tmp/cclVlxlC.s:1837   .text:00000580 syscall_serial_write
     /tmp/cclVlxlC.s:1840   .text:00000580 .Loc.424
     /tmp/cclVlxlC.s:1841   .text:00000580 L0
     /tmp/cclVlxlC.s:1842   .text:00000580 .Loc.425
     /tmp/cclVlxlC.s:1904   .text:000005b2 .Loc.426
     /tmp/cclVlxlC.s:1905   .text:000005b2 .Loc.427
     /tmp/cclVlxlC.s:1906   .text:000005b2 .Loc.428
     /tmp/cclVlxlC.s:1907   .text:000005b2 .Loc.429
     /tmp/cclVlxlC.s:1908   .text:000005b2 .Loc.430
     /tmp/cclVlxlC.s:1914   .text:000005ba .Loc.431
     /tmp/cclVlxlC.s:1924   .text:000005ca .Loc.432
     /tmp/cclVlxlC.s:1925   .text:000005ca .Loc.433
     /tmp/cclVlxlC.s:1931   .text:000005d2 .Loc.434
     /tmp/cclVlxlC.s:1932   .text:000005d2 .Loc.435
     /tmp/cclVlxlC.s:1939   .text:000005de .Loc.436
     /tmp/cclVlxlC.s:1941   .text:000005e0 .Loc.437
     /tmp/cclVlxlC.s:1946   .text:000005e4 .Loc.438
     /tmp/cclVlxlC.s:1954   .text:000005ee .Loc.439
     /tmp/cclVlxlC.s:1980   .text:0000061c .Loc.440
     /tmp/cclVlxlC.s:1984   .text:0000061e .Loc.441
     /tmp/cclVlxlC.s:1985   .text:0000061e .Loc.442
     /tmp/cclVlxlC.s:1994   .text:0000062e .Loc.443
     /tmp/cclVlxlC.s:2002   .text:00000638 .Loc.444
     /tmp/cclVlxlC.s:2005   .text:00000638 .Loc.445
     /tmp/cclVlxlC.s:2007   .text:00000638 .Loc.446
     /tmp/cclVlxlC.s:2022   .text:00000654 .Loc.447
     /tmp/cclVlxlC.s:2027   .text:00000654 .Loc.448
     /tmp/cclVlxlC.s:2036   .text:00000660 .Loc.449
     /tmp/cclVlxlC.s:2042   .text:0000066a .Loc.450
     /tmp/cclVlxlC.s:2043   .text:0000066a .Loc.451
     /tmp/cclVlxlC.s:2049   .text:00000670 .Loc.452
     /tmp/cclVlxlC.s:2050   .text:00000670 .Loc.453
     /tmp/cclVlxlC.s:2056   .text:00000678 .Loc.454
     /tmp/cclVlxlC.s:2057   .text:00000678 .Loc.455
     /tmp/cclVlxlC.s:2079   .text:000006a0 .Loc.456
     /tmp/cclVlxlC.s:2083   .text:000006a2 .Loc.457
     /tmp/cclVlxlC.s:2087   .text:000006a8 L0
     /tmp/cclVlxlC.s:2091   .text:000006a8 _xmem_write
     /tmp/cclVlxlC.s:2094   .text:000006a8 .Loc.458
     /tmp/cclVlxlC.s:2095   .text:000006a8 L0
     /tmp/cclVlxlC.s:2096   .text:000006a8 .Loc.459
     /tmp/cclVlxlC.s:2126   .text:000006be .Loc.460
     /tmp/cclVlxlC.s:2127   .text:000006be .Loc.461
     /tmp/cclVlxlC.s:2129   .text:000006be .Loc.462
     /tmp/cclVlxlC.s:2132   .text:000006c0 .Loc.463
     /tmp/cclVlxlC.s:2136   .text:000006c4 .Loc.464
     /tmp/cclVlxlC.s:2139   .text:000006c6 .Loc.465
     /tmp/cclVlxlC.s:2142   .text:000006ca .Loc.466
     /tmp/cclVlxlC.s:2143   .text:000006ca .Loc.467
     /tmp/cclVlxlC.s:2150   .text:000006d2 .Loc.468
     /tmp/cclVlxlC.s:2154   .text:000006d8 .Loc.469
     /tmp/cclVlxlC.s:2167   .text:000006ea .Loc.470
     /tmp/cclVlxlC.s:2171   .text:000006ee .Loc.471
     /tmp/cclVlxlC.s:2176   .text:000006f4 .Loc.472
     /tmp/cclVlxlC.s:2182   .text:000006fa .Loc.473
     /tmp/cclVlxlC.s:2185   .text:000006fc .Loc.474
     /tmp/cclVlxlC.s:2188   .text:00000700 .Loc.475
     /tmp/cclVlxlC.s:2189   .text:00000700 .Loc.476
     /tmp/cclVlxlC.s:2191   .text:00000702 L0
     /tmp/cclVlxlC.s:2195   .text:00000702 xmem_write
     /tmp/cclVlxlC.s:2198   .text:00000702 .Loc.477
     /tmp/cclVlxlC.s:2199   .text:00000702 L0
     /tmp/cclVlxlC.s:2200   .text:00000702 .Loc.478
     /tmp/cclVlxlC.s:2255   .text:00000726 .Loc.479
     /tmp/cclVlxlC.s:2256   .text:00000726 .Loc.480
     /tmp/cclVlxlC.s:2260   .text:00000726 .Loc.481
     /tmp/cclVlxlC.s:2262   .text:00000726 .Loc.482
     /tmp/cclVlxlC.s:2263   .text:00000726 .Loc.483
     /tmp/cclVlxlC.s:2266   .text:00000726 .Loc.484
     /tmp/cclVlxlC.s:2268   .text:00000726 .Loc.485
     /tmp/cclVlxlC.s:2269   .text:00000726 .Loc.486
     /tmp/cclVlxlC.s:2272   .text:00000726 .Loc.487
     /tmp/cclVlxlC.s:2273   .text:00000726 .Loc.488
     /tmp/cclVlxlC.s:2281   .text:00000732 .Loc.489
     /tmp/cclVlxlC.s:2284   .text:00000732 .Loc.490
     /tmp/cclVlxlC.s:2286   .text:00000732 .Loc.491
     /tmp/cclVlxlC.s:2287   .text:00000732 .Loc.492
     /tmp/cclVlxlC.s:2299   .text:00000744 .Loc.493
     /tmp/cclVlxlC.s:2302   .text:00000744 .Loc.494
     /tmp/cclVlxlC.s:2305   .text:00000744 .Loc.495
     /tmp/cclVlxlC.s:2307   .text:00000744 .Loc.496
     /tmp/cclVlxlC.s:2308   .text:00000744 .Loc.497
     /tmp/cclVlxlC.s:2320   .text:00000756 .Loc.498
     /tmp/cclVlxlC.s:2323   .text:00000756 .Loc.499
     /tmp/cclVlxlC.s:2326   .text:00000756 .Loc.500
     /tmp/cclVlxlC.s:2330   .text:00000758 .Loc.501
     /tmp/cclVlxlC.s:2333   .text:0000075c .Loc.502
     /tmp/cclVlxlC.s:2336   .text:0000075c .Loc.503
     /tmp/cclVlxlC.s:2338   .text:0000075c .Loc.504
     /tmp/cclVlxlC.s:2340   .text:0000075c .Loc.505
     /tmp/cclVlxlC.s:2343   .text:0000075c .Loc.506
     /tmp/cclVlxlC.s:2344   .text:0000075c .Loc.507
     /tmp/cclVlxlC.s:2348   .text:00000760 .Loc.508
     /tmp/cclVlxlC.s:2351   .text:00000760 .Loc.509
     /tmp/cclVlxlC.s:2354   .text:00000762 .Loc.510
     /tmp/cclVlxlC.s:2357   .text:00000766 .Loc.511
     /tmp/cclVlxlC.s:2358   .text:00000766 .Loc.512
     /tmp/cclVlxlC.s:2369   .text:00000774 .Loc.513
     /tmp/cclVlxlC.s:2375   .text:0000077c .Loc.514
     /tmp/cclVlxlC.s:2388   .text:00000794 .Loc.515
     /tmp/cclVlxlC.s:2391   .text:00000798 L0
     /tmp/cclVlxlC.s:2395   .text:00000798 emulator_next
     /tmp/cclVlxlC.s:2398   .text:00000798 .Loc.516
     /tmp/cclVlxlC.s:2399   .text:00000798 L0
     /tmp/cclVlxlC.s:2400   .text:00000798 .Loc.517
     /tmp/cclVlxlC.s:2461   .text:000007c8 .Loc.518
     /tmp/cclVlxlC.s:2462   .text:000007c8 .Loc.519
     /tmp/cclVlxlC.s:2463   .text:000007c8 .Loc.520
     /tmp/cclVlxlC.s:2482   .text:000007ec .Loc.521
     /tmp/cclVlxlC.s:2484   .text:000007ee .Loc.522
     /tmp/cclVlxlC.s:2487   .text:000007f2 .Loc.523
     /tmp/cclVlxlC.s:2488   .text:000007f2 .Loc.524
     /tmp/cclVlxlC.s:2494   .text:000007fc .Loc.525
     /tmp/cclVlxlC.s:2495   .text:000007fc .Loc.526
     /tmp/cclVlxlC.s:2501   .text:00000804 .Loc.527
     /tmp/cclVlxlC.s:2502   .text:00000804 .Loc.528
     /tmp/cclVlxlC.s:2509   .text:00000810 .Loc.529
     /tmp/cclVlxlC.s:2513   .text:00000818 L0
     /tmp/cclVlxlC.s:2515   .text:0000081a .Loc.530
     /tmp/cclVlxlC.s:2517   .text:0000081a .Loc.531
     /tmp/cclVlxlC.s:2518   .text:0000081a .Loc.532
     /tmp/cclVlxlC.s:2534   .text:00000834 .Loc.533
     /tmp/cclVlxlC.s:2539   .text:0000083e L0
     /tmp/cclVlxlC.s:2579   .text:0000084a .Loc.534
     /tmp/cclVlxlC.s:2580   .text:0000084a .Loc.535
     /tmp/cclVlxlC.s:2591   .text:00000858 .Loc.536
     /tmp/cclVlxlC.s:2593   .text:00000858 .Loc.537
     /tmp/cclVlxlC.s:2594   .text:00000858 .Loc.538
     /tmp/cclVlxlC.s:2599   .text:00000862 L0
     /tmp/cclVlxlC.s:2601   .text:00000864 .Loc.539
     /tmp/cclVlxlC.s:2602   .text:00000864 .Loc.540
     /tmp/cclVlxlC.s:2606   .text:00000868 .Loc.541
     /tmp/cclVlxlC.s:2609   .text:0000086a .Loc.542
     /tmp/cclVlxlC.s:14880  .rodata:00000000 syscalls
     /tmp/cclVlxlC.s:2612   .text:0000086e .Loc.543
     /tmp/cclVlxlC.s:2620   .text:0000087a .Loc.544
     /tmp/cclVlxlC.s:2624   .text:0000087c .Loc.545
     /tmp/cclVlxlC.s:2628   .text:0000087c .Loc.546
     /tmp/cclVlxlC.s:2633   .text:00000880 .Loc.547
     /tmp/cclVlxlC.s:2634   .text:00000880 .Loc.548
     /tmp/cclVlxlC.s:2643   .text:00000890 .Loc.549
     /tmp/cclVlxlC.s:2644   .text:00000890 .Loc.550
     /tmp/cclVlxlC.s:2649   .text:00000892 .Loc.551
     /tmp/cclVlxlC.s:2650   .text:00000892 .Loc.552
     /tmp/cclVlxlC.s:2651   .text:00000892 .Loc.553
     /tmp/cclVlxlC.s:2652   .text:00000892 .Loc.554
     /tmp/cclVlxlC.s:2653   .text:00000892 .Loc.555
     /tmp/cclVlxlC.s:2657   .text:00000896 .Loc.556
     /tmp/cclVlxlC.s:2666   .text:000008a4 .Loc.557
     /tmp/cclVlxlC.s:2671   .text:000008aa .Loc.558
     /tmp/cclVlxlC.s:2672   .text:000008aa .Loc.559
     /tmp/cclVlxlC.s:2683   .text:000008bc .Loc.560
     /tmp/cclVlxlC.s:2686   .text:000008be .Loc.561
     /tmp/cclVlxlC.s:2687   .text:000008be .Loc.562
     /tmp/cclVlxlC.s:2698   .text:000008d0 .Loc.563
     /tmp/cclVlxlC.s:2702   .text:000008d4 .Loc.564
     /tmp/cclVlxlC.s:2703   .text:000008d4 .Loc.565
     /tmp/cclVlxlC.s:2706   .text:000008d4 .Loc.566
     /tmp/cclVlxlC.s:2708   .text:000008d4 .Loc.567
     /tmp/cclVlxlC.s:2709   .text:000008d4 .Loc.568
     /tmp/cclVlxlC.s:2712   .text:000008d4 .Loc.569
     /tmp/cclVlxlC.s:2724   .text:000008e2 .Loc.570
     /tmp/cclVlxlC.s:2728   .text:000008e6 .Loc.571
     /tmp/cclVlxlC.s:2736   .text:000008f2 .Loc.572
     /tmp/cclVlxlC.s:2739   .text:000008f2 .Loc.573
     /tmp/cclVlxlC.s:2741   .text:000008f6 L0
     /tmp/cclVlxlC.s:2743   .text:000008fa L0
     /tmp/cclVlxlC.s:2753   .text:00000914 .Loc.574
     /tmp/cclVlxlC.s:2754   .text:00000914 .Loc.575
     /tmp/cclVlxlC.s:2758   .text:00000914 .Loc.576
     /tmp/cclVlxlC.s:2760   .text:00000914 .Loc.577
     /tmp/cclVlxlC.s:2761   .text:00000914 .Loc.578
     /tmp/cclVlxlC.s:2762   .text:00000914 .Loc.579
     /tmp/cclVlxlC.s:2769   .text:0000091c .Loc.580
     /tmp/cclVlxlC.s:2779   .text:0000092a .Loc.581
     /tmp/cclVlxlC.s:2785   .text:00000932 .Loc.582
     /tmp/cclVlxlC.s:2789   .text:00000936 .Loc.583
     /tmp/cclVlxlC.s:2799   .text:00000946 .Loc.584
     /tmp/cclVlxlC.s:2800   .text:00000946 .Loc.585
     /tmp/cclVlxlC.s:2811   .text:0000095a .Loc.586
     /tmp/cclVlxlC.s:2814   .text:0000095e .Loc.587
     /tmp/cclVlxlC.s:2818   .text:0000095e .Loc.588
     /tmp/cclVlxlC.s:2820   .text:0000095e .Loc.589
     /tmp/cclVlxlC.s:2832   .text:00000974 .Loc.590
     /tmp/cclVlxlC.s:2835   .text:00000974 .Loc.591
     /tmp/cclVlxlC.s:2838   .text:00000974 .Loc.592
     /tmp/cclVlxlC.s:2843   .text:00000978 .Loc.593
     /tmp/cclVlxlC.s:2851   .text:00000986 .Loc.594
     /tmp/cclVlxlC.s:2860   .text:00000992 .Loc.595
     /tmp/cclVlxlC.s:2865   .text:00000992 .Loc.596
     /tmp/cclVlxlC.s:2870   .text:0000099a .Loc.597
     /tmp/cclVlxlC.s:2874   .text:0000099c .Loc.598
     /tmp/cclVlxlC.s:2878   .text:000009a0 L0
     /tmp/cclVlxlC.s:2881   .text:000009a6 L0
     /tmp/cclVlxlC.s:2885   .text:000009a8 .Loc.599
     /tmp/cclVlxlC.s:2887   .text:000009a8 .Loc.600
     /tmp/cclVlxlC.s:2894   .text:000009ae .Loc.601
     /tmp/cclVlxlC.s:2895   .text:000009ae .Loc.602
     /tmp/cclVlxlC.s:2898   .text:000009ae .Loc.603
     /tmp/cclVlxlC.s:2900   .text:000009ae .Loc.604
     /tmp/cclVlxlC.s:2901   .text:000009ae .Loc.605
     /tmp/cclVlxlC.s:2902   .text:000009ae .Loc.606
     /tmp/cclVlxlC.s:2909   .text:000009b6 .Loc.607
     /tmp/cclVlxlC.s:2919   .text:000009c4 .Loc.608
     /tmp/cclVlxlC.s:2925   .text:000009cc .Loc.609
     /tmp/cclVlxlC.s:2929   .text:000009d0 .Loc.610
     /tmp/cclVlxlC.s:2939   .text:000009e0 .Loc.611
     /tmp/cclVlxlC.s:2940   .text:000009e0 .Loc.612
     /tmp/cclVlxlC.s:2951   .text:000009f4 .Loc.613
     /tmp/cclVlxlC.s:2954   .text:000009f8 .Loc.614
     /tmp/cclVlxlC.s:2958   .text:000009f8 .Loc.615
     /tmp/cclVlxlC.s:2960   .text:000009f8 .Loc.616
     /tmp/cclVlxlC.s:2972   .text:00000a0e .Loc.617
     /tmp/cclVlxlC.s:2975   .text:00000a0e .Loc.618
     /tmp/cclVlxlC.s:2978   .text:00000a0e .Loc.619
     /tmp/cclVlxlC.s:2983   .text:00000a12 .Loc.620
     /tmp/cclVlxlC.s:2991   .text:00000a20 .Loc.621
     /tmp/cclVlxlC.s:3001   .text:00000a2e .Loc.622
     /tmp/cclVlxlC.s:3004   .text:00000a2e .Loc.623
     /tmp/cclVlxlC.s:3005   .text:00000a2e .Loc.624
     /tmp/cclVlxlC.s:3006   .text:00000a2e .Loc.625
     /tmp/cclVlxlC.s:3015   .text:00000a3e .Loc.626
     /tmp/cclVlxlC.s:3024   .text:00000a4e .Loc.627
     /tmp/cclVlxlC.s:3031   .text:00000a58 .Loc.628
     /tmp/cclVlxlC.s:3035   .text:00000a5c .Loc.629
     /tmp/cclVlxlC.s:3048   .text:00000a74 .Loc.630
     /tmp/cclVlxlC.s:3052   .text:00000a76 .Loc.631
     /tmp/cclVlxlC.s:3053   .text:00000a76 .Loc.632
     /tmp/cclVlxlC.s:3056   .text:00000a76 .Loc.633
     /tmp/cclVlxlC.s:3058   .text:00000a76 .Loc.634
     /tmp/cclVlxlC.s:3059   .text:00000a76 .Loc.635
     /tmp/cclVlxlC.s:3060   .text:00000a76 .Loc.636
     /tmp/cclVlxlC.s:3071   .text:00000a8e .Loc.637
     /tmp/cclVlxlC.s:3083   .text:00000aa0 .Loc.638
     /tmp/cclVlxlC.s:3089   .text:00000aa8 .Loc.639
     /tmp/cclVlxlC.s:3093   .text:00000aac .Loc.640
     /tmp/cclVlxlC.s:3103   .text:00000abc .Loc.641
     /tmp/cclVlxlC.s:3104   .text:00000abc .Loc.642
     /tmp/cclVlxlC.s:3115   .text:00000ad0 .Loc.643
     /tmp/cclVlxlC.s:3118   .text:00000ad4 .Loc.644
     /tmp/cclVlxlC.s:3122   .text:00000ad4 .Loc.645
     /tmp/cclVlxlC.s:3124   .text:00000ad4 .Loc.646
     /tmp/cclVlxlC.s:3136   .text:00000aea .Loc.647
     /tmp/cclVlxlC.s:3139   .text:00000aea .Loc.648
     /tmp/cclVlxlC.s:3142   .text:00000aea .Loc.649
     /tmp/cclVlxlC.s:3147   .text:00000aee .Loc.650
     /tmp/cclVlxlC.s:3159   .text:00000b00 .Loc.651
     /tmp/cclVlxlC.s:3164   .text:00000b00 .Loc.652
     /tmp/cclVlxlC.s:3170   .text:00000b06 .Loc.653
     /tmp/cclVlxlC.s:3173   .text:00000b06 .Loc.654
     /tmp/cclVlxlC.s:3174   .text:00000b06 .Loc.655
     /tmp/cclVlxlC.s:3177   .text:00000b06 .Loc.656
     /tmp/cclVlxlC.s:3179   .text:00000b06 .Loc.657
     /tmp/cclVlxlC.s:3180   .text:00000b06 .Loc.658
     /tmp/cclVlxlC.s:3181   .text:00000b06 .Loc.659
     /tmp/cclVlxlC.s:3192   .text:00000b1e .Loc.660
     /tmp/cclVlxlC.s:3204   .text:00000b30 .Loc.661
     /tmp/cclVlxlC.s:3210   .text:00000b38 .Loc.662
     /tmp/cclVlxlC.s:3214   .text:00000b3c .Loc.663
     /tmp/cclVlxlC.s:3224   .text:00000b4c .Loc.664
     /tmp/cclVlxlC.s:3225   .text:00000b4c .Loc.665
     /tmp/cclVlxlC.s:3236   .text:00000b60 .Loc.666
     /tmp/cclVlxlC.s:3239   .text:00000b64 .Loc.667
     /tmp/cclVlxlC.s:3243   .text:00000b64 .Loc.668
     /tmp/cclVlxlC.s:3245   .text:00000b64 .Loc.669
     /tmp/cclVlxlC.s:3257   .text:00000b7a .Loc.670
     /tmp/cclVlxlC.s:3260   .text:00000b7a .Loc.671
     /tmp/cclVlxlC.s:3263   .text:00000b7a .Loc.672
     /tmp/cclVlxlC.s:3268   .text:00000b7e .Loc.673
     /tmp/cclVlxlC.s:3281   .text:00000b92 .Loc.674
     /tmp/cclVlxlC.s:3286   .text:00000b92 .Loc.675
     /tmp/cclVlxlC.s:3287   .text:00000b92 .Loc.676
     /tmp/cclVlxlC.s:3288   .text:00000b92 .Loc.677
     /tmp/cclVlxlC.s:3289   .text:00000b92 .Loc.678
     /tmp/cclVlxlC.s:3290   .text:00000b92 .Loc.679
     /tmp/cclVlxlC.s:3291   .text:00000b92 .Loc.680
     /tmp/cclVlxlC.s:3292   .text:00000b92 .Loc.681
     /tmp/cclVlxlC.s:3296   .text:00000b96 .Loc.682
     /tmp/cclVlxlC.s:3306   .text:00000ba4 .Loc.683
     /tmp/cclVlxlC.s:3307   .text:00000ba4 .Loc.684
     /tmp/cclVlxlC.s:3318   .text:00000bb6 .Loc.685
     /tmp/cclVlxlC.s:3320   .text:00000bb8 .Loc.686
     /tmp/cclVlxlC.s:3325   .text:00000bbc .Loc.687
     /tmp/cclVlxlC.s:3339   .text:00000bd2 .Loc.688
     /tmp/cclVlxlC.s:3350   .text:00000be4 .Loc.689
     /tmp/cclVlxlC.s:3352   .text:00000be6 .Loc.690
     /tmp/cclVlxlC.s:3355   .text:00000bea .Loc.691
     /tmp/cclVlxlC.s:3368   .text:00000c00 .Loc.692
     /tmp/cclVlxlC.s:3394   .text:00000c1c .Loc.693
     /tmp/cclVlxlC.s:3398   .text:00000c1c .Loc.694
     /tmp/cclVlxlC.s:3400   .text:00000c1c .Loc.695
     /tmp/cclVlxlC.s:3401   .text:00000c1c .Loc.696
     /tmp/cclVlxlC.s:3402   .text:00000c1c .Loc.697
     /tmp/cclVlxlC.s:3405   .text:00000c1c .Loc.698
     /tmp/cclVlxlC.s:3406   .text:00000c1c .Loc.699
     /tmp/cclVlxlC.s:3407   .text:00000c1c .Loc.700
     /tmp/cclVlxlC.s:3414   .text:00000c26 .Loc.701
     /tmp/cclVlxlC.s:3419   .text:00000c2a .Loc.702
     /tmp/cclVlxlC.s:3423   .text:00000c2e .Loc.703
     /tmp/cclVlxlC.s:3429   .text:00000c34 .Loc.704
     /tmp/cclVlxlC.s:3434   .text:00000c34 .Loc.705
     /tmp/cclVlxlC.s:3435   .text:00000c34 .Loc.706
     /tmp/cclVlxlC.s:3436   .text:00000c34 .Loc.707
     /tmp/cclVlxlC.s:3444   .text:00000c3e .Loc.708
     /tmp/cclVlxlC.s:3447   .text:00000c3e .Loc.709
     /tmp/cclVlxlC.s:3448   .text:00000c3e .Loc.710
     /tmp/cclVlxlC.s:3449   .text:00000c3e .Loc.711
     /tmp/cclVlxlC.s:3450   .text:00000c3e .Loc.712
     /tmp/cclVlxlC.s:3458   .text:00000c4c .Loc.713
     /tmp/cclVlxlC.s:3464   .text:00000c54 .Loc.714
     /tmp/cclVlxlC.s:3476   .text:00000c62 .Loc.715
     /tmp/cclVlxlC.s:3484   .text:00000c6c .Loc.716
     /tmp/cclVlxlC.s:3487   .text:00000c6c .Loc.717
     /tmp/cclVlxlC.s:3489   .text:00000c6c .Loc.718
     /tmp/cclVlxlC.s:3490   .text:00000c6c .Loc.719
     /tmp/cclVlxlC.s:3491   .text:00000c6c .Loc.720
     /tmp/cclVlxlC.s:3494   .text:00000c6c .Loc.721
     /tmp/cclVlxlC.s:3495   .text:00000c6c .Loc.722
     /tmp/cclVlxlC.s:3496   .text:00000c6c .Loc.723
     /tmp/cclVlxlC.s:3506   .text:00000c7a .Loc.724
     /tmp/cclVlxlC.s:3510   .text:00000c7e .Loc.725
     /tmp/cclVlxlC.s:3515   .text:00000c84 .Loc.726
     /tmp/cclVlxlC.s:3518   .text:00000c84 .Loc.727
     /tmp/cclVlxlC.s:3529   .text:00000c96 .Loc.728
     /tmp/cclVlxlC.s:3535   .text:00000c9e .Loc.729
     /tmp/cclVlxlC.s:3536   .text:00000c9e .Loc.730
     /tmp/cclVlxlC.s:3537   .text:00000c9e .Loc.731
     /tmp/cclVlxlC.s:3545   .text:00000cac .Loc.732
     /tmp/cclVlxlC.s:3556   .text:00000cbe .Loc.733
     /tmp/cclVlxlC.s:3561   .text:00000cc6 .Loc.734
     /tmp/cclVlxlC.s:3564   .text:00000cc8 .Loc.735
     /tmp/cclVlxlC.s:3568   .text:00000cc8 .Loc.736
     /tmp/cclVlxlC.s:3570   .text:00000cc8 .Loc.737
     /tmp/cclVlxlC.s:3571   .text:00000cc8 .Loc.738
     /tmp/cclVlxlC.s:3572   .text:00000cc8 .Loc.739
     /tmp/cclVlxlC.s:3575   .text:00000cc8 .Loc.740
     /tmp/cclVlxlC.s:3576   .text:00000cc8 .Loc.741
     /tmp/cclVlxlC.s:3577   .text:00000cc8 .Loc.742
     /tmp/cclVlxlC.s:3587   .text:00000cd6 .Loc.743
     /tmp/cclVlxlC.s:3591   .text:00000cda .Loc.744
     /tmp/cclVlxlC.s:3597   .text:00000ce0 .Loc.745
     /tmp/cclVlxlC.s:3602   .text:00000ce0 .Loc.746
     /tmp/cclVlxlC.s:3610   .text:00000cea .Loc.747
     /tmp/cclVlxlC.s:3613   .text:00000cea .Loc.748
     /tmp/cclVlxlC.s:3614   .text:00000cea .Loc.749
     /tmp/cclVlxlC.s:3624   .text:00000cf8 .Loc.750
     /tmp/cclVlxlC.s:3632   .text:00000d06 .Loc.751
     /tmp/cclVlxlC.s:3637   .text:00000d0e .Loc.752
     /tmp/cclVlxlC.s:3639   .text:00000d0e .Loc.753
     /tmp/cclVlxlC.s:3640   .text:00000d0e .Loc.754
     /tmp/cclVlxlC.s:3641   .text:00000d0e .Loc.755
     /tmp/cclVlxlC.s:3647   .text:00000d16 .Loc.756
     /tmp/cclVlxlC.s:3659   .text:00000d26 .Loc.757
     /tmp/cclVlxlC.s:3661   .text:00000d26 .Loc.758
     /tmp/cclVlxlC.s:3662   .text:00000d26 .Loc.759
     /tmp/cclVlxlC.s:3663   .text:00000d26 .Loc.760
     /tmp/cclVlxlC.s:3676   .text:00000d36 .Loc.761
     /tmp/cclVlxlC.s:3679   .text:00000d36 .Loc.762
     /tmp/cclVlxlC.s:3681   .text:00000d36 .Loc.763
     /tmp/cclVlxlC.s:3682   .text:00000d36 .Loc.764
     /tmp/cclVlxlC.s:3683   .text:00000d36 .Loc.765
     /tmp/cclVlxlC.s:3686   .text:00000d36 .Loc.766
     /tmp/cclVlxlC.s:3687   .text:00000d36 .Loc.767
     /tmp/cclVlxlC.s:3688   .text:00000d36 .Loc.768
     /tmp/cclVlxlC.s:3698   .text:00000d44 .Loc.769
     /tmp/cclVlxlC.s:3702   .text:00000d48 .Loc.770
     /tmp/cclVlxlC.s:3708   .text:00000d4e .Loc.771
     /tmp/cclVlxlC.s:3713   .text:00000d4e .Loc.772
     /tmp/cclVlxlC.s:3721   .text:00000d58 .Loc.773
     /tmp/cclVlxlC.s:3724   .text:00000d58 .Loc.774
     /tmp/cclVlxlC.s:3727   .text:00000d58 .Loc.775
     /tmp/cclVlxlC.s:3729   .text:00000d58 .Loc.776
     /tmp/cclVlxlC.s:3730   .text:00000d58 .Loc.777
     /tmp/cclVlxlC.s:3731   .text:00000d58 .Loc.778
     /tmp/cclVlxlC.s:3734   .text:00000d58 .Loc.779
     /tmp/cclVlxlC.s:3735   .text:00000d58 .Loc.780
     /tmp/cclVlxlC.s:3736   .text:00000d58 .Loc.781
     /tmp/cclVlxlC.s:3746   .text:00000d66 .Loc.782
     /tmp/cclVlxlC.s:3750   .text:00000d6a .Loc.783
     /tmp/cclVlxlC.s:3756   .text:00000d70 .Loc.784
     /tmp/cclVlxlC.s:3761   .text:00000d70 .Loc.785
     /tmp/cclVlxlC.s:3769   .text:00000d7a .Loc.786
     /tmp/cclVlxlC.s:3772   .text:00000d7a .Loc.787
     /tmp/cclVlxlC.s:3773   .text:00000d7a .Loc.788
     /tmp/cclVlxlC.s:3774   .text:00000d7a .Loc.789
     /tmp/cclVlxlC.s:3775   .text:00000d7a .Loc.790
     /tmp/cclVlxlC.s:3776   .text:00000d7a .Loc.791
     /tmp/cclVlxlC.s:3777   .text:00000d7a .Loc.792
     /tmp/cclVlxlC.s:3778   .text:00000d7a .Loc.793
     /tmp/cclVlxlC.s:3782   .text:00000d7e .Loc.794
     /tmp/cclVlxlC.s:3791   .text:00000d8c .Loc.795
     /tmp/cclVlxlC.s:3793   .text:00000d8e .Loc.796
     /tmp/cclVlxlC.s:3796   .text:00000d92 .Loc.797
     /tmp/cclVlxlC.s:3805   .text:00000da2 .Loc.798
     /tmp/cclVlxlC.s:3810   .text:00000daa .Loc.799
     /tmp/cclVlxlC.s:3817   .text:00000db4 .Loc.800
     /tmp/cclVlxlC.s:3822   .text:00000dbc .Loc.801
     /tmp/cclVlxlC.s:3827   .text:00000dc0 .Loc.802
     /tmp/cclVlxlC.s:3830   .text:00000dc0 .Loc.803
     /tmp/cclVlxlC.s:3831   .text:00000dc0 .Loc.804
     /tmp/cclVlxlC.s:3832   .text:00000dc0 .Loc.805
     /tmp/cclVlxlC.s:3833   .text:00000dc0 .Loc.806
     /tmp/cclVlxlC.s:3834   .text:00000dc0 .Loc.807
     /tmp/cclVlxlC.s:3838   .text:00000dc4 .Loc.808
     /tmp/cclVlxlC.s:3847   .text:00000dd2 .Loc.809
     /tmp/cclVlxlC.s:3850   .text:00000dd4 .Loc.810
     /tmp/cclVlxlC.s:3851   .text:00000dd4 .Loc.811
     /tmp/cclVlxlC.s:3862   .text:00000de6 .Loc.812
     /tmp/cclVlxlC.s:3866   .text:00000dea .Loc.813
     /tmp/cclVlxlC.s:3867   .text:00000dea .Loc.814
     /tmp/cclVlxlC.s:3878   .text:00000dfc .Loc.815
     /tmp/cclVlxlC.s:3882   .text:00000e00 .Loc.816
     /tmp/cclVlxlC.s:3883   .text:00000e00 .Loc.817
     /tmp/cclVlxlC.s:3886   .text:00000e00 .Loc.818
     /tmp/cclVlxlC.s:3888   .text:00000e00 .Loc.819
     /tmp/cclVlxlC.s:3889   .text:00000e00 .Loc.820
     /tmp/cclVlxlC.s:3892   .text:00000e00 .Loc.821
     /tmp/cclVlxlC.s:3902   .text:00000e0e .Loc.822
     /tmp/cclVlxlC.s:3907   .text:00000e16 .Loc.823
     /tmp/cclVlxlC.s:3913   .text:00000e1e .Loc.824
     /tmp/cclVlxlC.s:3921   .text:00000e26 .Loc.825
     /tmp/cclVlxlC.s:3925   .text:00000e2a .Loc.826
     /tmp/cclVlxlC.s:3930   .text:00000e30 .Loc.827
     /tmp/cclVlxlC.s:3933   .text:00000e30 .Loc.828
     /tmp/cclVlxlC.s:3935   .text:00000e34 L0
     /tmp/cclVlxlC.s:3938   .text:00000e3a L0
     /tmp/cclVlxlC.s:3942   .text:00000e40 .Loc.829
     /tmp/cclVlxlC.s:3943   .text:00000e40 .Loc.830
     /tmp/cclVlxlC.s:3944   .text:00000e40 .Loc.831
     /tmp/cclVlxlC.s:3948   .text:00000e44 .Loc.832
     /tmp/cclVlxlC.s:3955   .text:00000e50 .Loc.833
     /tmp/cclVlxlC.s:3962   .text:00000e5a .Loc.834
     /tmp/cclVlxlC.s:3970   .text:00000e62 .Loc.835
     /tmp/cclVlxlC.s:3972   .text:00000e62 .Loc.836
     /tmp/cclVlxlC.s:3975   .text:00000e62 .Loc.837
     /tmp/cclVlxlC.s:3979   .text:00000e66 .Loc.838
     /tmp/cclVlxlC.s:3988   .text:00000e72 .Loc.839
     /tmp/cclVlxlC.s:3991   .text:00000e76 .Loc.840
     /tmp/cclVlxlC.s:3992   .text:00000e76 .Loc.841
     /tmp/cclVlxlC.s:4000   .text:00000e8a .Loc.842
     /tmp/cclVlxlC.s:4010   .text:00000e9a .Loc.843
     /tmp/cclVlxlC.s:4011   .text:00000e9a .Loc.844
     /tmp/cclVlxlC.s:4024   .text:00000eae .Loc.845
     /tmp/cclVlxlC.s:4029   .text:00000eb2 .Loc.846
     /tmp/cclVlxlC.s:4034   .text:00000eb6 .Loc.847
     /tmp/cclVlxlC.s:4041   .text:00000eb6 .Loc.848
     /tmp/cclVlxlC.s:4054   .text:00000eca .Loc.849
     /tmp/cclVlxlC.s:4059   .text:00000eca .Loc.850
     /tmp/cclVlxlC.s:4060   .text:00000eca .Loc.851
     /tmp/cclVlxlC.s:4061   .text:00000eca .Loc.852
     /tmp/cclVlxlC.s:4065   .text:00000ece .Loc.853
     /tmp/cclVlxlC.s:4072   .text:00000eda .Loc.854
     /tmp/cclVlxlC.s:4079   .text:00000ee4 .Loc.855
     /tmp/cclVlxlC.s:4087   .text:00000eec .Loc.856
     /tmp/cclVlxlC.s:4089   .text:00000eec .Loc.857
     /tmp/cclVlxlC.s:4092   .text:00000eec .Loc.858
     /tmp/cclVlxlC.s:4096   .text:00000ef0 .Loc.859
     /tmp/cclVlxlC.s:4105   .text:00000efc .Loc.860
     /tmp/cclVlxlC.s:4110   .text:00000f04 .Loc.861
     /tmp/cclVlxlC.s:4111   .text:00000f04 .Loc.862
     /tmp/cclVlxlC.s:4119   .text:00000f18 .Loc.863
     /tmp/cclVlxlC.s:4129   .text:00000f28 .Loc.864
     /tmp/cclVlxlC.s:4130   .text:00000f28 .Loc.865
     /tmp/cclVlxlC.s:4141   .text:00000f3c .Loc.866
     /tmp/cclVlxlC.s:4144   .text:00000f40 .Loc.867
     /tmp/cclVlxlC.s:4148   .text:00000f40 .Loc.868
     /tmp/cclVlxlC.s:4150   .text:00000f40 .Loc.869
     /tmp/cclVlxlC.s:4156   .text:00000f46 .Loc.870
     /tmp/cclVlxlC.s:4161   .text:00000f46 .Loc.871
     /tmp/cclVlxlC.s:4162   .text:00000f46 .Loc.872
     /tmp/cclVlxlC.s:4163   .text:00000f46 .Loc.873
     /tmp/cclVlxlC.s:4167   .text:00000f4a .Loc.874
     /tmp/cclVlxlC.s:4173   .text:00000f52 .Loc.875
     /tmp/cclVlxlC.s:4176   .text:00000f56 .Loc.876
     /tmp/cclVlxlC.s:4187   .text:00000f68 .Loc.877
     /tmp/cclVlxlC.s:4191   .text:00000f6c .Loc.878
     /tmp/cclVlxlC.s:4208   .text:00000f88 .Loc.879
     /tmp/cclVlxlC.s:4210   .text:00000f88 .Loc.880
     /tmp/cclVlxlC.s:4211   .text:00000f88 .Loc.881
     /tmp/cclVlxlC.s:4227   .text:00000fac .Loc.882
     /tmp/cclVlxlC.s:4228   .text:00000fac .Loc.883
     /tmp/cclVlxlC.s:4241   .text:00000fc0 .Loc.884
     /tmp/cclVlxlC.s:4246   .text:00000fc4 .Loc.885
     /tmp/cclVlxlC.s:4252   .text:00000fca .Loc.886
     /tmp/cclVlxlC.s:4257   .text:00000fca .Loc.887
     /tmp/cclVlxlC.s:4258   .text:00000fca .Loc.888
     /tmp/cclVlxlC.s:4259   .text:00000fca .Loc.889
     /tmp/cclVlxlC.s:4260   .text:00000fca .Loc.890
     /tmp/cclVlxlC.s:4264   .text:00000fce .Loc.891
     /tmp/cclVlxlC.s:4273   .text:00000fdc .Loc.892
     /tmp/cclVlxlC.s:4277   .text:00000fe0 .Loc.893
     /tmp/cclVlxlC.s:4278   .text:00000fe0 .Loc.894
     /tmp/cclVlxlC.s:4279   .text:00000fe0 .Loc.895
     /tmp/cclVlxlC.s:4280   .text:00000fe0 .Loc.896
     /tmp/cclVlxlC.s:4292   .text:00000ff2 .Loc.897
     /tmp/cclVlxlC.s:4293   .text:00000ff2 .Loc.898
     /tmp/cclVlxlC.s:4304   .text:00001004 .Loc.899
     /tmp/cclVlxlC.s:4306   .text:00001006 .Loc.900
     /tmp/cclVlxlC.s:4311   .text:0000100a .Loc.901
     /tmp/cclVlxlC.s:4329   .text:00001028 .Loc.902
     /tmp/cclVlxlC.s:4340   .text:0000103a .Loc.903
     /tmp/cclVlxlC.s:4342   .text:0000103c .Loc.904
     /tmp/cclVlxlC.s:4347   .text:00001040 .Loc.905
     /tmp/cclVlxlC.s:4361   .text:00001056 .Loc.906
     /tmp/cclVlxlC.s:4371   .text:00001064 .Loc.907
     /tmp/cclVlxlC.s:4373   .text:00001066 .Loc.908
     /tmp/cclVlxlC.s:4377   .text:0000106a .Loc.909
     /tmp/cclVlxlC.s:4380   .text:0000106e .Loc.910
     /tmp/cclVlxlC.s:4382   .text:00001072 L0
     /tmp/cclVlxlC.s:4384   .text:00001074 .Loc.911
     /tmp/cclVlxlC.s:4391   .text:0000107e .Loc.912
     /tmp/cclVlxlC.s:4406   .text:00001082 .Loc.913
     /tmp/cclVlxlC.s:4407   .text:00001082 .Loc.914
     /tmp/cclVlxlC.s:4408   .text:00001082 .Loc.915
     /tmp/cclVlxlC.s:4411   .text:00001084 .Loc.916
     /tmp/cclVlxlC.s:4418   .text:00001090 .Loc.917
     /tmp/cclVlxlC.s:4427   .text:000010a0 .Loc.918
     /tmp/cclVlxlC.s:4432   .text:000010a8 .Loc.919
     /tmp/cclVlxlC.s:4435   .text:000010aa .Loc.920
     /tmp/cclVlxlC.s:4436   .text:000010aa .Loc.921
     /tmp/cclVlxlC.s:4437   .text:000010aa .Loc.922
     /tmp/cclVlxlC.s:4445   .text:000010b8 .Loc.923
     /tmp/cclVlxlC.s:4453   .text:000010c8 .Loc.924
     /tmp/cclVlxlC.s:4457   .text:000010ce .Loc.925
     /tmp/cclVlxlC.s:4468   .text:000010e2 .Loc.926
     /tmp/cclVlxlC.s:4471   .text:000010e4 .Loc.927
     /tmp/cclVlxlC.s:4472   .text:000010e4 .Loc.928
     /tmp/cclVlxlC.s:4473   .text:000010e4 .Loc.929
     /tmp/cclVlxlC.s:4481   .text:000010f2 .Loc.930
     /tmp/cclVlxlC.s:4489   .text:00001102 .Loc.931
     /tmp/cclVlxlC.s:4492   .text:00001108 .Loc.932
     /tmp/cclVlxlC.s:4498   .text:00001112 .Loc.933
     /tmp/cclVlxlC.s:4501   .text:00001114 .Loc.934
     /tmp/cclVlxlC.s:4502   .text:00001114 .Loc.935
     /tmp/cclVlxlC.s:4503   .text:00001114 .Loc.936
     /tmp/cclVlxlC.s:4511   .text:00001122 .Loc.937
     /tmp/cclVlxlC.s:4519   .text:00001132 .Loc.938
     /tmp/cclVlxlC.s:4524   .text:0000113a .Loc.939
     /tmp/cclVlxlC.s:4525   .text:0000113a .Loc.940
     /tmp/cclVlxlC.s:4526   .text:0000113a .Loc.941
     /tmp/cclVlxlC.s:4533   .text:00001146 .Loc.942
     /tmp/cclVlxlC.s:4541   .text:00001156 .Loc.943
     /tmp/cclVlxlC.s:4547   .text:00001160 .Loc.944
     /tmp/cclVlxlC.s:4550   .text:00001162 .Loc.945
     /tmp/cclVlxlC.s:4551   .text:00001162 .Loc.946
     /tmp/cclVlxlC.s:4552   .text:00001162 .Loc.947
     /tmp/cclVlxlC.s:4559   .text:0000116e .Loc.948
     /tmp/cclVlxlC.s:4567   .text:0000117e .Loc.949
     /tmp/cclVlxlC.s:4574   .text:0000118a .Loc.950
     /tmp/cclVlxlC.s:4577   .text:0000118c .Loc.951
     /tmp/cclVlxlC.s:4578   .text:0000118c .Loc.952
     /tmp/cclVlxlC.s:4579   .text:0000118c .Loc.953
     /tmp/cclVlxlC.s:4586   .text:00001198 .Loc.954
     /tmp/cclVlxlC.s:4597   .text:000011ac .Loc.955
     /tmp/cclVlxlC.s:4598   .text:000011ac .Loc.956
     /tmp/cclVlxlC.s:4599   .text:000011ac .Loc.957
     /tmp/cclVlxlC.s:4606   .text:000011b8 .Loc.958
     /tmp/cclVlxlC.s:4620   .text:000011d4 .Loc.959
     /tmp/cclVlxlC.s:4624   .text:000011d6 .Loc.960
     /tmp/cclVlxlC.s:4631   .text:000011e0 .Loc.961
     /tmp/cclVlxlC.s:4646   .text:000011e4 .Loc.962
     /tmp/cclVlxlC.s:4647   .text:000011e4 .Loc.963
     /tmp/cclVlxlC.s:4650   .text:000011e6 .Loc.964
     /tmp/cclVlxlC.s:4657   .text:000011f2 .Loc.965
     /tmp/cclVlxlC.s:4662   .text:000011fa .Loc.966
     /tmp/cclVlxlC.s:4664   .text:000011fe L0
     /tmp/cclVlxlC.s:4666   .text:00001200 .Loc.967
     /tmp/cclVlxlC.s:4667   .text:00001200 .Loc.968
     /tmp/cclVlxlC.s:4668   .text:00001200 .Loc.969
     /tmp/cclVlxlC.s:4675   .text:0000120a .Loc.970
     /tmp/cclVlxlC.s:4676   .text:0000120a .Loc.971
     /tmp/cclVlxlC.s:4677   .text:0000120a .Loc.972
     /tmp/cclVlxlC.s:4685   .text:00001218 .Loc.973
     /tmp/cclVlxlC.s:4689   .text:0000121e .Loc.974
     /tmp/cclVlxlC.s:4705   .text:00001236 .Loc.975
     /tmp/cclVlxlC.s:4706   .text:00001236 .Loc.976
     /tmp/cclVlxlC.s:4707   .text:00001236 .Loc.977
     /tmp/cclVlxlC.s:4715   .text:00001244 .Loc.978
     /tmp/cclVlxlC.s:4728   .text:0000125e L0
     /tmp/cclVlxlC.s:4731   .text:00001260 .Loc.979
     /tmp/cclVlxlC.s:4737   .text:00001268 .Loc.980
     /tmp/cclVlxlC.s:4738   .text:00001268 .Loc.981
     /tmp/cclVlxlC.s:4739   .text:00001268 .Loc.982
     /tmp/cclVlxlC.s:4747   .text:00001276 .Loc.983
     /tmp/cclVlxlC.s:4760   .text:00001290 L0
     /tmp/cclVlxlC.s:4764   .text:00001294 .Loc.984
     /tmp/cclVlxlC.s:4765   .text:00001294 .Loc.985
     /tmp/cclVlxlC.s:4766   .text:00001294 .Loc.986
     /tmp/cclVlxlC.s:4774   .text:000012a2 .Loc.987
     /tmp/cclVlxlC.s:4781   .text:000012ac .Loc.988
     /tmp/cclVlxlC.s:4782   .text:000012ac .Loc.989
     /tmp/cclVlxlC.s:4786   .text:000012b2 .Loc.990
     /tmp/cclVlxlC.s:4794   .text:000012c0 .Loc.991
     /tmp/cclVlxlC.s:4799   .text:000012c8 .Loc.992
     /tmp/cclVlxlC.s:4802   .text:000012cc .Loc.993
     /tmp/cclVlxlC.s:4803   .text:000012cc .Loc.994
     /tmp/cclVlxlC.s:4804   .text:000012cc .Loc.995
     /tmp/cclVlxlC.s:4816   .text:000012dc .Loc.996
     /tmp/cclVlxlC.s:4817   .text:000012dc .Loc.997
     /tmp/cclVlxlC.s:4818   .text:000012dc .Loc.998
     /tmp/cclVlxlC.s:4830   .text:000012ec .Loc.999
     /tmp/cclVlxlC.s:4831   .text:000012ec .Loc.1000
     /tmp/cclVlxlC.s:4832   .text:000012ec .Loc.1001
     /tmp/cclVlxlC.s:4840   .text:000012fa .Loc.1002
     /tmp/cclVlxlC.s:4847   .text:00001304 .Loc.1003
     /tmp/cclVlxlC.s:4848   .text:00001304 .Loc.1004
     /tmp/cclVlxlC.s:4849   .text:00001304 .Loc.1005
     /tmp/cclVlxlC.s:4857   .text:00001312 .Loc.1006
     /tmp/cclVlxlC.s:4865   .text:0000131c .Loc.1007
     /tmp/cclVlxlC.s:4868   .text:0000131c .Loc.1008
     /tmp/cclVlxlC.s:4869   .text:0000131c .Loc.1009
     /tmp/cclVlxlC.s:4870   .text:0000131c .Loc.1010
     /tmp/cclVlxlC.s:4871   .text:0000131c .Loc.1011
     /tmp/cclVlxlC.s:4872   .text:0000131c .Loc.1012
     /tmp/cclVlxlC.s:4873   .text:0000131c .Loc.1013
     /tmp/cclVlxlC.s:4874   .text:0000131c .Loc.1014
     /tmp/cclVlxlC.s:4878   .text:00001320 .Loc.1015
     /tmp/cclVlxlC.s:4887   .text:0000132e .Loc.1016
     /tmp/cclVlxlC.s:4889   .text:00001330 .Loc.1017
     /tmp/cclVlxlC.s:4892   .text:00001334 .Loc.1018
     /tmp/cclVlxlC.s:4900   .text:00001342 .Loc.1019
     /tmp/cclVlxlC.s:4904   .text:00001346 .Loc.1020
     /tmp/cclVlxlC.s:4909   .text:0000134e .Loc.1021
     /tmp/cclVlxlC.s:4913   .text:00001350 .Loc.1022
     /tmp/cclVlxlC.s:4916   .text:00001350 .Loc.1023
     /tmp/cclVlxlC.s:4917   .text:00001350 .Loc.1024
     /tmp/cclVlxlC.s:4918   .text:00001350 .Loc.1025
     /tmp/cclVlxlC.s:4919   .text:00001350 .Loc.1026
     /tmp/cclVlxlC.s:4920   .text:00001350 .Loc.1027
     /tmp/cclVlxlC.s:4924   .text:00001354 .Loc.1028
     /tmp/cclVlxlC.s:4933   .text:00001362 .Loc.1029
     /tmp/cclVlxlC.s:4936   .text:00001364 .Loc.1030
     /tmp/cclVlxlC.s:4937   .text:00001364 .Loc.1031
     /tmp/cclVlxlC.s:4948   .text:00001376 .Loc.1032
     /tmp/cclVlxlC.s:4952   .text:0000137a .Loc.1033
     /tmp/cclVlxlC.s:4953   .text:0000137a .Loc.1034
     /tmp/cclVlxlC.s:4964   .text:0000138c .Loc.1035
     /tmp/cclVlxlC.s:4968   .text:00001390 .Loc.1036
     /tmp/cclVlxlC.s:4969   .text:00001390 .Loc.1037
     /tmp/cclVlxlC.s:4972   .text:00001390 .Loc.1038
     /tmp/cclVlxlC.s:4974   .text:00001390 .Loc.1039
     /tmp/cclVlxlC.s:4975   .text:00001390 .Loc.1040
     /tmp/cclVlxlC.s:4978   .text:00001390 .Loc.1041
     /tmp/cclVlxlC.s:4993   .text:000013aa .Loc.1042
     /tmp/cclVlxlC.s:5002   .text:000013ba .Loc.1043
     /tmp/cclVlxlC.s:5007   .text:000013c2 .Loc.1044
     /tmp/cclVlxlC.s:5017   .text:000013d0 .Loc.1045
     /tmp/cclVlxlC.s:5022   .text:000013d8 .Loc.1046
     /tmp/cclVlxlC.s:5027   .text:000013e0 .Loc.1047
     /tmp/cclVlxlC.s:5034   .text:000013ea .Loc.1048
     /tmp/cclVlxlC.s:5041   .text:000013f2 .Loc.1049
     /tmp/cclVlxlC.s:5044   .text:000013f6 .Loc.1050
     /tmp/cclVlxlC.s:5049   .text:000013fc .Loc.1051
     /tmp/cclVlxlC.s:5052   .text:000013fc .Loc.1052
     /tmp/cclVlxlC.s:5054   .text:00001400 L0
     /tmp/cclVlxlC.s:5056   .text:00001404 L0
     /tmp/cclVlxlC.s:5059   .text:0000140a L0
     /tmp/cclVlxlC.s:5062   .text:00001410 L0
     /tmp/cclVlxlC.s:5066   .text:00001416 .Loc.1053
     /tmp/cclVlxlC.s:5067   .text:00001416 .Loc.1054
     /tmp/cclVlxlC.s:5070   .text:00001416 .Loc.1055
     /tmp/cclVlxlC.s:5078   .text:00001420 .Loc.1056
     /tmp/cclVlxlC.s:5088   .text:00001432 .Loc.1057
     /tmp/cclVlxlC.s:5091   .text:00001434 .Loc.1058
     /tmp/cclVlxlC.s:5094   .text:00001436 .Loc.1059
     /tmp/cclVlxlC.s:5100   .text:0000143e .Loc.1060
     /tmp/cclVlxlC.s:5103   .text:00001442 .Loc.1061
     /tmp/cclVlxlC.s:5117   .text:0000145e L0
     /tmp/cclVlxlC.s:5120   .text:00001460 .Loc.1062
     /tmp/cclVlxlC.s:5121   .text:00001460 .Loc.1063
     /tmp/cclVlxlC.s:5128   .text:0000146c .Loc.1064
     /tmp/cclVlxlC.s:5131   .text:0000146c .Loc.1065
     /tmp/cclVlxlC.s:5139   .text:00001476 .Loc.1066
     /tmp/cclVlxlC.s:5141   .text:00001476 .Loc.1067
     /tmp/cclVlxlC.s:5157   .text:00001490 .Loc.1068
     /tmp/cclVlxlC.s:5170   .text:000014a4 .Loc.1069
     /tmp/cclVlxlC.s:5181   .text:000014b4 .Loc.1070
     /tmp/cclVlxlC.s:5183   .text:000014b8 L0
     /tmp/cclVlxlC.s:5185   .text:000014ba .Loc.1071
     /tmp/cclVlxlC.s:5186   .text:000014ba .Loc.1072
     /tmp/cclVlxlC.s:5187   .text:000014ba .Loc.1073
     /tmp/cclVlxlC.s:5190   .text:000014bc .Loc.1074
     /tmp/cclVlxlC.s:5196   .text:000014c4 .Loc.1075
     /tmp/cclVlxlC.s:5199   .text:000014c8 .Loc.1076
     /tmp/cclVlxlC.s:5202   .text:000014ca .Loc.1077
     /tmp/cclVlxlC.s:5209   .text:000014d6 .Loc.1078
     /tmp/cclVlxlC.s:5223   .text:000014f2 L0
     /tmp/cclVlxlC.s:5228   .text:000014f6 .Loc.1079
     /tmp/cclVlxlC.s:5229   .text:000014f6 .Loc.1080
     /tmp/cclVlxlC.s:5232   .text:000014f6 .Loc.1081
     /tmp/cclVlxlC.s:5240   .text:00001500 .Loc.1082
     /tmp/cclVlxlC.s:5250   .text:00001512 .Loc.1083
     /tmp/cclVlxlC.s:5253   .text:00001514 .Loc.1084
     /tmp/cclVlxlC.s:5256   .text:00001516 .Loc.1085
     /tmp/cclVlxlC.s:5262   .text:0000151e .Loc.1086
     /tmp/cclVlxlC.s:5265   .text:00001522 .Loc.1087
     /tmp/cclVlxlC.s:5279   .text:0000153e L0
     /tmp/cclVlxlC.s:5284   .text:00001542 .Loc.1088
     /tmp/cclVlxlC.s:5285   .text:00001542 .Loc.1089
     /tmp/cclVlxlC.s:5288   .text:00001542 .Loc.1090
     /tmp/cclVlxlC.s:5296   .text:0000154c .Loc.1091
     /tmp/cclVlxlC.s:5306   .text:0000155e .Loc.1092
     /tmp/cclVlxlC.s:5309   .text:00001560 .Loc.1093
     /tmp/cclVlxlC.s:5312   .text:00001562 .Loc.1094
     /tmp/cclVlxlC.s:5318   .text:0000156a .Loc.1095
     /tmp/cclVlxlC.s:5321   .text:0000156e .Loc.1096
     /tmp/cclVlxlC.s:5335   .text:0000158a L0
     /tmp/cclVlxlC.s:5340   .text:0000158e .Loc.1097
     /tmp/cclVlxlC.s:5341   .text:0000158e .Loc.1098
     /tmp/cclVlxlC.s:5344   .text:0000158e .Loc.1099
     /tmp/cclVlxlC.s:5352   .text:00001598 .Loc.1100
     /tmp/cclVlxlC.s:5361   .text:000015a6 .Loc.1101
     /tmp/cclVlxlC.s:5364   .text:000015aa .Loc.1102
     /tmp/cclVlxlC.s:5368   .text:000015ae .Loc.1103
     /tmp/cclVlxlC.s:5374   .text:000015b6 .Loc.1104
     /tmp/cclVlxlC.s:5377   .text:000015ba .Loc.1105
     /tmp/cclVlxlC.s:5391   .text:000015d6 L0
     /tmp/cclVlxlC.s:5396   .text:000015da .Loc.1106
     /tmp/cclVlxlC.s:5397   .text:000015da .Loc.1107
     /tmp/cclVlxlC.s:5398   .text:000015da .Loc.1108
     /tmp/cclVlxlC.s:5401   .text:000015dc .Loc.1109
     /tmp/cclVlxlC.s:5407   .text:000015e4 .Loc.1110
     /tmp/cclVlxlC.s:5410   .text:000015e8 .Loc.1111
     /tmp/cclVlxlC.s:5413   .text:000015ea .Loc.1112
     /tmp/cclVlxlC.s:5420   .text:000015f6 .Loc.1113
     /tmp/cclVlxlC.s:5434   .text:00001612 L0
     /tmp/cclVlxlC.s:5439   .text:00001616 .Loc.1114
     /tmp/cclVlxlC.s:5442   .text:00001616 .Loc.1115
     /tmp/cclVlxlC.s:5443   .text:00001616 .Loc.1116
     /tmp/cclVlxlC.s:5444   .text:00001616 .Loc.1117
     /tmp/cclVlxlC.s:5445   .text:00001616 .Loc.1118
     /tmp/cclVlxlC.s:5446   .text:00001616 .Loc.1119
     /tmp/cclVlxlC.s:5447   .text:00001616 .Loc.1120
     /tmp/cclVlxlC.s:5450   .text:00001616 .Loc.1121
     /tmp/cclVlxlC.s:5452   .text:00001616 .Loc.1122
     /tmp/cclVlxlC.s:5453   .text:00001616 .Loc.1123
     /tmp/cclVlxlC.s:5454   .text:00001616 .Loc.1124
     /tmp/cclVlxlC.s:5457   .text:00001616 .Loc.1125
     /tmp/cclVlxlC.s:5458   .text:00001616 .Loc.1126
     /tmp/cclVlxlC.s:5459   .text:00001616 .Loc.1127
     /tmp/cclVlxlC.s:5467   .text:00001624 .Loc.1128
     /tmp/cclVlxlC.s:5471   .text:00001628 .Loc.1129
     /tmp/cclVlxlC.s:5480   .text:00001636 .Loc.1130
     /tmp/cclVlxlC.s:5482   .text:00001638 .Loc.1131
     /tmp/cclVlxlC.s:5485   .text:0000163c .Loc.1132
     /tmp/cclVlxlC.s:5493   .text:0000164a .Loc.1133
     /tmp/cclVlxlC.s:5499   .text:00001654 .Loc.1134
     /tmp/cclVlxlC.s:5504   .text:0000165c .Loc.1135
     /tmp/cclVlxlC.s:5505   .text:0000165c .Loc.1136
     /tmp/cclVlxlC.s:5517   .text:0000166e .Loc.1137
     /tmp/cclVlxlC.s:5523   .text:00001676 .Loc.1138
     /tmp/cclVlxlC.s:5535   .text:00001688 .Loc.1139
     /tmp/cclVlxlC.s:5542   .text:00001692 .Loc.1140
     /tmp/cclVlxlC.s:5548   .text:0000169a .Loc.1141
     /tmp/cclVlxlC.s:5558   .text:000016aa .Loc.1142
     /tmp/cclVlxlC.s:5564   .text:000016b2 .Loc.1143
     /tmp/cclVlxlC.s:5574   .text:000016c0 .Loc.1144
     /tmp/cclVlxlC.s:5580   .text:000016c8 .Loc.1145
     /tmp/cclVlxlC.s:5587   .text:000016d0 .Loc.1146
     /tmp/cclVlxlC.s:5594   .text:000016d8 .Loc.1147
     /tmp/cclVlxlC.s:5600   .text:000016de .Loc.1148
     /tmp/cclVlxlC.s:5603   .text:000016de .Loc.1149
     /tmp/cclVlxlC.s:5608   .text:000016e6 .Loc.1150
     /tmp/cclVlxlC.s:5609   .text:000016e6 .Loc.1151
     /tmp/cclVlxlC.s:5613   .text:000016e8 .Loc.1152
     /tmp/cclVlxlC.s:5614   .text:000016e8 .Loc.1153
     /tmp/cclVlxlC.s:5615   .text:000016e8 .Loc.1154
     /tmp/cclVlxlC.s:5616   .text:000016e8 .Loc.1155
     /tmp/cclVlxlC.s:5617   .text:000016e8 .Loc.1156
     /tmp/cclVlxlC.s:5618   .text:000016e8 .Loc.1157
     /tmp/cclVlxlC.s:5619   .text:000016e8 .Loc.1158
     /tmp/cclVlxlC.s:5622   .text:000016e8 .Loc.1159
     /tmp/cclVlxlC.s:5624   .text:000016e8 .Loc.1160
     /tmp/cclVlxlC.s:5625   .text:000016e8 .Loc.1161
     /tmp/cclVlxlC.s:5626   .text:000016e8 .Loc.1162
     /tmp/cclVlxlC.s:5629   .text:000016e8 .Loc.1163
     /tmp/cclVlxlC.s:5630   .text:000016e8 .Loc.1164
     /tmp/cclVlxlC.s:5631   .text:000016e8 .Loc.1165
     /tmp/cclVlxlC.s:5635   .text:000016ec .Loc.1166
     /tmp/cclVlxlC.s:5644   .text:000016fa .Loc.1167
     /tmp/cclVlxlC.s:5646   .text:000016fc .Loc.1168
     /tmp/cclVlxlC.s:5649   .text:00001700 .Loc.1169
     /tmp/cclVlxlC.s:5658   .text:00001710 .Loc.1170
     /tmp/cclVlxlC.s:5667   .text:00001720 .Loc.1171
     /tmp/cclVlxlC.s:5673   .text:0000172a .Loc.1172
     /tmp/cclVlxlC.s:5674   .text:0000172a .Loc.1173
     /tmp/cclVlxlC.s:5685   .text:0000173c .Loc.1174
     /tmp/cclVlxlC.s:5687   .text:0000173e .Loc.1175
     /tmp/cclVlxlC.s:5697   .text:00001750 .Loc.1176
     /tmp/cclVlxlC.s:5707   .text:0000175e .Loc.1177
     /tmp/cclVlxlC.s:5712   .text:00001760 .Loc.1178
     /tmp/cclVlxlC.s:5716   .text:00001764 .Loc.1179
     /tmp/cclVlxlC.s:5721   .text:0000176a .Loc.1180
     /tmp/cclVlxlC.s:5724   .text:0000176a .Loc.1181
     /tmp/cclVlxlC.s:5731   .text:00001774 L0
     /tmp/cclVlxlC.s:5735   .text:00001774 _lcd_write_reg
     /tmp/cclVlxlC.s:5738   .text:00001774 .Loc.1182
     /tmp/cclVlxlC.s:5739   .text:00001774 L0
     /tmp/cclVlxlC.s:5744   .text:00001774 .Loc.1183
     /tmp/cclVlxlC.s:5746   .text:00001776 .Loc.1184
     /tmp/cclVlxlC.s:5748   .text:00001778 .Loc.1185
     /tmp/cclVlxlC.s:5751   .text:0000177c .Loc.1186
     /tmp/cclVlxlC.s:5754   .text:0000177e .Loc.1187
     /tmp/cclVlxlC.s:5756   .text:00001780 L0
     /tmp/cclVlxlC.s:5760   .text:00001780 _lcd_write_data
     /tmp/cclVlxlC.s:5763   .text:00001780 .Loc.1188
     /tmp/cclVlxlC.s:5764   .text:00001780 L0
     /tmp/cclVlxlC.s:5765   .text:00001780 .Loc.1189
     /tmp/cclVlxlC.s:5774   .text:00001784 .Loc.1190
     /tmp/cclVlxlC.s:5776   .text:00001786 .Loc.1191
     /tmp/cclVlxlC.s:5778   .text:00001788 .Loc.1192
     /tmp/cclVlxlC.s:5781   .text:0000178a .Loc.1193
     /tmp/cclVlxlC.s:5784   .text:0000178e .Loc.1194
     /tmp/cclVlxlC.s:5788   .text:00001794 .Loc.1195
     /tmp/cclVlxlC.s:5791   .text:00001796 .Loc.1196
     /tmp/cclVlxlC.s:5794   .text:00001798 .Loc.1197
     /tmp/cclVlxlC.s:5796   .text:0000179a L0
     /tmp/cclVlxlC.s:5800   .text:0000179a _lcd_window_start
     /tmp/cclVlxlC.s:5803   .text:0000179a .Loc.1198
     /tmp/cclVlxlC.s:5804   .text:0000179a L0
     /tmp/cclVlxlC.s:5805   .text:0000179a .Loc.1199
     /tmp/cclVlxlC.s:5836   .text:000017ae .Loc.1200
     /tmp/cclVlxlC.s:5837   .text:000017ae .Loc.1201
     /tmp/cclVlxlC.s:5838   .text:000017ae .Loc.1202
     /tmp/cclVlxlC.s:5845   .text:000017b8 .Loc.1203
     /tmp/cclVlxlC.s:5846   .text:000017b8 .Loc.1204
     /tmp/cclVlxlC.s:5852   .text:000017c0 .Loc.1205
     /tmp/cclVlxlC.s:5855   .text:000017c4 .Loc.1206
     /tmp/cclVlxlC.s:5859   .text:000017ca .Loc.1207
     /tmp/cclVlxlC.s:5863   .text:000017d0 .Loc.1208
     /tmp/cclVlxlC.s:5867   .text:000017d6 .Loc.1209
     /tmp/cclVlxlC.s:5871   .text:000017dc .Loc.1210
     /tmp/cclVlxlC.s:5875   .text:000017e2 .Loc.1211
     /tmp/cclVlxlC.s:5879   .text:000017e8 .Loc.1212
     /tmp/cclVlxlC.s:5883   .text:000017ee .Loc.1213
     /tmp/cclVlxlC.s:5887   .text:000017f4 .Loc.1214
     /tmp/cclVlxlC.s:5891   .text:000017fa .Loc.1215
     /tmp/cclVlxlC.s:5895   .text:00001800 .Loc.1216
     /tmp/cclVlxlC.s:5899   .text:00001806 .Loc.1217
     /tmp/cclVlxlC.s:5901   .text:00001808 .Loc.1218
     /tmp/cclVlxlC.s:5904   .text:0000180a .Loc.1219
     /tmp/cclVlxlC.s:5908   .text:0000180e .Loc.1220
     /tmp/cclVlxlC.s:5912   .text:00001812 .Loc.1221
     /tmp/cclVlxlC.s:5916   .text:00001816 .Loc.1222
     /tmp/cclVlxlC.s:5920   .text:0000181a .Loc.1223
     /tmp/cclVlxlC.s:5922   .text:0000181c L0
     /tmp/cclVlxlC.s:5926   .text:0000181c _lcd_pixel
     /tmp/cclVlxlC.s:5929   .text:0000181c .Loc.1224
     /tmp/cclVlxlC.s:5930   .text:0000181c L0
     /tmp/cclVlxlC.s:5931   .text:0000181c .Loc.1225
     /tmp/cclVlxlC.s:5942   .text:00001822 .Loc.1226
     /tmp/cclVlxlC.s:5945   .text:00001826 .Loc.1227
     /tmp/cclVlxlC.s:5948   .text:00001828 .Loc.1228
     /tmp/cclVlxlC.s:5950   .text:0000182a .Loc.1229
     /tmp/cclVlxlC.s:5953   .text:0000182e L0
     /tmp/cclVlxlC.s:5957   .text:0000182e syscall_gfx_rect
     /tmp/cclVlxlC.s:5960   .text:0000182e .Loc.1230
     /tmp/cclVlxlC.s:5961   .text:0000182e L0
     /tmp/cclVlxlC.s:5962   .text:0000182e .Loc.1231
     /tmp/cclVlxlC.s:6002   .text:0000184a L0
     /tmp/cclVlxlC.s:6003   .text:0000184c L0
     /tmp/cclVlxlC.s:6014   .text:00001854 .Loc.1232
     /tmp/cclVlxlC.s:6015   .text:00001854 .Loc.1233
     /tmp/cclVlxlC.s:6016   .text:00001854 .Loc.1234
     /tmp/cclVlxlC.s:6017   .text:00001854 .Loc.1235
     /tmp/cclVlxlC.s:6024   .text:0000185e .Loc.1236
     /tmp/cclVlxlC.s:6025   .text:0000185e .Loc.1237
     /tmp/cclVlxlC.s:6031   .text:00001866 .Loc.1238
     /tmp/cclVlxlC.s:6032   .text:00001866 .Loc.1239
     /tmp/cclVlxlC.s:6038   .text:0000186e .Loc.1240
     /tmp/cclVlxlC.s:6039   .text:0000186e .Loc.1241
     /tmp/cclVlxlC.s:6044   .text:00001874 .Loc.1242
     /tmp/cclVlxlC.s:6045   .text:00001874 .Loc.1243
     /tmp/cclVlxlC.s:6051   .text:0000187c .Loc.1244
     /tmp/cclVlxlC.s:6055   .text:00001882 .Loc.1245
     /tmp/cclVlxlC.s:6058   .text:00001886 .Loc.1246
     /tmp/cclVlxlC.s:6060   .text:00001886 .Loc.1247
     /tmp/cclVlxlC.s:6063   .text:00001886 .Loc.1248
     /tmp/cclVlxlC.s:6065   .text:00001886 .Loc.1249
     /tmp/cclVlxlC.s:6079   .text:0000189e .Loc.1250
     /tmp/cclVlxlC.s:6084   .text:000018a6 .Loc.1251
     /tmp/cclVlxlC.s:6090   .text:000018aa .Loc.1252
     /tmp/cclVlxlC.s:6092   .text:000018aa .Loc.1253
     /tmp/cclVlxlC.s:6093   .text:000018aa .Loc.1254
     /tmp/cclVlxlC.s:6100   .text:000018b6 .Loc.1255
     /tmp/cclVlxlC.s:6101   .text:000018b6 .Loc.1256
     /tmp/cclVlxlC.s:6106   .text:000018ba .Loc.1257
     /tmp/cclVlxlC.s:6112   .text:000018c4 .Loc.1258
     /tmp/cclVlxlC.s:6116   .text:000018c8 .Loc.1259
     /tmp/cclVlxlC.s:6121   .text:000018c8 .Loc.1260
     /tmp/cclVlxlC.s:6135   .text:000018de .Loc.1261
     /tmp/cclVlxlC.s:6139   .text:000018e2 .Loc.1262
     /tmp/cclVlxlC.s:6145   .text:000018ea .Loc.1263
     /tmp/cclVlxlC.s:6154   .text:000018ee .Loc.1264
     /tmp/cclVlxlC.s:6159   .text:000018f6 .Loc.1265
     /tmp/cclVlxlC.s:6165   .text:000018fc .Loc.1266
     /tmp/cclVlxlC.s:6169   .text:00001902 .Loc.1267
     /tmp/cclVlxlC.s:6176   .text:0000190c .Loc.1268
     /tmp/cclVlxlC.s:6180   .text:0000190e .Loc.1269
     /tmp/cclVlxlC.s:6186   .text:00001914 .Loc.1270
     /tmp/cclVlxlC.s:6191   .text:00001914 .Loc.1271
     /tmp/cclVlxlC.s:6194   .text:00001918 L0
     /tmp/cclVlxlC.s:6198   .text:00001918 lcd_logo_P
     /tmp/cclVlxlC.s:6201   .text:00001918 .Loc.1272
     /tmp/cclVlxlC.s:6202   .text:00001918 L0
     /tmp/cclVlxlC.s:6203   .text:00001918 .Loc.1273
     /tmp/cclVlxlC.s:6253   .text:0000193a .Loc.1274
     /tmp/cclVlxlC.s:6254   .text:0000193a .Loc.1275
     /tmp/cclVlxlC.s:6257   .text:0000193e .Loc.1276
     /tmp/cclVlxlC.s:6258   .text:0000193e .Loc.1277
     /tmp/cclVlxlC.s:6259   .text:0000193e .Loc.1278
     /tmp/cclVlxlC.s:6262   .text:00001942 .Loc.1279
     /tmp/cclVlxlC.s:6267   .text:00001946 .Loc.1280
     /tmp/cclVlxlC.s:6268   .text:00001946 .Loc.1281
     /tmp/cclVlxlC.s:6272   .text:0000194a .Loc.1282
     /tmp/cclVlxlC.s:6278   .text:00001950 .Loc.1283
     /tmp/cclVlxlC.s:6280   .text:00001950 .Loc.1284
     /tmp/cclVlxlC.s:6282   .text:00001950 .Loc.1285
     /tmp/cclVlxlC.s:6283   .text:00001950 .Loc.1286
     /tmp/cclVlxlC.s:6284   .text:00001950 .Loc.1287
     /tmp/cclVlxlC.s:6294   .text:00001958 .Loc.1288
     /tmp/cclVlxlC.s:6295   .text:00001958 .Loc.1289
     /tmp/cclVlxlC.s:6300   .text:00001958 .Loc.1290
     /tmp/cclVlxlC.s:6302   .text:00001958 .Loc.1291
     /tmp/cclVlxlC.s:6303   .text:00001958 .Loc.1292
     /tmp/cclVlxlC.s:6308   .text:0000195e .Loc.1293
     /tmp/cclVlxlC.s:6311   .text:0000195e .Loc.1294
     /tmp/cclVlxlC.s:6316   .text:00001966 .Loc.1295
     /tmp/cclVlxlC.s:6320   .text:0000196a .Loc.1296
     /tmp/cclVlxlC.s:6324   .text:00001970 .Loc.1297
     /tmp/cclVlxlC.s:6329   .text:00001976 .Loc.1298
     /tmp/cclVlxlC.s:6333   .text:0000197a .Loc.1299
     /tmp/cclVlxlC.s:6337   .text:00001980 .Loc.1300
     /tmp/cclVlxlC.s:6339   .text:00001980 .Loc.1301
     /tmp/cclVlxlC.s:6343   .text:00001984 .Loc.1302
     /tmp/cclVlxlC.s:6347   .text:00001988 .Loc.1303
     /tmp/cclVlxlC.s:6351   .text:0000198c .Loc.1304
     /tmp/cclVlxlC.s:6357   .text:00001994 .Loc.1305
     /tmp/cclVlxlC.s:6361   .text:00001998 .Loc.1306
     /tmp/cclVlxlC.s:6364   .text:0000199c .Loc.1307
     /tmp/cclVlxlC.s:6367   .text:000019a0 L0
     /tmp/cclVlxlC.s:6371   .text:000019a0 lcd_image_rgb565
     /tmp/cclVlxlC.s:6374   .text:000019a0 .Loc.1308
     /tmp/cclVlxlC.s:6375   .text:000019a0 L0
     /tmp/cclVlxlC.s:6376   .text:000019a0 .Loc.1309
     /tmp/cclVlxlC.s:6468   .text:00001a02 .Loc.1310
     /tmp/cclVlxlC.s:6469   .text:00001a02 .Loc.1311
     /tmp/cclVlxlC.s:6470   .text:00001a02 .Loc.1312
     /tmp/cclVlxlC.s:6471   .text:00001a02 .Loc.1313
     /tmp/cclVlxlC.s:6476   .text:00001a08 .Loc.1314
     /tmp/cclVlxlC.s:6477   .text:00001a08 .Loc.1315
     /tmp/cclVlxlC.s:6479   .text:00001a0a .Loc.1316
     /tmp/cclVlxlC.s:6489   .text:00001a1c .Loc.1317
     /tmp/cclVlxlC.s:6498   .text:00001a2c .Loc.1318
     /tmp/cclVlxlC.s:6508   .text:00001a3e .Loc.1319
     /tmp/cclVlxlC.s:6514   .text:00001a44 .Loc.1320
     /tmp/cclVlxlC.s:6525   .text:00001a56 .Loc.1321
     /tmp/cclVlxlC.s:6538   .text:00001a6c .Loc.1322
     /tmp/cclVlxlC.s:6544   .text:00001a74 .Loc.1323
     /tmp/cclVlxlC.s:6548   .text:00001a78 .Loc.1324
     /tmp/cclVlxlC.s:6554   .text:00001a80 .Loc.1325
     /tmp/cclVlxlC.s:6560   .text:00001a88 .Loc.1326
     /tmp/cclVlxlC.s:6564   .text:00001a8a .Loc.1327
     /tmp/cclVlxlC.s:6579   .text:00001aa6 .Loc.1328
     /tmp/cclVlxlC.s:6587   .text:00001ab4 .Loc.1329
     /tmp/cclVlxlC.s:6588   .text:00001ab4 .Loc.1330
     /tmp/cclVlxlC.s:6589   .text:00001ab4 .Loc.1331
     /tmp/cclVlxlC.s:6591   .text:00001ab6 .Loc.1332
     /tmp/cclVlxlC.s:6604   .text:00001aca .Loc.1333
     /tmp/cclVlxlC.s:6614   .text:00001adc .Loc.1334
     /tmp/cclVlxlC.s:6617   .text:00001ae0 .Loc.1335
     /tmp/cclVlxlC.s:6618   .text:00001ae0 .Loc.1336
     /tmp/cclVlxlC.s:6640   .text:00001b08 .Loc.1337
     /tmp/cclVlxlC.s:6644   .text:00001b0c .Loc.1338
     /tmp/cclVlxlC.s:6648   .text:00001b0e .Loc.1339
     /tmp/cclVlxlC.s:6649   .text:00001b0e .Loc.1340
     /tmp/cclVlxlC.s:6654   .text:00001b14 .Loc.1341
     /tmp/cclVlxlC.s:6658   .text:00001b1a .Loc.1342
     /tmp/cclVlxlC.s:6663   .text:00001b20 .Loc.1343
     /tmp/cclVlxlC.s:6666   .text:00001b24 L0
     /tmp/cclVlxlC.s:6670   .text:00001b24 syscall_gfx_image_rgb565
     /tmp/cclVlxlC.s:6673   .text:00001b24 .Loc.1344
     /tmp/cclVlxlC.s:6674   .text:00001b24 L0
     /tmp/cclVlxlC.s:6675   .text:00001b24 .Loc.1345
     /tmp/cclVlxlC.s:6746   .text:00001b5c .Loc.1346
     /tmp/cclVlxlC.s:6747   .text:00001b5c .Loc.1347
     /tmp/cclVlxlC.s:6748   .text:00001b5c .Loc.1348
     /tmp/cclVlxlC.s:6749   .text:00001b5c .Loc.1349
     /tmp/cclVlxlC.s:6756   .text:00001b66 .Loc.1350
     /tmp/cclVlxlC.s:6757   .text:00001b66 .Loc.1351
     /tmp/cclVlxlC.s:6763   .text:00001b6e .Loc.1352
     /tmp/cclVlxlC.s:6764   .text:00001b6e .Loc.1353
     /tmp/cclVlxlC.s:6772   .text:00001b7a .Loc.1354
     /tmp/cclVlxlC.s:6773   .text:00001b7a .Loc.1355
     /tmp/cclVlxlC.s:6781   .text:00001b86 .Loc.1356
     /tmp/cclVlxlC.s:6782   .text:00001b86 .Loc.1357
     /tmp/cclVlxlC.s:6788   .text:00001b8e .Loc.1358
     /tmp/cclVlxlC.s:6791   .text:00001b92 .Loc.1359
     /tmp/cclVlxlC.s:6794   .text:00001b96 .Loc.1360
     /tmp/cclVlxlC.s:6795   .text:00001b96 .Loc.1361
     /tmp/cclVlxlC.s:6809   .text:00001bae .Loc.1362
     /tmp/cclVlxlC.s:6810   .text:00001bae .Loc.1363
     /tmp/cclVlxlC.s:6811   .text:00001bae .Loc.1364
     /tmp/cclVlxlC.s:6819   .text:00001bba .Loc.1365
     /tmp/cclVlxlC.s:6826   .text:00001bc6 .Loc.1366
     /tmp/cclVlxlC.s:6832   .text:00001bce .Loc.1367
     /tmp/cclVlxlC.s:6840   .text:00001bda .Loc.1368
     /tmp/cclVlxlC.s:6847   .text:00001be6 .Loc.1369
     /tmp/cclVlxlC.s:6849   .text:00001be8 .Loc.1370
     /tmp/cclVlxlC.s:6852   .text:00001bec .Loc.1371
     /tmp/cclVlxlC.s:6856   .text:00001bec .Loc.1372
     /tmp/cclVlxlC.s:6858   .text:00001bec .Loc.1373
     /tmp/cclVlxlC.s:6870   .text:00001c00 .Loc.1374
     /tmp/cclVlxlC.s:6873   .text:00001c00 .Loc.1375
     /tmp/cclVlxlC.s:6891   .text:00001c1e .Loc.1376
     /tmp/cclVlxlC.s:6897   .text:00001c26 .Loc.1377
     /tmp/cclVlxlC.s:6903   .text:00001c2e .Loc.1378
     /tmp/cclVlxlC.s:6907   .text:00001c32 .Loc.1379
     /tmp/cclVlxlC.s:6911   .text:00001c34 .Loc.1380
     /tmp/cclVlxlC.s:6917   .text:00001c3a .Loc.1381
     /tmp/cclVlxlC.s:6921   .text:00001c40 L0
     /tmp/cclVlxlC.s:6925   .text:00001c40 lcd_image_grayscale
     /tmp/cclVlxlC.s:6928   .text:00001c40 .Loc.1382
     /tmp/cclVlxlC.s:6929   .text:00001c40 L0
     /tmp/cclVlxlC.s:6930   .text:00001c40 .Loc.1383
     /tmp/cclVlxlC.s:7026   .text:00001ca8 .Loc.1384
     /tmp/cclVlxlC.s:7036   .text:00001cb8 .Loc.1385
     /tmp/cclVlxlC.s:7037   .text:00001cb8 .Loc.1386
     /tmp/cclVlxlC.s:7038   .text:00001cb8 .Loc.1387
     /tmp/cclVlxlC.s:7041   .text:00001cb8 .Loc.1388
     /tmp/cclVlxlC.s:7044   .text:00001cba .Loc.1389
     /tmp/cclVlxlC.s:7052   .text:00001cc8 .Loc.1390
     /tmp/cclVlxlC.s:7061   .text:00001cd8 .Loc.1391
     /tmp/cclVlxlC.s:7070   .text:00001ce8 .Loc.1392
     /tmp/cclVlxlC.s:7081   .text:00001cf8 .Loc.1393
     /tmp/cclVlxlC.s:7088   .text:00001d00 .Loc.1394
     /tmp/cclVlxlC.s:7097   .text:00001d0c .Loc.1395
     /tmp/cclVlxlC.s:7104   .text:00001d14 .Loc.1396
     /tmp/cclVlxlC.s:7113   .text:00001d20 .Loc.1397
     /tmp/cclVlxlC.s:7115   .text:00001d22 .Loc.1398
     /tmp/cclVlxlC.s:7125   .text:00001d34 .Loc.1399
     /tmp/cclVlxlC.s:7128   .text:00001d36 .Loc.1400
     /tmp/cclVlxlC.s:7137   .text:00001d46 .Loc.1401
     /tmp/cclVlxlC.s:7149   .text:00001d58 .Loc.1402
     /tmp/cclVlxlC.s:7155   .text:00001d5e .Loc.1403
     /tmp/cclVlxlC.s:7161   .text:00001d64 .Loc.1404
     /tmp/cclVlxlC.s:7172   .text:00001d76 .Loc.1405
     /tmp/cclVlxlC.s:7185   .text:00001d8c .Loc.1406
     /tmp/cclVlxlC.s:7197   .text:00001da0 .Loc.1407
     /tmp/cclVlxlC.s:7203   .text:00001da8 .Loc.1408
     /tmp/cclVlxlC.s:7207   .text:00001daa .Loc.1409
     /tmp/cclVlxlC.s:7222   .text:00001dc6 .Loc.1410
     /tmp/cclVlxlC.s:7230   .text:00001dd4 .Loc.1411
     /tmp/cclVlxlC.s:7231   .text:00001dd4 .Loc.1412
     /tmp/cclVlxlC.s:7232   .text:00001dd4 .Loc.1413
     /tmp/cclVlxlC.s:7234   .text:00001dd6 .Loc.1414
     /tmp/cclVlxlC.s:7247   .text:00001dea .Loc.1415
     /tmp/cclVlxlC.s:7257   .text:00001dfc .Loc.1416
     /tmp/cclVlxlC.s:7260   .text:00001e00 .Loc.1417
     /tmp/cclVlxlC.s:7261   .text:00001e00 .Loc.1418
     /tmp/cclVlxlC.s:7283   .text:00001e28 .Loc.1419
     /tmp/cclVlxlC.s:7287   .text:00001e2c .Loc.1420
     /tmp/cclVlxlC.s:7291   .text:00001e2e .Loc.1421
     /tmp/cclVlxlC.s:7292   .text:00001e2e .Loc.1422
     /tmp/cclVlxlC.s:7304   .text:00001e42 .Loc.1423
     /tmp/cclVlxlC.s:7313   .text:00001e50 .Loc.1424
     /tmp/cclVlxlC.s:7324   .text:00001e5e .Loc.1425
     /tmp/cclVlxlC.s:7326   .text:00001e5e .Loc.1426
     /tmp/cclVlxlC.s:7327   .text:00001e5e .Loc.1427
     /tmp/cclVlxlC.s:7330   .text:00001e5e .Loc.1428
     /tmp/cclVlxlC.s:7332   .text:00001e5e .Loc.1429
     /tmp/cclVlxlC.s:7333   .text:00001e5e .Loc.1430
     /tmp/cclVlxlC.s:7336   .text:00001e5e .Loc.1431
     /tmp/cclVlxlC.s:7339   .text:00001e5e .Loc.1432
     /tmp/cclVlxlC.s:7341   .text:00001e5e .Loc.1433
     /tmp/cclVlxlC.s:7342   .text:00001e5e .Loc.1434
     /tmp/cclVlxlC.s:7345   .text:00001e5e .Loc.1435
     /tmp/cclVlxlC.s:7348   .text:00001e5e .Loc.1436
     /tmp/cclVlxlC.s:7350   .text:00001e5e .Loc.1437
     /tmp/cclVlxlC.s:7351   .text:00001e5e .Loc.1438
     /tmp/cclVlxlC.s:7354   .text:00001e5e .Loc.1439
     /tmp/cclVlxlC.s:7357   .text:00001e5e .Loc.1440
     /tmp/cclVlxlC.s:7359   .text:00001e5e .Loc.1441
     /tmp/cclVlxlC.s:7360   .text:00001e5e .Loc.1442
     /tmp/cclVlxlC.s:7363   .text:00001e5e .Loc.1443
     /tmp/cclVlxlC.s:7366   .text:00001e5e .Loc.1444
     /tmp/cclVlxlC.s:7368   .text:00001e5e .Loc.1445
     /tmp/cclVlxlC.s:7369   .text:00001e5e .Loc.1446
     /tmp/cclVlxlC.s:7372   .text:00001e5e .Loc.1447
     /tmp/cclVlxlC.s:7375   .text:00001e5e .Loc.1448
     /tmp/cclVlxlC.s:7377   .text:00001e5e .Loc.1449
     /tmp/cclVlxlC.s:7378   .text:00001e5e .Loc.1450
     /tmp/cclVlxlC.s:7381   .text:00001e5e .Loc.1451
     /tmp/cclVlxlC.s:7382   .text:00001e5e .Loc.1452
     /tmp/cclVlxlC.s:7389   .text:00001e64 .Loc.1453
     /tmp/cclVlxlC.s:7391   .text:00001e64 .Loc.1454
     /tmp/cclVlxlC.s:7392   .text:00001e64 .Loc.1455
     /tmp/cclVlxlC.s:7395   .text:00001e64 .Loc.1456
     /tmp/cclVlxlC.s:7409   .text:00001e7e .Loc.1457
     /tmp/cclVlxlC.s:7423   .text:00001e98 .Loc.1458
     /tmp/cclVlxlC.s:7426   .text:00001e9c .Loc.1459
     /tmp/cclVlxlC.s:7432   .text:00001ea2 .Loc.1460
     /tmp/cclVlxlC.s:7446   .text:00001eb6 .Loc.1461
     /tmp/cclVlxlC.s:7460   .text:00001ed0 .Loc.1462
     /tmp/cclVlxlC.s:7474   .text:00001eea .Loc.1463
     /tmp/cclVlxlC.s:7477   .text:00001eee .Loc.1464
     /tmp/cclVlxlC.s:7482   .text:00001ef4 .Loc.1465
     /tmp/cclVlxlC.s:7486   .text:00001efa .Loc.1466
     /tmp/cclVlxlC.s:7490   .text:00001efc .Loc.1467
     /tmp/cclVlxlC.s:7504   .text:00001f16 .Loc.1468
     /tmp/cclVlxlC.s:7518   .text:00001f30 .Loc.1469
     /tmp/cclVlxlC.s:7521   .text:00001f34 .Loc.1470
     /tmp/cclVlxlC.s:7526   .text:00001f3a .Loc.1471
     /tmp/cclVlxlC.s:7549   .text:00001f5e .Loc.1472
     /tmp/cclVlxlC.s:7554   .text:00001f66 .Loc.1473
     /tmp/cclVlxlC.s:7559   .text:00001f6c .Loc.1474
     /tmp/cclVlxlC.s:7571   .text:00001f82 L0
     /tmp/cclVlxlC.s:7575   .text:00001f82 syscall_gfx_image_grayscale
     /tmp/cclVlxlC.s:7578   .text:00001f82 .Loc.1475
     /tmp/cclVlxlC.s:7579   .text:00001f82 L0
     /tmp/cclVlxlC.s:7580   .text:00001f82 .Loc.1476
     /tmp/cclVlxlC.s:7650   .text:00001fb8 .Loc.1477
     /tmp/cclVlxlC.s:7651   .text:00001fb8 .Loc.1478
     /tmp/cclVlxlC.s:7652   .text:00001fb8 .Loc.1479
     /tmp/cclVlxlC.s:7653   .text:00001fb8 .Loc.1480
     /tmp/cclVlxlC.s:7654   .text:00001fb8 .Loc.1481
     /tmp/cclVlxlC.s:7662   .text:00001fc4 .Loc.1482
     /tmp/cclVlxlC.s:7668   .text:00001fcc .Loc.1483
     /tmp/cclVlxlC.s:7669   .text:00001fcc .Loc.1484
     /tmp/cclVlxlC.s:7678   .text:00001fdc .Loc.1485
     /tmp/cclVlxlC.s:7682   .text:00001fe0 .Loc.1486
     /tmp/cclVlxlC.s:7686   .text:00001fe4 .Loc.1487
     /tmp/cclVlxlC.s:7700   .text:00001ffa .Loc.1488
     /tmp/cclVlxlC.s:7718   .text:00002018 .Loc.1489
     /tmp/cclVlxlC.s:7721   .text:00002018 .Loc.1490
     /tmp/cclVlxlC.s:7723   .text:00002018 .Loc.1491
     /tmp/cclVlxlC.s:7735   .text:0000202e .Loc.1492
     /tmp/cclVlxlC.s:7738   .text:0000202e .Loc.1493
     /tmp/cclVlxlC.s:7739   .text:0000202e .Loc.1494
     /tmp/cclVlxlC.s:7743   .text:00002032 .Loc.1495
     /tmp/cclVlxlC.s:7744   .text:00002032 .Loc.1496
     /tmp/cclVlxlC.s:7748   .text:00002036 .Loc.1497
     /tmp/cclVlxlC.s:7749   .text:00002036 .Loc.1498
     /tmp/cclVlxlC.s:7755   .text:0000203e .Loc.1499
     /tmp/cclVlxlC.s:7756   .text:0000203e .Loc.1500
     /tmp/cclVlxlC.s:7766   .text:0000204e .Loc.1501
     /tmp/cclVlxlC.s:7767   .text:0000204e .Loc.1502
     /tmp/cclVlxlC.s:7775   .text:0000205c .Loc.1503
     /tmp/cclVlxlC.s:7778   .text:00002060 .Loc.1504
     /tmp/cclVlxlC.s:7779   .text:00002060 .Loc.1505
     /tmp/cclVlxlC.s:7792   .text:00002076 .Loc.1506
     /tmp/cclVlxlC.s:7793   .text:00002076 .Loc.1507
     /tmp/cclVlxlC.s:7794   .text:00002076 .Loc.1508
     /tmp/cclVlxlC.s:7804   .text:00002086 .Loc.1509
     /tmp/cclVlxlC.s:7811   .text:00002092 .Loc.1510
     /tmp/cclVlxlC.s:7816   .text:0000209a .Loc.1511
     /tmp/cclVlxlC.s:7824   .text:000020a6 .Loc.1512
     /tmp/cclVlxlC.s:7827   .text:000020aa .Loc.1513
     /tmp/cclVlxlC.s:7830   .text:000020ac .Loc.1514
     /tmp/cclVlxlC.s:7833   .text:000020b0 .Loc.1515
     /tmp/cclVlxlC.s:7835   .text:000020b0 .Loc.1516
     /tmp/cclVlxlC.s:7836   .text:000020b0 .Loc.1517
     /tmp/cclVlxlC.s:7839   .text:000020b0 .Loc.1518
     /tmp/cclVlxlC.s:7841   .text:000020b0 .Loc.1519
     /tmp/cclVlxlC.s:7854   .text:000020c6 .Loc.1520
     /tmp/cclVlxlC.s:7877   .text:000020f2 .Loc.1521
     /tmp/cclVlxlC.s:7883   .text:000020fa .Loc.1522
     /tmp/cclVlxlC.s:7887   .text:000020fc L0
     /tmp/cclVlxlC.s:7891   .text:000020fc syscall_gfx_image_1bit
     /tmp/cclVlxlC.s:7894   .text:000020fc .Loc.1523
     /tmp/cclVlxlC.s:7895   .text:000020fc L0
     /tmp/cclVlxlC.s:7896   .text:000020fc .Loc.1524
     /tmp/cclVlxlC.s:7967   .text:00002134 .Loc.1525
     /tmp/cclVlxlC.s:7968   .text:00002134 .Loc.1526
     /tmp/cclVlxlC.s:7969   .text:00002134 .Loc.1527
     /tmp/cclVlxlC.s:7970   .text:00002134 .Loc.1528
     /tmp/cclVlxlC.s:7971   .text:00002134 .Loc.1529
     /tmp/cclVlxlC.s:7979   .text:00002140 .Loc.1530
     /tmp/cclVlxlC.s:7985   .text:00002148 .Loc.1531
     /tmp/cclVlxlC.s:7986   .text:00002148 .Loc.1532
     /tmp/cclVlxlC.s:7995   .text:00002158 .Loc.1533
     /tmp/cclVlxlC.s:7999   .text:0000215c .Loc.1534
     /tmp/cclVlxlC.s:8004   .text:00002160 .Loc.1535
     /tmp/cclVlxlC.s:8035   .text:00002196 .Loc.1536
     /tmp/cclVlxlC.s:8038   .text:00002196 .Loc.1537
     /tmp/cclVlxlC.s:8040   .text:00002196 .Loc.1538
     /tmp/cclVlxlC.s:8052   .text:000021ac .Loc.1539
     /tmp/cclVlxlC.s:8055   .text:000021ac .Loc.1540
     /tmp/cclVlxlC.s:8056   .text:000021ac .Loc.1541
     /tmp/cclVlxlC.s:8060   .text:000021b0 .Loc.1542
     /tmp/cclVlxlC.s:8061   .text:000021b0 .Loc.1543
     /tmp/cclVlxlC.s:8065   .text:000021b4 .Loc.1544
     /tmp/cclVlxlC.s:8066   .text:000021b4 .Loc.1545
     /tmp/cclVlxlC.s:8071   .text:000021bc .Loc.1546
     /tmp/cclVlxlC.s:8077   .text:000021c4 .Loc.1547
     /tmp/cclVlxlC.s:8078   .text:000021c4 .Loc.1548
     /tmp/cclVlxlC.s:8083   .text:000021cc .Loc.1549
     /tmp/cclVlxlC.s:8086   .text:000021ce .Loc.1550
     /tmp/cclVlxlC.s:8087   .text:000021ce .Loc.1551
     /tmp/cclVlxlC.s:8095   .text:000021dc .Loc.1552
     /tmp/cclVlxlC.s:8098   .text:000021e0 .Loc.1553
     /tmp/cclVlxlC.s:8099   .text:000021e0 .Loc.1554
     /tmp/cclVlxlC.s:8112   .text:000021f6 .Loc.1555
     /tmp/cclVlxlC.s:8113   .text:000021f6 .Loc.1556
     /tmp/cclVlxlC.s:8114   .text:000021f6 .Loc.1557
     /tmp/cclVlxlC.s:8118   .text:000021fa .Loc.1558
     /tmp/cclVlxlC.s:8121   .text:000021fe .Loc.1559
     /tmp/cclVlxlC.s:8130   .text:0000220e .Loc.1560
     /tmp/cclVlxlC.s:8137   .text:0000221a .Loc.1561
     /tmp/cclVlxlC.s:8146   .text:0000222a .Loc.1562
     /tmp/cclVlxlC.s:8148   .text:0000222c .Loc.1563
     /tmp/cclVlxlC.s:8151   .text:00002230 .Loc.1564
     /tmp/cclVlxlC.s:8152   .text:00002230 .Loc.1565
     /tmp/cclVlxlC.s:8167   .text:0000224a .Loc.1566
     /tmp/cclVlxlC.s:8168   .text:0000224a .Loc.1567
     /tmp/cclVlxlC.s:8171   .text:0000224a .Loc.1568
     /tmp/cclVlxlC.s:8173   .text:0000224a .Loc.1569
     /tmp/cclVlxlC.s:8182   .text:00002258 .Loc.1570
     /tmp/cclVlxlC.s:8193   .text:0000226c .Loc.1571
     /tmp/cclVlxlC.s:8213   .text:0000228c .Loc.1572
     /tmp/cclVlxlC.s:8215   .text:0000228c .Loc.1573
     /tmp/cclVlxlC.s:8216   .text:0000228c .Loc.1574
     /tmp/cclVlxlC.s:8217   .text:0000228c .Loc.1575
     /tmp/cclVlxlC.s:8218   .text:0000228c .Loc.1576
     /tmp/cclVlxlC.s:8219   .text:0000228c .Loc.1577
     /tmp/cclVlxlC.s:8222   .text:00002290 .Loc.1578
     /tmp/cclVlxlC.s:8230   .text:0000229a .Loc.1579
     /tmp/cclVlxlC.s:8231   .text:0000229a .Loc.1580
     /tmp/cclVlxlC.s:8234   .text:0000229c .Loc.1581
     /tmp/cclVlxlC.s:8236   .text:0000229e .Loc.1582
     /tmp/cclVlxlC.s:8245   .text:000022ac .Loc.1583
     /tmp/cclVlxlC.s:8253   .text:000022b8 .Loc.1584
     /tmp/cclVlxlC.s:8258   .text:000022c0 .Loc.1585
     /tmp/cclVlxlC.s:8269   .text:000022d4 .Loc.1586
     /tmp/cclVlxlC.s:8272   .text:000022d6 .Loc.1587
     /tmp/cclVlxlC.s:8278   .text:000022dc .Loc.1588
     /tmp/cclVlxlC.s:8285   .text:000022ea L0
     /tmp/cclVlxlC.s:8287   .text:000022ec .Loc.1589
     /tmp/cclVlxlC.s:8301   .text:00002306 .Loc.1590
     /tmp/cclVlxlC.s:8312   .text:0000231a .Loc.1591
     /tmp/cclVlxlC.s:8313   .text:0000231a .Loc.1592
     /tmp/cclVlxlC.s:8314   .text:0000231a .Loc.1593
     /tmp/cclVlxlC.s:8315   .text:0000231a .Loc.1594
     /tmp/cclVlxlC.s:8317   .text:0000231c .Loc.1595
     /tmp/cclVlxlC.s:8320   .text:00002320 .Loc.1596
     /tmp/cclVlxlC.s:8325   .text:00002324 .Loc.1597
     /tmp/cclVlxlC.s:8333   .text:00002332 .Loc.1598
     /tmp/cclVlxlC.s:8336   .text:00002336 .Loc.1599
     /tmp/cclVlxlC.s:8337   .text:00002336 .Loc.1600
     /tmp/cclVlxlC.s:8351   .text:0000234e .Loc.1601
     /tmp/cclVlxlC.s:8355   .text:00002352 .Loc.1602
     /tmp/cclVlxlC.s:8359   .text:00002354 .Loc.1603
     /tmp/cclVlxlC.s:8360   .text:00002354 .Loc.1604
     /tmp/cclVlxlC.s:8364   .text:0000235a .Loc.1605
     /tmp/cclVlxlC.s:8365   .text:0000235a .Loc.1606
     /tmp/cclVlxlC.s:8369   .text:0000235e .Loc.1607
     /tmp/cclVlxlC.s:8372   .text:00002360 .Loc.1608
     /tmp/cclVlxlC.s:8377   .text:00002366 .Loc.1609
     /tmp/cclVlxlC.s:8378   .text:00002366 .Loc.1610
     /tmp/cclVlxlC.s:8381   .text:0000236a .Loc.1611
     /tmp/cclVlxlC.s:8386   .text:0000236e .Loc.1612
     /tmp/cclVlxlC.s:8387   .text:0000236e .Loc.1613
     /tmp/cclVlxlC.s:8392   .text:00002376 .Loc.1614
     /tmp/cclVlxlC.s:8404   .text:0000238a .Loc.1615
     /tmp/cclVlxlC.s:8405   .text:0000238a .Loc.1616
     /tmp/cclVlxlC.s:8408   .text:0000238c .Loc.1617
     /tmp/cclVlxlC.s:8413   .text:00002392 .Loc.1618
     /tmp/cclVlxlC.s:8416   .text:00002394 .Loc.1619
     /tmp/cclVlxlC.s:8424   .text:0000239a L0
     /tmp/cclVlxlC.s:8428   .text:0000239a lcd_char.constprop.0
     /tmp/cclVlxlC.s:8431   .text:0000239a .Loc.1620
     /tmp/cclVlxlC.s:8432   .text:0000239a L0
     /tmp/cclVlxlC.s:8433   .text:0000239a .Loc.1621
     /tmp/cclVlxlC.s:8480   .text:000023b8 .Loc.1622
     /tmp/cclVlxlC.s:8484   .text:000023bc .Loc.1623
     /tmp/cclVlxlC.s:8487   .text:000023be .Loc.1624
     /tmp/cclVlxlC.s:8494   .text:000023c8 .Loc.1625
     /tmp/cclVlxlC.s:8501   .text:000023d4 .Loc.1626
     /tmp/cclVlxlC.s:8509   .text:000023de .Loc.1627
     /tmp/cclVlxlC.s:14817  .progmem.data:0000001c _font5x7
     /tmp/cclVlxlC.s:8522   .text:000023f2 .Loc.1628
     /tmp/cclVlxlC.s:8528   .text:000023f6 .Loc.1629
     /tmp/cclVlxlC.s:8536   .text:000023fa .Loc.1630
     /tmp/cclVlxlC.s:8540   .text:000023fc .Loc.1631
     /tmp/cclVlxlC.s:8544   .text:00002400 .Loc.1632
     /tmp/cclVlxlC.s:8552   .text:0000240c .Loc.1633
     /tmp/cclVlxlC.s:8557   .text:00002412 .Loc.1634
     /tmp/cclVlxlC.s:8561   .text:00002416 .Loc.1635
     /tmp/cclVlxlC.s:8564   .text:00002418 .Loc.1636
     /tmp/cclVlxlC.s:8568   .text:0000241e .Loc.1637
     /tmp/cclVlxlC.s:8571   .text:00002422 .Loc.1638
     /tmp/cclVlxlC.s:8577   .text:00002428 .Loc.1639
     /tmp/cclVlxlC.s:8581   .text:0000242c .Loc.1640
     /tmp/cclVlxlC.s:8585   .text:00002430 .Loc.1641
     /tmp/cclVlxlC.s:8596   .text:00002440 .Loc.1642
     /tmp/cclVlxlC.s:8600   .text:00002446 L0
     /tmp/cclVlxlC.s:8607   .text:00002446 .Loc.1643
     /tmp/cclVlxlC.s:8608   .text:00002446 L0
     /tmp/cclVlxlC.s:8609   .text:00002446 .Loc.1644
     /tmp/cclVlxlC.s:8651   .text:00002460 .Loc.1645
     /tmp/cclVlxlC.s:8652   .text:00002460 .Loc.1646
     /tmp/cclVlxlC.s:8654   .text:00002464 L0
     /tmp/cclVlxlC.s:8657   .text:00002466 .Loc.1647
     /tmp/cclVlxlC.s:8658   .text:00002466 .Loc.1648
     /tmp/cclVlxlC.s:8659   .text:00002466 .Loc.1649
     /tmp/cclVlxlC.s:8660   .text:00002466 .Loc.1650
     /tmp/cclVlxlC.s:8661   .text:00002466 .Loc.1651
     /tmp/cclVlxlC.s:15172  .bss:000000a3 _lcd_initialized
     /tmp/cclVlxlC.s:8663   .text:0000246a .Loc.1652
     /tmp/cclVlxlC.s:8666   .text:0000246e .Loc.1653
     /tmp/cclVlxlC.s:8668   .text:00002472 L0
     /tmp/cclVlxlC.s:8670   .text:00002474 .Loc.1654
     /tmp/cclVlxlC.s:8672   .text:00002474 .Loc.1655
     /tmp/cclVlxlC.s:14954  .progmem.data:000002af _log_msg
     /tmp/cclVlxlC.s:8681   .text:00002482 .Loc.1656
     /tmp/cclVlxlC.s:8682   .text:00002482 .Loc.1657
     /tmp/cclVlxlC.s:8690   .text:00002486 .Loc.1658
     /tmp/cclVlxlC.s:8694   .text:00002488 .Loc.1659
     /tmp/cclVlxlC.s:8695   .text:00002488 .Loc.1660
     /tmp/cclVlxlC.s:8697   .text:00002488 .Loc.1661
     /tmp/cclVlxlC.s:8700   .text:0000248a .Loc.1662
     /tmp/cclVlxlC.s:8703   .text:0000248e .Loc.1663
     /tmp/cclVlxlC.s:8706   .text:0000248e .Loc.1664
     /tmp/cclVlxlC.s:8708   .text:0000248e .Loc.1665
     /tmp/cclVlxlC.s:8709   .text:0000248e .Loc.1666
     /tmp/cclVlxlC.s:8710   .text:0000248e .Loc.1667
     /tmp/cclVlxlC.s:8714   .text:00002490 .Loc.1668
     /tmp/cclVlxlC.s:8716   .text:00002490 .Loc.1669
     /tmp/cclVlxlC.s:8717   .text:00002490 .Loc.1670
     /tmp/cclVlxlC.s:8718   .text:00002490 .Loc.1671
     /tmp/cclVlxlC.s:8726   .text:00002494 .Loc.1672
     /tmp/cclVlxlC.s:8727   .text:00002494 .Loc.1673
     /tmp/cclVlxlC.s:8730   .text:00002494 .Loc.1674
     /tmp/cclVlxlC.s:8735   .text:0000249a .Loc.1675
     /tmp/cclVlxlC.s:8739   .text:0000249e .Loc.1676
     /tmp/cclVlxlC.s:8742   .text:0000249e .Loc.1677
     /tmp/cclVlxlC.s:8745   .text:000024a0 .Loc.1678
     /tmp/cclVlxlC.s:8748   .text:000024a4 .Loc.1679
     /tmp/cclVlxlC.s:8752   .text:000024a4 .Loc.1680
     /tmp/cclVlxlC.s:8754   .text:000024a4 .Loc.1681
     /tmp/cclVlxlC.s:8755   .text:000024a4 .Loc.1682
     /tmp/cclVlxlC.s:8759   .text:000024aa .Loc.1683
     /tmp/cclVlxlC.s:8762   .text:000024aa .Loc.1684
     /tmp/cclVlxlC.s:8767   .text:000024b0 .Loc.1685
     /tmp/cclVlxlC.s:8769   .text:000024b0 .Loc.1686
     /tmp/cclVlxlC.s:8772   .text:000024b6 L0
     /tmp/cclVlxlC.s:8774   .text:000024b8 .Loc.1687
     /tmp/cclVlxlC.s:8775   .text:000024b8 .Loc.1688
     /tmp/cclVlxlC.s:8777   .text:000024bc L0
     /tmp/cclVlxlC.s:8780   .text:000024be .Loc.1689
     /tmp/cclVlxlC.s:8781   .text:000024be .Loc.1690
     /tmp/cclVlxlC.s:8783   .text:000024be .Loc.1691
     /tmp/cclVlxlC.s:14946  .progmem.data:000002a5 _log_color
     /tmp/cclVlxlC.s:8788   .text:000024c4 .Loc.1692
     /tmp/cclVlxlC.s:8789   .text:000024c4 .Loc.1693
     /tmp/cclVlxlC.s:8797   .text:000024c8 .Loc.1694
     /tmp/cclVlxlC.s:8798   .text:000024c8 .Loc.1695
     /tmp/cclVlxlC.s:8801   .text:000024c8 .Loc.1696
     /tmp/cclVlxlC.s:8802   .text:000024c8 .Loc.1697
     /tmp/cclVlxlC.s:8803   .text:000024c8 .Loc.1698
     /tmp/cclVlxlC.s:14941  .data:00000000 _log_y
     /tmp/cclVlxlC.s:8815   .text:000024e2 .Loc.1699
     /tmp/cclVlxlC.s:8818   .text:000024e4 .Loc.1700
     /tmp/cclVlxlC.s:8819   .text:000024e4 .Loc.1701
     /tmp/cclVlxlC.s:8825   .text:000024ec .Loc.1702
     /tmp/cclVlxlC.s:8827   .text:000024ec .Loc.1703
     /tmp/cclVlxlC.s:8833   .text:000024f0 .Loc.1704
     /tmp/cclVlxlC.s:8841   .text:000024f4 .Loc.1705
     /tmp/cclVlxlC.s:8844   .text:000024f4 .Loc.1706
     /tmp/cclVlxlC.s:8848   .text:000024fa .Loc.1707
     /tmp/cclVlxlC.s:8853   .text:00002500 .Loc.1708
     /tmp/cclVlxlC.s:8857   .text:00002504 .Loc.1709
     /tmp/cclVlxlC.s:8860   .text:00002504 .Loc.1710
     /tmp/cclVlxlC.s:8865   .text:0000250e .Loc.1711
     /tmp/cclVlxlC.s:8871   .text:00002516 .Loc.1712
     /tmp/cclVlxlC.s:8872   .text:00002516 .Loc.1713
     /tmp/cclVlxlC.s:8877   .text:0000251c .Loc.1714
     /tmp/cclVlxlC.s:8880   .text:0000251e .Loc.1715
     /tmp/cclVlxlC.s:8885   .text:00002524 .Loc.1716
     /tmp/cclVlxlC.s:8890   .text:00002528 .Loc.1717
     /tmp/cclVlxlC.s:8891   .text:00002528 .Loc.1718
     /tmp/cclVlxlC.s:8895   .text:0000252c .Loc.1719
     /tmp/cclVlxlC.s:8898   .text:0000252e .Loc.1720
     /tmp/cclVlxlC.s:8901   .text:00002536 .Loc.1721
     /tmp/cclVlxlC.s:8904   .text:0000253a .Loc.1722
     /tmp/cclVlxlC.s:8905   .text:0000253a .Loc.1723
     /tmp/cclVlxlC.s:8913   .text:00002548 .Loc.1724
     /tmp/cclVlxlC.s:8917   .text:00002548 .Loc.1725
     /tmp/cclVlxlC.s:8920   .text:0000254c .Loc.1726
     /tmp/cclVlxlC.s:8924   .text:0000254e .Loc.1727
     /tmp/cclVlxlC.s:8927   .text:0000254e .Loc.1728
     /tmp/cclVlxlC.s:8931   .text:00002554 .Loc.1729
     /tmp/cclVlxlC.s:8934   .text:00002556 .Loc.1730
     /tmp/cclVlxlC.s:8941   .text:00002558 .Loc.1731
     /tmp/cclVlxlC.s:8946   .text:00002560 .Loc.1732
     /tmp/cclVlxlC.s:8950   .text:00002564 .Loc.1733
     /tmp/cclVlxlC.s:8954   .text:00002566 .Loc.1734
     /tmp/cclVlxlC.s:8958   .text:00002566 .Loc.1735
     /tmp/cclVlxlC.s:8959   .text:00002566 .Loc.1736
     /tmp/cclVlxlC.s:8962   .text:0000256a .Loc.1737
     /tmp/cclVlxlC.s:8963   .text:0000256a .Loc.1738
     /tmp/cclVlxlC.s:8968   .text:0000256e .Loc.1739
     /tmp/cclVlxlC.s:8972   .text:0000256e .Loc.1740
     /tmp/cclVlxlC.s:8973   .text:0000256e .Loc.1741
     /tmp/cclVlxlC.s:8976   .text:00002570 .Loc.1742
     /tmp/cclVlxlC.s:8979   .text:00002572 .Loc.1743
     /tmp/cclVlxlC.s:8985   .text:00002576 .Loc.1744
     /tmp/cclVlxlC.s:8989   .text:0000257a .Loc.1745
     /tmp/cclVlxlC.s:8993   .text:0000257e .Loc.1746
     /tmp/cclVlxlC.s:9006   .text:00002590 .Loc.1747
     /tmp/cclVlxlC.s:9010   .text:00002592 .Loc.1748
     /tmp/cclVlxlC.s:9014   .text:00002598 .Loc.1749
     /tmp/cclVlxlC.s:9015   .text:00002598 .Loc.1750
     /tmp/cclVlxlC.s:9018   .text:0000259a .Loc.1751
     /tmp/cclVlxlC.s:9021   .text:0000259e .Loc.1752
     /tmp/cclVlxlC.s:9022   .text:0000259e .Loc.1753
     /tmp/cclVlxlC.s:9028   .text:000025a2 .Loc.1754
     /tmp/cclVlxlC.s:9034   .text:000025a8 .Loc.1755
     /tmp/cclVlxlC.s:9035   .text:000025a8 .Loc.1756
     /tmp/cclVlxlC.s:9038   .text:000025ac .Loc.1757
     /tmp/cclVlxlC.s:9040   .text:000025ac .Loc.1758
     /tmp/cclVlxlC.s:9041   .text:000025ac .Loc.1759
     /tmp/cclVlxlC.s:9046   .text:000025b8 .Loc.1760
     /tmp/cclVlxlC.s:9051   .text:000025bc .Loc.1761
     /tmp/cclVlxlC.s:9057   .text:000025c2 .Loc.1762
     /tmp/cclVlxlC.s:9058   .text:000025c2 .Loc.1763
     /tmp/cclVlxlC.s:9065   .text:000025ce .Loc.1764
     /tmp/cclVlxlC.s:9069   .text:000025d2 .Loc.1765
     /tmp/cclVlxlC.s:9073   .text:000025d4 .Loc.1766
     /tmp/cclVlxlC.s:9078   .text:000025d4 .Loc.1767
     /tmp/cclVlxlC.s:9081   .text:000025d8 .Loc.1768
     /tmp/cclVlxlC.s:9086   .text:000025dc L0
     /tmp/cclVlxlC.s:9090   .text:000025dc log_boot_P
     /tmp/cclVlxlC.s:9093   .text:000025dc .Loc.1769
     /tmp/cclVlxlC.s:9094   .text:000025dc L0
     /tmp/cclVlxlC.s:9095   .text:000025dc .Loc.1770
     /tmp/cclVlxlC.s:9117   .text:000025f2 .Loc.1771
     /tmp/cclVlxlC.s:9118   .text:000025f2 .Loc.1772
     /tmp/cclVlxlC.s:9119   .text:000025f2 .Loc.1773
     /tmp/cclVlxlC.s:9121   .text:000025f2 .Loc.1774
     /tmp/cclVlxlC.s:9126   .text:000025f8 .Loc.1775
     /tmp/cclVlxlC.s:9139   .text:00002610 .Loc.1776
     /tmp/cclVlxlC.s:9140   .text:00002610 .Loc.1777
     /tmp/cclVlxlC.s:9151   .text:00002624 .Loc.1778
     /tmp/cclVlxlC.s:9156   .text:0000262a .Loc.1779
     /tmp/cclVlxlC.s:9167   .text:0000263e L0
     /tmp/cclVlxlC.s:9171   .text:0000263e _sd_command
     /tmp/cclVlxlC.s:9174   .text:0000263e .Loc.1780
     /tmp/cclVlxlC.s:9175   .text:0000263e L0
     /tmp/cclVlxlC.s:9176   .text:0000263e .Loc.1781
     /tmp/cclVlxlC.s:9197   .text:0000264e .Loc.1782
     /tmp/cclVlxlC.s:9198   .text:0000264e .Loc.1783
     /tmp/cclVlxlC.s:9201   .text:00002650 .Loc.1784
     /tmp/cclVlxlC.s:9204   .text:00002654 .Loc.1785
     /tmp/cclVlxlC.s:9209   .text:0000265c .Loc.1786
     /tmp/cclVlxlC.s:9213   .text:00002662 .Loc.1787
     /tmp/cclVlxlC.s:9217   .text:00002668 .Loc.1788
     /tmp/cclVlxlC.s:9221   .text:0000266e .Loc.1789
     /tmp/cclVlxlC.s:9225   .text:00002674 .Loc.1790
     /tmp/cclVlxlC.s:9226   .text:00002674 .Loc.1791
     /tmp/cclVlxlC.s:9228   .text:00002676 .Loc.1792
     /tmp/cclVlxlC.s:9231   .text:0000267a .Loc.1793
     /tmp/cclVlxlC.s:9233   .text:0000267c .Loc.1794
     /tmp/cclVlxlC.s:9236   .text:00002680 .Loc.1795
     /tmp/cclVlxlC.s:9239   .text:00002682 .Loc.1796
     /tmp/cclVlxlC.s:9242   .text:00002686 .Loc.1797
     /tmp/cclVlxlC.s:9243   .text:00002686 .Loc.1798
     /tmp/cclVlxlC.s:9244   .text:00002686 .Loc.1799
     /tmp/cclVlxlC.s:9248   .text:00002688 .Loc.1800
     /tmp/cclVlxlC.s:9252   .text:0000268e .Loc.1801
     /tmp/cclVlxlC.s:9255   .text:00002692 .Loc.1802
     /tmp/cclVlxlC.s:9257   .text:00002692 .Loc.1803
     /tmp/cclVlxlC.s:9260   .text:00002694 .Loc.1804
     /tmp/cclVlxlC.s:9266   .text:00002698 .Loc.1805
     /tmp/cclVlxlC.s:9272   .text:000026a2 L0
     /tmp/cclVlxlC.s:9276   .text:000026a2 _sd_timeout
     /tmp/cclVlxlC.s:9278   .text:000026a2 .Loc.1806
     /tmp/cclVlxlC.s:9279   .text:000026a2 L0
     /tmp/cclVlxlC.s:9284   .text:000026a2 .Loc.1807
     /tmp/cclVlxlC.s:9286   .text:000026a4 .Loc.1808
     /tmp/cclVlxlC.s:9287   .text:000026a4 .Loc.1809
     /tmp/cclVlxlC.s:9288   .text:000026a4 .Loc.1810
     /tmp/cclVlxlC.s:9289   .text:000026a4 .Loc.1811
     /tmp/cclVlxlC.s:14932  .progmem.data:00000285 __c.19
     /tmp/cclVlxlC.s:9298   .text:000026b0 L0
     /tmp/cclVlxlC.s:9302   .text:000026b0 _sd_error
     /tmp/cclVlxlC.s:9304   .text:000026b0 .Loc.1812
     /tmp/cclVlxlC.s:9305   .text:000026b0 L0
     /tmp/cclVlxlC.s:9310   .text:000026b0 .Loc.1813
     /tmp/cclVlxlC.s:9312   .text:000026b2 .Loc.1814
     /tmp/cclVlxlC.s:9313   .text:000026b2 .Loc.1815
     /tmp/cclVlxlC.s:9314   .text:000026b2 .Loc.1816
     /tmp/cclVlxlC.s:9315   .text:000026b2 .Loc.1817
     /tmp/cclVlxlC.s:14928  .progmem.data:0000027c __c.20
     /tmp/cclVlxlC.s:9324   .text:000026be L0
     /tmp/cclVlxlC.s:9328   .text:000026be initrd_load
     /tmp/cclVlxlC.s:9331   .text:000026be .Loc.1818
     /tmp/cclVlxlC.s:9332   .text:000026be L0
     /tmp/cclVlxlC.s:9396   .text:000026f0 .Loc.1819
     /tmp/cclVlxlC.s:9397   .text:000026f0 .Loc.1820
     /tmp/cclVlxlC.s:9398   .text:000026f0 .Loc.1821
     /tmp/cclVlxlC.s:9399   .text:000026f0 .Loc.1822
     /tmp/cclVlxlC.s:9400   .text:000026f0 .Loc.1823
     /tmp/cclVlxlC.s:9401   .text:000026f0 .Loc.1824
     /tmp/cclVlxlC.s:9402   .text:000026f0 .Loc.1825
     /tmp/cclVlxlC.s:14924  .progmem.data:00000268 __c.6.lto_priv.2
     /tmp/cclVlxlC.s:9410   .text:000026fe .Loc.1826
     /tmp/cclVlxlC.s:9420   .text:00002710 .Loc.1827
     /tmp/cclVlxlC.s:9421   .text:00002710 .Loc.1828
     /tmp/cclVlxlC.s:14919  .rodata:00000014 _atfs_signature
     /tmp/cclVlxlC.s:9429   .text:0000271e .Loc.1829
     /tmp/cclVlxlC.s:9437   .text:0000272c .Loc.1830
     /tmp/cclVlxlC.s:9438   .text:0000272c .Loc.1831
     /tmp/cclVlxlC.s:9439   .text:0000272c .Loc.1832
     /tmp/cclVlxlC.s:9440   .text:0000272c .Loc.1833
     /tmp/cclVlxlC.s:14914  .progmem.data:00000255 __c.5.lto_priv.2
     /tmp/cclVlxlC.s:9444   .text:00002730 .Loc.1834
     /tmp/cclVlxlC.s:9450   .text:00002738 .Loc.1835
     /tmp/cclVlxlC.s:9454   .text:00002738 .Loc.1836
     /tmp/cclVlxlC.s:9456   .text:00002738 .Loc.1837
     /tmp/cclVlxlC.s:9457   .text:00002738 .Loc.1838
     /tmp/cclVlxlC.s:9460   .text:00002738 .Loc.1839
     /tmp/cclVlxlC.s:9461   .text:00002738 .Loc.1840
     /tmp/cclVlxlC.s:9470   .text:00002748 .Loc.1841
     /tmp/cclVlxlC.s:9471   .text:00002748 .Loc.1842
     /tmp/cclVlxlC.s:9472   .text:00002748 .Loc.1843
     /tmp/cclVlxlC.s:9473   .text:00002748 .Loc.1844
     /tmp/cclVlxlC.s:14910  .progmem.data:0000023b __c.4.lto_priv.2
     /tmp/cclVlxlC.s:9478   .text:0000274e .Loc.1845
     /tmp/cclVlxlC.s:9482   .text:0000274e .Loc.1846
     /tmp/cclVlxlC.s:9484   .text:0000274e .Loc.1847
     /tmp/cclVlxlC.s:9485   .text:0000274e .Loc.1848
     /tmp/cclVlxlC.s:9491   .text:00002756 .Loc.1849
     /tmp/cclVlxlC.s:9494   .text:00002756 .Loc.1850
     /tmp/cclVlxlC.s:9497   .text:00002756 .Loc.1851
     /tmp/cclVlxlC.s:9499   .text:00002756 .Loc.1852
     /tmp/cclVlxlC.s:9500   .text:00002756 .Loc.1853
     /tmp/cclVlxlC.s:9506   .text:0000275e .Loc.1854
     /tmp/cclVlxlC.s:9509   .text:0000275e .Loc.1855
     /tmp/cclVlxlC.s:9510   .text:0000275e .Loc.1856
     /tmp/cclVlxlC.s:9511   .text:0000275e .Loc.1857
     /tmp/cclVlxlC.s:9512   .text:0000275e .Loc.1858
     /tmp/cclVlxlC.s:9515   .text:00002760 .Loc.1859
     /tmp/cclVlxlC.s:14906  .progmem.data:0000022b __c.3.lto_priv.2
     /tmp/cclVlxlC.s:9528   .text:00002778 .Loc.1860
     /tmp/cclVlxlC.s:9529   .text:00002778 .Loc.1861
     /tmp/cclVlxlC.s:9530   .text:00002778 .Loc.1862
     /tmp/cclVlxlC.s:9531   .text:00002778 .Loc.1863
     /tmp/cclVlxlC.s:14902  .progmem.data:0000021c __c.2.lto_priv.4
     /tmp/cclVlxlC.s:9543   .text:0000278e .Loc.1864
     /tmp/cclVlxlC.s:9544   .text:0000278e .Loc.1865
     /tmp/cclVlxlC.s:9551   .text:0000279a .Loc.1866
     /tmp/cclVlxlC.s:9561   .text:000027a8 .Loc.1867
     /tmp/cclVlxlC.s:9562   .text:000027a8 .Loc.1868
     /tmp/cclVlxlC.s:9563   .text:000027a8 .Loc.1869
     /tmp/cclVlxlC.s:9564   .text:000027a8 .Loc.1870
     /tmp/cclVlxlC.s:14898  .progmem.data:0000020b __c.1.lto_priv.5
     /tmp/cclVlxlC.s:9574   .text:000027ba .Loc.1871
     /tmp/cclVlxlC.s:9575   .text:000027ba .Loc.1872
     /tmp/cclVlxlC.s:9581   .text:000027c4 .Loc.1873
     /tmp/cclVlxlC.s:9584   .text:000027c8 .Loc.1874
     /tmp/cclVlxlC.s:9593   .text:000027d8 .Loc.1875
     /tmp/cclVlxlC.s:9597   .text:000027dc .Loc.1876
     /tmp/cclVlxlC.s:9604   .text:000027e4 .Loc.1877
     /tmp/cclVlxlC.s:9611   .text:000027ee .Loc.1878
     /tmp/cclVlxlC.s:9632   .text:00002814 .Loc.1879
     /tmp/cclVlxlC.s:9635   .text:00002816 .Loc.1880
     /tmp/cclVlxlC.s:9637   .text:00002818 .Loc.1881
     /tmp/cclVlxlC.s:9639   .text:0000281a .Loc.1882
     /tmp/cclVlxlC.s:9644   .text:0000281e .Loc.1883
     /tmp/cclVlxlC.s:9645   .text:0000281e .Loc.1884
     /tmp/cclVlxlC.s:9652   .text:0000282a .Loc.1885
     /tmp/cclVlxlC.s:9655   .text:0000282e .Loc.1886
     /tmp/cclVlxlC.s:9656   .text:0000282e .Loc.1887
     /tmp/cclVlxlC.s:9657   .text:0000282e .Loc.1888
     /tmp/cclVlxlC.s:9658   .text:0000282e .Loc.1889
     /tmp/cclVlxlC.s:14894  .progmem.data:000001f7 __c.0.lto_priv.9
     /tmp/cclVlxlC.s:9663   .text:00002834 .Loc.1890
     /tmp/cclVlxlC.s:9678   .text:00002850 .Loc.1891
     /tmp/cclVlxlC.s:9679   .text:00002850 .Loc.1892
     /tmp/cclVlxlC.s:9686   .text:0000285a .Loc.1893
     /tmp/cclVlxlC.s:9707   .text:00002880 .Loc.1894
     /tmp/cclVlxlC.s:9709   .text:00002882 L0
     /tmp/cclVlxlC.s:9713   .text:00002882 syscall_rand
     /tmp/cclVlxlC.s:9716   .text:00002882 .Loc.1895
     /tmp/cclVlxlC.s:9717   .text:00002882 L0
     /tmp/cclVlxlC.s:9718   .text:00002882 .Loc.1896
     /tmp/cclVlxlC.s:9730   .text:00002888 .Loc.1897
     /tmp/cclVlxlC.s:9733   .text:00002888 .Loc.1898
     /tmp/cclVlxlC.s:9734   .text:00002888 .Loc.1899
     /tmp/cclVlxlC.s:9738   .text:00002888 .Loc.1900
     /tmp/cclVlxlC.s:9740   .text:00002888 .Loc.1901
     /tmp/cclVlxlC.s:9741   .text:00002888 .Loc.1902
     /tmp/cclVlxlC.s:9744   .text:0000288c .Loc.1903
     /tmp/cclVlxlC.s:9756   .text:0000289c .Loc.1904
     /tmp/cclVlxlC.s:9757   .text:0000289c .Loc.1905
     /tmp/cclVlxlC.s:9763   .text:000028a2 .Loc.1906
     /tmp/cclVlxlC.s:9765   .text:000028a4 L0
     /tmp/cclVlxlC.s:9771   .text.startup:00000000 main
     /tmp/cclVlxlC.s:9774   .text.startup:00000000 .Loc.1907
     /tmp/cclVlxlC.s:9775   .text.startup:00000000 L0
     /tmp/cclVlxlC.s:9780   .text.startup:00000000 .Loc.1908
     /tmp/cclVlxlC.s:9785   .text.startup:00000002 .Loc.1909
     /tmp/cclVlxlC.s:9790   .text.startup:00000002 .Loc.1910
     /tmp/cclVlxlC.s:9792   .text.startup:00000002 .Loc.1911
     /tmp/cclVlxlC.s:9793   .text.startup:00000002 .Loc.1912
     /tmp/cclVlxlC.s:9795   .text.startup:00000004 .Loc.1913
     /tmp/cclVlxlC.s:9796   .text.startup:00000004 .Loc.1914
     /tmp/cclVlxlC.s:9798   .text.startup:00000006 .Loc.1915
     /tmp/cclVlxlC.s:9799   .text.startup:00000006 .Loc.1916
     /tmp/cclVlxlC.s:9801   .text.startup:00000008 .Loc.1917
     /tmp/cclVlxlC.s:9803   .text.startup:0000000a .Loc.1918
     /tmp/cclVlxlC.s:9804   .text.startup:0000000a .Loc.1919
     /tmp/cclVlxlC.s:9806   .text.startup:0000000c .Loc.1920
     /tmp/cclVlxlC.s:9808   .text.startup:0000000e .Loc.1921
     /tmp/cclVlxlC.s:9810   .text.startup:00000010 .Loc.1922
     /tmp/cclVlxlC.s:9813   .text.startup:00000014 .Loc.1923
     /tmp/cclVlxlC.s:9817   .text.startup:0000001a .Loc.1924
     /tmp/cclVlxlC.s:9818   .text.startup:0000001a .Loc.1925
     /tmp/cclVlxlC.s:9820   .text.startup:0000001c .Loc.1926
     /tmp/cclVlxlC.s:9821   .text.startup:0000001c .Loc.1927
     /tmp/cclVlxlC.s:9823   .text.startup:0000001e .Loc.1928
     /tmp/cclVlxlC.s:9825   .text.startup:00000020 .Loc.1929
     /tmp/cclVlxlC.s:9830   .text.startup:00000024 .Loc.1930
     /tmp/cclVlxlC.s:9833   .text.startup:00000024 .Loc.1931
     /tmp/cclVlxlC.s:9835   .text.startup:00000024 .Loc.1932
     /tmp/cclVlxlC.s:9836   .text.startup:00000024 .Loc.1933
     /tmp/cclVlxlC.s:9839   .text.startup:0000002a .Loc.1934
     /tmp/cclVlxlC.s:9840   .text.startup:0000002a .Loc.1935
     /tmp/cclVlxlC.s:9843   .text.startup:00000030 .Loc.1936
     /tmp/cclVlxlC.s:9844   .text.startup:00000030 .Loc.1937
     /tmp/cclVlxlC.s:9851   .text.startup:0000003c .Loc.1938
     /tmp/cclVlxlC.s:9852   .text.startup:0000003c .Loc.1939
     /tmp/cclVlxlC.s:9853   .text.startup:0000003c .Loc.1940
     /tmp/cclVlxlC.s:9854   .text.startup:0000003c .Loc.1941
     /tmp/cclVlxlC.s:16709  .progmem.data:000014c8 __c.2.lto_priv.0
     /tmp/cclVlxlC.s:9864   .text.startup:0000004a .Loc.1942
     /tmp/cclVlxlC.s:9867   .text.startup:0000004a .Loc.1943
     /tmp/cclVlxlC.s:9869   .text.startup:0000004a .Loc.1944
     /tmp/cclVlxlC.s:9870   .text.startup:0000004a .Loc.1945
     /tmp/cclVlxlC.s:9873   .text.startup:0000004e .Loc.1946
     /tmp/cclVlxlC.s:9875   .text.startup:00000050 .Loc.1947
     /tmp/cclVlxlC.s:9878   .text.startup:00000054 .Loc.1948
     /tmp/cclVlxlC.s:9879   .text.startup:00000054 .Loc.1949
     /tmp/cclVlxlC.s:9882   .text.startup:00000058 .Loc.1950
     /tmp/cclVlxlC.s:9884   .text.startup:0000005c .Loc.1951
     /tmp/cclVlxlC.s:9887   .text.startup:00000062 .Loc.1952
     /tmp/cclVlxlC.s:15195  .progmem.data:000003c5 __c.0.lto_priv.3
     /tmp/cclVlxlC.s:9899   .text.startup:00000070 .Loc.1953
     /tmp/cclVlxlC.s:9902   .text.startup:00000070 .Loc.1954
     /tmp/cclVlxlC.s:9904   .text.startup:00000070 .Loc.1955
     /tmp/cclVlxlC.s:9905   .text.startup:00000070 .Loc.1956
     /tmp/cclVlxlC.s:9908   .text.startup:00000074 .Loc.1957
     /tmp/cclVlxlC.s:15199  .progmem.data:000003e3 __c.1.lto_priv.1
     /tmp/cclVlxlC.s:9920   .text.startup:00000082 .Loc.1958
     /tmp/cclVlxlC.s:9923   .text.startup:00000082 .Loc.1959
     /tmp/cclVlxlC.s:9925   .text.startup:00000082 .Loc.1960
     /tmp/cclVlxlC.s:15207  .progmem.data:0000040a __c.1.lto_priv.3
     /tmp/cclVlxlC.s:9935   .text.startup:00000090 .Loc.1961
     /tmp/cclVlxlC.s:9939   .text.startup:00000094 .Loc.1962
     /tmp/cclVlxlC.s:9941   .text.startup:00000094 .Loc.1963
     /tmp/cclVlxlC.s:9943   .text.startup:00000096 .Loc.1964
     /tmp/cclVlxlC.s:9947   .text.startup:00000096 .Loc.1965
     /tmp/cclVlxlC.s:9949   .text.startup:00000096 .Loc.1966
     /tmp/cclVlxlC.s:9950   .text.startup:00000096 .Loc.1967
     /tmp/cclVlxlC.s:9951   .text.startup:00000096 .Loc.1968
     /tmp/cclVlxlC.s:9952   .text.startup:00000096 .Loc.1969
     /tmp/cclVlxlC.s:9953   .text.startup:00000096 .Loc.1970
     /tmp/cclVlxlC.s:9954   .text.startup:00000096 .Loc.1971
     /tmp/cclVlxlC.s:9957   .text.startup:00000096 .Loc.1972
     /tmp/cclVlxlC.s:9975   .text.startup:000000ac .Loc.1973
     /tmp/cclVlxlC.s:9981   .text.startup:000000b0 .Loc.1974
     /tmp/cclVlxlC.s:9984   .text.startup:000000b0 .Loc.1975
     /tmp/cclVlxlC.s:9986   .text.startup:000000b0 .Loc.1976
     /tmp/cclVlxlC.s:9996   .text.startup:000000b6 .Loc.1977
     /tmp/cclVlxlC.s:9997   .text.startup:000000b6 .Loc.1978
     /tmp/cclVlxlC.s:10003  .text.startup:000000bc .Loc.1979
     /tmp/cclVlxlC.s:10005  .text.startup:000000be .Loc.1980
     /tmp/cclVlxlC.s:10008  .text.startup:000000be .Loc.1981
     /tmp/cclVlxlC.s:10010  .text.startup:000000be .Loc.1982
     /tmp/cclVlxlC.s:10011  .text.startup:000000be .Loc.1983
     /tmp/cclVlxlC.s:10012  .text.startup:000000be .Loc.1984
     /tmp/cclVlxlC.s:10013  .text.startup:000000be .Loc.1985
     /tmp/cclVlxlC.s:10014  .text.startup:000000be .Loc.1986
     /tmp/cclVlxlC.s:10015  .text.startup:000000be .Loc.1987
     /tmp/cclVlxlC.s:10018  .text.startup:000000be .Loc.1988
     /tmp/cclVlxlC.s:10025  .text.startup:000000c2 .Loc.1989
     /tmp/cclVlxlC.s:10031  .text.startup:000000c6 .Loc.1990
     /tmp/cclVlxlC.s:10034  .text.startup:000000c6 .Loc.1991
     /tmp/cclVlxlC.s:10036  .text.startup:000000c6 .Loc.1992
     /tmp/cclVlxlC.s:10046  .text.startup:000000cc .Loc.1993
     /tmp/cclVlxlC.s:10047  .text.startup:000000cc .Loc.1994
     /tmp/cclVlxlC.s:10053  .text.startup:000000d2 .Loc.1995
     /tmp/cclVlxlC.s:10055  .text.startup:000000d4 .Loc.1996
     /tmp/cclVlxlC.s:10058  .text.startup:000000d4 .Loc.1997
     /tmp/cclVlxlC.s:10060  .text.startup:000000d4 .Loc.1998
     /tmp/cclVlxlC.s:10061  .text.startup:000000d4 .Loc.1999
     /tmp/cclVlxlC.s:10062  .text.startup:000000d4 .Loc.2000
     /tmp/cclVlxlC.s:10063  .text.startup:000000d4 .Loc.2001
     /tmp/cclVlxlC.s:10064  .text.startup:000000d4 .Loc.2002
     /tmp/cclVlxlC.s:10065  .text.startup:000000d4 .Loc.2003
     /tmp/cclVlxlC.s:10068  .text.startup:000000d4 .Loc.2004
     /tmp/cclVlxlC.s:10075  .text.startup:000000d8 .Loc.2005
     /tmp/cclVlxlC.s:10081  .text.startup:000000dc .Loc.2006
     /tmp/cclVlxlC.s:10084  .text.startup:000000dc .Loc.2007
     /tmp/cclVlxlC.s:10086  .text.startup:000000dc .Loc.2008
     /tmp/cclVlxlC.s:10096  .text.startup:000000e2 .Loc.2009
     /tmp/cclVlxlC.s:10097  .text.startup:000000e2 .Loc.2010
     /tmp/cclVlxlC.s:10107  .text.startup:000000e8 .Loc.2011
     /tmp/cclVlxlC.s:10109  .text.startup:000000e8 .Loc.2012
     /tmp/cclVlxlC.s:10112  .text.startup:000000ee .Loc.2013
     /tmp/cclVlxlC.s:10115  .text.startup:000000f4 .Loc.2014
     /tmp/cclVlxlC.s:10118  .text.startup:000000fa .Loc.2015
     /tmp/cclVlxlC.s:10121  .text.startup:00000100 .Loc.2016
     /tmp/cclVlxlC.s:10124  .text.startup:00000106 .Loc.2017
     /tmp/cclVlxlC.s:10127  .text.startup:0000010c .Loc.2018
     /tmp/cclVlxlC.s:10130  .text.startup:00000112 .Loc.2019
     /tmp/cclVlxlC.s:10133  .text.startup:00000118 .Loc.2020
     /tmp/cclVlxlC.s:10136  .text.startup:0000011e .Loc.2021
     /tmp/cclVlxlC.s:10139  .text.startup:00000124 .Loc.2022
     /tmp/cclVlxlC.s:10142  .text.startup:0000012a .Loc.2023
     /tmp/cclVlxlC.s:10145  .text.startup:00000130 .Loc.2024
     /tmp/cclVlxlC.s:10148  .text.startup:00000136 .Loc.2025
     /tmp/cclVlxlC.s:10151  .text.startup:0000013c .Loc.2026
     /tmp/cclVlxlC.s:10154  .text.startup:00000142 .Loc.2027
     /tmp/cclVlxlC.s:10157  .text.startup:00000148 .Loc.2028
     /tmp/cclVlxlC.s:10160  .text.startup:0000014e .Loc.2029
     /tmp/cclVlxlC.s:10163  .text.startup:00000154 .Loc.2030
     /tmp/cclVlxlC.s:10166  .text.startup:0000015a .Loc.2031
     /tmp/cclVlxlC.s:10169  .text.startup:00000160 .Loc.2032
     /tmp/cclVlxlC.s:10172  .text.startup:00000166 .Loc.2033
     /tmp/cclVlxlC.s:10175  .text.startup:0000016c .Loc.2034
     /tmp/cclVlxlC.s:10178  .text.startup:00000172 .Loc.2035
     /tmp/cclVlxlC.s:10181  .text.startup:00000178 .Loc.2036
     /tmp/cclVlxlC.s:10184  .text.startup:0000017e .Loc.2037
     /tmp/cclVlxlC.s:10187  .text.startup:00000184 .Loc.2038
     /tmp/cclVlxlC.s:10190  .text.startup:0000018a .Loc.2039
     /tmp/cclVlxlC.s:10193  .text.startup:00000190 .Loc.2040
     /tmp/cclVlxlC.s:10196  .text.startup:00000196 .Loc.2041
     /tmp/cclVlxlC.s:10199  .text.startup:0000019c .Loc.2042
     /tmp/cclVlxlC.s:10202  .text.startup:000001a2 .Loc.2043
     /tmp/cclVlxlC.s:10205  .text.startup:000001a8 .Loc.2044
     /tmp/cclVlxlC.s:10208  .text.startup:000001ae .Loc.2045
     /tmp/cclVlxlC.s:10211  .text.startup:000001b4 .Loc.2046
     /tmp/cclVlxlC.s:10214  .text.startup:000001ba .Loc.2047
     /tmp/cclVlxlC.s:10217  .text.startup:000001c0 .Loc.2048
     /tmp/cclVlxlC.s:10220  .text.startup:000001c6 .Loc.2049
     /tmp/cclVlxlC.s:10223  .text.startup:000001cc .Loc.2050
     /tmp/cclVlxlC.s:10226  .text.startup:000001d2 .Loc.2051
     /tmp/cclVlxlC.s:10229  .text.startup:000001d8 .Loc.2052
     /tmp/cclVlxlC.s:10232  .text.startup:000001de .Loc.2053
     /tmp/cclVlxlC.s:10235  .text.startup:000001e4 .Loc.2054
     /tmp/cclVlxlC.s:10238  .text.startup:000001ea .Loc.2055
     /tmp/cclVlxlC.s:10241  .text.startup:000001f0 .Loc.2056
     /tmp/cclVlxlC.s:10244  .text.startup:000001f6 .Loc.2057
     /tmp/cclVlxlC.s:10247  .text.startup:000001fc .Loc.2058
     /tmp/cclVlxlC.s:10250  .text.startup:00000202 .Loc.2059
     /tmp/cclVlxlC.s:10253  .text.startup:00000208 .Loc.2060
     /tmp/cclVlxlC.s:10256  .text.startup:0000020e .Loc.2061
     /tmp/cclVlxlC.s:10259  .text.startup:00000214 .Loc.2062
     /tmp/cclVlxlC.s:10262  .text.startup:0000021a .Loc.2063
     /tmp/cclVlxlC.s:10265  .text.startup:00000220 .Loc.2064
     /tmp/cclVlxlC.s:10268  .text.startup:00000226 .Loc.2065
     /tmp/cclVlxlC.s:10271  .text.startup:0000022c .Loc.2066
     /tmp/cclVlxlC.s:10274  .text.startup:00000232 .Loc.2067
     /tmp/cclVlxlC.s:10277  .text.startup:00000238 .Loc.2068
     /tmp/cclVlxlC.s:10280  .text.startup:0000023e .Loc.2069
     /tmp/cclVlxlC.s:10283  .text.startup:00000244 .Loc.2070
     /tmp/cclVlxlC.s:10286  .text.startup:0000024a .Loc.2071
     /tmp/cclVlxlC.s:10289  .text.startup:00000250 .Loc.2072
     /tmp/cclVlxlC.s:10292  .text.startup:00000256 .Loc.2073
     /tmp/cclVlxlC.s:10295  .text.startup:0000025c .Loc.2074
     /tmp/cclVlxlC.s:10298  .text.startup:00000262 .Loc.2075
     /tmp/cclVlxlC.s:10301  .text.startup:00000268 .Loc.2076
     /tmp/cclVlxlC.s:10304  .text.startup:0000026e .Loc.2077
     /tmp/cclVlxlC.s:10307  .text.startup:00000274 .Loc.2078
     /tmp/cclVlxlC.s:10310  .text.startup:0000027a .Loc.2079
     /tmp/cclVlxlC.s:10313  .text.startup:00000280 .Loc.2080
     /tmp/cclVlxlC.s:10316  .text.startup:00000286 .Loc.2081
     /tmp/cclVlxlC.s:10319  .text.startup:0000028c .Loc.2082
     /tmp/cclVlxlC.s:10322  .text.startup:00000292 .Loc.2083
     /tmp/cclVlxlC.s:10325  .text.startup:00000298 .Loc.2084
     /tmp/cclVlxlC.s:10328  .text.startup:0000029e .Loc.2085
     /tmp/cclVlxlC.s:10331  .text.startup:000002a4 .Loc.2086
     /tmp/cclVlxlC.s:10334  .text.startup:000002aa .Loc.2087
     /tmp/cclVlxlC.s:10337  .text.startup:000002b0 .Loc.2088
     /tmp/cclVlxlC.s:10340  .text.startup:000002b6 .Loc.2089
     /tmp/cclVlxlC.s:10343  .text.startup:000002bc .Loc.2090
     /tmp/cclVlxlC.s:10346  .text.startup:000002c2 .Loc.2091
     /tmp/cclVlxlC.s:10349  .text.startup:000002c8 .Loc.2092
     /tmp/cclVlxlC.s:10352  .text.startup:000002ce .Loc.2093
     /tmp/cclVlxlC.s:10355  .text.startup:000002d4 .Loc.2094
     /tmp/cclVlxlC.s:10358  .text.startup:000002da .Loc.2095
     /tmp/cclVlxlC.s:10361  .text.startup:000002e0 .Loc.2096
     /tmp/cclVlxlC.s:10364  .text.startup:000002e6 .Loc.2097
     /tmp/cclVlxlC.s:10367  .text.startup:000002ec .Loc.2098
     /tmp/cclVlxlC.s:10374  .text.startup:000002f2 .Loc.2099
     /tmp/cclVlxlC.s:10376  .text.startup:000002f2 .Loc.2100
     /tmp/cclVlxlC.s:10379  .text.startup:000002f8 .Loc.2101
     /tmp/cclVlxlC.s:10382  .text.startup:000002fe .Loc.2102
     /tmp/cclVlxlC.s:10385  .text.startup:00000304 .Loc.2103
     /tmp/cclVlxlC.s:10388  .text.startup:0000030a .Loc.2104
     /tmp/cclVlxlC.s:10399  .text.startup:00000314 .Loc.2105
     /tmp/cclVlxlC.s:10412  .text.startup:0000031e .Loc.2106
     /tmp/cclVlxlC.s:10418  .text.startup:00000324 .Loc.2107
     /tmp/cclVlxlC.s:10427  .text.startup:0000032e .Loc.2108
     /tmp/cclVlxlC.s:10440  .text.startup:00000338 .Loc.2109
     /tmp/cclVlxlC.s:10446  .text.startup:0000033e .Loc.2110
     /tmp/cclVlxlC.s:10451  .text.startup:00000344 .Loc.2111
     /tmp/cclVlxlC.s:10453  .text.startup:00000344 .Loc.2112
     /tmp/cclVlxlC.s:10454  .text.startup:00000344 .Loc.2113
     /tmp/cclVlxlC.s:10464  .text.startup:00000358 .Loc.2114
     /tmp/cclVlxlC.s:10465  .text.startup:00000358 .Loc.2115
     /tmp/cclVlxlC.s:10466  .text.startup:00000358 .Loc.2116
     /tmp/cclVlxlC.s:10470  .text.startup:0000035c .Loc.2117
     /tmp/cclVlxlC.s:10473  .text.startup:0000035c .Loc.2118
     /tmp/cclVlxlC.s:10479  .text.startup:00000360 .Loc.2119
     /tmp/cclVlxlC.s:10483  .text.startup:00000368 .Loc.2120
     /tmp/cclVlxlC.s:10484  .text.startup:00000368 .Loc.2121
     /tmp/cclVlxlC.s:10490  .text.startup:00000372 .Loc.2122
     /tmp/cclVlxlC.s:10491  .text.startup:00000372 .Loc.2123
     /tmp/cclVlxlC.s:10495  .text.startup:00000378 .Loc.2124
     /tmp/cclVlxlC.s:10499  .text.startup:0000037c .Loc.2125
     /tmp/cclVlxlC.s:15203  .progmem.data:000003f3 __c.0.lto_priv.7
     /tmp/cclVlxlC.s:10511  .text.startup:0000038a .Loc.2126
     /tmp/cclVlxlC.s:10514  .text.startup:0000038a .Loc.2127
     /tmp/cclVlxlC.s:10516  .text.startup:0000038a .Loc.2128
     /tmp/cclVlxlC.s:10517  .text.startup:0000038a .Loc.2129
     /tmp/cclVlxlC.s:10520  .text.startup:00000390 .Loc.2130
     /tmp/cclVlxlC.s:16015  .progmem.data:000009ea logo_tiny
     /tmp/cclVlxlC.s:10532  .text.startup:000003a8 .Loc.2131
     /tmp/cclVlxlC.s:15211  .progmem.data:0000041e logo_text
     /tmp/cclVlxlC.s:10546  .text.startup:000003c0 .Loc.2132
     /tmp/cclVlxlC.s:10550  .text.startup:000003c0 .Loc.2133
     /tmp/cclVlxlC.s:10552  .text.startup:000003c0 .Loc.2134
     /tmp/cclVlxlC.s:10553  .text.startup:000003c0 .Loc.2135
     /tmp/cclVlxlC.s:10555  .text.startup:000003c2 .Loc.2136
     /tmp/cclVlxlC.s:10557  .text.startup:000003c6 .Loc.2137
     /tmp/cclVlxlC.s:10560  .text.startup:000003cc .Loc.2138
     /tmp/cclVlxlC.s:16539  .progmem.data:000011ca __c.2.lto_priv.1
     /tmp/cclVlxlC.s:10572  .text.startup:000003da .Loc.2139
     /tmp/cclVlxlC.s:10575  .text.startup:000003da .Loc.2140
     /tmp/cclVlxlC.s:10577  .text.startup:000003da .Loc.2141
     /tmp/cclVlxlC.s:10578  .text.startup:000003da .Loc.2142
     /tmp/cclVlxlC.s:10581  .text.startup:000003e0 .Loc.2143
     /tmp/cclVlxlC.s:10582  .text.startup:000003e0 .Loc.2144
     /tmp/cclVlxlC.s:10585  .text.startup:000003e6 .Loc.2145
     /tmp/cclVlxlC.s:10587  .text.startup:000003ea .Loc.2146
     /tmp/cclVlxlC.s:10590  .text.startup:000003f0 .Loc.2147
     /tmp/cclVlxlC.s:10592  .text.startup:000003f4 .Loc.2148
     /tmp/cclVlxlC.s:16543  .progmem.data:000011e4 __c.0.lto_priv.1
     /tmp/cclVlxlC.s:10604  .text.startup:00000402 .Loc.2149
     /tmp/cclVlxlC.s:10607  .text.startup:00000402 .Loc.2150
     /tmp/cclVlxlC.s:10609  .text.startup:00000402 .Loc.2151
     /tmp/cclVlxlC.s:10612  .text.startup:0000040a .Loc.2152
     /tmp/cclVlxlC.s:16547  .progmem.data:000011f4 __c.0.lto_priv.2
     /tmp/cclVlxlC.s:10624  .text.startup:00000418 .Loc.2153
     /tmp/cclVlxlC.s:10627  .text.startup:00000418 .Loc.2154
     /tmp/cclVlxlC.s:10629  .text.startup:00000418 .Loc.2155
     /tmp/cclVlxlC.s:16579  .progmem.data:000012b1 __c.7.lto_priv.0
     /tmp/cclVlxlC.s:10639  .text.startup:00000426 .Loc.2156
     /tmp/cclVlxlC.s:10642  .text.startup:00000426 .Loc.2157
     /tmp/cclVlxlC.s:10644  .text.startup:00000426 .Loc.2158
     /tmp/cclVlxlC.s:10645  .text.startup:00000426 .Loc.2159
     /tmp/cclVlxlC.s:10646  .text.startup:00000426 .Loc.2160
     /tmp/cclVlxlC.s:16575  .progmem.data:00001293 __c.6.lto_priv.0
     /tmp/cclVlxlC.s:10656  .text.startup:00000434 .Loc.2161
     /tmp/cclVlxlC.s:10658  .text.startup:00000438 .Loc.2162
     /tmp/cclVlxlC.s:10659  .text.startup:00000438 .Loc.2163
     /tmp/cclVlxlC.s:10660  .text.startup:00000438 .Loc.2164
     /tmp/cclVlxlC.s:10671  .text.startup:0000044a .Loc.2165
     /tmp/cclVlxlC.s:16567  .progmem.data:00001268 __c.4.lto_priv.0
     /tmp/cclVlxlC.s:10676  .text.startup:00000452 .Loc.2166
     /tmp/cclVlxlC.s:16563  .progmem.data:00001260 __c.3.lto_priv.0
     /tmp/cclVlxlC.s:10683  .text.startup:0000045e .Loc.2167
     /tmp/cclVlxlC.s:10687  .text.startup:00000464 .Loc.2168
     /tmp/cclVlxlC.s:16559  .progmem.data:0000124e __c.2.lto_priv.2
     /tmp/cclVlxlC.s:10694  .text.startup:0000046e .Loc.2169
     /tmp/cclVlxlC.s:16571  .progmem.data:00001278 __c.5.lto_priv.0
     /tmp/cclVlxlC.s:10710  .text.startup:00000484 .Loc.2170
     /tmp/cclVlxlC.s:10718  .text.startup:0000048e .Loc.2171
     /tmp/cclVlxlC.s:10725  .text.startup:0000049c .Loc.2172
     /tmp/cclVlxlC.s:10726  .text.startup:0000049c .Loc.2173
     /tmp/cclVlxlC.s:10727  .text.startup:0000049c .Loc.2174
     /tmp/cclVlxlC.s:10738  .text.startup:000004ae .Loc.2175
     /tmp/cclVlxlC.s:10742  .text.startup:000004b4 .Loc.2176
     /tmp/cclVlxlC.s:10745  .text.startup:000004b6 .Loc.2177
     /tmp/cclVlxlC.s:10746  .text.startup:000004b6 .Loc.2178
     /tmp/cclVlxlC.s:10748  .text.startup:000004b8 .Loc.2179
     /tmp/cclVlxlC.s:10749  .text.startup:000004b8 .Loc.2180
     /tmp/cclVlxlC.s:10755  .text.startup:000004c2 .Loc.2181
     /tmp/cclVlxlC.s:10760  .text.startup:000004ca .Loc.2182
     /tmp/cclVlxlC.s:10786  .text.startup:000004ec .Loc.2183
     /tmp/cclVlxlC.s:10787  .text.startup:000004ec .Loc.2184
     /tmp/cclVlxlC.s:10794  .text.startup:000004f8 .Loc.2185
     /tmp/cclVlxlC.s:10797  .text.startup:000004fe .Loc.2186
     /tmp/cclVlxlC.s:10803  .text.startup:00000508 .Loc.2187
     /tmp/cclVlxlC.s:10804  .text.startup:00000508 .Loc.2188
     /tmp/cclVlxlC.s:10807  .text.startup:0000050a .Loc.2189
     /tmp/cclVlxlC.s:10820  .text.startup:0000051e .Loc.2190
     /tmp/cclVlxlC.s:10828  .text.startup:00000528 .Loc.2191
     /tmp/cclVlxlC.s:10835  .text.startup:00000536 .Loc.2192
     /tmp/cclVlxlC.s:10836  .text.startup:00000536 .Loc.2193
     /tmp/cclVlxlC.s:10837  .text.startup:00000536 .Loc.2194
     /tmp/cclVlxlC.s:10842  .text.startup:0000053c .Loc.2195
     /tmp/cclVlxlC.s:10846  .text.startup:00000542 .Loc.2196
     /tmp/cclVlxlC.s:10849  .text.startup:00000544 .Loc.2197
     /tmp/cclVlxlC.s:10850  .text.startup:00000544 .Loc.2198
     /tmp/cclVlxlC.s:10853  .text.startup:00000548 .Loc.2199
     /tmp/cclVlxlC.s:10854  .text.startup:00000548 .Loc.2200
     /tmp/cclVlxlC.s:10860  .text.startup:00000552 .Loc.2201
     /tmp/cclVlxlC.s:10865  .text.startup:0000055a .Loc.2202
     /tmp/cclVlxlC.s:16555  .progmem.data:00001246 __c.1.lto_priv.2
     /tmp/cclVlxlC.s:10895  .text.startup:00000584 .Loc.2203
     /tmp/cclVlxlC.s:10896  .text.startup:00000584 .Loc.2204
     /tmp/cclVlxlC.s:10903  .text.startup:00000590 .Loc.2205
     /tmp/cclVlxlC.s:10904  .text.startup:00000590 .Loc.2206
     /tmp/cclVlxlC.s:10907  .text.startup:00000596 .Loc.2207
     /tmp/cclVlxlC.s:10908  .text.startup:00000596 .Loc.2208
     /tmp/cclVlxlC.s:10911  .text.startup:0000059a .Loc.2209
     /tmp/cclVlxlC.s:10915  .text.startup:000005a0 .Loc.2210
     /tmp/cclVlxlC.s:16551  .progmem.data:00001204 __c.0.lto_priv.6
     /tmp/cclVlxlC.s:10942  .text.startup:000005bc .Loc.2211
     /tmp/cclVlxlC.s:10948  .text.startup:000005c6 .Loc.2212
     /tmp/cclVlxlC.s:10949  .text.startup:000005c6 .Loc.2213
     /tmp/cclVlxlC.s:10952  .text.startup:000005c8 .Loc.2214
     /tmp/cclVlxlC.s:10956  .text.startup:000005ce .Loc.2215
     /tmp/cclVlxlC.s:10957  .text.startup:000005ce .Loc.2216
     /tmp/cclVlxlC.s:10960  .text.startup:000005d4 L0
     /tmp/cclVlxlC.s:10966  .text.startup:000005d6 .Loc.2217
     /tmp/cclVlxlC.s:10969  .text.startup:000005d6 .Loc.2218
     /tmp/cclVlxlC.s:10971  .text.startup:000005d6 .Loc.2219
     /tmp/cclVlxlC.s:16693  .progmem.data:00001482 __c.23
     /tmp/cclVlxlC.s:10982  .text.startup:000005e4 .Loc.2220
     /tmp/cclVlxlC.s:10983  .text.startup:000005e4 .Loc.2221
     /tmp/cclVlxlC.s:10984  .text.startup:000005e4 .Loc.2222
     /tmp/cclVlxlC.s:10985  .text.startup:000005e4 .Loc.2223
     /tmp/cclVlxlC.s:10987  .text.startup:000005e6 .Loc.2224
     /tmp/cclVlxlC.s:10990  .text.startup:000005e6 .Loc.2225
     /tmp/cclVlxlC.s:10992  .text.startup:000005e6 .Loc.2226
     /tmp/cclVlxlC.s:10994  .text.startup:000005e8 .Loc.2227
     /tmp/cclVlxlC.s:10997  .text.startup:000005ec .Loc.2228
     /tmp/cclVlxlC.s:10998  .text.startup:000005ec .Loc.2229
     /tmp/cclVlxlC.s:11004  .text.startup:000005f2 .Loc.2230
     /tmp/cclVlxlC.s:11005  .text.startup:000005f2 .Loc.2231
     /tmp/cclVlxlC.s:11007  .text.startup:000005f6 .Loc.2232
     /tmp/cclVlxlC.s:11008  .text.startup:000005f6 .Loc.2233
     /tmp/cclVlxlC.s:11009  .text.startup:000005f6 .Loc.2234
     /tmp/cclVlxlC.s:11017  .text.startup:00000600 .Loc.2235
     /tmp/cclVlxlC.s:11020  .text.startup:00000606 .Loc.2236
     /tmp/cclVlxlC.s:11021  .text.startup:00000606 .Loc.2237
     /tmp/cclVlxlC.s:11025  .text.startup:0000060c .Loc.2238
     /tmp/cclVlxlC.s:11027  .text.startup:0000060e .Loc.2239
     /tmp/cclVlxlC.s:11028  .text.startup:0000060e .Loc.2240
     /tmp/cclVlxlC.s:11032  .text.startup:00000612 .Loc.2241
     /tmp/cclVlxlC.s:11033  .text.startup:00000612 .Loc.2242
     /tmp/cclVlxlC.s:11039  .text.startup:0000061e .Loc.2243
     /tmp/cclVlxlC.s:11042  .text.startup:00000622 .Loc.2244
     /tmp/cclVlxlC.s:11043  .text.startup:00000622 .Loc.2245
     /tmp/cclVlxlC.s:11048  .text.startup:00000628 .Loc.2246
     /tmp/cclVlxlC.s:11051  .text.startup:0000062c .Loc.2247
     /tmp/cclVlxlC.s:11052  .text.startup:0000062c .Loc.2248
     /tmp/cclVlxlC.s:11059  .text.startup:0000063a .Loc.2249
     /tmp/cclVlxlC.s:11062  .text.startup:0000063e .Loc.2250
     /tmp/cclVlxlC.s:11065  .text.startup:00000644 .Loc.2251
     /tmp/cclVlxlC.s:11068  .text.startup:0000064a .Loc.2252
     /tmp/cclVlxlC.s:11069  .text.startup:0000064a .Loc.2253
     /tmp/cclVlxlC.s:11072  .text.startup:00000650 .Loc.2254
     /tmp/cclVlxlC.s:11075  .text.startup:00000654 .Loc.2255
     /tmp/cclVlxlC.s:11078  .text.startup:0000065a .Loc.2256
     /tmp/cclVlxlC.s:11082  .text.startup:0000065e .Loc.2257
     /tmp/cclVlxlC.s:11085  .text.startup:00000662 .Loc.2258
     /tmp/cclVlxlC.s:11086  .text.startup:00000662 .Loc.2259
     /tmp/cclVlxlC.s:11090  .text.startup:00000668 .Loc.2260
     /tmp/cclVlxlC.s:11093  .text.startup:0000066c .Loc.2261
     /tmp/cclVlxlC.s:11097  .text.startup:00000670 .Loc.2262
     /tmp/cclVlxlC.s:11098  .text.startup:00000670 .Loc.2263
     /tmp/cclVlxlC.s:11100  .text.startup:00000674 .Loc.2264
     /tmp/cclVlxlC.s:11103  .text.startup:00000678 .Loc.2265
     /tmp/cclVlxlC.s:11107  .text.startup:0000067e .Loc.2266
     /tmp/cclVlxlC.s:11110  .text.startup:00000682 .Loc.2267
     /tmp/cclVlxlC.s:11111  .text.startup:00000682 .Loc.2268
     /tmp/cclVlxlC.s:11112  .text.startup:00000682 .Loc.2269
     /tmp/cclVlxlC.s:11115  .text.startup:00000688 .Loc.2270
     /tmp/cclVlxlC.s:11116  .text.startup:00000688 .Loc.2271
     /tmp/cclVlxlC.s:11131  .text.startup:000006a2 .Loc.2272
     /tmp/cclVlxlC.s:11134  .text.startup:000006a4 .Loc.2273
     /tmp/cclVlxlC.s:11136  .text.startup:000006a8 .Loc.2274
     /tmp/cclVlxlC.s:11137  .text.startup:000006a8 .Loc.2275
     /tmp/cclVlxlC.s:11140  .text.startup:000006ac .Loc.2276
     /tmp/cclVlxlC.s:11141  .text.startup:000006ac .Loc.2277
     /tmp/cclVlxlC.s:11147  .text.startup:000006b4 .Loc.2278
     /tmp/cclVlxlC.s:11153  .text.startup:000006c0 .Loc.2279
     /tmp/cclVlxlC.s:11154  .text.startup:000006c0 .Loc.2280
     /tmp/cclVlxlC.s:11160  .text.startup:000006cc .Loc.2281
     /tmp/cclVlxlC.s:11163  .text.startup:000006d0 .Loc.2282
     /tmp/cclVlxlC.s:11164  .text.startup:000006d0 .Loc.2283
     /tmp/cclVlxlC.s:11169  .text.startup:000006d8 .Loc.2284
     /tmp/cclVlxlC.s:11170  .text.startup:000006d8 .Loc.2285
     /tmp/cclVlxlC.s:11174  .text.startup:000006dc .Loc.2286
     /tmp/cclVlxlC.s:11175  .text.startup:000006dc .Loc.2287
     /tmp/cclVlxlC.s:11179  .text.startup:000006e4 .Loc.2288
     /tmp/cclVlxlC.s:11180  .text.startup:000006e4 .Loc.2289
     /tmp/cclVlxlC.s:11186  .text.startup:000006f0 .Loc.2290
     /tmp/cclVlxlC.s:11189  .text.startup:000006f4 .Loc.2291
     /tmp/cclVlxlC.s:11190  .text.startup:000006f4 .Loc.2292
     /tmp/cclVlxlC.s:11193  .text.startup:000006fa .Loc.2293
     /tmp/cclVlxlC.s:11196  .text.startup:000006fe .Loc.2294
     /tmp/cclVlxlC.s:11197  .text.startup:000006fe .Loc.2295
     /tmp/cclVlxlC.s:11202  .text.startup:00000708 .Loc.2296
     /tmp/cclVlxlC.s:11205  .text.startup:0000070e .Loc.2297
     /tmp/cclVlxlC.s:11208  .text.startup:00000714 .Loc.2298
     /tmp/cclVlxlC.s:11212  .text.startup:0000071a .Loc.2299
     /tmp/cclVlxlC.s:11213  .text.startup:0000071a .Loc.2300
     /tmp/cclVlxlC.s:11221  .text.startup:0000072a .Loc.2301
     /tmp/cclVlxlC.s:11224  .text.startup:0000072e .Loc.2302
     /tmp/cclVlxlC.s:11226  .text.startup:00000730 .Loc.2303
     /tmp/cclVlxlC.s:11228  .text.startup:00000734 .Loc.2304
     /tmp/cclVlxlC.s:11231  .text.startup:00000734 .Loc.2305
     /tmp/cclVlxlC.s:11233  .text.startup:00000734 .Loc.2306
     /tmp/cclVlxlC.s:11234  .text.startup:00000734 .Loc.2307
     /tmp/cclVlxlC.s:11235  .text.startup:00000734 .Loc.2308
     /tmp/cclVlxlC.s:11236  .text.startup:00000734 .Loc.2309
     /tmp/cclVlxlC.s:11237  .text.startup:00000734 .Loc.2310
     /tmp/cclVlxlC.s:11238  .text.startup:00000734 .Loc.2311
     /tmp/cclVlxlC.s:11241  .text.startup:00000734 .Loc.2312
     /tmp/cclVlxlC.s:11248  .text.startup:00000738 .Loc.2313
     /tmp/cclVlxlC.s:11254  .text.startup:0000073c .Loc.2314
     /tmp/cclVlxlC.s:11257  .text.startup:0000073c .Loc.2315
     /tmp/cclVlxlC.s:11259  .text.startup:0000073c .Loc.2316
     /tmp/cclVlxlC.s:11269  .text.startup:00000742 .Loc.2317
     /tmp/cclVlxlC.s:11270  .text.startup:00000742 .Loc.2318
     /tmp/cclVlxlC.s:11277  .text.startup:00000748 .Loc.2319
     /tmp/cclVlxlC.s:16687  .progmem.data:0000146e __c.22
     /tmp/cclVlxlC.s:11287  .text.startup:00000756 .Loc.2320
     /tmp/cclVlxlC.s:16683  .progmem.data:00001453 __c.21
     /tmp/cclVlxlC.s:11298  .text.startup:00000764 .Loc.2321
     /tmp/cclVlxlC.s:11299  .text.startup:00000764 .Loc.2322
     /tmp/cclVlxlC.s:11300  .text.startup:00000764 .Loc.2323
     /tmp/cclVlxlC.s:11302  .text.startup:00000768 .Loc.2324
     /tmp/cclVlxlC.s:11304  .text.startup:0000076a .Loc.2325
     /tmp/cclVlxlC.s:11310  .text.startup:00000776 .Loc.2326
     /tmp/cclVlxlC.s:11311  .text.startup:00000776 .Loc.2327
     /tmp/cclVlxlC.s:11312  .text.startup:00000776 .Loc.2328
     /tmp/cclVlxlC.s:11323  .text.startup:00000786 .Loc.2329
     /tmp/cclVlxlC.s:11324  .text.startup:00000786 .Loc.2330
     /tmp/cclVlxlC.s:11327  .text.startup:0000078c .Loc.2331
     /tmp/cclVlxlC.s:16676  .bss:000000b9 _oem
     /tmp/cclVlxlC.s:16674  .bss:000000b3 _product
     /tmp/cclVlxlC.s:11338  .text.startup:000007a0 .Loc.2332
     /tmp/cclVlxlC.s:11340  .text.startup:000007a2 .Loc.2333
     /tmp/cclVlxlC.s:11344  .text.startup:000007a6 .Loc.2334
     /tmp/cclVlxlC.s:11345  .text.startup:000007a6 .Loc.2335
     /tmp/cclVlxlC.s:11348  .text.startup:000007ac .Loc.2336
     /tmp/cclVlxlC.s:11351  .text.startup:000007b2 L0
     /tmp/cclVlxlC.s:11387  .text.startup:000007d2 .Loc.2337
     /tmp/cclVlxlC.s:11388  .text.startup:000007d2 .Loc.2338
     /tmp/cclVlxlC.s:11396  .text.startup:000007de .Loc.2339
     /tmp/cclVlxlC.s:11397  .text.startup:000007de .Loc.2340
     /tmp/cclVlxlC.s:16678  .bss:000000bc _manufacturer
     /tmp/cclVlxlC.s:11399  .text.startup:000007e2 .Loc.2341
     /tmp/cclVlxlC.s:11400  .text.startup:000007e2 .Loc.2342
     /tmp/cclVlxlC.s:11401  .text.startup:000007e2 .Loc.2343
     /tmp/cclVlxlC.s:11405  .text.startup:000007e8 .Loc.2344
     /tmp/cclVlxlC.s:11406  .text.startup:000007e8 .Loc.2345
     /tmp/cclVlxlC.s:11409  .text.startup:000007ee .Loc.2346
     /tmp/cclVlxlC.s:11410  .text.startup:000007ee .Loc.2347
     /tmp/cclVlxlC.s:11413  .text.startup:000007f0 .Loc.2348
     /tmp/cclVlxlC.s:11414  .text.startup:000007f0 .Loc.2349
     /tmp/cclVlxlC.s:11418  .text.startup:000007f6 .Loc.2350
     /tmp/cclVlxlC.s:11419  .text.startup:000007f6 .Loc.2351
     /tmp/cclVlxlC.s:11423  .text.startup:000007fc .Loc.2352
     /tmp/cclVlxlC.s:11432  .text.startup:00000808 .Loc.2353
     /tmp/cclVlxlC.s:11436  .text.startup:0000080c .Loc.2354
     /tmp/cclVlxlC.s:11437  .text.startup:0000080c .Loc.2355
     /tmp/cclVlxlC.s:11440  .text.startup:00000810 .Loc.2356
     /tmp/cclVlxlC.s:11441  .text.startup:00000810 .Loc.2357
     /tmp/cclVlxlC.s:11443  .text.startup:00000812 .Loc.2358
     /tmp/cclVlxlC.s:11449  .text.startup:0000081a .Loc.2359
     /tmp/cclVlxlC.s:11450  .text.startup:0000081a .Loc.2360
     /tmp/cclVlxlC.s:16672  .bss:000000b2 _revision
     /tmp/cclVlxlC.s:11452  .text.startup:0000081e .Loc.2361
     /tmp/cclVlxlC.s:11453  .text.startup:0000081e .Loc.2362
     /tmp/cclVlxlC.s:11454  .text.startup:0000081e .Loc.2363
     /tmp/cclVlxlC.s:11458  .text.startup:00000824 .Loc.2364
     /tmp/cclVlxlC.s:11459  .text.startup:00000824 .Loc.2365
     /tmp/cclVlxlC.s:11462  .text.startup:0000082a .Loc.2366
     /tmp/cclVlxlC.s:11463  .text.startup:0000082a .Loc.2367
     /tmp/cclVlxlC.s:11467  .text.startup:0000082e .Loc.2368
     /tmp/cclVlxlC.s:11468  .text.startup:0000082e .Loc.2369
     /tmp/cclVlxlC.s:11472  .text.startup:00000834 .Loc.2370
     /tmp/cclVlxlC.s:11483  .text.startup:00000844 .Loc.2371
     /tmp/cclVlxlC.s:16670  .bss:000000ae _serial
     /tmp/cclVlxlC.s:11496  .text.startup:0000086c .Loc.2372
     /tmp/cclVlxlC.s:11497  .text.startup:0000086c .Loc.2373
     /tmp/cclVlxlC.s:11499  .text.startup:0000086e .Loc.2374
     /tmp/cclVlxlC.s:11508  .text.startup:0000087c .Loc.2375
     /tmp/cclVlxlC.s:11509  .text.startup:0000087c .Loc.2376
     /tmp/cclVlxlC.s:11512  .text.startup:00000880 .Loc.2377
     /tmp/cclVlxlC.s:16668  .bss:000000ad _manufacturing_year
     /tmp/cclVlxlC.s:11514  .text.startup:00000884 .Loc.2378
     /tmp/cclVlxlC.s:11515  .text.startup:00000884 .Loc.2379
     /tmp/cclVlxlC.s:11516  .text.startup:00000884 .Loc.2380
     /tmp/cclVlxlC.s:11520  .text.startup:0000088a .Loc.2381
     /tmp/cclVlxlC.s:11521  .text.startup:0000088a .Loc.2382
     /tmp/cclVlxlC.s:11524  .text.startup:00000890 .Loc.2383
     /tmp/cclVlxlC.s:11526  .text.startup:00000890 .Loc.2384
     /tmp/cclVlxlC.s:11527  .text.startup:00000890 .Loc.2385
     /tmp/cclVlxlC.s:11534  .text.startup:000008a0 .Loc.2386
     /tmp/cclVlxlC.s:11535  .text.startup:000008a0 .Loc.2387
     /tmp/cclVlxlC.s:11537  .text.startup:000008a2 .Loc.2388
     /tmp/cclVlxlC.s:16666  .bss:000000ac _manufacturing_month
     /tmp/cclVlxlC.s:11539  .text.startup:000008a6 .Loc.2389
     /tmp/cclVlxlC.s:11540  .text.startup:000008a6 .Loc.2390
     /tmp/cclVlxlC.s:11541  .text.startup:000008a6 .Loc.2391
     /tmp/cclVlxlC.s:11550  .text.startup:000008b6 .Loc.2392
     /tmp/cclVlxlC.s:11555  .text.startup:000008bc .Loc.2393
     /tmp/cclVlxlC.s:11557  .text.startup:000008be .Loc.2394
     /tmp/cclVlxlC.s:11569  .text.startup:000008d2 .Loc.2395
     /tmp/cclVlxlC.s:11570  .text.startup:000008d2 .Loc.2396
     /tmp/cclVlxlC.s:11571  .text.startup:000008d2 .Loc.2397
     /tmp/cclVlxlC.s:11572  .text.startup:000008d2 .Loc.2398
     /tmp/cclVlxlC.s:11573  .text.startup:000008d2 .Loc.2399
     /tmp/cclVlxlC.s:11579  .text.startup:000008de .Loc.2400
     /tmp/cclVlxlC.s:11580  .text.startup:000008de .Loc.2401
     /tmp/cclVlxlC.s:11581  .text.startup:000008de .Loc.2402
     /tmp/cclVlxlC.s:11585  .text.startup:000008e2 .Loc.2403
     /tmp/cclVlxlC.s:11586  .text.startup:000008e2 .Loc.2404
     /tmp/cclVlxlC.s:11589  .text.startup:000008e8 .Loc.2405
     /tmp/cclVlxlC.s:11592  .text.startup:000008ec .Loc.2406
     /tmp/cclVlxlC.s:11594  .text.startup:000008ee .Loc.2407
     /tmp/cclVlxlC.s:11596  .text.startup:000008f0 .Loc.2408
     /tmp/cclVlxlC.s:11598  .text.startup:000008f2 .Loc.2409
     /tmp/cclVlxlC.s:11601  .text.startup:000008f4 .Loc.2410
     /tmp/cclVlxlC.s:11602  .text.startup:000008f4 .Loc.2411
     /tmp/cclVlxlC.s:11605  .text.startup:000008fa .Loc.2412
     /tmp/cclVlxlC.s:11606  .text.startup:000008fa .Loc.2413
     /tmp/cclVlxlC.s:11609  .text.startup:000008fe .Loc.2414
     /tmp/cclVlxlC.s:11610  .text.startup:000008fe .Loc.2415
     /tmp/cclVlxlC.s:11616  .text.startup:00000908 .Loc.2416
     /tmp/cclVlxlC.s:11617  .text.startup:00000908 .Loc.2417
     /tmp/cclVlxlC.s:11618  .text.startup:00000908 .Loc.2418
     /tmp/cclVlxlC.s:11623  .text.startup:0000090e .Loc.2419
     /tmp/cclVlxlC.s:11624  .text.startup:0000090e .Loc.2420
     /tmp/cclVlxlC.s:11632  .text.startup:0000091a .Loc.2421
     /tmp/cclVlxlC.s:11633  .text.startup:0000091a .Loc.2422
     /tmp/cclVlxlC.s:11637  .text.startup:00000920 .Loc.2423
     /tmp/cclVlxlC.s:11638  .text.startup:00000920 .Loc.2424
     /tmp/cclVlxlC.s:11641  .text.startup:00000924 .Loc.2425
     /tmp/cclVlxlC.s:11643  .text.startup:00000926 .Loc.2426
     /tmp/cclVlxlC.s:11644  .text.startup:00000926 .Loc.2427
     /tmp/cclVlxlC.s:16664  .bss:000000ab _flag_copy
     /tmp/cclVlxlC.s:11647  .text.startup:0000092a .Loc.2428
     /tmp/cclVlxlC.s:11648  .text.startup:0000092a .Loc.2429
     /tmp/cclVlxlC.s:11650  .text.startup:0000092c .Loc.2430
     /tmp/cclVlxlC.s:11651  .text.startup:0000092c .Loc.2431
     /tmp/cclVlxlC.s:16662  .bss:000000aa _flag_write_protect
     /tmp/cclVlxlC.s:11654  .text.startup:00000930 .Loc.2432
     /tmp/cclVlxlC.s:11655  .text.startup:00000930 .Loc.2433
     /tmp/cclVlxlC.s:11657  .text.startup:00000932 .Loc.2434
     /tmp/cclVlxlC.s:11658  .text.startup:00000932 .Loc.2435
     /tmp/cclVlxlC.s:16660  .bss:000000a9 _flag_write_protect_temp
     /tmp/cclVlxlC.s:11661  .text.startup:00000936 .Loc.2436
     /tmp/cclVlxlC.s:11662  .text.startup:00000936 .Loc.2437
     /tmp/cclVlxlC.s:11669  .text.startup:00000942 .Loc.2438
     /tmp/cclVlxlC.s:16658  .bss:000000a8 _format
     /tmp/cclVlxlC.s:11671  .text.startup:00000946 .Loc.2439
     /tmp/cclVlxlC.s:11672  .text.startup:00000946 .Loc.2440
     /tmp/cclVlxlC.s:11673  .text.startup:00000946 .Loc.2441
     /tmp/cclVlxlC.s:11678  .text.startup:0000094c .Loc.2442
     /tmp/cclVlxlC.s:11679  .text.startup:0000094c .Loc.2443
     /tmp/cclVlxlC.s:11681  .text.startup:00000950 L0
     /tmp/cclVlxlC.s:11683  .text.startup:00000952 .Loc.2444
     /tmp/cclVlxlC.s:11686  .text.startup:00000958 L0
     /tmp/cclVlxlC.s:11691  .text.startup:00000962 L0
     /tmp/cclVlxlC.s:11694  .text.startup:00000964 .Loc.2445
     /tmp/cclVlxlC.s:11696  .text.startup:00000966 .Loc.2446
     /tmp/cclVlxlC.s:11700  .text.startup:0000096c .Loc.2447
     /tmp/cclVlxlC.s:11703  .text.startup:0000096e .Loc.2448
     /tmp/cclVlxlC.s:11706  .text.startup:0000096e .Loc.2449
     /tmp/cclVlxlC.s:11708  .text.startup:0000096e .Loc.2450
     /tmp/cclVlxlC.s:16611  .progmem.data:00001338 __c.18
     /tmp/cclVlxlC.s:16655  .progmem.data:0000143d __c.16
     /tmp/cclVlxlC.s:11729  .text.startup:0000098e .Loc.2451
     /tmp/cclVlxlC.s:16651  .progmem.data:00001427 __c.15
     /tmp/cclVlxlC.s:11744  .text.startup:000009a2 .Loc.2452
     /tmp/cclVlxlC.s:16647  .progmem.data:0000140f __c.14
     /tmp/cclVlxlC.s:11759  .text.startup:000009b8 .Loc.2453
     /tmp/cclVlxlC.s:16643  .progmem.data:000013f9 __c.13
     /tmp/cclVlxlC.s:11775  .text.startup:000009ce .Loc.2454
     /tmp/cclVlxlC.s:16639  .progmem.data:000013e3 __c.12
     /tmp/cclVlxlC.s:11791  .text.startup:000009e4 .Loc.2455
     /tmp/cclVlxlC.s:11792  .text.startup:000009e4 .Loc.2456
     /tmp/cclVlxlC.s:11794  .text.startup:000009e8 .Loc.2457
     /tmp/cclVlxlC.s:11802  .text.startup:000009f2 .Loc.2458
     /tmp/cclVlxlC.s:11805  .text.startup:000009f6 .Loc.2459
     /tmp/cclVlxlC.s:16635  .progmem.data:000013ca __c.11
     /tmp/cclVlxlC.s:11820  .text.startup:00000a0a .Loc.2460
     /tmp/cclVlxlC.s:16631  .progmem.data:000013af __c.10
     /tmp/cclVlxlC.s:11851  .text.startup:00000a40 .Loc.2461
     /tmp/cclVlxlC.s:16627  .progmem.data:00001394 __c.9
     /tmp/cclVlxlC.s:11874  .text.startup:00000a64 .Loc.2462
     /tmp/cclVlxlC.s:16536  .bss:000000a4 _capacity
     /tmp/cclVlxlC.s:16623  .progmem.data:00001376 __c.8
     /tmp/cclVlxlC.s:11896  .text.startup:00000a8a .Loc.2463
     /tmp/cclVlxlC.s:16619  .progmem.data:00001357 __c.7.lto_priv.1
     /tmp/cclVlxlC.s:11927  .text.startup:00000ac0 .Loc.2464
     /tmp/cclVlxlC.s:16615  .progmem.data:0000133d __c.6.lto_priv.1
     /tmp/cclVlxlC.s:11942  .text.startup:00000ad6 .Loc.2465
     /tmp/cclVlxlC.s:11955  .text.startup:00000aee .Loc.2466
     /tmp/cclVlxlC.s:11958  .text.startup:00000af6 L0
     /tmp/cclVlxlC.s:16595  .progmem.data:000012fe __c.4.lto_priv.1
     /tmp/cclVlxlC.s:11963  .text.startup:00000afc .Loc.2467
     /tmp/cclVlxlC.s:11966  .text.startup:00000b04 L0
     /tmp/cclVlxlC.s:16587  .progmem.data:000012df __c.2.lto_priv.3
     /tmp/cclVlxlC.s:16591  .progmem.data:000012e6 __c.0.lto_priv.8
     /tmp/cclVlxlC.s:11993  .text.startup:00000b22 .Loc.2468
     /tmp/cclVlxlC.s:11995  .text.startup:00000b26 .Loc.2469
     /tmp/cclVlxlC.s:11996  .text.startup:00000b26 .Loc.2470
     /tmp/cclVlxlC.s:11997  .text.startup:00000b26 .Loc.2471
     /tmp/cclVlxlC.s:11998  .text.startup:00000b26 .Loc.2472
     /tmp/cclVlxlC.s:16705  .progmem.data:000014a1 __c.1.lto_priv.0
     /tmp/cclVlxlC.s:12009  .text.startup:00000b36 .Loc.2473
     /tmp/cclVlxlC.s:12012  .text.startup:00000b36 .Loc.2474
     /tmp/cclVlxlC.s:12014  .text.startup:00000b36 .Loc.2475
     /tmp/cclVlxlC.s:12015  .text.startup:00000b36 .Loc.2476
     /tmp/cclVlxlC.s:16696  .bss:000000bf _memory_size
     /tmp/cclVlxlC.s:12024  .text.startup:00000b4e .Loc.2477
     /tmp/cclVlxlC.s:12025  .text.startup:00000b4e .Loc.2478
     /tmp/cclVlxlC.s:12030  .text.startup:00000b5e .Loc.2479
     /tmp/cclVlxlC.s:12031  .text.startup:00000b5e .Loc.2480
     /tmp/cclVlxlC.s:12036  .text.startup:00000b6e .Loc.2481
     /tmp/cclVlxlC.s:12037  .text.startup:00000b6e .Loc.2482
     /tmp/cclVlxlC.s:12042  .text.startup:00000b7e .Loc.2483
     /tmp/cclVlxlC.s:12045  .text.startup:00000b7e .Loc.2484
     /tmp/cclVlxlC.s:12047  .text.startup:00000b7e .Loc.2485
     /tmp/cclVlxlC.s:12056  .text.startup:00000b96 .Loc.2486
     /tmp/cclVlxlC.s:12061  .text.startup:00000ba6 .Loc.2487
     /tmp/cclVlxlC.s:12069  .text.startup:00000bb6 .Loc.2488
     /tmp/cclVlxlC.s:12071  .text.startup:00000bba .Loc.2489
     /tmp/cclVlxlC.s:12083  .text.startup:00000bcc .Loc.2490
     /tmp/cclVlxlC.s:12087  .text.startup:00000bd4 .Loc.2491
     /tmp/cclVlxlC.s:12091  .text.startup:00000bdc .Loc.2492
     /tmp/cclVlxlC.s:12099  .text.startup:00000be0 .Loc.2493
     /tmp/cclVlxlC.s:12100  .text.startup:00000be0 .Loc.2494
     /tmp/cclVlxlC.s:12101  .text.startup:00000be0 .Loc.2495
     /tmp/cclVlxlC.s:12102  .text.startup:00000be0 .Loc.2496
     /tmp/cclVlxlC.s:16701  .progmem.data:00001495 __c.0.lto_priv.0
     /tmp/cclVlxlC.s:12118  .text.startup:00000bf6 .Loc.2497
     /tmp/cclVlxlC.s:12119  .text.startup:00000bf6 .Loc.2498
     /tmp/cclVlxlC.s:12120  .text.startup:00000bf6 .Loc.2499
     /tmp/cclVlxlC.s:12126  .text.startup:00000bf8 .Loc.2500
     /tmp/cclVlxlC.s:12127  .text.startup:00000bf8 .Loc.2501
     /tmp/cclVlxlC.s:12130  .text.startup:00000bfa .Loc.2502
     /tmp/cclVlxlC.s:12131  .text.startup:00000bfa .Loc.2503
     /tmp/cclVlxlC.s:12132  .text.startup:00000bfa .Loc.2504
     /tmp/cclVlxlC.s:12136  .text.startup:00000c00 .Loc.2505
     /tmp/cclVlxlC.s:12138  .text.startup:00000c02 .Loc.2506
     /tmp/cclVlxlC.s:12139  .text.startup:00000c02 .Loc.2507
     /tmp/cclVlxlC.s:12143  .text.startup:00000c08 .Loc.2508
     /tmp/cclVlxlC.s:12152  .text.startup:00000c16 .Loc.2509
     /tmp/cclVlxlC.s:12159  .text.startup:00000c28 .Loc.2510
     /tmp/cclVlxlC.s:12160  .text.startup:00000c28 .Loc.2511
     /tmp/cclVlxlC.s:12163  .text.startup:00000c2c .Loc.2512
     /tmp/cclVlxlC.s:12166  .text.startup:00000c32 L0
     /tmp/cclVlxlC.s:12175  .text.startup:00000c44 L0
     /tmp/cclVlxlC.s:12180  .text.startup:00000c4c .Loc.2513
     /tmp/cclVlxlC.s:12182  .text.startup:00000c4e .Loc.2514
     /tmp/cclVlxlC.s:12185  .text.startup:00000c50 .Loc.2515
     /tmp/cclVlxlC.s:12188  .text.startup:00000c56 L0
     /tmp/cclVlxlC.s:12193  .text.startup:00000c5e .Loc.2516
     /tmp/cclVlxlC.s:12194  .text.startup:00000c5e .Loc.2517
     /tmp/cclVlxlC.s:12199  .text.startup:00000c66 .Loc.2518
     /tmp/cclVlxlC.s:12200  .text.startup:00000c66 .Loc.2519
     /tmp/cclVlxlC.s:12204  .text.startup:00000c6c .Loc.2520
     /tmp/cclVlxlC.s:12210  .text.startup:00000c76 .Loc.2521
     /tmp/cclVlxlC.s:12213  .text.startup:00000c7a .Loc.2522
     /tmp/cclVlxlC.s:12223  .text.startup:00000c88 .Loc.2523
     /tmp/cclVlxlC.s:12232  .text.startup:00000c96 .Loc.2524
     /tmp/cclVlxlC.s:12237  .text.startup:00000ca6 .Loc.2525
     /tmp/cclVlxlC.s:12238  .text.startup:00000ca6 .Loc.2526
     /tmp/cclVlxlC.s:12239  .text.startup:00000ca6 .Loc.2527
     /tmp/cclVlxlC.s:12240  .text.startup:00000ca6 .Loc.2528
     /tmp/cclVlxlC.s:12245  .text.startup:00000cac .Loc.2529
     /tmp/cclVlxlC.s:12246  .text.startup:00000cac .Loc.2530
     /tmp/cclVlxlC.s:12249  .text.startup:00000cb0 .Loc.2531
     /tmp/cclVlxlC.s:12250  .text.startup:00000cb0 .Loc.2532
     /tmp/cclVlxlC.s:12251  .text.startup:00000cb0 .Loc.2533
     /tmp/cclVlxlC.s:12252  .text.startup:00000cb0 .Loc.2534
     /tmp/cclVlxlC.s:12257  .text.startup:00000cb6 .Loc.2535
     /tmp/cclVlxlC.s:12258  .text.startup:00000cb6 .Loc.2536
     /tmp/cclVlxlC.s:12262  .text.startup:00000cbc .Loc.2537
     /tmp/cclVlxlC.s:12263  .text.startup:00000cbc .Loc.2538
     /tmp/cclVlxlC.s:12266  .text.startup:00000cc0 .Loc.2539
     /tmp/cclVlxlC.s:12267  .text.startup:00000cc0 .Loc.2540
     /tmp/cclVlxlC.s:12268  .text.startup:00000cc0 .Loc.2541
     /tmp/cclVlxlC.s:12269  .text.startup:00000cc0 .Loc.2542
     /tmp/cclVlxlC.s:12274  .text.startup:00000cc6 .Loc.2543
     /tmp/cclVlxlC.s:12275  .text.startup:00000cc6 .Loc.2544
     /tmp/cclVlxlC.s:12277  .text.startup:00000cc8 .Loc.2545
     /tmp/cclVlxlC.s:12278  .text.startup:00000cc8 .Loc.2546
     /tmp/cclVlxlC.s:12283  .text.startup:00000cd0 .Loc.2547
     /tmp/cclVlxlC.s:12284  .text.startup:00000cd0 .Loc.2548
     /tmp/cclVlxlC.s:12285  .text.startup:00000cd0 .Loc.2549
     /tmp/cclVlxlC.s:12286  .text.startup:00000cd0 .Loc.2550
     /tmp/cclVlxlC.s:12291  .text.startup:00000cd6 .Loc.2551
     /tmp/cclVlxlC.s:12292  .text.startup:00000cd6 .Loc.2552
     /tmp/cclVlxlC.s:12297  .text.startup:00000cde .Loc.2553
     /tmp/cclVlxlC.s:12299  .text.startup:00000ce0 .Loc.2554
     /tmp/cclVlxlC.s:12301  .text.startup:00000ce2 .Loc.2555
     /tmp/cclVlxlC.s:12302  .text.startup:00000ce2 .Loc.2556
     /tmp/cclVlxlC.s:12303  .text.startup:00000ce2 .Loc.2557
     /tmp/cclVlxlC.s:12304  .text.startup:00000ce2 .Loc.2558
     /tmp/cclVlxlC.s:12309  .text.startup:00000ce8 .Loc.2559
     /tmp/cclVlxlC.s:12310  .text.startup:00000ce8 .Loc.2560
     /tmp/cclVlxlC.s:12311  .text.startup:00000ce8 .Loc.2561
     /tmp/cclVlxlC.s:12315  .text.startup:00000cee .Loc.2562
     /tmp/cclVlxlC.s:12316  .text.startup:00000cee .Loc.2563
     /tmp/cclVlxlC.s:12317  .text.startup:00000cee .Loc.2564
     /tmp/cclVlxlC.s:12318  .text.startup:00000cee .Loc.2565
     /tmp/cclVlxlC.s:12326  .text.startup:00000cf4 .Loc.2566
     /tmp/cclVlxlC.s:16607  .progmem.data:00001335 __c.17
     /tmp/cclVlxlC.s:12331  .text.startup:00000cfa .Loc.2567
     /tmp/cclVlxlC.s:16603  .progmem.data:00001319 __c.5.lto_priv.1
     /tmp/cclVlxlC.s:12336  .text.startup:00000d00 .Loc.2568
     /tmp/cclVlxlC.s:16599  .progmem.data:0000130e __c.3.lto_priv.1
     /tmp/cclVlxlC.s:12341  .text.startup:00000d06 .Loc.2569
     /tmp/cclVlxlC.s:16583  .progmem.data:000012d4 __c.1.lto_priv.4
     /tmp/cclVlxlC.s:12349  .text.startup:00000d0c L0
     /tmp/cclVlxlC.s:12358  .text:000028a4 __vector_1
     /tmp/cclVlxlC.s:12360  .text:000028a4 .Loc.2570
     /tmp/cclVlxlC.s:12361  .text:000028a4 L0
     /tmp/cclVlxlC.s:12439  .text:000028de .Loc.2571
     /tmp/cclVlxlC.s:12442  .text:000028de .Loc.2572
     /tmp/cclVlxlC.s:12444  .text:000028de .Loc.2573
     /tmp/cclVlxlC.s:12445  .text:000028de .Loc.2574
     /tmp/cclVlxlC.s:15170  .bss:000000a2 _bit
     /tmp/cclVlxlC.s:12447  .text:000028e2 .Loc.2575
     /tmp/cclVlxlC.s:12450  .text:000028e6 .Loc.2576
     /tmp/cclVlxlC.s:12451  .text:000028e6 .Loc.2577
     /tmp/cclVlxlC.s:15168  .bss:000000a1 _byte
     /tmp/cclVlxlC.s:12454  .text:000028ea .Loc.2578
     /tmp/cclVlxlC.s:12458  .text:000028f0 .Loc.2579
     /tmp/cclVlxlC.s:12463  .text:000028f4 .Loc.2580
     /tmp/cclVlxlC.s:12497  .text:00002930 .Loc.2581
     /tmp/cclVlxlC.s:12498  .text:00002930 .Loc.2582
     /tmp/cclVlxlC.s:12501  .text:00002934 .Loc.2583
     /tmp/cclVlxlC.s:12504  .text:00002938 .Loc.2584
     /tmp/cclVlxlC.s:12507  .text:00002938 .Loc.2585
     /tmp/cclVlxlC.s:12509  .text:00002938 .Loc.2586
     /tmp/cclVlxlC.s:12512  .text:00002938 .Loc.2587
     /tmp/cclVlxlC.s:12515  .text:0000293c .Loc.2588
     /tmp/cclVlxlC.s:12516  .text:0000293c .Loc.2589
     /tmp/cclVlxlC.s:12519  .text:00002940 .Loc.2590
     /tmp/cclVlxlC.s:12528  .text:0000294c .Loc.2591
     /tmp/cclVlxlC.s:12534  .text:00002958 .Loc.2592
     /tmp/cclVlxlC.s:12535  .text:00002958 .Loc.2593
     /tmp/cclVlxlC.s:12537  .text:0000295c L0
     /tmp/cclVlxlC.s:12539  .text:0000295e .Loc.2594
     /tmp/cclVlxlC.s:12544  .text:00002962 .Loc.2595
     /tmp/cclVlxlC.s:12546  .text:00002962 .Loc.2596
     /tmp/cclVlxlC.s:12547  .text:00002962 .Loc.2597
     /tmp/cclVlxlC.s:12548  .text:00002962 .Loc.2598
     /tmp/cclVlxlC.s:12549  .text:00002962 .Loc.2599
     /tmp/cclVlxlC.s:12550  .text:00002962 .Loc.2600
     /tmp/cclVlxlC.s:12551  .text:00002962 .Loc.2601
     /tmp/cclVlxlC.s:15054  .bss:000000a0 state.1
     /tmp/cclVlxlC.s:12553  .text:00002966 .Loc.2602
     /tmp/cclVlxlC.s:12556  .text:0000296a .Loc.2603
     /tmp/cclVlxlC.s:12557  .text:0000296a .Loc.2604
     /tmp/cclVlxlC.s:12561  .text:0000296c .Loc.2605
     /tmp/cclVlxlC.s:12563  .text:00002970 .Loc.2606
     /tmp/cclVlxlC.s:12567  .text:00002972 .Loc.2607
     /tmp/cclVlxlC.s:12568  .text:00002972 .Loc.2608
     /tmp/cclVlxlC.s:12571  .text:00002976 .Loc.2609
     /tmp/cclVlxlC.s:12572  .text:00002976 .Loc.2610
     /tmp/cclVlxlC.s:12576  .text:0000297a .Loc.2611
     /tmp/cclVlxlC.s:12577  .text:0000297a .Loc.2612
     /tmp/cclVlxlC.s:12580  .text:0000297e .Loc.2613
     /tmp/cclVlxlC.s:12583  .text:00002980 .Loc.2614
     /tmp/cclVlxlC.s:12588  .text:00002988 .Loc.2615
     /tmp/cclVlxlC.s:12589  .text:00002988 .Loc.2616
     /tmp/cclVlxlC.s:12591  .text:0000298c .Loc.2617
     /tmp/cclVlxlC.s:12594  .text:0000298c .Loc.2618
     /tmp/cclVlxlC.s:12595  .text:0000298c .Loc.2619
     /tmp/cclVlxlC.s:12601  .text:00002994 .Loc.2620
     /tmp/cclVlxlC.s:15057  .rodata:00000068 CSWTCH.21
     /tmp/cclVlxlC.s:12611  .text:000029a4 .Loc.2621
     /tmp/cclVlxlC.s:12612  .text:000029a4 .Loc.2622
     /tmp/cclVlxlC.s:12614  .text:000029a8 .Loc.2623
     /tmp/cclVlxlC.s:12615  .text:000029a8 .Loc.2624
     /tmp/cclVlxlC.s:12620  .text:000029ac .Loc.2625
     /tmp/cclVlxlC.s:12621  .text:000029ac .Loc.2626
     /tmp/cclVlxlC.s:12622  .text:000029ac .Loc.2627
     /tmp/cclVlxlC.s:12623  .text:000029ac .Loc.2628
     /tmp/cclVlxlC.s:12628  .text:000029b6 L0
     /tmp/cclVlxlC.s:12632  .text:000029b8 .Loc.2629
     /tmp/cclVlxlC.s:12638  .text:000029b8 .Loc.2630
     /tmp/cclVlxlC.s:12648  .text:000029c0 .Loc.2631
     /tmp/cclVlxlC.s:12654  .text:000029c8 .Loc.2632
     /tmp/cclVlxlC.s:12655  .text:000029c8 .Loc.2633
     /tmp/cclVlxlC.s:14965  .bss:0000009c mods.0
     /tmp/cclVlxlC.s:12660  .text:000029d8 .Loc.2634
     /tmp/cclVlxlC.s:12664  .text:000029e0 .Loc.2635
     /tmp/cclVlxlC.s:12665  .text:000029e0 .Loc.2636
     /tmp/cclVlxlC.s:12670  .text:000029e8 .Loc.2637
     /tmp/cclVlxlC.s:12683  .text:00002a02 .Loc.2638
     /tmp/cclVlxlC.s:12685  .text:00002a02 .Loc.2639
     /tmp/cclVlxlC.s:12688  .text:00002a04 .Loc.2640
     /tmp/cclVlxlC.s:12838  .text:00002a1a .Loc.2641
     /tmp/cclVlxlC.s:12839  .text:00002a1a .Loc.2642
     /tmp/cclVlxlC.s:12849  .text:00002a32 .Loc.2643
     /tmp/cclVlxlC.s:12850  .text:00002a32 .Loc.2644
     /tmp/cclVlxlC.s:12856  .text:00002a36 .Loc.2645
     /tmp/cclVlxlC.s:12858  .text:00002a36 .Loc.2646
     /tmp/cclVlxlC.s:12862  .text:00002a36 .Loc.2647
     /tmp/cclVlxlC.s:12864  .text:00002a36 .Loc.2648
     /tmp/cclVlxlC.s:12865  .text:00002a36 .Loc.2649
     /tmp/cclVlxlC.s:12871  .text:00002a3e .Loc.2650
     /tmp/cclVlxlC.s:12874  .text:00002a3e .Loc.2651
     /tmp/cclVlxlC.s:12875  .text:00002a3e .Loc.2652
     /tmp/cclVlxlC.s:12880  .text:00002a46 .Loc.2653
     /tmp/cclVlxlC.s:12885  .text:00002a50 L0
     /tmp/cclVlxlC.s:12887  .text:00002a52 .Loc.2654
     /tmp/cclVlxlC.s:12888  .text:00002a52 .Loc.2655
     /tmp/cclVlxlC.s:12893  .text:00002a5a .Loc.2656
     /tmp/cclVlxlC.s:12898  .text:00002a64 L0
     /tmp/cclVlxlC.s:12900  .text:00002a66 .Loc.2657
     /tmp/cclVlxlC.s:12901  .text:00002a66 .Loc.2658
     /tmp/cclVlxlC.s:12906  .text:00002a6e .Loc.2659
     /tmp/cclVlxlC.s:12911  .text:00002a78 L0
     /tmp/cclVlxlC.s:12913  .text:00002a7a .Loc.2660
     /tmp/cclVlxlC.s:12914  .text:00002a7a .Loc.2661
     /tmp/cclVlxlC.s:12919  .text:00002a82 .Loc.2662
     /tmp/cclVlxlC.s:12924  .text:00002a8c L0
     /tmp/cclVlxlC.s:12926  .text:00002a8e .Loc.2663
     /tmp/cclVlxlC.s:12933  .text:00002a9c L0
     /tmp/cclVlxlC.s:12935  .text:00002aa0 L0
     /tmp/cclVlxlC.s:12942  .text:00002aae L0
     /tmp/cclVlxlC.s:12949  .text:00002abc L0
     /tmp/cclVlxlC.s:12951  .text:00002abe .Loc.2664
     /tmp/cclVlxlC.s:12952  .text:00002abe .Loc.2665
     /tmp/cclVlxlC.s:12958  .text:00002ac8 .Loc.2666
     /tmp/cclVlxlC.s:12962  .text:00002ad0 L0
     /tmp/cclVlxlC.s:12965  .text:00002ad2 .Loc.2667
     /tmp/cclVlxlC.s:12966  .text:00002ad2 .Loc.2668
     /tmp/cclVlxlC.s:12974  .text:00002ade .Loc.2669
     /tmp/cclVlxlC.s:12975  .text:00002ade .Loc.2670
     /tmp/cclVlxlC.s:12980  .text:00002ae8 L0
     /tmp/cclVlxlC.s:12982  .text:00002aea .Loc.2671
     /tmp/cclVlxlC.s:12983  .text:00002aea .Loc.2672
     /tmp/cclVlxlC.s:12988  .text:00002af4 L0
     /tmp/cclVlxlC.s:12990  .text:00002af6 .Loc.2673
     /tmp/cclVlxlC.s:12996  .text:00002afe .Loc.2674
     /tmp/cclVlxlC.s:13000  .text:00002b00 .Loc.2675
     /tmp/cclVlxlC.s:13004  .text:00002b00 .Loc.2676
     /tmp/cclVlxlC.s:13005  .text:00002b00 .Loc.2677
     /tmp/cclVlxlC.s:13006  .text:00002b00 .Loc.2678
     /tmp/cclVlxlC.s:13008  .text:00002b00 .Loc.2679
     /tmp/cclVlxlC.s:13017  .text:00002b0a .Loc.2680
     /tmp/cclVlxlC.s:13018  .text:00002b0a .Loc.2681
     /tmp/cclVlxlC.s:13019  .text:00002b0a .Loc.2682
     /tmp/cclVlxlC.s:13021  .text:00002b0a .Loc.2683
     /tmp/cclVlxlC.s:13030  .text:00002b14 .Loc.2684
     /tmp/cclVlxlC.s:13031  .text:00002b14 .Loc.2685
     /tmp/cclVlxlC.s:13032  .text:00002b14 .Loc.2686
     /tmp/cclVlxlC.s:13034  .text:00002b14 .Loc.2687
     /tmp/cclVlxlC.s:13043  .text:00002b1e .Loc.2688
     /tmp/cclVlxlC.s:13044  .text:00002b1e .Loc.2689
     /tmp/cclVlxlC.s:13045  .text:00002b1e .Loc.2690
     /tmp/cclVlxlC.s:13047  .text:00002b1e .Loc.2691
     /tmp/cclVlxlC.s:13056  .text:00002b28 .Loc.2692
     /tmp/cclVlxlC.s:13057  .text:00002b28 .Loc.2693
     /tmp/cclVlxlC.s:13058  .text:00002b28 .Loc.2694
     /tmp/cclVlxlC.s:13060  .text:00002b28 .Loc.2695
     /tmp/cclVlxlC.s:13069  .text:00002b32 .Loc.2696
     /tmp/cclVlxlC.s:13070  .text:00002b32 .Loc.2697
     /tmp/cclVlxlC.s:13071  .text:00002b32 .Loc.2698
     /tmp/cclVlxlC.s:13073  .text:00002b32 .Loc.2699
     /tmp/cclVlxlC.s:13082  .text:00002b3c .Loc.2700
     /tmp/cclVlxlC.s:13083  .text:00002b3c .Loc.2701
     /tmp/cclVlxlC.s:13084  .text:00002b3c .Loc.2702
     /tmp/cclVlxlC.s:13086  .text:00002b3c .Loc.2703
     /tmp/cclVlxlC.s:13095  .text:00002b46 .Loc.2704
     /tmp/cclVlxlC.s:13096  .text:00002b46 .Loc.2705
     /tmp/cclVlxlC.s:13097  .text:00002b46 .Loc.2706
     /tmp/cclVlxlC.s:13099  .text:00002b46 .Loc.2707
     /tmp/cclVlxlC.s:13108  .text:00002b50 .Loc.2708
     /tmp/cclVlxlC.s:13109  .text:00002b50 .Loc.2709
     /tmp/cclVlxlC.s:13110  .text:00002b50 .Loc.2710
     /tmp/cclVlxlC.s:13112  .text:00002b50 .Loc.2711
     /tmp/cclVlxlC.s:13121  .text:00002b5a .Loc.2712
     /tmp/cclVlxlC.s:13122  .text:00002b5a .Loc.2713
     /tmp/cclVlxlC.s:13123  .text:00002b5a .Loc.2714
     /tmp/cclVlxlC.s:13125  .text:00002b5a .Loc.2715
     /tmp/cclVlxlC.s:13134  .text:00002b64 .Loc.2716
     /tmp/cclVlxlC.s:13135  .text:00002b64 .Loc.2717
     /tmp/cclVlxlC.s:13136  .text:00002b64 .Loc.2718
     /tmp/cclVlxlC.s:13138  .text:00002b64 .Loc.2719
     /tmp/cclVlxlC.s:13147  .text:00002b6e .Loc.2720
     /tmp/cclVlxlC.s:13148  .text:00002b6e .Loc.2721
     /tmp/cclVlxlC.s:13149  .text:00002b6e .Loc.2722
     /tmp/cclVlxlC.s:13151  .text:00002b6e .Loc.2723
     /tmp/cclVlxlC.s:13160  .text:00002b78 .Loc.2724
     /tmp/cclVlxlC.s:13161  .text:00002b78 .Loc.2725
     /tmp/cclVlxlC.s:13162  .text:00002b78 .Loc.2726
     /tmp/cclVlxlC.s:13164  .text:00002b78 .Loc.2727
     /tmp/cclVlxlC.s:13173  .text:00002b82 .Loc.2728
     /tmp/cclVlxlC.s:13174  .text:00002b82 .Loc.2729
     /tmp/cclVlxlC.s:13175  .text:00002b82 .Loc.2730
     /tmp/cclVlxlC.s:13177  .text:00002b82 .Loc.2731
     /tmp/cclVlxlC.s:13186  .text:00002b8c .Loc.2732
     /tmp/cclVlxlC.s:13187  .text:00002b8c .Loc.2733
     /tmp/cclVlxlC.s:13188  .text:00002b8c .Loc.2734
     /tmp/cclVlxlC.s:13190  .text:00002b8c .Loc.2735
     /tmp/cclVlxlC.s:13199  .text:00002b96 .Loc.2736
     /tmp/cclVlxlC.s:13200  .text:00002b96 .Loc.2737
     /tmp/cclVlxlC.s:13201  .text:00002b96 .Loc.2738
     /tmp/cclVlxlC.s:13203  .text:00002b96 .Loc.2739
     /tmp/cclVlxlC.s:13212  .text:00002ba0 .Loc.2740
     /tmp/cclVlxlC.s:13213  .text:00002ba0 .Loc.2741
     /tmp/cclVlxlC.s:13214  .text:00002ba0 .Loc.2742
     /tmp/cclVlxlC.s:13216  .text:00002ba0 .Loc.2743
     /tmp/cclVlxlC.s:13225  .text:00002baa .Loc.2744
     /tmp/cclVlxlC.s:13226  .text:00002baa .Loc.2745
     /tmp/cclVlxlC.s:13227  .text:00002baa .Loc.2746
     /tmp/cclVlxlC.s:13229  .text:00002baa .Loc.2747
     /tmp/cclVlxlC.s:13238  .text:00002bb4 .Loc.2748
     /tmp/cclVlxlC.s:13239  .text:00002bb4 .Loc.2749
     /tmp/cclVlxlC.s:13240  .text:00002bb4 .Loc.2750
     /tmp/cclVlxlC.s:13242  .text:00002bb4 .Loc.2751
     /tmp/cclVlxlC.s:13251  .text:00002bbe .Loc.2752
     /tmp/cclVlxlC.s:13252  .text:00002bbe .Loc.2753
     /tmp/cclVlxlC.s:13253  .text:00002bbe .Loc.2754
     /tmp/cclVlxlC.s:13255  .text:00002bbe .Loc.2755
     /tmp/cclVlxlC.s:13264  .text:00002bc8 .Loc.2756
     /tmp/cclVlxlC.s:13265  .text:00002bc8 .Loc.2757
     /tmp/cclVlxlC.s:13266  .text:00002bc8 .Loc.2758
     /tmp/cclVlxlC.s:13268  .text:00002bc8 .Loc.2759
     /tmp/cclVlxlC.s:13277  .text:00002bd2 .Loc.2760
     /tmp/cclVlxlC.s:13278  .text:00002bd2 .Loc.2761
     /tmp/cclVlxlC.s:13279  .text:00002bd2 .Loc.2762
     /tmp/cclVlxlC.s:13281  .text:00002bd2 .Loc.2763
     /tmp/cclVlxlC.s:13290  .text:00002bdc .Loc.2764
     /tmp/cclVlxlC.s:13291  .text:00002bdc .Loc.2765
     /tmp/cclVlxlC.s:13292  .text:00002bdc .Loc.2766
     /tmp/cclVlxlC.s:13294  .text:00002bdc .Loc.2767
     /tmp/cclVlxlC.s:13303  .text:00002be6 .Loc.2768
     /tmp/cclVlxlC.s:13304  .text:00002be6 .Loc.2769
     /tmp/cclVlxlC.s:13305  .text:00002be6 .Loc.2770
     /tmp/cclVlxlC.s:13307  .text:00002be6 .Loc.2771
     /tmp/cclVlxlC.s:13316  .text:00002bf0 .Loc.2772
     /tmp/cclVlxlC.s:13317  .text:00002bf0 .Loc.2773
     /tmp/cclVlxlC.s:13318  .text:00002bf0 .Loc.2774
     /tmp/cclVlxlC.s:13320  .text:00002bf0 .Loc.2775
     /tmp/cclVlxlC.s:13329  .text:00002bfa .Loc.2776
     /tmp/cclVlxlC.s:13330  .text:00002bfa .Loc.2777
     /tmp/cclVlxlC.s:13331  .text:00002bfa .Loc.2778
     /tmp/cclVlxlC.s:13333  .text:00002bfa .Loc.2779
     /tmp/cclVlxlC.s:13342  .text:00002c04 .Loc.2780
     /tmp/cclVlxlC.s:13343  .text:00002c04 .Loc.2781
     /tmp/cclVlxlC.s:13344  .text:00002c04 .Loc.2782
     /tmp/cclVlxlC.s:13346  .text:00002c04 .Loc.2783
     /tmp/cclVlxlC.s:13355  .text:00002c0e .Loc.2784
     /tmp/cclVlxlC.s:13356  .text:00002c0e .Loc.2785
     /tmp/cclVlxlC.s:13357  .text:00002c0e .Loc.2786
     /tmp/cclVlxlC.s:13359  .text:00002c0e .Loc.2787
     /tmp/cclVlxlC.s:13368  .text:00002c18 .Loc.2788
     /tmp/cclVlxlC.s:13369  .text:00002c18 .Loc.2789
     /tmp/cclVlxlC.s:13370  .text:00002c18 .Loc.2790
     /tmp/cclVlxlC.s:13372  .text:00002c18 .Loc.2791
     /tmp/cclVlxlC.s:13381  .text:00002c22 .Loc.2792
     /tmp/cclVlxlC.s:13382  .text:00002c22 .Loc.2793
     /tmp/cclVlxlC.s:13383  .text:00002c22 .Loc.2794
     /tmp/cclVlxlC.s:13385  .text:00002c22 .Loc.2795
     /tmp/cclVlxlC.s:13394  .text:00002c2c .Loc.2796
     /tmp/cclVlxlC.s:13395  .text:00002c2c .Loc.2797
     /tmp/cclVlxlC.s:13396  .text:00002c2c .Loc.2798
     /tmp/cclVlxlC.s:13398  .text:00002c2c .Loc.2799
     /tmp/cclVlxlC.s:13407  .text:00002c36 .Loc.2800
     /tmp/cclVlxlC.s:13408  .text:00002c36 .Loc.2801
     /tmp/cclVlxlC.s:13409  .text:00002c36 .Loc.2802
     /tmp/cclVlxlC.s:13411  .text:00002c36 .Loc.2803
     /tmp/cclVlxlC.s:13420  .text:00002c40 .Loc.2804
     /tmp/cclVlxlC.s:13421  .text:00002c40 .Loc.2805
     /tmp/cclVlxlC.s:13422  .text:00002c40 .Loc.2806
     /tmp/cclVlxlC.s:13424  .text:00002c40 .Loc.2807
     /tmp/cclVlxlC.s:13433  .text:00002c4a .Loc.2808
     /tmp/cclVlxlC.s:13434  .text:00002c4a .Loc.2809
     /tmp/cclVlxlC.s:13435  .text:00002c4a .Loc.2810
     /tmp/cclVlxlC.s:13437  .text:00002c4a .Loc.2811
     /tmp/cclVlxlC.s:13446  .text:00002c54 .Loc.2812
     /tmp/cclVlxlC.s:13447  .text:00002c54 .Loc.2813
     /tmp/cclVlxlC.s:13448  .text:00002c54 .Loc.2814
     /tmp/cclVlxlC.s:13450  .text:00002c54 .Loc.2815
     /tmp/cclVlxlC.s:13459  .text:00002c5e .Loc.2816
     /tmp/cclVlxlC.s:13460  .text:00002c5e .Loc.2817
     /tmp/cclVlxlC.s:13461  .text:00002c5e .Loc.2818
     /tmp/cclVlxlC.s:13463  .text:00002c5e .Loc.2819
     /tmp/cclVlxlC.s:13472  .text:00002c68 .Loc.2820
     /tmp/cclVlxlC.s:13473  .text:00002c68 .Loc.2821
     /tmp/cclVlxlC.s:13474  .text:00002c68 .Loc.2822
     /tmp/cclVlxlC.s:13476  .text:00002c68 .Loc.2823
     /tmp/cclVlxlC.s:13485  .text:00002c72 .Loc.2824
     /tmp/cclVlxlC.s:13486  .text:00002c72 .Loc.2825
     /tmp/cclVlxlC.s:13487  .text:00002c72 .Loc.2826
     /tmp/cclVlxlC.s:13489  .text:00002c72 .Loc.2827
     /tmp/cclVlxlC.s:13498  .text:00002c7c .Loc.2828
     /tmp/cclVlxlC.s:13499  .text:00002c7c .Loc.2829
     /tmp/cclVlxlC.s:13500  .text:00002c7c .Loc.2830
     /tmp/cclVlxlC.s:13502  .text:00002c7c .Loc.2831
     /tmp/cclVlxlC.s:13511  .text:00002c86 .Loc.2832
     /tmp/cclVlxlC.s:13512  .text:00002c86 .Loc.2833
     /tmp/cclVlxlC.s:13513  .text:00002c86 .Loc.2834
     /tmp/cclVlxlC.s:13515  .text:00002c86 .Loc.2835
     /tmp/cclVlxlC.s:13524  .text:00002c90 .Loc.2836
     /tmp/cclVlxlC.s:13525  .text:00002c90 .Loc.2837
     /tmp/cclVlxlC.s:13526  .text:00002c90 .Loc.2838
     /tmp/cclVlxlC.s:13528  .text:00002c90 .Loc.2839
     /tmp/cclVlxlC.s:13537  .text:00002c9a .Loc.2840
     /tmp/cclVlxlC.s:13538  .text:00002c9a .Loc.2841
     /tmp/cclVlxlC.s:13539  .text:00002c9a .Loc.2842
     /tmp/cclVlxlC.s:13541  .text:00002c9a .Loc.2843
     /tmp/cclVlxlC.s:13550  .text:00002ca4 .Loc.2844
     /tmp/cclVlxlC.s:13551  .text:00002ca4 .Loc.2845
     /tmp/cclVlxlC.s:13552  .text:00002ca4 .Loc.2846
     /tmp/cclVlxlC.s:13554  .text:00002ca4 .Loc.2847
     /tmp/cclVlxlC.s:13563  .text:00002cae .Loc.2848
     /tmp/cclVlxlC.s:13564  .text:00002cae .Loc.2849
     /tmp/cclVlxlC.s:13565  .text:00002cae .Loc.2850
     /tmp/cclVlxlC.s:13567  .text:00002cae .Loc.2851
     /tmp/cclVlxlC.s:13576  .text:00002cb8 .Loc.2852
     /tmp/cclVlxlC.s:13577  .text:00002cb8 .Loc.2853
     /tmp/cclVlxlC.s:13578  .text:00002cb8 .Loc.2854
     /tmp/cclVlxlC.s:13580  .text:00002cb8 .Loc.2855
     /tmp/cclVlxlC.s:13589  .text:00002cc2 .Loc.2856
     /tmp/cclVlxlC.s:13590  .text:00002cc2 .Loc.2857
     /tmp/cclVlxlC.s:13591  .text:00002cc2 .Loc.2858
     /tmp/cclVlxlC.s:13593  .text:00002cc2 .Loc.2859
     /tmp/cclVlxlC.s:13602  .text:00002ccc .Loc.2860
     /tmp/cclVlxlC.s:13603  .text:00002ccc .Loc.2861
     /tmp/cclVlxlC.s:13604  .text:00002ccc .Loc.2862
     /tmp/cclVlxlC.s:13606  .text:00002ccc .Loc.2863
     /tmp/cclVlxlC.s:13615  .text:00002cd6 .Loc.2864
     /tmp/cclVlxlC.s:13616  .text:00002cd6 .Loc.2865
     /tmp/cclVlxlC.s:13617  .text:00002cd6 .Loc.2866
     /tmp/cclVlxlC.s:13619  .text:00002cd6 .Loc.2867
     /tmp/cclVlxlC.s:13628  .text:00002ce0 .Loc.2868
     /tmp/cclVlxlC.s:13629  .text:00002ce0 .Loc.2869
     /tmp/cclVlxlC.s:13630  .text:00002ce0 .Loc.2870
     /tmp/cclVlxlC.s:13632  .text:00002ce0 .Loc.2871
     /tmp/cclVlxlC.s:13641  .text:00002cea .Loc.2872
     /tmp/cclVlxlC.s:13642  .text:00002cea .Loc.2873
     /tmp/cclVlxlC.s:13643  .text:00002cea .Loc.2874
     /tmp/cclVlxlC.s:13645  .text:00002cea .Loc.2875
     /tmp/cclVlxlC.s:13654  .text:00002cf4 .Loc.2876
     /tmp/cclVlxlC.s:13655  .text:00002cf4 .Loc.2877
     /tmp/cclVlxlC.s:13656  .text:00002cf4 .Loc.2878
     /tmp/cclVlxlC.s:13658  .text:00002cf4 .Loc.2879
     /tmp/cclVlxlC.s:13667  .text:00002cfe .Loc.2880
     /tmp/cclVlxlC.s:13668  .text:00002cfe .Loc.2881
     /tmp/cclVlxlC.s:13669  .text:00002cfe .Loc.2882
     /tmp/cclVlxlC.s:13671  .text:00002cfe .Loc.2883
     /tmp/cclVlxlC.s:13680  .text:00002d08 .Loc.2884
     /tmp/cclVlxlC.s:13681  .text:00002d08 .Loc.2885
     /tmp/cclVlxlC.s:13682  .text:00002d08 .Loc.2886
     /tmp/cclVlxlC.s:13684  .text:00002d08 .Loc.2887
     /tmp/cclVlxlC.s:13693  .text:00002d12 .Loc.2888
     /tmp/cclVlxlC.s:13694  .text:00002d12 .Loc.2889
     /tmp/cclVlxlC.s:13695  .text:00002d12 .Loc.2890
     /tmp/cclVlxlC.s:13697  .text:00002d12 .Loc.2891
     /tmp/cclVlxlC.s:13706  .text:00002d1c .Loc.2892
     /tmp/cclVlxlC.s:13707  .text:00002d1c .Loc.2893
     /tmp/cclVlxlC.s:13708  .text:00002d1c .Loc.2894
     /tmp/cclVlxlC.s:13710  .text:00002d1c .Loc.2895
     /tmp/cclVlxlC.s:13719  .text:00002d26 .Loc.2896
     /tmp/cclVlxlC.s:13720  .text:00002d26 .Loc.2897
     /tmp/cclVlxlC.s:13721  .text:00002d26 .Loc.2898
     /tmp/cclVlxlC.s:13723  .text:00002d26 .Loc.2899
     /tmp/cclVlxlC.s:13732  .text:00002d30 .Loc.2900
     /tmp/cclVlxlC.s:13733  .text:00002d30 .Loc.2901
     /tmp/cclVlxlC.s:13734  .text:00002d30 .Loc.2902
     /tmp/cclVlxlC.s:13736  .text:00002d30 .Loc.2903
     /tmp/cclVlxlC.s:13745  .text:00002d3a .Loc.2904
     /tmp/cclVlxlC.s:13746  .text:00002d3a .Loc.2905
     /tmp/cclVlxlC.s:13747  .text:00002d3a .Loc.2906
     /tmp/cclVlxlC.s:13749  .text:00002d3a .Loc.2907
     /tmp/cclVlxlC.s:13758  .text:00002d44 .Loc.2908
     /tmp/cclVlxlC.s:13759  .text:00002d44 .Loc.2909
     /tmp/cclVlxlC.s:13760  .text:00002d44 .Loc.2910
     /tmp/cclVlxlC.s:13762  .text:00002d44 .Loc.2911
     /tmp/cclVlxlC.s:13771  .text:00002d4e .Loc.2912
     /tmp/cclVlxlC.s:13772  .text:00002d4e .Loc.2913
     /tmp/cclVlxlC.s:13773  .text:00002d4e .Loc.2914
     /tmp/cclVlxlC.s:13775  .text:00002d4e .Loc.2915
     /tmp/cclVlxlC.s:13784  .text:00002d58 .Loc.2916
     /tmp/cclVlxlC.s:13785  .text:00002d58 .Loc.2917
     /tmp/cclVlxlC.s:13786  .text:00002d58 .Loc.2918
     /tmp/cclVlxlC.s:13788  .text:00002d58 .Loc.2919
     /tmp/cclVlxlC.s:13797  .text:00002d62 .Loc.2920
     /tmp/cclVlxlC.s:13798  .text:00002d62 .Loc.2921
     /tmp/cclVlxlC.s:13799  .text:00002d62 .Loc.2922
     /tmp/cclVlxlC.s:13801  .text:00002d62 .Loc.2923
     /tmp/cclVlxlC.s:13810  .text:00002d6c .Loc.2924
     /tmp/cclVlxlC.s:13811  .text:00002d6c .Loc.2925
     /tmp/cclVlxlC.s:13812  .text:00002d6c .Loc.2926
     /tmp/cclVlxlC.s:13814  .text:00002d6c .Loc.2927
     /tmp/cclVlxlC.s:13823  .text:00002d76 .Loc.2928
     /tmp/cclVlxlC.s:13824  .text:00002d76 .Loc.2929
     /tmp/cclVlxlC.s:13825  .text:00002d76 .Loc.2930
     /tmp/cclVlxlC.s:13827  .text:00002d76 .Loc.2931
     /tmp/cclVlxlC.s:13836  .text:00002d80 .Loc.2932
     /tmp/cclVlxlC.s:13837  .text:00002d80 .Loc.2933
     /tmp/cclVlxlC.s:13838  .text:00002d80 .Loc.2934
     /tmp/cclVlxlC.s:13840  .text:00002d80 .Loc.2935
     /tmp/cclVlxlC.s:13848  .text:00002d8a .Loc.2936
     /tmp/cclVlxlC.s:13857  .text:00002d9c L0
     /tmp/cclVlxlC.s:13861  .text:00002d9e .Loc.2937
     /tmp/cclVlxlC.s:13874  .text:00002db0 .Loc.2938
     /tmp/cclVlxlC.s:13878  .text:00002db8 L0
     /tmp/cclVlxlC.s:13887  .text:00002dc4 .Loc.2939
     /tmp/cclVlxlC.s:13899  .text:00002dd6 .Loc.2940
     /tmp/cclVlxlC.s:13928  .text:00002e04 .Loc.2941
     /tmp/cclVlxlC.s:13929  .text:00002e04 .Loc.2942
     /tmp/cclVlxlC.s:13937  .text:00002e0e .Loc.2943
     /tmp/cclVlxlC.s:13939  .text:00002e0e .Loc.2944
     /tmp/cclVlxlC.s:13953  .text:00002e22 .Loc.2945
     /tmp/cclVlxlC.s:13963  .text:00002e36 L0
     /tmp/cclVlxlC.s:13989  .text:00002e42 .Loc.2946
     /tmp/cclVlxlC.s:13996  .text:00002e4a .Loc.2947
     /tmp/cclVlxlC.s:14001  .text:00002e4a .Loc.2948
     /tmp/cclVlxlC.s:14003  .text:00002e4a .Loc.2949
     /tmp/cclVlxlC.s:14004  .text:00002e4a .Loc.2950
     /tmp/cclVlxlC.s:14010  .text:00002e5a .Loc.2951
     /tmp/cclVlxlC.s:14011  .text:00002e5a .Loc.2952
     /tmp/cclVlxlC.s:14016  .text:00002e64 L0
     /tmp/cclVlxlC.s:14019  .text:00002e66 .Loc.2953
     /tmp/cclVlxlC.s:14020  .text:00002e66 .Loc.2954
     /tmp/cclVlxlC.s:14032  .text:00002e76 .Loc.2955
     /tmp/cclVlxlC.s:14035  .text:00002e78 .Loc.2956
     /tmp/cclVlxlC.s:14038  .text:00002e7a .Loc.2957
     /tmp/cclVlxlC.s:14051  .text:00002e8c .Loc.2958
     /tmp/cclVlxlC.s:14056  .text:00002e94 .Loc.2959
     /tmp/cclVlxlC.s:14060  .text:00002e94 .Loc.2960
     /tmp/cclVlxlC.s:14062  .text:00002e94 .Loc.2961
     /tmp/cclVlxlC.s:14070  .text:00002eaa .Loc.2962
     /tmp/cclVlxlC.s:14075  .text:00002eba .Loc.2963
     /tmp/cclVlxlC.s:14080  .text:00002eca .Loc.2964
     /tmp/cclVlxlC.s:14084  .text:00002ece .Loc.2965
     /tmp/cclVlxlC.s:14089  .text:00002ed4 .Loc.2966
     /tmp/cclVlxlC.s:14094  .text:00002edc .Loc.2967
     /tmp/cclVlxlC.s:14098  .text:00002ee0 .Loc.2968
     /tmp/cclVlxlC.s:14102  .text:00002ee8 .Loc.2969
     /tmp/cclVlxlC.s:14107  .text:00002ef0 .Loc.2970
     /tmp/cclVlxlC.s:14113  .text:00002ef6 .Loc.2971
     /tmp/cclVlxlC.s:14123  .text:00002f0a L0
     /tmp/cclVlxlC.s:14153  .text:00002f16 .Loc.2972
     /tmp/cclVlxlC.s:14160  .text:00002f20 .Loc.2973
     /tmp/cclVlxlC.s:14171  .text:00002f36 L0
     /tmp/cclVlxlC.s:14173  .text:00002f38 .Loc.2974
     /tmp/cclVlxlC.s:14184  .text:00002f4e L0
     /tmp/cclVlxlC.s:14191  .text:00002f5c L0
     /tmp/cclVlxlC.s:14193  .text:00002f5e .Loc.2975
     /tmp/cclVlxlC.s:14194  .text:00002f5e .Loc.2976
     /tmp/cclVlxlC.s:14200  .text:00002f68 .Loc.2977
     /tmp/cclVlxlC.s:14204  .text:00002f70 L0
     /tmp/cclVlxlC.s:14207  .text:00002f72 .Loc.2978
     /tmp/cclVlxlC.s:14208  .text:00002f72 .Loc.2979
     /tmp/cclVlxlC.s:14216  .text:00002f7e .Loc.2980
     /tmp/cclVlxlC.s:14217  .text:00002f7e .Loc.2981
     /tmp/cclVlxlC.s:14224  .text:00002f88 .Loc.2982
     /tmp/cclVlxlC.s:14230  .text:00002f90 .Loc.2983
     /tmp/cclVlxlC.s:14234  .text:00002f92 .Loc.2984
     /tmp/cclVlxlC.s:14248  .text:00002fae L0
     /tmp/cclVlxlC.s:14251  .text:00002fb0 .Loc.2985
     /tmp/cclVlxlC.s:14252  .text:00002fb0 .Loc.2986
     /tmp/cclVlxlC.s:14258  .text:00002fba .Loc.2987
     /tmp/cclVlxlC.s:14262  .text:00002fc2 L0
     /tmp/cclVlxlC.s:14265  .text:00002fc4 .Loc.2988
     /tmp/cclVlxlC.s:14266  .text:00002fc4 .Loc.2989
     /tmp/cclVlxlC.s:14274  .text:00002fd0 .Loc.2990
     /tmp/cclVlxlC.s:14275  .text:00002fd0 .Loc.2991
     /tmp/cclVlxlC.s:14280  .text:00002fda L0
     /tmp/cclVlxlC.s:14283  .text:00002fdc .Loc.2992
     /tmp/cclVlxlC.s:14284  .text:00002fdc .Loc.2993
     /tmp/cclVlxlC.s:14289  .text:00002fe6 L0
     /tmp/cclVlxlC.s:14291  .text:00002fe8 .Loc.2994
     /tmp/cclVlxlC.s:14292  .text:00002fe8 .Loc.2995
     /tmp/cclVlxlC.s:14295  .text:00002fec .Loc.2996
     /tmp/cclVlxlC.s:14296  .text:00002fec .Loc.2997
     /tmp/cclVlxlC.s:14301  .text:00002ff6 L0
     /tmp/cclVlxlC.s:14303  .text:00002ff8 .Loc.2998
     /tmp/cclVlxlC.s:14304  .text:00002ff8 .Loc.2999
     /tmp/cclVlxlC.s:14309  .text:00003002 L0
     /tmp/cclVlxlC.s:14313  .text:00003004 .Loc.3000
     /tmp/cclVlxlC.s:14314  .text:00003004 .Loc.3001
     /tmp/cclVlxlC.s:14318  .text:00003008 .Loc.3002
     /tmp/cclVlxlC.s:14319  .text:00003008 .Loc.3003
     /tmp/cclVlxlC.s:14322  .text:0000300c .Loc.3004
     /tmp/cclVlxlC.s:14328  .text:00003014 .Loc.3005
     /tmp/cclVlxlC.s:14332  .text:00003016 .Loc.3006
     /tmp/cclVlxlC.s:14339  .text:00003024 L0
     /tmp/cclVlxlC.s:14342  .text:00003026 .Loc.3007
     /tmp/cclVlxlC.s:14343  .text:00003026 .Loc.3008
     /tmp/cclVlxlC.s:14349  .text:00003030 .Loc.3009
     /tmp/cclVlxlC.s:14353  .text:00003038 L0
     /tmp/cclVlxlC.s:14356  .text:0000303a .Loc.3010
     /tmp/cclVlxlC.s:14357  .text:0000303a .Loc.3011
     /tmp/cclVlxlC.s:14365  .text:00003046 .Loc.3012
     /tmp/cclVlxlC.s:14366  .text:00003046 .Loc.3013
     /tmp/cclVlxlC.s:14372  .text:00003050 .Loc.3014
     /tmp/cclVlxlC.s:14378  .text:00003058 .Loc.3015
     /tmp/cclVlxlC.s:14382  .text:0000305a .Loc.3016
     /tmp/cclVlxlC.s:14384  .text:0000305a .Loc.3017
     /tmp/cclVlxlC.s:14385  .text:0000305a .Loc.3018
     /tmp/cclVlxlC.s:14392  .text:00003064 .Loc.3019
     /tmp/cclVlxlC.s:14393  .text:00003064 .Loc.3020
     /tmp/cclVlxlC.s:14400  .text:0000306e .Loc.3021
     /tmp/cclVlxlC.s:14401  .text:0000306e .Loc.3022
     /tmp/cclVlxlC.s:14408  .text:00003078 .Loc.3023
     /tmp/cclVlxlC.s:14409  .text:00003078 .Loc.3024
     /tmp/cclVlxlC.s:14416  .text:00003082 .Loc.3025
     /tmp/cclVlxlC.s:14417  .text:00003082 .Loc.3026
     /tmp/cclVlxlC.s:14424  .text:0000308c .Loc.3027
     /tmp/cclVlxlC.s:14425  .text:0000308c .Loc.3028
     /tmp/cclVlxlC.s:14432  .text:00003096 .Loc.3029
     /tmp/cclVlxlC.s:14433  .text:00003096 .Loc.3030
     /tmp/cclVlxlC.s:14440  .text:000030a0 .Loc.3031
     /tmp/cclVlxlC.s:14441  .text:000030a0 .Loc.3032
     /tmp/cclVlxlC.s:14448  .text:000030aa .Loc.3033
     /tmp/cclVlxlC.s:14449  .text:000030aa .Loc.3034
     /tmp/cclVlxlC.s:14456  .text:000030b4 .Loc.3035
     /tmp/cclVlxlC.s:14457  .text:000030b4 .Loc.3036
     /tmp/cclVlxlC.s:14464  .text:000030be .Loc.3037
     /tmp/cclVlxlC.s:14465  .text:000030be .Loc.3038
     /tmp/cclVlxlC.s:14472  .text:000030c8 .Loc.3039
     /tmp/cclVlxlC.s:14473  .text:000030c8 .Loc.3040
     /tmp/cclVlxlC.s:14480  .text:000030d2 .Loc.3041
     /tmp/cclVlxlC.s:14481  .text:000030d2 .Loc.3042
     /tmp/cclVlxlC.s:14488  .text:000030dc .Loc.3043
     /tmp/cclVlxlC.s:14489  .text:000030dc .Loc.3044
     /tmp/cclVlxlC.s:14496  .text:000030e6 .Loc.3045
     /tmp/cclVlxlC.s:14497  .text:000030e6 .Loc.3046
     /tmp/cclVlxlC.s:14504  .text:000030f0 .Loc.3047
     /tmp/cclVlxlC.s:14505  .text:000030f0 .Loc.3048
     /tmp/cclVlxlC.s:14512  .text:000030fa .Loc.3049
     /tmp/cclVlxlC.s:14513  .text:000030fa .Loc.3050
     /tmp/cclVlxlC.s:14520  .text:00003104 .Loc.3051
     /tmp/cclVlxlC.s:14521  .text:00003104 .Loc.3052
     /tmp/cclVlxlC.s:14527  .text:0000310c .Loc.3053
     /tmp/cclVlxlC.s:14535  .text:00003116 .Loc.3054
     /tmp/cclVlxlC.s:14543  .text:0000311e .Loc.3055
     /tmp/cclVlxlC.s:14549  .text:00003126 .Loc.3056
     /tmp/cclVlxlC.s:14553  .text:00003128 .Loc.3057
     /tmp/cclVlxlC.s:14559  .text:00003130 .Loc.3058
     /tmp/cclVlxlC.s:14563  .text:00003132 .Loc.3059
     /tmp/cclVlxlC.s:14565  .text:00003132 .Loc.3060
     /tmp/cclVlxlC.s:14566  .text:00003132 .Loc.3061
     /tmp/cclVlxlC.s:14572  .text:0000313a .Loc.3062
     /tmp/cclVlxlC.s:14581  .text:00003144 .Loc.3063
     /tmp/cclVlxlC.s:14582  .text:00003144 .Loc.3064
     /tmp/cclVlxlC.s:14593  .text:00003154 .Loc.3065
     /tmp/cclVlxlC.s:14595  .text:00003154 .Loc.3066
     /tmp/cclVlxlC.s:14596  .text:00003154 .Loc.3067
     /tmp/cclVlxlC.s:14602  .text:0000315c .Loc.3068
     /tmp/cclVlxlC.s:14611  .text:00003166 .Loc.3069
     /tmp/cclVlxlC.s:14612  .text:00003166 .Loc.3070
     /tmp/cclVlxlC.s:14615  .text:0000316a .Loc.3071
     /tmp/cclVlxlC.s:14616  .text:0000316a .Loc.3072
     /tmp/cclVlxlC.s:14969  .rodata:00000018 numbers_altgr.1
     /tmp/cclVlxlC.s:14627  .text:0000317a .Loc.3073
     /tmp/cclVlxlC.s:14629  .text:0000317a .Loc.3074
     /tmp/cclVlxlC.s:14630  .text:0000317a .Loc.3075
     /tmp/cclVlxlC.s:14636  .text:00003182 .Loc.3076
     /tmp/cclVlxlC.s:14643  .text:0000318c .Loc.3077
     /tmp/cclVlxlC.s:14644  .text:0000318c .Loc.3078
     /tmp/cclVlxlC.s:14645  .text:0000318c .Loc.3079
     /tmp/cclVlxlC.s:14646  .text:0000318c .Loc.3080
     /tmp/cclVlxlC.s:14647  .text:0000318c .Loc.3081
     /tmp/cclVlxlC.s:14648  .text:0000318c .Loc.3082
     /tmp/cclVlxlC.s:14653  .text:00003190 .Loc.3083
     /tmp/cclVlxlC.s:14654  .text:00003190 .Loc.3084
     /tmp/cclVlxlC.s:15012  .rodata:00000040 numbers_shift.2
     /tmp/cclVlxlC.s:14663  .text:0000319e .Loc.3085
     /tmp/cclVlxlC.s:14671  .text:000031a8 .Loc.3086
     /tmp/cclVlxlC.s:14673  .text:000031a8 .Loc.3087
     /tmp/cclVlxlC.s:14680  .text:000031b2 .Loc.3088
     /tmp/cclVlxlC.s:14687  .text:000031bc .Loc.3089
     /tmp/cclVlxlC.s:14694  .text:000031c6 .Loc.3090
     /tmp/cclVlxlC.s:14701  .text:000031d0 .Loc.3091
     /tmp/cclVlxlC.s:14710  .text:000031da .Loc.3092
     /tmp/cclVlxlC.s:14716  .text:000031e2 .Loc.3093
     /tmp/cclVlxlC.s:14720  .text:000031e4 .Loc.3094
     /tmp/cclVlxlC.s:14726  .text:000031ec .Loc.3095
     /tmp/cclVlxlC.s:14730  .text:000031ee .Loc.3096
     /tmp/cclVlxlC.s:14737  .text:000031ee .Loc.3097
     /tmp/cclVlxlC.s:14738  .text:000031ee .Loc.3098
     /tmp/cclVlxlC.s:14740  .text:000031f2 L0
     /tmp/cclVlxlC.s:14746  .text:000031f8 L0
     /tmp/cclVlxlC.s:14751  .text:000031f8 __vector_14
     /tmp/cclVlxlC.s:14753  .text:000031f8 .Loc.3099
     /tmp/cclVlxlC.s:14754  .text:000031f8 L0
                            *ABS*:00000003 __gcc_isr.n_pushed.001
     /tmp/cclVlxlC.s:14769  .text:00003208 .Loc.3100
     /tmp/cclVlxlC.s:14782  .text:0000322e .Loc.3101
     /tmp/cclVlxlC.s:14789  .text:0000323e L0
     /tmp/cclVlxlC.s:14795  .progmem.data:00000000 _panic
     /tmp/cclVlxlC.s:14799  .progmem.data:00000006 _error
     /tmp/cclVlxlC.s:14803  .progmem.data:0000000c _warn
     /tmp/cclVlxlC.s:14807  .progmem.data:00000011 _debug
     /tmp/cclVlxlC.s:14811  .progmem.data:00000017 _init
     /tmp/cclVlxlC.s:16713  .text:0000323e L0
     /tmp/cclVlxlC.s:12352  .text.startup:00000d0c L0
                     .debug_frame:00000000 L0
     /tmp/cclVlxlC.s:183    .text:00000050 .L3
     /tmp/cclVlxlC.s:267    .text:00000082 .L10
     /tmp/cclVlxlC.s:248    .text:00000074 .L8
     /tmp/cclVlxlC.s:428    .text:000000e6 .L15
     /tmp/cclVlxlC.s:420    .text:000000da .L11
     /tmp/cclVlxlC.s:645    .text:00000162 .L14
     /tmp/cclVlxlC.s:598    .text:00000156 .L22
     /tmp/cclVlxlC.s:540    .text:00000136 .L23
     /tmp/cclVlxlC.s:678    .text:00000180 .L25
     /tmp/cclVlxlC.s:718    .text:000001a0 .L32
     /tmp/cclVlxlC.s:669    .text:0000017a .L28
     /tmp/cclVlxlC.s:584    .text:00000152 .L34
     /tmp/cclVlxlC.s:723    .text:000001a4 .L27
     /tmp/cclVlxlC.s:882    .text:00000226 .L42
     /tmp/cclVlxlC.s:886    .text:00000228 .L36
     /tmp/cclVlxlC.s:976    .text:00000298 .L47
     /tmp/cclVlxlC.s:963    .text:00000288 .L45
     /tmp/cclVlxlC.s:965    .text:0000028a .L44
     /tmp/cclVlxlC.s:1087   .text:000002e2 .L52
     /tmp/cclVlxlC.s:1164   .text:0000031a .L55
     /tmp/cclVlxlC.s:1264   .text:00000388 .L58
     /tmp/cclVlxlC.s:1304   .text:0000039a .L61
     /tmp/cclVlxlC.s:1291   .text:00000390 .L60
     /tmp/cclVlxlC.s:1357   .text:000003bc .L21
     /tmp/cclVlxlC.s:1355   .text:000003ba .L12
     /tmp/cclVlxlC.s:1480   .text:00000434 .L66
     /tmp/cclVlxlC.s:1460   .text:0000041c .L22
     /tmp/cclVlxlC.s:1458   .text:0000041a .L13
     /tmp/cclVlxlC.s:1448   .text:0000040c .L65
     /tmp/cclVlxlC.s:1592   .text:00000474 .L14
     /tmp/cclVlxlC.s:1613   .text:00000486 .L15
     /tmp/cclVlxlC.s:1668   .text:000004b0 .L69
     /tmp/cclVlxlC.s:1829   .text:0000057c .L72
     /tmp/cclVlxlC.s:1810   .text:00000562 .L70
     /tmp/cclVlxlC.s:2082   .text:000006a2 .L79
     /tmp/cclVlxlC.s:1983   .text:0000061e .L78
     /tmp/cclVlxlC.s:2000   .text:00000638 .L76
     /tmp/cclVlxlC.s:2035   .text:00000660 .L77
     /tmp/cclVlxlC.s:1945   .text:000005e4 .L75
     /tmp/cclVlxlC.s:1953   .text:000005ee .L73
     /tmp/cclVlxlC.s:2181   .text:000006fa .L83
     /tmp/cclVlxlC.s:2161   .text:000006e2 .L23
     /tmp/cclVlxlC.s:2159   .text:000006e0 .L16
     /tmp/cclVlxlC.s:2149   .text:000006d2 .L82
     /tmp/cclVlxlC.s:2291   .text:00000738 .L17
     /tmp/cclVlxlC.s:2312   .text:0000074a .L18
     /tmp/cclVlxlC.s:2367   .text:00000774 .L86
     /tmp/cclVlxlC.s:2884   .text:000009a8 .L89
     /tmp/cclVlxlC.s:2522   .text:00000820 .L19
     /tmp/cclVlxlC.s:2547   .jumptables.gcc.emulator_next:00000000 .L92
     /tmp/cclVlxlC.s:5130   .text:0000146c .L161
     /tmp/cclVlxlC.s:2659   .text:00000898 .L110
     /tmp/cclVlxlC.s:2676   .text:000008b0 .L111
     /tmp/cclVlxlC.s:2691   .text:000008c4 .L112
     /tmp/cclVlxlC.s:2714   .text:000008d6 .L113
     /tmp/cclVlxlC.s:3000   .text:00000a2e .L103
     /tmp/cclVlxlC.s:2873   .text:0000099c .L104
     /tmp/cclVlxlC.s:2892   .text:000009ae .L163
     /tmp/cclVlxlC.s:2631   .text:00000880 .L110
     /tmp/cclVlxlC.s:3051   .text:00000a76 .L107
     /tmp/cclVlxlC.s:3169   .text:00000b06 .L108
     /tmp/cclVlxlC.s:5138   .text:00001476 .L87
     /tmp/cclVlxlC.s:2859   .text:00000992 .L167
     /tmp/cclVlxlC.s:2623   .text:0000087c .L174
     /tmp/cclVlxlC.s:3158   .text:00000b00 .L176
     /tmp/cclVlxlC.s:3298   .text:00000b98 .L114
     /tmp/cclVlxlC.s:3311   .text:00000baa .L115
     /tmp/cclVlxlC.s:3343   .text:00000bd8 .L116
     /tmp/cclVlxlC.s:3360   .text:00000bf2 .L117
     /tmp/cclVlxlC.s:3393   .text:00000c1c .L114
     /tmp/cclVlxlC.s:3384   .jumptables.gcc.emulator_next:0000003a .L116
     /tmp/cclVlxlC.s:3471   .text:00000c5e .L24
     /tmp/cclVlxlC.s:3466   .text:00000c56 .L118
     /tmp/cclVlxlC.s:3555   .text:00000cbe .L124
     /tmp/cclVlxlC.s:3528   .text:00000c96 .L175
     /tmp/cclVlxlC.s:3616   .text:00000cec .L119
     /tmp/cclVlxlC.s:3658   .text:00000d26 .L125
     /tmp/cclVlxlC.s:3654   .text:00000d20 .L25
     /tmp/cclVlxlC.s:3649   .text:00000d18 .L120
     /tmp/cclVlxlC.s:3475   .text:00000c62 .L168
     /tmp/cclVlxlC.s:3670   .text:00000d30 .L26
     /tmp/cclVlxlC.s:3665   .text:00000d28 .L121
     /tmp/cclVlxlC.s:3784   .text:00000d80 .L122
     /tmp/cclVlxlC.s:3840   .text:00000dc6 .L123
     /tmp/cclVlxlC.s:3855   .text:00000dda .L124
     /tmp/cclVlxlC.s:3871   .text:00000df0 .L125
     /tmp/cclVlxlC.s:3894   .text:00000e02 .L126
     /tmp/cclVlxlC.s:4053   .text:00000eca .L126
     /tmp/cclVlxlC.s:4155   .text:00000f46 .L127
     /tmp/cclVlxlC.s:4033   .text:00000eb6 .L170
     /tmp/cclVlxlC.s:4266   .text:00000fd0 .L127
     /tmp/cclVlxlC.s:4284   .text:00000fe6 .L128
     /tmp/cclVlxlC.s:4297   .text:00000ff8 .L129
     /tmp/cclVlxlC.s:4333   .text:0000102e .L130
     /tmp/cclVlxlC.s:4363   .text:00001058 .L131
     /tmp/cclVlxlC.s:4623   .text:000011d6 .L131
     /tmp/cclVlxlC.s:4405   .text:00001082 .L132
     /tmp/cclVlxlC.s:4395   .jumptables.gcc.emulator_next:00000048 .L134
     /tmp/cclVlxlC.s:4456   .text:000010ce .L171
     /tmp/cclVlxlC.s:4426   .text:000010a0 .L172
     /tmp/cclVlxlC.s:4645   .text:000011e4 .L141
     /tmp/cclVlxlC.s:4635   .jumptables.gcc.emulator_next:00000056 .L143
     /tmp/cclVlxlC.s:3428   .text:00000c34 .L150
     /tmp/cclVlxlC.s:4700   .text:00001230 .L27
     /tmp/cclVlxlC.s:4695   .text:00001228 .L132
     /tmp/cclVlxlC.s:4730   .text:00001260 .L178
     /tmp/cclVlxlC.s:3596   .text:00000ce0 .L177
     /tmp/cclVlxlC.s:4815   .text:000012dc .L153
     /tmp/cclVlxlC.s:4811   .text:000012d6 .L28
     /tmp/cclVlxlC.s:4806   .text:000012ce .L133
     /tmp/cclVlxlC.s:4825   .text:000012e6 .L29
     /tmp/cclVlxlC.s:4820   .text:000012de .L134
     /tmp/cclVlxlC.s:3707   .text:00000d4e .L179
     /tmp/cclVlxlC.s:3755   .text:00000d70 .L169
     /tmp/cclVlxlC.s:4880   .text:00001322 .L135
     /tmp/cclVlxlC.s:4926   .text:00001356 .L136
     /tmp/cclVlxlC.s:4941   .text:0000136a .L137
     /tmp/cclVlxlC.s:4957   .text:00001380 .L138
     /tmp/cclVlxlC.s:4982   .text:00001396 .L139
     /tmp/cclVlxlC.s:5009   .text:000013c4 .L140
     /tmp/cclVlxlC.s:5339   .text:0000158e .L154
     /tmp/cclVlxlC.s:5169   .text:000014a4 .L155
     /tmp/cclVlxlC.s:5227   .text:000014f6 .L156
     /tmp/cclVlxlC.s:5283   .text:00001542 .L157
     /tmp/cclVlxlC.s:5395   .text:000015da .L164
     /tmp/cclVlxlC.s:5119   .text:00001460 .L165
     /tmp/cclVlxlC.s:5473   .text:0000162a .L141
     /tmp/cclVlxlC.s:5509   .text:00001662 .L142
     /tmp/cclVlxlC.s:5527   .text:0000167c .L143
     /tmp/cclVlxlC.s:5566   .text:000016b4 .L144
     /tmp/cclVlxlC.s:5637   .text:000016ee .L145
     /tmp/cclVlxlC.s:5678   .text:00001730 .L146
     /tmp/cclVlxlC.s:5699   .text:00001752 .L147
     /tmp/cclVlxlC.s:5599   .text:000016de .L166
     /tmp/cclVlxlC.s:6185   .text:00001914 .L189
     /tmp/cclVlxlC.s:6179   .text:0000190e .L190
     /tmp/cclVlxlC.s:6149   .text:000018ee .L187
     /tmp/cclVlxlC.s:6105   .text:000018ba .L186
     /tmp/cclVlxlC.s:6164   .text:000018fc .L188
     /tmp/cclVlxlC.s:6115   .text:000018c8 .L184
     /tmp/cclVlxlC.s:6277   .text:00001950 .L193
     /tmp/cclVlxlC.s:6266   .text:00001946 .L192
     /tmp/cclVlxlC.s:6563   .text:00001a8a .L200
     /tmp/cclVlxlC.s:6647   .text:00001b0e .L199
     /tmp/cclVlxlC.s:6513   .text:00001a44 .L197
     /tmp/cclVlxlC.s:6603   .text:00001aca .L198
     /tmp/cclVlxlC.s:6910   .text:00001c34 .L203
     /tmp/cclVlxlC.s:6916   .text:00001c3a .L204
     /tmp/cclVlxlC.s:6869   .text:00001c00 .L201
     /tmp/cclVlxlC.s:7206   .text:00001daa .L209
     /tmp/cclVlxlC.s:7290   .text:00001e2e .L208
     /tmp/cclVlxlC.s:7160   .text:00001d64 .L206
     /tmp/cclVlxlC.s:7434   .text:00001ea4 .L148
     /tmp/cclVlxlC.s:7246   .text:00001dea .L207
     /tmp/cclVlxlC.s:7717   .text:00002018 .L211
     /tmp/cclVlxlC.s:7681   .text:00001fe0 .L213
     /tmp/cclVlxlC.s:7685   .text:00001fe4 .L210
     /tmp/cclVlxlC.s:8034   .text:00002196 .L215
     /tmp/cclVlxlC.s:7998   .text:0000215c .L217
     /tmp/cclVlxlC.s:8224   .text:00002292 .L149
     /tmp/cclVlxlC.s:8003   .text:00002160 .L214
     /tmp/cclVlxlC.s:8358   .text:00002354 .L222
     /tmp/cclVlxlC.s:8277   .text:000022dc .L218
     /tmp/cclVlxlC.s:8385   .text:0000236e .L220
     /tmp/cclVlxlC.s:8415   .text:00002394 .L224
     /tmp/cclVlxlC.s:8324   .text:00002324 .L219
     /tmp/cclVlxlC.s:8401   .text:00002386 .L221
     /tmp/cclVlxlC.s:8516   .text:000023e8 .L210
     /tmp/cclVlxlC.s:8513   .text:000023e4 .L150
     /tmp/cclVlxlC.s:8595   .text:00002440 .L230
     /tmp/cclVlxlC.s:8526   .text:000023f6 .L228
     /tmp/cclVlxlC.s:8508   .text:000023de .L226
     /tmp/cclVlxlC.s:8549   .text:00002408 .L227
     /tmp/cclVlxlC.s:8967   .text:0000256e .L250
     /tmp/cclVlxlC.s:8953   .text:00002566 .L235
     /tmp/cclVlxlC.s:8912   .text:00002548 .L237
     /tmp/cclVlxlC.s:8923   .text:0000254e .L239
     /tmp/cclVlxlC.s:8937   .text:00002558 .L242
     /tmp/cclVlxlC.s:9033   .text:000025a8 .L249
     /tmp/cclVlxlC.s:8713   .text:00002490 .L236
     /tmp/cclVlxlC.s:8768   .text:000024b0 .L238
     /tmp/cclVlxlC.s:8831   .text:000024f0 .L241
     /tmp/cclVlxlC.s:9004   .text:00002590 .L252
     /tmp/cclVlxlC.s:9026   .text:000025a2 .L253
     /tmp/cclVlxlC.s:9072   .text:000025d4 .L251
     /tmp/cclVlxlC.s:9009   .text:00002592 .L244
     /tmp/cclVlxlC.s:8876   .text:0000251c .L261
     /tmp/cclVlxlC.s:8884   .text:00002524 .L243
     /tmp/cclVlxlC.s:9056   .text:000025c2 .L247
     /tmp/cclVlxlC.s:8888   .text:00002528 .L246
     /tmp/cclVlxlC.s:9050   .text:000025bc .L248
     /tmp/cclVlxlC.s:9238   .text:00002682 .L275
     /tmp/cclVlxlC.s:9264   .text:00002698 .L263
     /tmp/cclVlxlC.s:9247   .text:00002688 .L267
     /tmp/cclVlxlC.s:9449   .text:00002738 .L279
     /tmp/cclVlxlC.s:9477   .text:0000274e .L280
     /tmp/cclVlxlC.s:9443   .text:00002730 .L284
     /tmp/cclVlxlC.s:9553   .text:0000279c .L151
     /tmp/cclVlxlC.s:9643   .text:0000281e .L283
     /tmp/cclVlxlC.s:9662   .text:00002834 .L282
     /tmp/cclVlxlC.s:9603   .text:000027e4 .L281
     /tmp/cclVlxlC.s:12494  .text:00002930 .L411
     /tmp/cclVlxlC.s:12533  .text:00002958 .L413
     /tmp/cclVlxlC.s:12453  .text:000028ea .L412
     /tmp/cclVlxlC.s:12525  .text:00002948 .L214
     /tmp/cclVlxlC.s:12523  .text:00002946 .L165
     /tmp/cclVlxlC.s:14729  .text:000031ee .L414
     /tmp/cclVlxlC.s:12566  .text:00002972 .L415
     /tmp/cclVlxlC.s:12575  .text:0000297a .L416
     /tmp/cclVlxlC.s:12560  .text:0000296c .L599
     /tmp/cclVlxlC.s:12682  .text:00002a02 .L417
     /tmp/cclVlxlC.s:12600  .text:00002994 .L418
     /tmp/cclVlxlC.s:12593  .text:0000298c .L419
     /tmp/cclVlxlC.s:13846  .text:00002d8a .L493
     /tmp/cclVlxlC.s:13927  .text:00002e04 .L496
     /tmp/cclVlxlC.s:12836  .text:00002a1a .L460
     /tmp/cclVlxlC.s:12697  .jumptables.gcc.__vector_1:00000000 .L422
     /tmp/cclVlxlC.s:13995  .text:00002e4a .L498
     /tmp/cclVlxlC.s:14670  .text:000031a8 .L554
     /tmp/cclVlxlC.s:14233  .text:00002f92 .L499
     /tmp/cclVlxlC.s:14159  .text:00002f20 .L500
     /tmp/cclVlxlC.s:14112  .text:00002ef6 .L501
     /tmp/cclVlxlC.s:14562  .text:00003132 .L531
     /tmp/cclVlxlC.s:14223  .text:00002f88 .L564
     /tmp/cclVlxlC.s:13898  .text:00002dd6 .L546
     /tmp/cclVlxlC.s:13873  .text:00002db0 .L495
     /tmp/cclVlxlC.s:13886  .text:00002dc4 .L480
     /tmp/cclVlxlC.s:13905  .text:00002de0 .L547
     /tmp/cclVlxlC.s:12653  .text:000029c8 .L494
     /tmp/cclVlxlC.s:13916  .text:00002df2 .L548
     /tmp/cclVlxlC.s:13910  .text:00002de8 .L596
     /tmp/cclVlxlC.s:13866  .text:00002da6 .L597
     /tmp/cclVlxlC.s:12675  .text:000029f0 .L497
     /tmp/cclVlxlC.s:14626  .text:0000317a .L503
     /tmp/cclVlxlC.s:13971  .jumptables.gcc.__vector_1:00000106 .L505
     /tmp/cclVlxlC.s:14097  .text:00002ee0 .L541
     /tmp/cclVlxlC.s:14534  .text:00003116 .L569
     /tmp/cclVlxlC.s:14131  .jumptables.gcc.__vector_1:0000011e .L517
     /tmp/cclVlxlC.s:14693  .text:000031c6 .L559
     /tmp/cclVlxlC.s:14592  .text:00003154 .L536
     /tmp/cclVlxlC.s:14282  .text:00002fdc .L534
     /tmp/cclVlxlC.s:14331  .text:00003016 .L527
     /tmp/cclVlxlC.s:13952  .text:00002e22 .L528
     /tmp/cclVlxlC.s:14541  .text:0000311e .L565
     /tmp/cclVlxlC.s:14552  .text:00003128 .L566
     /tmp/cclVlxlC.s:14312  .text:00003004 .L537
     /tmp/cclVlxlC.s:14708  .text:000031da .L567
     /tmp/cclVlxlC.s:14719  .text:000031e4 .L568
     /tmp/cclVlxlC.s:14700  .text:000031d0 .L560
     /tmp/cclVlxlC.s:14519  .text:00003104 .L532
     /tmp/cclVlxlC.s:14317  .text:00003008 .L533
     /tmp/cclVlxlC.s:14652  .text:00003190 .L535
     /tmp/cclVlxlC.s:14579  .text:00003144 .L538
     /tmp/cclVlxlC.s:14662  .text:0000319e .L598
     /tmp/cclVlxlC.s:14609  .text:00003166 .L539
     /tmp/cclVlxlC.s:12457  .text:000028f0 .L544
     /tmp/cclVlxlC.s:2647   .text:00000892 .L101
     /tmp/cclVlxlC.s:3280   .text:00000b92 .L100
     /tmp/cclVlxlC.s:3768   .text:00000d7a .L99
     /tmp/cclVlxlC.s:3826   .text:00000dc0 .L98
     /tmp/cclVlxlC.s:4251   .text:00000fca .L97
     /tmp/cclVlxlC.s:4864   .text:0000131c .L96
     /tmp/cclVlxlC.s:4912   .text:00001350 .L95
     /tmp/cclVlxlC.s:5612   .text:000016e8 .L94
     /tmp/cclVlxlC.s:5438   .text:00001616 .L93
     /tmp/cclVlxlC.s:2578   .text:0000084a .L91
     /tmp/cclVlxlC.s:3443   .text:00000c3e .L122
     /tmp/cclVlxlC.s:3483   .text:00000c6c .L121
     /tmp/cclVlxlC.s:3534   .text:00000c9e .L120
     /tmp/cclVlxlC.s:3563   .text:00000cc8 .L119
     /tmp/cclVlxlC.s:3609   .text:00000cea .L118
     /tmp/cclVlxlC.s:3675   .text:00000d36 .L117
     /tmp/cclVlxlC.s:3720   .text:00000d58 .L115
     /tmp/cclVlxlC.s:4434   .text:000010aa .L140
     /tmp/cclVlxlC.s:4470   .text:000010e4 .L139
     /tmp/cclVlxlC.s:4500   .text:00001114 .L138
     /tmp/cclVlxlC.s:4523   .text:0000113a .L137
     /tmp/cclVlxlC.s:4549   .text:00001162 .L136
     /tmp/cclVlxlC.s:4576   .text:0000118c .L135
     /tmp/cclVlxlC.s:4596   .text:000011ac .L133
     /tmp/cclVlxlC.s:4674   .text:0000120a .L149
     /tmp/cclVlxlC.s:4704   .text:00001236 .L148
     /tmp/cclVlxlC.s:4736   .text:00001268 .L147
     /tmp/cclVlxlC.s:4763   .text:00001294 .L146
     /tmp/cclVlxlC.s:4780   .text:000012ac .L145
     /tmp/cclVlxlC.s:4829   .text:000012ec .L144
     /tmp/cclVlxlC.s:4846   .text:00001304 .L142
     /tmp/cclVlxlC.s:9990   .text.startup:000000b2 .L152
     /tmp/cclVlxlC.s:9978   .text.startup:000000b0 .L287
     /tmp/cclVlxlC.s:10040  .text.startup:000000c8 .L153
     /tmp/cclVlxlC.s:10028  .text.startup:000000c6 .L288
     /tmp/cclVlxlC.s:10090  .text.startup:000000de .L154
     /tmp/cclVlxlC.s:10078  .text.startup:000000dc .L289
     /tmp/cclVlxlC.s:10406  .text.startup:0000031a .L155
     /tmp/cclVlxlC.s:10402  .text.startup:00000318 .L290
     /tmp/cclVlxlC.s:10434  .text.startup:00000334 .L156
     /tmp/cclVlxlC.s:10430  .text.startup:00000332 .L291
     /tmp/cclVlxlC.s:10476  .text.startup:00000360 .L293
     /tmp/cclVlxlC.s:10469  .text.startup:0000035c .L292
     /tmp/cclVlxlC.s:10785  .text.startup:000004ec .L295
     /tmp/cclVlxlC.s:10806  .text.startup:0000050a .L296
     /tmp/cclVlxlC.s:10744  .text.startup:000004b6 .L297
     /tmp/cclVlxlC.s:10814  .text.startup:00000514 .L211
     /tmp/cclVlxlC.s:10811  .text.startup:00000510 .L157
     /tmp/cclVlxlC.s:10894  .text.startup:00000584 .L298
     /tmp/cclVlxlC.s:10951  .text.startup:000005c8 .L299
     /tmp/cclVlxlC.s:10940  .text.startup:000005bc .L300
     /tmp/cclVlxlC.s:10848  .text.startup:00000544 .L301
     /tmp/cclVlxlC.s:10692  .text.startup:0000046c .L302
     /tmp/cclVlxlC.s:11016  .text.startup:00000600 .L303
     /tmp/cclVlxlC.s:11050  .text.startup:0000062c .L304
     /tmp/cclVlxlC.s:11031  .text.startup:00000612 .L305
     /tmp/cclVlxlC.s:11146  .text.startup:000006b4 .L306
     /tmp/cclVlxlC.s:11081  .text.startup:0000065e .L308
     /tmp/cclVlxlC.s:11084  .text.startup:00000662 .L404
     /tmp/cclVlxlC.s:11168  .text.startup:000006d8 .L312
     /tmp/cclVlxlC.s:11124  .text.startup:00000696 .L158
     /tmp/cclVlxlC.s:11173  .text.startup:000006dc .L314
     /tmp/cclVlxlC.s:11096  .text.startup:00000670 .L316
     /tmp/cclVlxlC.s:11047  .text.startup:00000628 .L315
     /tmp/cclVlxlC.s:11092  .text.startup:0000066c .L311
     /tmp/cclVlxlC.s:11089  .text.startup:00000668 .L407
     /tmp/cclVlxlC.s:11133  .text.startup:000006a4 .L408
     /tmp/cclVlxlC.s:11211  .text.startup:0000071a .L317
     /tmp/cclVlxlC.s:11201  .text.startup:00000708 .L318
     /tmp/cclVlxlC.s:11263  .text.startup:0000073e .L159
     /tmp/cclVlxlC.s:11251  .text.startup:0000073c .L319
     /tmp/cclVlxlC.s:11386  .text.startup:000007d2 .L321
     /tmp/cclVlxlC.s:11554  .text.startup:000008bc .L322
     /tmp/cclVlxlC.s:11369  .jumptables.gcc.main:00000000 .L324
     /tmp/cclVlxlC.s:11322  .text.startup:00000786 .L320
     /tmp/cclVlxlC.s:11343  .text.startup:000007a6 .L333
     /tmp/cclVlxlC.s:11412  .text.startup:000007f0 .L329
     /tmp/cclVlxlC.s:11480  .text.startup:00000840 .L212
     /tmp/cclVlxlC.s:11475  .text.startup:00000838 .L160
     /tmp/cclVlxlC.s:11427  .text.startup:00000802 .L409
     /tmp/cclVlxlC.s:11568  .text.startup:000008d2 .L332
     /tmp/cclVlxlC.s:11622  .text.startup:0000090e .L335
     /tmp/cclVlxlC.s:11631  .text.startup:0000091a .L336
     /tmp/cclVlxlC.s:11600  .text.startup:000008f4 .L355
     /tmp/cclVlxlC.s:11584  .text.startup:000008e2 .L334
     /tmp/cclVlxlC.s:11677  .text.startup:0000094c .L338
     /tmp/cclVlxlC.s:12158  .text.startup:00000c28 .L342
     /tmp/cclVlxlC.s:12122  .text.startup:00000bf8 .L343
     /tmp/cclVlxlC.s:12129  .text.startup:00000bfa .L345
     /tmp/cclVlxlC.s:12322  .text.startup:00000cf4 .L364
     /tmp/cclVlxlC.s:11902  .text.startup:00000a9c .L161
     /tmp/cclVlxlC.s:12330  .text.startup:00000cfa .L365
     /tmp/cclVlxlC.s:12335  .text.startup:00000d00 .L366
     /tmp/cclVlxlC.s:12340  .text.startup:00000d06 .L367
     /tmp/cclVlxlC.s:12094  .text.startup:00000be0 .L361
     /tmp/cclVlxlC.s:12082  .text.startup:00000bcc .L359
     /tmp/cclVlxlC.s:12117  .text.startup:00000bf6 .L360
     /tmp/cclVlxlC.s:12145  .text.startup:00000c0a .L162
     /tmp/cclVlxlC.s:11693  .text.startup:00000964 .L344
     /tmp/cclVlxlC.s:12290  .text.startup:00000cd6 .L346
     /tmp/cclVlxlC.s:12184  .text.startup:00000c50 .L347
     /tmp/cclVlxlC.s:12256  .text.startup:00000cb6 .L348
     /tmp/cclVlxlC.s:12273  .text.startup:00000cc6 .L349
     /tmp/cclVlxlC.s:12244  .text.startup:00000cac .L350
     /tmp/cclVlxlC.s:12308  .text.startup:00000ce8 .L352
     /tmp/cclVlxlC.s:12220  .text.startup:00000c84 .L213
     /tmp/cclVlxlC.s:12215  .text.startup:00000c7c .L163
     /tmp/cclVlxlC.s:12225  .text.startup:00000c8a .L164
     /tmp/cclVlxlC.s:11714  .text.startup:0000097a .L356
     /tmp/cclVlxlC.s:11962  .text.startup:00000afc .L357
     /tmp/cclVlxlC.s:11970  .text.startup:00000b0a .L358
     /tmp/cclVlxlC.s:11395  .text.startup:000007de .L330
     /tmp/cclVlxlC.s:11431  .text.startup:00000808 .L363
     /tmp/cclVlxlC.s:11435  .text.startup:0000080c .L328
     /tmp/cclVlxlC.s:11448  .text.startup:0000081a .L327
     /tmp/cclVlxlC.s:11466  .text.startup:0000082e .L326
     /tmp/cclVlxlC.s:11507  .text.startup:0000087c .L325
     /tmp/cclVlxlC.s:11525  .text.startup:00000890 .L323
     /tmp/cclVlxlC.s:13678  .text:00002d08 .L492
     /tmp/cclVlxlC.s:13652  .text:00002cf4 .L491
     /tmp/cclVlxlC.s:13639  .text:00002cea .L490
     /tmp/cclVlxlC.s:13626  .text:00002ce0 .L489
     /tmp/cclVlxlC.s:13197  .text:00002b96 .L488
     /tmp/cclVlxlC.s:13262  .text:00002bc8 .L487
     /tmp/cclVlxlC.s:13249  .text:00002bbe .L486
     /tmp/cclVlxlC.s:13236  .text:00002bb4 .L485
     /tmp/cclVlxlC.s:13223  .text:00002baa .L484
     /tmp/cclVlxlC.s:13210  .text:00002ba0 .L483
     /tmp/cclVlxlC.s:13366  .text:00002c18 .L482
     /tmp/cclVlxlC.s:12631  .text:000029b8 .L481
     /tmp/cclVlxlC.s:13860  .text:00002d9e .L479
     /tmp/cclVlxlC.s:13561  .text:00002cae .L478
     /tmp/cclVlxlC.s:12830  .text:00002a12 .L477
     /tmp/cclVlxlC.s:13184  .text:00002b8c .L476
     /tmp/cclVlxlC.s:13574  .text:00002cb8 .L475
     /tmp/cclVlxlC.s:13457  .text:00002c5e .L474
     /tmp/cclVlxlC.s:13600  .text:00002ccc .L473
     /tmp/cclVlxlC.s:13405  .text:00002c36 .L472
     /tmp/cclVlxlC.s:13470  .text:00002c68 .L471
     /tmp/cclVlxlC.s:13171  .text:00002b82 .L470
     /tmp/cclVlxlC.s:13041  .text:00002b1e .L469
     /tmp/cclVlxlC.s:13483  .text:00002c72 .L468
     /tmp/cclVlxlC.s:13418  .text:00002c40 .L467
     /tmp/cclVlxlC.s:13936  .text:00002e0e .L466
     /tmp/cclVlxlC.s:13808  .text:00002d6c .L465
     /tmp/cclVlxlC.s:13158  .text:00002b78 .L464
     /tmp/cclVlxlC.s:13054  .text:00002b28 .L463
     /tmp/cclVlxlC.s:13145  .text:00002b6e .L462
     /tmp/cclVlxlC.s:13132  .text:00002b64 .L461
     /tmp/cclVlxlC.s:13945  .text:00002e18 .L545
     /tmp/cclVlxlC.s:13106  .text:00002b50 .L459
     /tmp/cclVlxlC.s:13028  .text:00002b14 .L458
     /tmp/cclVlxlC.s:13067  .text:00002b32 .L457
     /tmp/cclVlxlC.s:13496  .text:00002c7c .L456
     /tmp/cclVlxlC.s:13613  .text:00002cd6 .L455
     /tmp/cclVlxlC.s:13431  .text:00002c4a .L454
     /tmp/cclVlxlC.s:13535  .text:00002c9a .L453
     /tmp/cclVlxlC.s:13080  .text:00002b3c .L452
     /tmp/cclVlxlC.s:13587  .text:00002cc2 .L451
     /tmp/cclVlxlC.s:12999  .text:00002b00 .L450
     /tmp/cclVlxlC.s:13444  .text:00002c54 .L449
     /tmp/cclVlxlC.s:13522  .text:00002c90 .L448
     /tmp/cclVlxlC.s:13509  .text:00002c86 .L447
     /tmp/cclVlxlC.s:13548  .text:00002ca4 .L446
     /tmp/cclVlxlC.s:13834  .text:00002d80 .L445
     /tmp/cclVlxlC.s:13015  .text:00002b0a .L444
     /tmp/cclVlxlC.s:13093  .text:00002b46 .L443
     /tmp/cclVlxlC.s:13119  .text:00002b5a .L442
     /tmp/cclVlxlC.s:13821  .text:00002d76 .L441
     /tmp/cclVlxlC.s:13392  .text:00002c2c .L440
     /tmp/cclVlxlC.s:13379  .text:00002c22 .L439
     /tmp/cclVlxlC.s:13275  .text:00002bd2 .L438
     /tmp/cclVlxlC.s:13730  .text:00002d30 .L437
     /tmp/cclVlxlC.s:13314  .text:00002bf0 .L436
     /tmp/cclVlxlC.s:13704  .text:00002d1c .L435
     /tmp/cclVlxlC.s:13769  .text:00002d4e .L434
     /tmp/cclVlxlC.s:13717  .text:00002d26 .L433
     /tmp/cclVlxlC.s:13301  .text:00002be6 .L432
     /tmp/cclVlxlC.s:13743  .text:00002d3a .L431
     /tmp/cclVlxlC.s:13756  .text:00002d44 .L430
     /tmp/cclVlxlC.s:13795  .text:00002d62 .L429
     /tmp/cclVlxlC.s:13691  .text:00002d12 .L428
     /tmp/cclVlxlC.s:13340  .text:00002c04 .L427
     /tmp/cclVlxlC.s:13288  .text:00002bdc .L426
     /tmp/cclVlxlC.s:13782  .text:00002d58 .L425
     /tmp/cclVlxlC.s:13353  .text:00002c0e .L424
     /tmp/cclVlxlC.s:13327  .text:00002bfa .L423
     /tmp/cclVlxlC.s:13665  .text:00002cfe .L421
     /tmp/cclVlxlC.s:14431  .text:00003096 .L514
     /tmp/cclVlxlC.s:14447  .text:000030aa .L513
     /tmp/cclVlxlC.s:14503  .text:000030f0 .L512
     /tmp/cclVlxlC.s:14415  .text:00003082 .L511
     /tmp/cclVlxlC.s:14399  .text:0000306e .L510
     /tmp/cclVlxlC.s:14487  .text:000030dc .L509
     /tmp/cclVlxlC.s:14471  .text:000030c8 .L508
     /tmp/cclVlxlC.s:14455  .text:000030b4 .L507
     /tmp/cclVlxlC.s:14679  .text:000031b2 .L555
     /tmp/cclVlxlC.s:13985  .text:00002e42 .L506
     /tmp/cclVlxlC.s:14381  .text:0000305a .L504
     /tmp/cclVlxlC.s:14439  .text:000030a0 .L525
     /tmp/cclVlxlC.s:14511  .text:000030fa .L524
     /tmp/cclVlxlC.s:14423  .text:0000308c .L523
     /tmp/cclVlxlC.s:14407  .text:00003078 .L522
     /tmp/cclVlxlC.s:14495  .text:000030e6 .L521
     /tmp/cclVlxlC.s:14479  .text:000030d2 .L520
     /tmp/cclVlxlC.s:14463  .text:000030be .L519
     /tmp/cclVlxlC.s:14686  .text:000031bc .L556
     /tmp/cclVlxlC.s:14145  .text:00002f16 .L518
     /tmp/cclVlxlC.s:14391  .text:00003064 .L516
     /tmp/cclVlxlC.s:23924  .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/cclVlxlC.s:40269  .debug_rnglists:00000573 .LLRL466
     /tmp/cclVlxlC.s:40279  .debug_line:00000000 .Ldebug_line0
     /tmp/cclVlxlC.s:14     .text:00000000 .LFB0
     /tmp/cclVlxlC.s:170    .text:00000050 .LFE0
     /tmp/cclVlxlC.s:24539  .debug_loclists:00000010 .LLST0
     /tmp/cclVlxlC.s:24534  .debug_loclists:0000000c .LVUS0
     /tmp/cclVlxlC.s:30     .text:00000008 .LBI16
     /tmp/cclVlxlC.s:29     .text:00000008 .LBB16
     /tmp/cclVlxlC.s:36     .text:00000008 .LBE16
     /tmp/cclVlxlC.s:24570  .debug_loclists:00000030 .LLST1
     /tmp/cclVlxlC.s:24567  .debug_loclists:0000002e .LVUS1
     /tmp/cclVlxlC.s:38     .text:00000008 .LBI18
     /tmp/cclVlxlC.s:37     .text:00000008 .LBB18
     /tmp/cclVlxlC.s:59     .text:00000012 .LBE18
     /tmp/cclVlxlC.s:24591  .debug_loclists:00000046 .LLST2
     /tmp/cclVlxlC.s:24588  .debug_loclists:00000044 .LVUS2
     /tmp/cclVlxlC.s:41     .text:00000008 .LBB19
     /tmp/cclVlxlC.s:58     .text:00000012 .LBE19
     /tmp/cclVlxlC.s:24601  .debug_loclists:00000051 .LLST3
     /tmp/cclVlxlC.s:24598  .debug_loclists:0000004f .LVUS3
     /tmp/cclVlxlC.s:24619  .debug_loclists:00000067 .LLST4
     /tmp/cclVlxlC.s:24616  .debug_loclists:00000065 .LVUS4
     /tmp/cclVlxlC.s:61     .text:00000012 .LBI20
     /tmp/cclVlxlC.s:60     .text:00000012 .LBB20
     /tmp/cclVlxlC.s:67     .text:00000012 .LBE20
     /tmp/cclVlxlC.s:24629  .debug_loclists:00000072 .LLST5
     /tmp/cclVlxlC.s:24626  .debug_loclists:00000070 .LVUS5
     /tmp/cclVlxlC.s:69     .text:00000012 .LBI22
     /tmp/cclVlxlC.s:68     .text:00000012 .LBB22
     /tmp/cclVlxlC.s:90     .text:0000001c .LBE22
     /tmp/cclVlxlC.s:24650  .debug_loclists:00000088 .LLST6
     /tmp/cclVlxlC.s:24647  .debug_loclists:00000086 .LVUS6
     /tmp/cclVlxlC.s:72     .text:00000012 .LBB23
     /tmp/cclVlxlC.s:89     .text:0000001c .LBE23
     /tmp/cclVlxlC.s:24660  .debug_loclists:00000093 .LLST7
     /tmp/cclVlxlC.s:24657  .debug_loclists:00000091 .LVUS7
     /tmp/cclVlxlC.s:24678  .debug_loclists:000000a9 .LLST8
     /tmp/cclVlxlC.s:24675  .debug_loclists:000000a7 .LVUS8
     /tmp/cclVlxlC.s:92     .text:0000001c .LBI24
     /tmp/cclVlxlC.s:39272  .debug_rnglists:0000000c .LLRL9
     /tmp/cclVlxlC.s:24688  .debug_loclists:000000b4 .LLST10
     /tmp/cclVlxlC.s:24685  .debug_loclists:000000b2 .LVUS10
     /tmp/cclVlxlC.s:100    .text:0000001c .LBI27
     /tmp/cclVlxlC.s:39282  .debug_rnglists:00000018 .LLRL11
     /tmp/cclVlxlC.s:24709  .debug_loclists:000000ca .LLST12
     /tmp/cclVlxlC.s:24706  .debug_loclists:000000c8 .LVUS12
     /tmp/cclVlxlC.s:24719  .debug_loclists:000000d5 .LLST13
     /tmp/cclVlxlC.s:24716  .debug_loclists:000000d3 .LVUS13
     /tmp/cclVlxlC.s:24736  .debug_loclists:000000ea .LLST14
     /tmp/cclVlxlC.s:24733  .debug_loclists:000000e8 .LVUS14
     /tmp/cclVlxlC.s:138    .text:0000002c .LBI32
     /tmp/cclVlxlC.s:137    .text:0000002c .LBB32
     /tmp/cclVlxlC.s:164    .text:0000004c .LBE32
     /tmp/cclVlxlC.s:24746  .debug_loclists:000000f5 .LLST15
     /tmp/cclVlxlC.s:24743  .debug_loclists:000000f3 .LVUS15
     /tmp/cclVlxlC.s:24756  .debug_loclists:00000100 .LLST16
     /tmp/cclVlxlC.s:24753  .debug_loclists:000000fe .LVUS16
     /tmp/cclVlxlC.s:24766  .debug_loclists:0000010b .LLST17
     /tmp/cclVlxlC.s:24763  .debug_loclists:00000109 .LVUS17
     /tmp/cclVlxlC.s:174    .text:00000050 .LFB2
     /tmp/cclVlxlC.s:198    .text:0000005e .LFE2
     /tmp/cclVlxlC.s:24776  .debug_loclists:00000116 .LLST18
     /tmp/cclVlxlC.s:24773  .debug_loclists:00000114 .LVUS18
     /tmp/cclVlxlC.s:202    .text:0000005e .LFB3
     /tmp/cclVlxlC.s:224    .text:0000006c .LFE3
     /tmp/cclVlxlC.s:229    .text:0000006c .LFB4
     /tmp/cclVlxlC.s:292    .text:0000008e .LFE4
     /tmp/cclVlxlC.s:24792  .debug_loclists:00000127 .LLST19
     /tmp/cclVlxlC.s:24783  .debug_loclists:0000011f .LVUS19
     /tmp/cclVlxlC.s:24832  .debug_loclists:00000150 .LLST20
     /tmp/cclVlxlC.s:24821  .debug_loclists:00000146 .LVUS20
     /tmp/cclVlxlC.s:276    .text:00000088 .LBI36
     /tmp/cclVlxlC.s:275    .text:00000088 .LBB36
     /tmp/cclVlxlC.s:290    .text:0000008e .LBE36
     /tmp/cclVlxlC.s:297    .text:0000008e .LFB6
     /tmp/cclVlxlC.s:331    .text:000000aa .LFE6
     /tmp/cclVlxlC.s:24880  .debug_loclists:00000181 .LLST21
     /tmp/cclVlxlC.s:24875  .debug_loclists:0000017d .LVUS21
     /tmp/cclVlxlC.s:323    .text:000000a2 .LVL18
     /tmp/cclVlxlC.s:335    .text:000000aa .LFB7
     /tmp/cclVlxlC.s:348    .text:000000ae .LFE7
     /tmp/cclVlxlC.s:353    .text:000000ae .LFB8
     /tmp/cclVlxlC.s:814    .text:000001e4 .LFE8
     /tmp/cclVlxlC.s:24902  .debug_loclists:00000198 .LLST22
     /tmp/cclVlxlC.s:24897  .debug_loclists:00000194 .LVUS22
     /tmp/cclVlxlC.s:24939  .debug_loclists:000001bf .LLST23
     /tmp/cclVlxlC.s:24930  .debug_loclists:000001b7 .LVUS23
     /tmp/cclVlxlC.s:24990  .debug_loclists:000001f8 .LLST24
     /tmp/cclVlxlC.s:24981  .debug_loclists:000001f0 .LVUS24
     /tmp/cclVlxlC.s:39292  .debug_rnglists:00000024 .LLRL25
     /tmp/cclVlxlC.s:25035  .debug_loclists:0000022b .LLST26
     /tmp/cclVlxlC.s:25032  .debug_loclists:00000229 .LVUS26
     /tmp/cclVlxlC.s:411    .text:000000d0 .LBI76
     /tmp/cclVlxlC.s:410    .text:000000d0 .LBB76
     /tmp/cclVlxlC.s:431    .text:000000e6 .LBE76
     /tmp/cclVlxlC.s:25046  .debug_loclists:00000237 .LLST27
     /tmp/cclVlxlC.s:25043  .debug_loclists:00000235 .LVUS27
     /tmp/cclVlxlC.s:433    .text:000000e6 .LBI78
     /tmp/cclVlxlC.s:39305  .debug_rnglists:00000038 .LLRL28
     /tmp/cclVlxlC.s:25069  .debug_loclists:0000024f .LLST29
     /tmp/cclVlxlC.s:25064  .debug_loclists:0000024b .LVUS29
     /tmp/cclVlxlC.s:25088  .debug_loclists:00000265 .LLST30
     /tmp/cclVlxlC.s:25085  .debug_loclists:00000263 .LVUS30
     /tmp/cclVlxlC.s:436    .text:000000e6 .LBB80
     /tmp/cclVlxlC.s:444    .text:000000f0 .LBE80
     /tmp/cclVlxlC.s:25109  .debug_loclists:0000027b .LLST31
     /tmp/cclVlxlC.s:25106  .debug_loclists:00000279 .LVUS31
     /tmp/cclVlxlC.s:440    .text:000000ec .LVL23
     /tmp/cclVlxlC.s:445    .text:000000f0 .LBB81
     /tmp/cclVlxlC.s:455    .text:000000fa .LBE81
     /tmp/cclVlxlC.s:25119  .debug_loclists:00000286 .LLST32
     /tmp/cclVlxlC.s:25116  .debug_loclists:00000284 .LVUS32
     /tmp/cclVlxlC.s:451    .text:000000f6 .LVL25
     /tmp/cclVlxlC.s:456    .text:000000fa .LBB82
     /tmp/cclVlxlC.s:466    .text:00000104 .LBE82
     /tmp/cclVlxlC.s:25129  .debug_loclists:00000291 .LLST33
     /tmp/cclVlxlC.s:25126  .debug_loclists:0000028f .LVUS33
     /tmp/cclVlxlC.s:462    .text:00000100 .LVL27
     /tmp/cclVlxlC.s:468    .text:00000104 .LBI83
     /tmp/cclVlxlC.s:39321  .debug_rnglists:0000004a .LLRL34
     /tmp/cclVlxlC.s:25145  .debug_loclists:000002a2 .LLST35
     /tmp/cclVlxlC.s:25136  .debug_loclists:0000029a .LVUS35
     /tmp/cclVlxlC.s:475    .text:00000104 .LBB85
     /tmp/cclVlxlC.s:485    .text:0000010e .LBE85
     /tmp/cclVlxlC.s:25188  .debug_loclists:000002cf .LLST36
     /tmp/cclVlxlC.s:25185  .debug_loclists:000002cd .LVUS36
     /tmp/cclVlxlC.s:481    .text:0000010a .LVL30
     /tmp/cclVlxlC.s:489    .text:0000010e .LBB86
     /tmp/cclVlxlC.s:499    .text:00000118 .LBE86
     /tmp/cclVlxlC.s:25198  .debug_loclists:000002da .LLST37
     /tmp/cclVlxlC.s:25195  .debug_loclists:000002d8 .LVUS37
     /tmp/cclVlxlC.s:495    .text:00000114 .LVL32
     /tmp/cclVlxlC.s:503    .text:00000118 .LBB87
     /tmp/cclVlxlC.s:513    .text:00000122 .LBE87
     /tmp/cclVlxlC.s:25208  .debug_loclists:000002e5 .LLST38
     /tmp/cclVlxlC.s:25205  .debug_loclists:000002e3 .LVUS38
     /tmp/cclVlxlC.s:509    .text:0000011e .LVL34
     /tmp/cclVlxlC.s:517    .text:00000122 .LBB88
     /tmp/cclVlxlC.s:531    .text:00000130 .LBE88
     /tmp/cclVlxlC.s:25218  .debug_loclists:000002f0 .LLST39
     /tmp/cclVlxlC.s:25215  .debug_loclists:000002ee .LVUS39
     /tmp/cclVlxlC.s:523    .text:00000128 .LVL36
     /tmp/cclVlxlC.s:39337  .debug_rnglists:0000005c .LLRL40
     /tmp/cclVlxlC.s:25228  .debug_loclists:000002fb .LLST41
     /tmp/cclVlxlC.s:25225  .debug_loclists:000002f9 .LVUS41
     /tmp/cclVlxlC.s:549    .text:00000136 .LBI90
     /tmp/cclVlxlC.s:39347  .debug_rnglists:00000068 .LLRL42
     /tmp/cclVlxlC.s:557    .text:0000013e .LVL39
     /tmp/cclVlxlC.s:39357  .debug_rnglists:00000074 .LLRL43
     /tmp/cclVlxlC.s:25238  .debug_loclists:00000306 .LLST44
     /tmp/cclVlxlC.s:25235  .debug_loclists:00000304 .LVUS44
     /tmp/cclVlxlC.s:680    .text:00000180 .LBB109
     /tmp/cclVlxlC.s:699    .text:0000018e .LBE109
     /tmp/cclVlxlC.s:25253  .debug_loclists:00000316 .LLST45
     /tmp/cclVlxlC.s:25250  .debug_loclists:00000314 .LVUS45
     /tmp/cclVlxlC.s:683    .text:00000180 .LBI110
     /tmp/cclVlxlC.s:682    .text:00000180 .LBB110
     /tmp/cclVlxlC.s:695    .text:0000018a .LBE110
     /tmp/cclVlxlC.s:692    .text:0000018a .LVL49
     /tmp/cclVlxlC.s:725    .text:000001a4 .LBB112
     /tmp/cclVlxlC.s:751    .text:000001b4 .LBE112
     /tmp/cclVlxlC.s:25263  .debug_loclists:00000321 .LLST46
     /tmp/cclVlxlC.s:25260  .debug_loclists:0000031f .LVUS46
     /tmp/cclVlxlC.s:728    .text:000001a4 .LBI113
     /tmp/cclVlxlC.s:39370  .debug_rnglists:00000084 .LLRL47
     /tmp/cclVlxlC.s:25277  .debug_loclists:00000330 .LLST48
     /tmp/cclVlxlC.s:25270  .debug_loclists:0000032a .LVUS48
     /tmp/cclVlxlC.s:744    .text:000001b0 .LVL53
     /tmp/cclVlxlC.s:767    .text:000001c2 .LBB117
     /tmp/cclVlxlC.s:775    .text:000001cc .LBE117
     /tmp/cclVlxlC.s:25314  .debug_loclists:00000356 .LLST49
     /tmp/cclVlxlC.s:25311  .debug_loclists:00000354 .LVUS49
     /tmp/cclVlxlC.s:771    .text:000001c8 .LVL56
     /tmp/cclVlxlC.s:779    .text:000001cc .LBB118
     /tmp/cclVlxlC.s:789    .text:000001d6 .LBE118
     /tmp/cclVlxlC.s:25324  .debug_loclists:00000361 .LLST50
     /tmp/cclVlxlC.s:25321  .debug_loclists:0000035f .LVUS50
     /tmp/cclVlxlC.s:785    .text:000001d2 .LVL58
     /tmp/cclVlxlC.s:793    .text:000001d6 .LBB119
     /tmp/cclVlxlC.s:803    .text:000001e0 .LBE119
     /tmp/cclVlxlC.s:25334  .debug_loclists:0000036c .LLST51
     /tmp/cclVlxlC.s:25331  .debug_loclists:0000036a .LVUS51
     /tmp/cclVlxlC.s:799    .text:000001dc .LVL60
     /tmp/cclVlxlC.s:819    .text:000001e4 .LFB14
     /tmp/cclVlxlC.s:891    .text:0000022a .LFE14
     /tmp/cclVlxlC.s:25348  .debug_loclists:0000037b .LLST52
     /tmp/cclVlxlC.s:25341  .debug_loclists:00000375 .LVUS52
     /tmp/cclVlxlC.s:25391  .debug_loclists:000003a7 .LLST53
     /tmp/cclVlxlC.s:25380  .debug_loclists:0000039d .LVUS53
     /tmp/cclVlxlC.s:25446  .debug_loclists:000003df .LLST54
     /tmp/cclVlxlC.s:25441  .debug_loclists:000003db .LVUS54
     /tmp/cclVlxlC.s:25481  .debug_loclists:00000403 .LLST55
     /tmp/cclVlxlC.s:25470  .debug_loclists:000003f9 .LVUS55
     /tmp/cclVlxlC.s:896    .text:0000022a .LFB15
     /tmp/cclVlxlC.s:981    .text:0000029c .LFE15
     /tmp/cclVlxlC.s:25538  .debug_loclists:0000043d .LLST56
     /tmp/cclVlxlC.s:25531  .debug_loclists:00000437 .LVUS56
     /tmp/cclVlxlC.s:986    .text:0000029c .LFB16
     /tmp/cclVlxlC.s:1002   .text:000002a0 .LFE16
     /tmp/cclVlxlC.s:25587  .debug_loclists:0000046f .LLST57
     /tmp/cclVlxlC.s:25582  .debug_loclists:0000046b .LVUS57
     /tmp/cclVlxlC.s:1007   .text:000002a0 .LFB17
     /tmp/cclVlxlC.s:1027   .text:000002aa .LFE17
     /tmp/cclVlxlC.s:25614  .debug_loclists:0000048b .LLST58
     /tmp/cclVlxlC.s:25609  .debug_loclists:00000487 .LVUS58
     /tmp/cclVlxlC.s:1032   .text:000002aa .LFB18
     /tmp/cclVlxlC.s:1095   .text:000002e6 .LFE18
     /tmp/cclVlxlC.s:25645  .debug_loclists:000004ab .LLST59
     /tmp/cclVlxlC.s:25636  .debug_loclists:000004a3 .LVUS59
     /tmp/cclVlxlC.s:25696  .debug_loclists:000004df .LLST60
     /tmp/cclVlxlC.s:25687  .debug_loclists:000004d7 .LVUS60
     /tmp/cclVlxlC.s:25752  .debug_loclists:00000518 .LLST61
     /tmp/cclVlxlC.s:25745  .debug_loclists:00000512 .LVUS61
     /tmp/cclVlxlC.s:1100   .text:000002e6 .LFB19
     /tmp/cclVlxlC.s:1140   .text:00000304 .LFE19
     /tmp/cclVlxlC.s:25789  .debug_loclists:0000053e .LLST62
     /tmp/cclVlxlC.s:25784  .debug_loclists:0000053a .LVUS62
     /tmp/cclVlxlC.s:1109   .text:000002e6 .LBI130
     /tmp/cclVlxlC.s:1108   .text:000002e6 .LBB130
     /tmp/cclVlxlC.s:1125   .text:000002f6 .LBE130
     /tmp/cclVlxlC.s:1113   .text:000002e6 .LBI131
     /tmp/cclVlxlC.s:1112   .text:000002e6 .LBB131
     /tmp/cclVlxlC.s:1124   .text:000002f6 .LBE131
     /tmp/cclVlxlC.s:1144   .text:00000304 .LFB23
     /tmp/cclVlxlC.s:1176   .text:0000032c .LFE23
     /tmp/cclVlxlC.s:1181   .text:0000032c .LFB24
     /tmp/cclVlxlC.s:1270   .text:0000038a .LFE24
     /tmp/cclVlxlC.s:25818  .debug_loclists:0000055c .LLST63
     /tmp/cclVlxlC.s:25813  .debug_loclists:00000558 .LVUS63
     /tmp/cclVlxlC.s:25837  .debug_loclists:00000570 .LLST64
     /tmp/cclVlxlC.s:25834  .debug_loclists:0000056e .LVUS64
     /tmp/cclVlxlC.s:1228   .text:0000035c .LVL92
     /tmp/cclVlxlC.s:1236   .text:00000368 .LVL93
     /tmp/cclVlxlC.s:1240   .text:0000036e .LVL94
     /tmp/cclVlxlC.s:1250   .text:0000037a .LVL95
     /tmp/cclVlxlC.s:1257   .text:00000386 .LVL96
     /tmp/cclVlxlC.s:8606   .text:00002446 .LFB66
     /tmp/cclVlxlC.s:9087   .text:000025dc .LFE66
     /tmp/cclVlxlC.s:25866  .debug_loclists:0000058e .LLST382
     /tmp/cclVlxlC.s:25849  .debug_loclists:0000057e .LVUS382
     /tmp/cclVlxlC.s:25933  .debug_loclists:000005df .LLST383
     /tmp/cclVlxlC.s:25922  .debug_loclists:000005d5 .LVUS383
     /tmp/cclVlxlC.s:39787  .debug_rnglists:000002b1 .LLRL384
     /tmp/cclVlxlC.s:25994  .debug_loclists:00000624 .LLST385
     /tmp/cclVlxlC.s:25983  .debug_loclists:0000061a .LVUS385
     /tmp/cclVlxlC.s:26050  .debug_loclists:00000665 .LLST386
     /tmp/cclVlxlC.s:26035  .debug_loclists:00000657 .LVUS386
     /tmp/cclVlxlC.s:26123  .debug_loclists:000006b8 .LLST387
     /tmp/cclVlxlC.s:26116  .debug_loclists:000006b2 .LVUS387
     /tmp/cclVlxlC.s:8671   .text:00002474 .LBB484
     /tmp/cclVlxlC.s:8696   .text:00002488 .LBE484
     /tmp/cclVlxlC.s:26160  .debug_loclists:000006e0 .LLST388
     /tmp/cclVlxlC.s:26157  .debug_loclists:000006de .LVUS388
     /tmp/cclVlxlC.s:26179  .debug_loclists:000006f4 .LLST389
     /tmp/cclVlxlC.s:26172  .debug_loclists:000006ee .LVUS389
     /tmp/cclVlxlC.s:8705   .text:0000248e .LBI485
     /tmp/cclVlxlC.s:39797  .debug_rnglists:000002c0 .LLRL390
     /tmp/cclVlxlC.s:26224  .debug_loclists:00000724 .LLST391
     /tmp/cclVlxlC.s:26213  .debug_loclists:0000071a .LVUS391
     /tmp/cclVlxlC.s:26280  .debug_loclists:0000075f .LLST392
     /tmp/cclVlxlC.s:26275  .debug_loclists:0000075b .LVUS392
     /tmp/cclVlxlC.s:8715   .text:00002490 .LBB487
     /tmp/cclVlxlC.s:8729   .text:00002494 .LBE487
     /tmp/cclVlxlC.s:26303  .debug_loclists:00000779 .LLST393
     /tmp/cclVlxlC.s:26294  .debug_loclists:00000771 .LVUS393
     /tmp/cclVlxlC.s:26349  .debug_loclists:000007ac .LLST394
     /tmp/cclVlxlC.s:26344  .debug_loclists:000007a8 .LVUS394
     /tmp/cclVlxlC.s:8919   .text:0000254c .LVL617
     /tmp/cclVlxlC.s:8750   .text:000024a4 .LBI489
     /tmp/cclVlxlC.s:8749   .text:000024a4 .LBB489
     /tmp/cclVlxlC.s:8761   .text:000024aa .LBE489
     /tmp/cclVlxlC.s:26366  .debug_loclists:000007c0 .LLST395
     /tmp/cclVlxlC.s:26363  .debug_loclists:000007be .LVUS395
     /tmp/cclVlxlC.s:8758   .text:000024aa .LVL599
     /tmp/cclVlxlC.s:39807  .debug_rnglists:000002ce .LLRL396
     /tmp/cclVlxlC.s:26383  .debug_loclists:000007d2 .LLST397
     /tmp/cclVlxlC.s:26378  .debug_loclists:000007ce .LVUS397
     /tmp/cclVlxlC.s:8782   .text:000024be .LBB492
     /tmp/cclVlxlC.s:8800   .text:000024c8 .LBE492
     /tmp/cclVlxlC.s:26410  .debug_loclists:000007f0 .LLST398
     /tmp/cclVlxlC.s:26407  .debug_loclists:000007ee .LVUS398
     /tmp/cclVlxlC.s:26427  .debug_loclists:00000802 .LLST399
     /tmp/cclVlxlC.s:26422  .debug_loclists:000007fe .LVUS399
     /tmp/cclVlxlC.s:8824   .text:000024ec .LBI493
     /tmp/cclVlxlC.s:39817  .debug_rnglists:000002dc .LLRL400
     /tmp/cclVlxlC.s:26456  .debug_loclists:00000822 .LLST401
     /tmp/cclVlxlC.s:26451  .debug_loclists:0000081e .LVUS401
     /tmp/cclVlxlC.s:26481  .debug_loclists:0000083c .LLST402
     /tmp/cclVlxlC.s:26472  .debug_loclists:00000834 .LVUS402
     /tmp/cclVlxlC.s:26527  .debug_loclists:0000086b .LLST403
     /tmp/cclVlxlC.s:26522  .debug_loclists:00000867 .LVUS403
     /tmp/cclVlxlC.s:26556  .debug_loclists:00000889 .LLST404
     /tmp/cclVlxlC.s:26551  .debug_loclists:00000885 .LVUS404
     /tmp/cclVlxlC.s:26585  .debug_loclists:000008a7 .LLST405
     /tmp/cclVlxlC.s:26580  .debug_loclists:000008a3 .LVUS405
     /tmp/cclVlxlC.s:26614  .debug_loclists:000008c5 .LLST406
     /tmp/cclVlxlC.s:26609  .debug_loclists:000008c1 .LVUS406
     /tmp/cclVlxlC.s:26646  .debug_loclists:000008e6 .LLST407
     /tmp/cclVlxlC.s:26641  .debug_loclists:000008e2 .LVUS407
     /tmp/cclVlxlC.s:8832   .text:000024f0 .LBB495
     /tmp/cclVlxlC.s:8843   .text:000024f4 .LBE495
     /tmp/cclVlxlC.s:26669  .debug_loclists:000008fe .LLST408
     /tmp/cclVlxlC.s:26660  .debug_loclists:000008f6 .LVUS408
     /tmp/cclVlxlC.s:26715  .debug_loclists:0000092d .LLST409
     /tmp/cclVlxlC.s:26710  .debug_loclists:00000929 .LVUS409
     /tmp/cclVlxlC.s:8945   .text:00002560 .LVL622
     /tmp/cclVlxlC.s:8812   .text:000024de .LVL603
     /tmp/cclVlxlC.s:8869   .text:00002516 .LVL611
     /tmp/cclVlxlC.s:39827  .debug_rnglists:000002e8 .LLRL410
     /tmp/cclVlxlC.s:26738  .debug_loclists:00000945 .LLST411
     /tmp/cclVlxlC.s:26729  .debug_loclists:0000093d .LVUS411
     /tmp/cclVlxlC.s:26786  .debug_loclists:00000978 .LLST412
     /tmp/cclVlxlC.s:26779  .debug_loclists:00000972 .LVUS412
     /tmp/cclVlxlC.s:9064   .text:000025ce .LVL639
     /tmp/cclVlxlC.s:8702   .text:0000248e .LVL592
     /tmp/cclVlxlC.s:8747   .text:000024a4 .LVL598
     /tmp/cclVlxlC.s:8930   .text:00002554 .LVL619
     /tmp/cclVlxlC.s:9013   .text:00002598 .LVL632
     /tmp/cclVlxlC.s:39837  .debug_rnglists:000002f6 .LLRL413
     /tmp/cclVlxlC.s:26816  .debug_loclists:0000099a .LLST414
     /tmp/cclVlxlC.s:26805  .debug_loclists:00000990 .LVUS414
     /tmp/cclVlxlC.s:26869  .debug_loclists:000009d0 .LLST415
     /tmp/cclVlxlC.s:26864  .debug_loclists:000009cc .LVUS415
     /tmp/cclVlxlC.s:9080   .text:000025d8 .LVL642
     /tmp/cclVlxlC.s:1275   .text:0000038a .LFB25
     /tmp/cclVlxlC.s:1329   .text:000003ac .LFE25
     /tmp/cclVlxlC.s:26890  .debug_loclists:000009e6 .LLST65
     /tmp/cclVlxlC.s:26883  .debug_loclists:000009e0 .LVUS65
     /tmp/cclVlxlC.s:26924  .debug_loclists:00000a09 .LLST66
     /tmp/cclVlxlC.s:26913  .debug_loclists:000009ff .LVUS66
     /tmp/cclVlxlC.s:1327   .text:000003ac .LVL104
     /tmp/cclVlxlC.s:1334   .text:000003ac .LFB26
     /tmp/cclVlxlC.s:1387   .text:000003e2 .LFE26
     /tmp/cclVlxlC.s:26972  .debug_loclists:00000a3a .LLST67
     /tmp/cclVlxlC.s:26967  .debug_loclists:00000a36 .LVUS67
     /tmp/cclVlxlC.s:26994  .debug_loclists:00000a51 .LLST68
     /tmp/cclVlxlC.s:26989  .debug_loclists:00000a4d .LVUS68
     /tmp/cclVlxlC.s:27016  .debug_loclists:00000a68 .LLST69
     /tmp/cclVlxlC.s:27011  .debug_loclists:00000a64 .LVUS69
     /tmp/cclVlxlC.s:1368   .text:000003cc .LVL107
     /tmp/cclVlxlC.s:1372   .text:000003d2 .LVL108
     /tmp/cclVlxlC.s:1376   .text:000003d8 .LVL109
     /tmp/cclVlxlC.s:1385   .text:000003e2 .LVL110
     /tmp/cclVlxlC.s:1392   .text:000003e2 .LFB27
     /tmp/cclVlxlC.s:1493   .text:0000043e .LFE27
     /tmp/cclVlxlC.s:27053  .debug_loclists:00000a8e .LLST70
     /tmp/cclVlxlC.s:27044  .debug_loclists:00000a86 .LVUS70
     /tmp/cclVlxlC.s:27087  .debug_loclists:00000ab1 .LLST71
     /tmp/cclVlxlC.s:27080  .debug_loclists:00000aab .LVUS71
     /tmp/cclVlxlC.s:27124  .debug_loclists:00000ad7 .LLST72
     /tmp/cclVlxlC.s:27119  .debug_loclists:00000ad3 .LVUS72
     /tmp/cclVlxlC.s:27153  .debug_loclists:00000af5 .LLST73
     /tmp/cclVlxlC.s:27146  .debug_loclists:00000aef .LVUS73
     /tmp/cclVlxlC.s:27196  .debug_loclists:00000b21 .LLST74
     /tmp/cclVlxlC.s:27185  .debug_loclists:00000b17 .LVUS74
     /tmp/cclVlxlC.s:27256  .debug_loclists:00000b5e .LLST75
     /tmp/cclVlxlC.s:27251  .debug_loclists:00000b5a .LVUS75
     /tmp/cclVlxlC.s:1440   .text:00000404 .LVL116
     /tmp/cclVlxlC.s:1485   .text:0000043a .LVL121
     /tmp/cclVlxlC.s:1498   .text:0000043e .LFB28
     /tmp/cclVlxlC.s:1693   .text:000004d4 .LFE28
     /tmp/cclVlxlC.s:27283  .debug_loclists:00000b7a .LLST76
     /tmp/cclVlxlC.s:27278  .debug_loclists:00000b76 .LVUS76
     /tmp/cclVlxlC.s:27318  .debug_loclists:00000b9f .LLST77
     /tmp/cclVlxlC.s:27311  .debug_loclists:00000b99 .LVUS77
     /tmp/cclVlxlC.s:27355  .debug_loclists:00000bc6 .LLST78
     /tmp/cclVlxlC.s:27350  .debug_loclists:00000bc2 .LVUS78
     /tmp/cclVlxlC.s:27382  .debug_loclists:00000be3 .LLST79
     /tmp/cclVlxlC.s:27377  .debug_loclists:00000bdf .LVUS79
     /tmp/cclVlxlC.s:1560   .text:00000462 .LBI143
     /tmp/cclVlxlC.s:39380  .debug_rnglists:00000090 .LLRL80
     /tmp/cclVlxlC.s:27419  .debug_loclists:00000c09 .LLST81
     /tmp/cclVlxlC.s:27416  .debug_loclists:00000c07 .LVUS81
     /tmp/cclVlxlC.s:27431  .debug_loclists:00000c19 .LLST82
     /tmp/cclVlxlC.s:27428  .debug_loclists:00000c17 .LVUS82
     /tmp/cclVlxlC.s:27446  .debug_loclists:00000c29 .LLST83
     /tmp/cclVlxlC.s:27443  .debug_loclists:00000c27 .LVUS83
     /tmp/cclVlxlC.s:27467  .debug_loclists:00000c3f .LLST84
     /tmp/cclVlxlC.s:27464  .debug_loclists:00000c3d .LVUS84
     /tmp/cclVlxlC.s:1566   .text:00000462 .LBI145
     /tmp/cclVlxlC.s:1565   .text:00000462 .LBB145
     /tmp/cclVlxlC.s:1572   .text:00000462 .LBE145
     /tmp/cclVlxlC.s:27488  .debug_loclists:00000c55 .LLST85
     /tmp/cclVlxlC.s:27485  .debug_loclists:00000c53 .LVUS85
     /tmp/cclVlxlC.s:1584   .text:0000046e .LBI147
     /tmp/cclVlxlC.s:1583   .text:0000046e .LBB147
     /tmp/cclVlxlC.s:1602   .text:00000480 .LBE147
     /tmp/cclVlxlC.s:27509  .debug_loclists:00000c6b .LLST86
     /tmp/cclVlxlC.s:27506  .debug_loclists:00000c69 .LVUS86
     /tmp/cclVlxlC.s:1605   .text:00000480 .LBI149
     /tmp/cclVlxlC.s:1604   .text:00000480 .LBB149
     /tmp/cclVlxlC.s:1623   .text:00000492 .LBE149
     /tmp/cclVlxlC.s:27530  .debug_loclists:00000c81 .LLST87
     /tmp/cclVlxlC.s:27527  .debug_loclists:00000c7f .LVUS87
     /tmp/cclVlxlC.s:1636   .text:00000498 .LBI151
     /tmp/cclVlxlC.s:1635   .text:00000498 .LBB151
     /tmp/cclVlxlC.s:1643   .text:00000498 .LBE151
     /tmp/cclVlxlC.s:1657   .text:000004a2 .LVL131
     /tmp/cclVlxlC.s:1691   .text:000004d4 .LVL134
     /tmp/cclVlxlC.s:1698   .text:000004d4 .LFB30
     /tmp/cclVlxlC.s:1834   .text:00000580 .LFE30
     /tmp/cclVlxlC.s:27557  .debug_loclists:00000c9d .LLST88
     /tmp/cclVlxlC.s:27548  .debug_loclists:00000c95 .LVUS88
     /tmp/cclVlxlC.s:27628  .debug_loclists:00000ce5 .LLST89
     /tmp/cclVlxlC.s:27619  .debug_loclists:00000cdd .LVUS89
     /tmp/cclVlxlC.s:1780   .text:0000053a .LBI157
     /tmp/cclVlxlC.s:1779   .text:0000053a .LBB157
     /tmp/cclVlxlC.s:1797   .text:00000550 .LBE157
     /tmp/cclVlxlC.s:27673  .debug_loclists:00000d18 .LLST90
     /tmp/cclVlxlC.s:27670  .debug_loclists:00000d16 .LVUS90
     /tmp/cclVlxlC.s:27684  .debug_loclists:00000d24 .LLST91
     /tmp/cclVlxlC.s:27681  .debug_loclists:00000d22 .LVUS91
     /tmp/cclVlxlC.s:27696  .debug_loclists:00000d31 .LLST92
     /tmp/cclVlxlC.s:27693  .debug_loclists:00000d2f .LVUS92
     /tmp/cclVlxlC.s:1794   .text:00000550 .LVL141
     /tmp/cclVlxlC.s:1771   .text:00000534 .LVL139
     /tmp/cclVlxlC.s:1839   .text:00000580 .LFB32
     /tmp/cclVlxlC.s:2088   .text:000006a8 .LFE32
     /tmp/cclVlxlC.s:27711  .debug_loclists:00000d41 .LLST93
     /tmp/cclVlxlC.s:27704  .debug_loclists:00000d3b .LVUS93
     /tmp/cclVlxlC.s:27746  .debug_loclists:00000d66 .LLST94
     /tmp/cclVlxlC.s:27743  .debug_loclists:00000d64 .LVUS94
     /tmp/cclVlxlC.s:27767  .debug_loclists:00000d7c .LLST95
     /tmp/cclVlxlC.s:27758  .debug_loclists:00000d74 .LVUS95
     /tmp/cclVlxlC.s:27820  .debug_loclists:00000db5 .LLST96
     /tmp/cclVlxlC.s:27815  .debug_loclists:00000db1 .LVUS96
     /tmp/cclVlxlC.s:2004   .text:00000638 .LBI163
     /tmp/cclVlxlC.s:2003   .text:00000638 .LBB163
     /tmp/cclVlxlC.s:2024   .text:00000654 .LBE163
     /tmp/cclVlxlC.s:27859  .debug_loclists:00000dde .LLST97
     /tmp/cclVlxlC.s:27856  .debug_loclists:00000ddc .LVUS97
     /tmp/cclVlxlC.s:27880  .debug_loclists:00000df4 .LLST98
     /tmp/cclVlxlC.s:27877  .debug_loclists:00000df2 .LVUS98
     /tmp/cclVlxlC.s:2021   .text:00000654 .LVL154
     /tmp/cclVlxlC.s:2025   .text:00000654 .LBB165
     /tmp/cclVlxlC.s:2048   .text:00000670 .LBE165
     /tmp/cclVlxlC.s:27891  .debug_loclists:00000e00 .LLST99
     /tmp/cclVlxlC.s:27888  .debug_loclists:00000dfe .LVUS99
     /tmp/cclVlxlC.s:2041   .text:0000066a .LVL156
     /tmp/cclVlxlC.s:1938   .text:000005de .LVL148
     /tmp/cclVlxlC.s:2093   .text:000006a8 .LFB34
     /tmp/cclVlxlC.s:2192   .text:00000702 .LFE34
     /tmp/cclVlxlC.s:27908  .debug_loclists:00000e12 .LLST100
     /tmp/cclVlxlC.s:27899  .debug_loclists:00000e0a .LVUS100
     /tmp/cclVlxlC.s:27942  .debug_loclists:00000e35 .LLST101
     /tmp/cclVlxlC.s:27935  .debug_loclists:00000e2f .LVUS101
     /tmp/cclVlxlC.s:27979  .debug_loclists:00000e5b .LLST102
     /tmp/cclVlxlC.s:27974  .debug_loclists:00000e57 .LVUS102
     /tmp/cclVlxlC.s:28008  .debug_loclists:00000e79 .LLST103
     /tmp/cclVlxlC.s:28001  .debug_loclists:00000e73 .LVUS103
     /tmp/cclVlxlC.s:28051  .debug_loclists:00000ea5 .LLST104
     /tmp/cclVlxlC.s:28040  .debug_loclists:00000e9b .LVUS104
     /tmp/cclVlxlC.s:28111  .debug_loclists:00000ee2 .LLST105
     /tmp/cclVlxlC.s:28106  .debug_loclists:00000ede .LVUS105
     /tmp/cclVlxlC.s:2141   .text:000006ca .LVL165
     /tmp/cclVlxlC.s:2187   .text:00000700 .LVL171
     /tmp/cclVlxlC.s:2197   .text:00000702 .LFB35
     /tmp/cclVlxlC.s:2392   .text:00000798 .LFE35
     /tmp/cclVlxlC.s:28138  .debug_loclists:00000efe .LLST106
     /tmp/cclVlxlC.s:28133  .debug_loclists:00000efa .LVUS106
     /tmp/cclVlxlC.s:28173  .debug_loclists:00000f23 .LLST107
     /tmp/cclVlxlC.s:28166  .debug_loclists:00000f1d .LVUS107
     /tmp/cclVlxlC.s:28210  .debug_loclists:00000f4a .LLST108
     /tmp/cclVlxlC.s:28205  .debug_loclists:00000f46 .LVUS108
     /tmp/cclVlxlC.s:28237  .debug_loclists:00000f67 .LLST109
     /tmp/cclVlxlC.s:28232  .debug_loclists:00000f63 .LVUS109
     /tmp/cclVlxlC.s:2259   .text:00000726 .LBI177
     /tmp/cclVlxlC.s:39390  .debug_rnglists:0000009c .LLRL110
     /tmp/cclVlxlC.s:28274  .debug_loclists:00000f8d .LLST111
     /tmp/cclVlxlC.s:28271  .debug_loclists:00000f8b .LVUS111
     /tmp/cclVlxlC.s:28286  .debug_loclists:00000f9d .LLST112
     /tmp/cclVlxlC.s:28283  .debug_loclists:00000f9b .LVUS112
     /tmp/cclVlxlC.s:28301  .debug_loclists:00000fad .LLST113
     /tmp/cclVlxlC.s:28298  .debug_loclists:00000fab .LVUS113
     /tmp/cclVlxlC.s:28322  .debug_loclists:00000fc3 .LLST114
     /tmp/cclVlxlC.s:28319  .debug_loclists:00000fc1 .LVUS114
     /tmp/cclVlxlC.s:2265   .text:00000726 .LBI179
     /tmp/cclVlxlC.s:2264   .text:00000726 .LBB179
     /tmp/cclVlxlC.s:2271   .text:00000726 .LBE179
     /tmp/cclVlxlC.s:28343  .debug_loclists:00000fd9 .LLST115
     /tmp/cclVlxlC.s:28340  .debug_loclists:00000fd7 .LVUS115
     /tmp/cclVlxlC.s:2283   .text:00000732 .LBI181
     /tmp/cclVlxlC.s:2282   .text:00000732 .LBB181
     /tmp/cclVlxlC.s:2301   .text:00000744 .LBE181
     /tmp/cclVlxlC.s:28364  .debug_loclists:00000fef .LLST116
     /tmp/cclVlxlC.s:28361  .debug_loclists:00000fed .LVUS116
     /tmp/cclVlxlC.s:2304   .text:00000744 .LBI183
     /tmp/cclVlxlC.s:2303   .text:00000744 .LBB183
     /tmp/cclVlxlC.s:2322   .text:00000756 .LBE183
     /tmp/cclVlxlC.s:28385  .debug_loclists:00001005 .LLST117
     /tmp/cclVlxlC.s:28382  .debug_loclists:00001003 .LVUS117
     /tmp/cclVlxlC.s:2335   .text:0000075c .LBI185
     /tmp/cclVlxlC.s:2334   .text:0000075c .LBB185
     /tmp/cclVlxlC.s:2342   .text:0000075c .LBE185
     /tmp/cclVlxlC.s:2356   .text:00000766 .LVL180
     /tmp/cclVlxlC.s:2390   .text:00000798 .LVL183
     /tmp/cclVlxlC.s:2397   .text:00000798 .LFB36
     /tmp/cclVlxlC.s:5732   .text:00001774 .LFE36
     /tmp/cclVlxlC.s:28412  .debug_loclists:00001021 .LLST118
     /tmp/cclVlxlC.s:28403  .debug_loclists:00001019 .LVUS118
     /tmp/cclVlxlC.s:28553  .debug_loclists:000010b4 .LLST119
     /tmp/cclVlxlC.s:28454  .debug_loclists:00001052 .LVUS119
     /tmp/cclVlxlC.s:2590   .text:00000858 .LBI248
     /tmp/cclVlxlC.s:2589   .text:00000858 .LBB248
     /tmp/cclVlxlC.s:2626   .text:0000087c .LBE248
     /tmp/cclVlxlC.s:29174  .debug_loclists:0000137c .LLST120
     /tmp/cclVlxlC.s:29167  .debug_loclists:00001376 .LVUS120
     /tmp/cclVlxlC.s:29209  .debug_loclists:000013a2 .LLST121
     /tmp/cclVlxlC.s:29202  .debug_loclists:0000139c .LVUS121
     /tmp/cclVlxlC.s:2622   .text:0000087c .LVL193
     /tmp/cclVlxlC.s:39400  .debug_rnglists:000000a8 .LLRL122
     /tmp/cclVlxlC.s:29248  .debug_loclists:000013cb .LLST123
     /tmp/cclVlxlC.s:29241  .debug_loclists:000013c5 .LVUS123
     /tmp/cclVlxlC.s:29327  .debug_loclists:00001420 .LLST124
     /tmp/cclVlxlC.s:29300  .debug_loclists:00001406 .LVUS124
     /tmp/cclVlxlC.s:29473  .debug_loclists:000014d6 .LLST125
     /tmp/cclVlxlC.s:29466  .debug_loclists:000014d0 .LVUS125
     /tmp/cclVlxlC.s:29507  .debug_loclists:000014fe .LLST126
     /tmp/cclVlxlC.s:29492  .debug_loclists:000014f0 .LVUS126
     /tmp/cclVlxlC.s:29605  .debug_loclists:0000156c .LLST127
     /tmp/cclVlxlC.s:29592  .debug_loclists:00001560 .LVUS127
     /tmp/cclVlxlC.s:2705   .text:000008d4 .LBI251
     /tmp/cclVlxlC.s:39422  .debug_rnglists:000000c9 .LLRL128
     /tmp/cclVlxlC.s:29646  .debug_loclists:000015a0 .LLST129
     /tmp/cclVlxlC.s:29639  .debug_loclists:0000159a .LVUS129
     /tmp/cclVlxlC.s:29688  .debug_loclists:000015cc .LLST130
     /tmp/cclVlxlC.s:29685  .debug_loclists:000015ca .LVUS130
     /tmp/cclVlxlC.s:29699  .debug_loclists:000015d8 .LLST131
     /tmp/cclVlxlC.s:29696  .debug_loclists:000015d6 .LVUS131
     /tmp/cclVlxlC.s:2757   .text:00000914 .LBI255
     /tmp/cclVlxlC.s:39432  .debug_rnglists:000000d5 .LLRL132
     /tmp/cclVlxlC.s:29711  .debug_loclists:000015e6 .LLST133
     /tmp/cclVlxlC.s:29708  .debug_loclists:000015e4 .LVUS133
     /tmp/cclVlxlC.s:29735  .debug_loclists:000015ff .LLST134
     /tmp/cclVlxlC.s:29730  .debug_loclists:000015fb .LVUS134
     /tmp/cclVlxlC.s:2817   .text:0000095e .LBI257
     /tmp/cclVlxlC.s:2816   .text:0000095e .LBB257
     /tmp/cclVlxlC.s:2834   .text:00000974 .LBE257
     /tmp/cclVlxlC.s:29784  .debug_loclists:00001631 .LLST135
     /tmp/cclVlxlC.s:29781  .debug_loclists:0000162f .LVUS135
     /tmp/cclVlxlC.s:29795  .debug_loclists:0000163d .LLST136
     /tmp/cclVlxlC.s:29792  .debug_loclists:0000163b .LVUS136
     /tmp/cclVlxlC.s:29807  .debug_loclists:0000164a .LLST137
     /tmp/cclVlxlC.s:29804  .debug_loclists:00001648 .LVUS137
     /tmp/cclVlxlC.s:2831   .text:00000974 .LVL208
     /tmp/cclVlxlC.s:2810   .text:0000095a .LVL206
     /tmp/cclVlxlC.s:2897   .text:000009ae .LBI263
     /tmp/cclVlxlC.s:39445  .debug_rnglists:000000e4 .LLRL138
     /tmp/cclVlxlC.s:29818  .debug_loclists:00001656 .LLST139
     /tmp/cclVlxlC.s:29815  .debug_loclists:00001654 .LVUS139
     /tmp/cclVlxlC.s:29842  .debug_loclists:00001670 .LLST140
     /tmp/cclVlxlC.s:29837  .debug_loclists:0000166c .LVUS140
     /tmp/cclVlxlC.s:2957   .text:000009f8 .LBI265
     /tmp/cclVlxlC.s:2956   .text:000009f8 .LBB265
     /tmp/cclVlxlC.s:2974   .text:00000a0e .LBE265
     /tmp/cclVlxlC.s:29891  .debug_loclists:000016a3 .LLST141
     /tmp/cclVlxlC.s:29888  .debug_loclists:000016a1 .LVUS141
     /tmp/cclVlxlC.s:29902  .debug_loclists:000016af .LLST142
     /tmp/cclVlxlC.s:29899  .debug_loclists:000016ad .LVUS142
     /tmp/cclVlxlC.s:29914  .debug_loclists:000016bc .LLST143
     /tmp/cclVlxlC.s:29911  .debug_loclists:000016ba .LVUS143
     /tmp/cclVlxlC.s:2971   .text:00000a0e .LVL218
     /tmp/cclVlxlC.s:2950   .text:000009f4 .LVL216
     /tmp/cclVlxlC.s:3055   .text:00000a76 .LBI271
     /tmp/cclVlxlC.s:39458  .debug_rnglists:000000f4 .LLRL144
     /tmp/cclVlxlC.s:29925  .debug_loclists:000016c8 .LLST145
     /tmp/cclVlxlC.s:29922  .debug_loclists:000016c6 .LVUS145
     /tmp/cclVlxlC.s:29949  .debug_loclists:000016e2 .LLST146
     /tmp/cclVlxlC.s:29944  .debug_loclists:000016de .LVUS146
     /tmp/cclVlxlC.s:3121   .text:00000ad4 .LBI273
     /tmp/cclVlxlC.s:3120   .text:00000ad4 .LBB273
     /tmp/cclVlxlC.s:3138   .text:00000aea .LBE273
     /tmp/cclVlxlC.s:29998  .debug_loclists:00001715 .LLST147
     /tmp/cclVlxlC.s:29995  .debug_loclists:00001713 .LVUS147
     /tmp/cclVlxlC.s:30009  .debug_loclists:00001721 .LLST148
     /tmp/cclVlxlC.s:30006  .debug_loclists:0000171f .LVUS148
     /tmp/cclVlxlC.s:30021  .debug_loclists:0000172e .LLST149
     /tmp/cclVlxlC.s:30018  .debug_loclists:0000172c .LVUS149
     /tmp/cclVlxlC.s:3135   .text:00000aea .LVL229
     /tmp/cclVlxlC.s:3114   .text:00000ad0 .LVL227
     /tmp/cclVlxlC.s:3176   .text:00000b06 .LBI279
     /tmp/cclVlxlC.s:39471  .debug_rnglists:00000104 .LLRL150
     /tmp/cclVlxlC.s:30032  .debug_loclists:0000173a .LLST151
     /tmp/cclVlxlC.s:30029  .debug_loclists:00001738 .LVUS151
     /tmp/cclVlxlC.s:30056  .debug_loclists:00001754 .LLST152
     /tmp/cclVlxlC.s:30051  .debug_loclists:00001750 .LVUS152
     /tmp/cclVlxlC.s:3242   .text:00000b64 .LBI281
     /tmp/cclVlxlC.s:3241   .text:00000b64 .LBB281
     /tmp/cclVlxlC.s:3259   .text:00000b7a .LBE281
     /tmp/cclVlxlC.s:30105  .debug_loclists:00001787 .LLST153
     /tmp/cclVlxlC.s:30102  .debug_loclists:00001785 .LVUS153
     /tmp/cclVlxlC.s:30116  .debug_loclists:00001793 .LLST154
     /tmp/cclVlxlC.s:30113  .debug_loclists:00001791 .LVUS154
     /tmp/cclVlxlC.s:30128  .debug_loclists:000017a0 .LLST155
     /tmp/cclVlxlC.s:30125  .debug_loclists:0000179e .LVUS155
     /tmp/cclVlxlC.s:3256   .text:00000b7a .LVL237
     /tmp/cclVlxlC.s:3235   .text:00000b60 .LVL235
     /tmp/cclVlxlC.s:3047   .text:00000a74 .LVL222
     /tmp/cclVlxlC.s:39487  .debug_rnglists:00000117 .LLRL156
     /tmp/cclVlxlC.s:30141  .debug_loclists:000017ae .LLST157
     /tmp/cclVlxlC.s:30136  .debug_loclists:000017aa .LVUS157
     /tmp/cclVlxlC.s:30173  .debug_loclists:000017d2 .LLST158
     /tmp/cclVlxlC.s:30168  .debug_loclists:000017ce .LVUS158
     /tmp/cclVlxlC.s:30205  .debug_loclists:000017f6 .LLST159
     /tmp/cclVlxlC.s:30200  .debug_loclists:000017f2 .LVUS159
     /tmp/cclVlxlC.s:30243  .debug_loclists:00001820 .LLST160
     /tmp/cclVlxlC.s:30232  .debug_loclists:00001816 .LVUS160
     /tmp/cclVlxlC.s:39515  .debug_rnglists:00000143 .LLRL161
     /tmp/cclVlxlC.s:30299  .debug_loclists:00001862 .LLST162
     /tmp/cclVlxlC.s:30280  .debug_loclists:00001850 .LVUS162
     /tmp/cclVlxlC.s:30424  .debug_loclists:000018f1 .LLST163
     /tmp/cclVlxlC.s:30405  .debug_loclists:000018df .LVUS163
     /tmp/cclVlxlC.s:30549  .debug_loclists:00001980 .LLST164
     /tmp/cclVlxlC.s:30530  .debug_loclists:0000196e .LVUS164
     /tmp/cclVlxlC.s:30698  .debug_loclists:00001a27 .LLST165
     /tmp/cclVlxlC.s:30655  .debug_loclists:000019fd .LVUS165
     /tmp/cclVlxlC.s:3397   .text:00000c1c .LBI294
     /tmp/cclVlxlC.s:39534  .debug_rnglists:0000015f .LLRL166
     /tmp/cclVlxlC.s:31008  .debug_loclists:00001b99 .LLST167
     /tmp/cclVlxlC.s:31005  .debug_loclists:00001b97 .LVUS167
     /tmp/cclVlxlC.s:31029  .debug_loclists:00001baf .LLST168
     /tmp/cclVlxlC.s:31026  .debug_loclists:00001bad .LVUS168
     /tmp/cclVlxlC.s:31040  .debug_loclists:00001bbb .LLST169
     /tmp/cclVlxlC.s:31037  .debug_loclists:00001bb9 .LVUS169
     /tmp/cclVlxlC.s:3486   .text:00000c6c .LBI298
     /tmp/cclVlxlC.s:39544  .debug_rnglists:0000016b .LLRL170
     /tmp/cclVlxlC.s:31052  .debug_loclists:00001bc9 .LLST171
     /tmp/cclVlxlC.s:31049  .debug_loclists:00001bc7 .LVUS171
     /tmp/cclVlxlC.s:31073  .debug_loclists:00001bdf .LLST172
     /tmp/cclVlxlC.s:31070  .debug_loclists:00001bdd .LVUS172
     /tmp/cclVlxlC.s:31084  .debug_loclists:00001beb .LLST173
     /tmp/cclVlxlC.s:31081  .debug_loclists:00001be9 .LVUS173
     /tmp/cclVlxlC.s:3567   .text:00000cc8 .LBI302
     /tmp/cclVlxlC.s:39554  .debug_rnglists:00000177 .LLRL174
     /tmp/cclVlxlC.s:31096  .debug_loclists:00001bf9 .LLST175
     /tmp/cclVlxlC.s:31093  .debug_loclists:00001bf7 .LVUS175
     /tmp/cclVlxlC.s:31117  .debug_loclists:00001c0f .LLST176
     /tmp/cclVlxlC.s:31114  .debug_loclists:00001c0d .LVUS176
     /tmp/cclVlxlC.s:31128  .debug_loclists:00001c1b .LLST177
     /tmp/cclVlxlC.s:31125  .debug_loclists:00001c19 .LVUS177
     /tmp/cclVlxlC.s:3678   .text:00000d36 .LBI306
     /tmp/cclVlxlC.s:39564  .debug_rnglists:00000183 .LLRL178
     /tmp/cclVlxlC.s:31140  .debug_loclists:00001c29 .LLST179
     /tmp/cclVlxlC.s:31137  .debug_loclists:00001c27 .LVUS179
     /tmp/cclVlxlC.s:31161  .debug_loclists:00001c3f .LLST180
     /tmp/cclVlxlC.s:31158  .debug_loclists:00001c3d .LVUS180
     /tmp/cclVlxlC.s:31172  .debug_loclists:00001c4b .LLST181
     /tmp/cclVlxlC.s:31169  .debug_loclists:00001c49 .LVUS181
     /tmp/cclVlxlC.s:3726   .text:00000d58 .LBI310
     /tmp/cclVlxlC.s:39574  .debug_rnglists:0000018f .LLRL182
     /tmp/cclVlxlC.s:31184  .debug_loclists:00001c59 .LLST183
     /tmp/cclVlxlC.s:31181  .debug_loclists:00001c57 .LVUS183
     /tmp/cclVlxlC.s:31205  .debug_loclists:00001c6f .LLST184
     /tmp/cclVlxlC.s:31202  .debug_loclists:00001c6d .LVUS184
     /tmp/cclVlxlC.s:31216  .debug_loclists:00001c7b .LLST185
     /tmp/cclVlxlC.s:31213  .debug_loclists:00001c79 .LVUS185
     /tmp/cclVlxlC.s:39584  .debug_rnglists:0000019b .LLRL186
     /tmp/cclVlxlC.s:31230  .debug_loclists:00001c8b .LLST187
     /tmp/cclVlxlC.s:31225  .debug_loclists:00001c87 .LVUS187
     /tmp/cclVlxlC.s:31262  .debug_loclists:00001cac .LLST188
     /tmp/cclVlxlC.s:31257  .debug_loclists:00001ca8 .LVUS188
     /tmp/cclVlxlC.s:39603  .debug_rnglists:000001b8 .LLRL189
     /tmp/cclVlxlC.s:31298  .debug_loclists:00001cd1 .LLST190
     /tmp/cclVlxlC.s:31285  .debug_loclists:00001cc5 .LVUS190
     /tmp/cclVlxlC.s:31454  .debug_loclists:00001d7f .LLST191
     /tmp/cclVlxlC.s:31431  .debug_loclists:00001d69 .LVUS191
     /tmp/cclVlxlC.s:31640  .debug_loclists:00001e52 .LLST192
     /tmp/cclVlxlC.s:31633  .debug_loclists:00001e4c .LVUS192
     /tmp/cclVlxlC.s:31666  .debug_loclists:00001e71 .LLST193
     /tmp/cclVlxlC.s:31659  .debug_loclists:00001e6b .LVUS193
     /tmp/cclVlxlC.s:31692  .debug_loclists:00001e90 .LLST194
     /tmp/cclVlxlC.s:31685  .debug_loclists:00001e8a .LVUS194
     /tmp/cclVlxlC.s:3885   .text:00000e00 .LBI325
     /tmp/cclVlxlC.s:39613  .debug_rnglists:000001c7 .LLRL195
     /tmp/cclVlxlC.s:31722  .debug_loclists:00001eb4 .LLST196
     /tmp/cclVlxlC.s:31711  .debug_loclists:00001eaa .LVUS196
     /tmp/cclVlxlC.s:31811  .debug_loclists:00001f12 .LLST197
     /tmp/cclVlxlC.s:31808  .debug_loclists:00001f10 .LVUS197
     /tmp/cclVlxlC.s:31822  .debug_loclists:00001f1e .LLST198
     /tmp/cclVlxlC.s:31819  .debug_loclists:00001f1c .LVUS198
     /tmp/cclVlxlC.s:3969   .text:00000e62 .LBI329
     /tmp/cclVlxlC.s:39623  .debug_rnglists:000001d3 .LLRL199
     /tmp/cclVlxlC.s:31834  .debug_loclists:00001f2c .LLST200
     /tmp/cclVlxlC.s:31831  .debug_loclists:00001f2a .LVUS200
     /tmp/cclVlxlC.s:31857  .debug_loclists:00001f44 .LLST201
     /tmp/cclVlxlC.s:31852  .debug_loclists:00001f40 .LVUS201
     /tmp/cclVlxlC.s:4022   .text:00000eae .LBB331
     /tmp/cclVlxlC.s:4028   .text:00000eb2 .LBE331
     /tmp/cclVlxlC.s:4021   .text:00000eae .LVL284
     /tmp/cclVlxlC.s:4086   .text:00000eec .LBI335
     /tmp/cclVlxlC.s:39633  .debug_rnglists:000001df .LLRL202
     /tmp/cclVlxlC.s:31896  .debug_loclists:00001f6c .LLST203
     /tmp/cclVlxlC.s:31893  .debug_loclists:00001f6a .LVUS203
     /tmp/cclVlxlC.s:31919  .debug_loclists:00001f84 .LLST204
     /tmp/cclVlxlC.s:31914  .debug_loclists:00001f80 .LVUS204
     /tmp/cclVlxlC.s:4147   .text:00000f40 .LBI337
     /tmp/cclVlxlC.s:39646  .debug_rnglists:000001ef .LLRL205
     /tmp/cclVlxlC.s:31958  .debug_loclists:00001fac .LLST206
     /tmp/cclVlxlC.s:31955  .debug_loclists:00001faa .LVUS206
     /tmp/cclVlxlC.s:31969  .debug_loclists:00001fb8 .LLST207
     /tmp/cclVlxlC.s:31966  .debug_loclists:00001fb6 .LVUS207
     /tmp/cclVlxlC.s:31981  .debug_loclists:00001fc5 .LLST208
     /tmp/cclVlxlC.s:31978  .debug_loclists:00001fc3 .LVUS208
     /tmp/cclVlxlC.s:4050   .text:00000ec8 .LVL286
     /tmp/cclVlxlC.s:4140   .text:00000f3c .LVL294
     /tmp/cclVlxlC.s:4207   .text:00000f88 .LBI345
     /tmp/cclVlxlC.s:4206   .text:00000f88 .LBB345
     /tmp/cclVlxlC.s:4254   .text:00000fca .LBE345
     /tmp/cclVlxlC.s:31996  .debug_loclists:00001fd5 .LLST209
     /tmp/cclVlxlC.s:31989  .debug_loclists:00001fcf .LVUS209
     /tmp/cclVlxlC.s:4239   .text:00000fc0 .LBB347
     /tmp/cclVlxlC.s:4245   .text:00000fc4 .LBE347
     /tmp/cclVlxlC.s:4238   .text:00000fc0 .LVL302
     /tmp/cclVlxlC.s:4867   .text:0000131c .LBB354
     /tmp/cclVlxlC.s:4914   .text:00001350 .LBE354
     /tmp/cclVlxlC.s:32043  .debug_loclists:00002005 .LLST210
     /tmp/cclVlxlC.s:32038  .debug_loclists:00002001 .LVUS210
     /tmp/cclVlxlC.s:32075  .debug_loclists:00002026 .LLST211
     /tmp/cclVlxlC.s:32070  .debug_loclists:00002022 .LVUS211
     /tmp/cclVlxlC.s:39656  .debug_rnglists:000001fd .LLRL212
     /tmp/cclVlxlC.s:32103  .debug_loclists:00002043 .LLST213
     /tmp/cclVlxlC.s:32098  .debug_loclists:0000203f .LVUS213
     /tmp/cclVlxlC.s:32148  .debug_loclists:00002073 .LLST214
     /tmp/cclVlxlC.s:32139  .debug_loclists:0000206b .LVUS214
     /tmp/cclVlxlC.s:32297  .debug_loclists:00002114 .LLST215
     /tmp/cclVlxlC.s:32282  .debug_loclists:00002106 .LVUS215
     /tmp/cclVlxlC.s:32349  .debug_loclists:00002156 .LLST216
     /tmp/cclVlxlC.s:32336  .debug_loclists:0000214a .LVUS216
     /tmp/cclVlxlC.s:32396  .debug_loclists:00002191 .LLST217
     /tmp/cclVlxlC.s:32383  .debug_loclists:00002185 .LVUS217
     /tmp/cclVlxlC.s:4971   .text:00001390 .LBI356
     /tmp/cclVlxlC.s:39678  .debug_rnglists:00000220 .LLRL218
     /tmp/cclVlxlC.s:32437  .debug_loclists:000021c6 .LLST219
     /tmp/cclVlxlC.s:32430  .debug_loclists:000021c0 .LVUS219
     /tmp/cclVlxlC.s:32538  .debug_loclists:00002232 .LLST220
     /tmp/cclVlxlC.s:32535  .debug_loclists:00002230 .LVUS220
     /tmp/cclVlxlC.s:32549  .debug_loclists:0000223e .LLST221
     /tmp/cclVlxlC.s:32546  .debug_loclists:0000223c .LVUS221
     /tmp/cclVlxlC.s:5441   .text:00001616 .LBB369
     /tmp/cclVlxlC.s:5601   .text:000016de .LBE369
     /tmp/cclVlxlC.s:32571  .debug_loclists:00002256 .LLST222
     /tmp/cclVlxlC.s:32558  .debug_loclists:0000224a .LVUS222
     /tmp/cclVlxlC.s:32813  .debug_loclists:0000235e .LLST223
     /tmp/cclVlxlC.s:32800  .debug_loclists:00002352 .LVUS223
     /tmp/cclVlxlC.s:33044  .debug_loclists:00002455 .LLST224
     /tmp/cclVlxlC.s:33039  .debug_loclists:00002451 .LVUS224
     /tmp/cclVlxlC.s:5449   .text:00001616 .LBI370
     /tmp/cclVlxlC.s:39688  .debug_rnglists:0000022c .LLRL225
     /tmp/cclVlxlC.s:33074  .debug_loclists:00002477 .LLST226
     /tmp/cclVlxlC.s:33071  .debug_loclists:00002475 .LVUS226
     /tmp/cclVlxlC.s:33116  .debug_loclists:000024a4 .LLST227
     /tmp/cclVlxlC.s:33113  .debug_loclists:000024a2 .LVUS227
     /tmp/cclVlxlC.s:33127  .debug_loclists:000024b0 .LLST228
     /tmp/cclVlxlC.s:33124  .debug_loclists:000024ae .LVUS228
     /tmp/cclVlxlC.s:5602   .text:000016de .LBB374
     /tmp/cclVlxlC.s:5730   .text:00001774 .LBE374
     /tmp/cclVlxlC.s:33142  .debug_loclists:000024c0 .LLST229
     /tmp/cclVlxlC.s:33137  .debug_loclists:000024bc .LVUS229
     /tmp/cclVlxlC.s:33174  .debug_loclists:000024e2 .LLST230
     /tmp/cclVlxlC.s:33169  .debug_loclists:000024de .LVUS230
     /tmp/cclVlxlC.s:33208  .debug_loclists:00002506 .LLST231
     /tmp/cclVlxlC.s:33201  .debug_loclists:00002500 .LVUS231
     /tmp/cclVlxlC.s:33276  .debug_loclists:00002552 .LLST232
     /tmp/cclVlxlC.s:33265  .debug_loclists:00002548 .LVUS232
     /tmp/cclVlxlC.s:5621   .text:000016e8 .LBI375
     /tmp/cclVlxlC.s:39698  .debug_rnglists:0000023a .LLRL233
     /tmp/cclVlxlC.s:33344  .debug_loclists:0000259d .LLST234
     /tmp/cclVlxlC.s:33341  .debug_loclists:0000259b .LVUS234
     /tmp/cclVlxlC.s:33361  .debug_loclists:000025af .LLST235
     /tmp/cclVlxlC.s:33358  .debug_loclists:000025ad .LVUS235
     /tmp/cclVlxlC.s:33372  .debug_loclists:000025bb .LLST236
     /tmp/cclVlxlC.s:33369  .debug_loclists:000025b9 .LVUS236
     /tmp/cclVlxlC.s:2481   .text:000007ec .LVL185
     /tmp/cclVlxlC.s:5737   .text:00001774 .LFB46
     /tmp/cclVlxlC.s:5757   .text:00001780 .LFE46
     /tmp/cclVlxlC.s:33386  .debug_loclists:000025cb .LLST237
     /tmp/cclVlxlC.s:33381  .debug_loclists:000025c7 .LVUS237
     /tmp/cclVlxlC.s:5750   .text:0000177c .LVL373
     /tmp/cclVlxlC.s:5762   .text:00001780 .LFB47
     /tmp/cclVlxlC.s:5797   .text:0000179a .LFE47
     /tmp/cclVlxlC.s:33410  .debug_loclists:000025e4 .LLST238
     /tmp/cclVlxlC.s:33403  .debug_loclists:000025de .LVUS238
     /tmp/cclVlxlC.s:5783   .text:0000178e .LVL376
     /tmp/cclVlxlC.s:5787   .text:00001794 .LVL377
     /tmp/cclVlxlC.s:5802   .text:0000179a .LFB48
     /tmp/cclVlxlC.s:5923   .text:0000181c .LFE48
     /tmp/cclVlxlC.s:33439  .debug_loclists:00002602 .LLST239
     /tmp/cclVlxlC.s:33432  .debug_loclists:000025fc .LVUS239
     /tmp/cclVlxlC.s:33478  .debug_loclists:0000262d .LLST240
     /tmp/cclVlxlC.s:33471  .debug_loclists:00002627 .LVUS240
     /tmp/cclVlxlC.s:33515  .debug_loclists:00002654 .LLST241
     /tmp/cclVlxlC.s:33510  .debug_loclists:00002650 .LVUS241
     /tmp/cclVlxlC.s:33542  .debug_loclists:00002671 .LLST242
     /tmp/cclVlxlC.s:33537  .debug_loclists:0000266d .LVUS242
     /tmp/cclVlxlC.s:33571  .debug_loclists:00002690 .LLST243
     /tmp/cclVlxlC.s:33564  .debug_loclists:0000268a .LVUS243
     /tmp/cclVlxlC.s:33619  .debug_loclists:000026c1 .LLST244
     /tmp/cclVlxlC.s:33612  .debug_loclists:000026bb .LVUS244
     /tmp/cclVlxlC.s:5854   .text:000017c4 .LVL382
     /tmp/cclVlxlC.s:5858   .text:000017ca .LVL383
     /tmp/cclVlxlC.s:5862   .text:000017d0 .LVL384
     /tmp/cclVlxlC.s:5866   .text:000017d6 .LVL385
     /tmp/cclVlxlC.s:5870   .text:000017dc .LVL386
     /tmp/cclVlxlC.s:5874   .text:000017e2 .LVL387
     /tmp/cclVlxlC.s:5878   .text:000017e8 .LVL388
     /tmp/cclVlxlC.s:5882   .text:000017ee .LVL389
     /tmp/cclVlxlC.s:5886   .text:000017f4 .LVL390
     /tmp/cclVlxlC.s:5890   .text:000017fa .LVL391
     /tmp/cclVlxlC.s:5894   .text:00001800 .LVL392
     /tmp/cclVlxlC.s:5898   .text:00001806 .LVL393
     /tmp/cclVlxlC.s:5928   .text:0000181c .LFB49
     /tmp/cclVlxlC.s:5954   .text:0000182e .LFE49
     /tmp/cclVlxlC.s:33665  .debug_loclists:000026f0 .LLST245
     /tmp/cclVlxlC.s:33660  .debug_loclists:000026ec .LVUS245
     /tmp/cclVlxlC.s:5944   .text:00001826 .LVL400
     /tmp/cclVlxlC.s:5952   .text:0000182e .LVL401
     /tmp/cclVlxlC.s:5959   .text:0000182e .LFB50
     /tmp/cclVlxlC.s:6195   .text:00001918 .LFE50
     /tmp/cclVlxlC.s:33692  .debug_loclists:0000270c .LLST246
     /tmp/cclVlxlC.s:33687  .debug_loclists:00002708 .LVUS246
     /tmp/cclVlxlC.s:33719  .debug_loclists:00002729 .LLST247
     /tmp/cclVlxlC.s:33714  .debug_loclists:00002725 .LVUS247
     /tmp/cclVlxlC.s:33748  .debug_loclists:00002749 .LLST248
     /tmp/cclVlxlC.s:33743  .debug_loclists:00002745 .LVUS248
     /tmp/cclVlxlC.s:33777  .debug_loclists:0000276a .LLST249
     /tmp/cclVlxlC.s:33772  .debug_loclists:00002766 .LVUS249
     /tmp/cclVlxlC.s:33806  .debug_loclists:0000278a .LLST250
     /tmp/cclVlxlC.s:33801  .debug_loclists:00002786 .LVUS250
     /tmp/cclVlxlC.s:33837  .debug_loclists:000027ab .LLST251
     /tmp/cclVlxlC.s:33830  .debug_loclists:000027a5 .LVUS251
     /tmp/cclVlxlC.s:6062   .text:00001886 .LBI383
     /tmp/cclVlxlC.s:39708  .debug_rnglists:00000247 .LLRL252
     /tmp/cclVlxlC.s:33880  .debug_loclists:000027d7 .LLST253
     /tmp/cclVlxlC.s:33873  .debug_loclists:000027d1 .LVUS253
     /tmp/cclVlxlC.s:33921  .debug_loclists:00002801 .LLST254
     /tmp/cclVlxlC.s:33916  .debug_loclists:000027fd .LVUS254
     /tmp/cclVlxlC.s:33950  .debug_loclists:00002820 .LLST255
     /tmp/cclVlxlC.s:33945  .debug_loclists:0000281c .LVUS255
     /tmp/cclVlxlC.s:33979  .debug_loclists:0000283f .LLST256
     /tmp/cclVlxlC.s:33974  .debug_loclists:0000283b .LVUS256
     /tmp/cclVlxlC.s:34006  .debug_loclists:0000285c .LLST257
     /tmp/cclVlxlC.s:34003  .debug_loclists:0000285a .LVUS257
     /tmp/cclVlxlC.s:6089   .text:000018aa .LBI385
     /tmp/cclVlxlC.s:39718  .debug_rnglists:00000254 .LLRL258
     /tmp/cclVlxlC.s:34023  .debug_loclists:0000286e .LLST259
     /tmp/cclVlxlC.s:34018  .debug_loclists:0000286a .LVUS259
     /tmp/cclVlxlC.s:34052  .debug_loclists:0000288c .LLST260
     /tmp/cclVlxlC.s:34047  .debug_loclists:00002888 .LVUS260
     /tmp/cclVlxlC.s:34081  .debug_loclists:000028aa .LLST261
     /tmp/cclVlxlC.s:34076  .debug_loclists:000028a6 .LVUS261
     /tmp/cclVlxlC.s:34110  .debug_loclists:000028c8 .LLST262
     /tmp/cclVlxlC.s:34105  .debug_loclists:000028c4 .LVUS262
     /tmp/cclVlxlC.s:34137  .debug_loclists:000028e4 .LLST263
     /tmp/cclVlxlC.s:34134  .debug_loclists:000028e2 .LVUS263
     /tmp/cclVlxlC.s:34152  .debug_loclists:000028f4 .LLST264
     /tmp/cclVlxlC.s:34149  .debug_loclists:000028f2 .LVUS264
     /tmp/cclVlxlC.s:34175  .debug_loclists:0000290c .LLST265
     /tmp/cclVlxlC.s:34164  .debug_loclists:00002902 .LVUS265
     /tmp/cclVlxlC.s:6099   .text:000018b6 .LVL413
     /tmp/cclVlxlC.s:6114   .text:000018c8 .LVL415
     /tmp/cclVlxlC.s:6158   .text:000018f6 .LVL420
     /tmp/cclVlxlC.s:6083   .text:000018a6 .LVL411
     /tmp/cclVlxlC.s:6053   .text:00001880 .LVL408
     /tmp/cclVlxlC.s:6200   .text:00001918 .LFB53
     /tmp/cclVlxlC.s:6368   .text:000019a0 .LFE53
     /tmp/cclVlxlC.s:34222  .debug_loclists:0000293c .LLST266
     /tmp/cclVlxlC.s:34217  .debug_loclists:00002938 .LVUS266
     /tmp/cclVlxlC.s:34249  .debug_loclists:00002959 .LLST267
     /tmp/cclVlxlC.s:34244  .debug_loclists:00002955 .LVUS267
     /tmp/cclVlxlC.s:34278  .debug_loclists:00002978 .LLST268
     /tmp/cclVlxlC.s:34271  .debug_loclists:00002972 .LVUS268
     /tmp/cclVlxlC.s:34317  .debug_loclists:000029a1 .LLST269
     /tmp/cclVlxlC.s:34310  .debug_loclists:0000299b .LVUS269
     /tmp/cclVlxlC.s:34356  .debug_loclists:000029ca .LLST270
     /tmp/cclVlxlC.s:34349  .debug_loclists:000029c4 .LVUS270
     /tmp/cclVlxlC.s:34393  .debug_loclists:000029f1 .LLST271
     /tmp/cclVlxlC.s:34388  .debug_loclists:000029ed .LVUS271
     /tmp/cclVlxlC.s:34418  .debug_loclists:00002a0b .LLST272
     /tmp/cclVlxlC.s:34413  .debug_loclists:00002a07 .LVUS272
     /tmp/cclVlxlC.s:39728  .debug_rnglists:00000260 .LLRL273
     /tmp/cclVlxlC.s:34443  .debug_loclists:00002a25 .LLST274
     /tmp/cclVlxlC.s:34438  .debug_loclists:00002a21 .LVUS274
     /tmp/cclVlxlC.s:34478  .debug_loclists:00002a49 .LLST275
     /tmp/cclVlxlC.s:34475  .debug_loclists:00002a47 .LVUS275
     /tmp/cclVlxlC.s:6299   .text:00001958 .LBI393
     /tmp/cclVlxlC.s:6298   .text:00001958 .LBB393
     /tmp/cclVlxlC.s:6310   .text:0000195e .LBE393
     /tmp/cclVlxlC.s:34488  .debug_loclists:00002a54 .LLST276
     /tmp/cclVlxlC.s:34485  .debug_loclists:00002a52 .LVUS276
     /tmp/cclVlxlC.s:34499  .debug_loclists:00002a60 .LLST278
     /tmp/cclVlxlC.s:34496  .debug_loclists:00002a5e .LVUS278
     /tmp/cclVlxlC.s:6256   .text:0000193e .LVL426
     /tmp/cclVlxlC.s:6315   .text:00001966 .LVL431
     /tmp/cclVlxlC.s:6366   .text:000019a0 .LVL440
     /tmp/cclVlxlC.s:6373   .text:000019a0 .LFB54
     /tmp/cclVlxlC.s:6667   .text:00001b24 .LFE54
     /tmp/cclVlxlC.s:34515  .debug_loclists:00002a71 .LLST279
     /tmp/cclVlxlC.s:34506  .debug_loclists:00002a69 .LVUS279
     /tmp/cclVlxlC.s:34562  .debug_loclists:00002aa6 .LLST280
     /tmp/cclVlxlC.s:34557  .debug_loclists:00002aa2 .LVUS280
     /tmp/cclVlxlC.s:34593  .debug_loclists:00002ac9 .LLST281
     /tmp/cclVlxlC.s:34584  .debug_loclists:00002ac1 .LVUS281
     /tmp/cclVlxlC.s:34640  .debug_loclists:00002b00 .LLST282
     /tmp/cclVlxlC.s:34635  .debug_loclists:00002afc .LVUS282
     /tmp/cclVlxlC.s:34667  .debug_loclists:00002b1f .LLST283
     /tmp/cclVlxlC.s:34662  .debug_loclists:00002b1b .LVUS283
     /tmp/cclVlxlC.s:34708  .debug_loclists:00002b4c .LLST284
     /tmp/cclVlxlC.s:34703  .debug_loclists:00002b48 .LVUS284
     /tmp/cclVlxlC.s:34739  .debug_loclists:00002b6c .LLST285
     /tmp/cclVlxlC.s:34732  .debug_loclists:00002b66 .LVUS285
     /tmp/cclVlxlC.s:34782  .debug_loclists:00002b9a .LLST286
     /tmp/cclVlxlC.s:34773  .debug_loclists:00002b92 .LVUS286
     /tmp/cclVlxlC.s:34837  .debug_loclists:00002bd7 .LLST287
     /tmp/cclVlxlC.s:34826  .debug_loclists:00002bcd .LVUS287
     /tmp/cclVlxlC.s:6578   .text:00001aa6 .LVL450
     /tmp/cclVlxlC.s:6586   .text:00001ab4 .LVL451
     /tmp/cclVlxlC.s:6616   .text:00001ae0 .LVL453
     /tmp/cclVlxlC.s:6657   .text:00001b1a .LVL458
     /tmp/cclVlxlC.s:6672   .text:00001b24 .LFB55
     /tmp/cclVlxlC.s:6922   .text:00001c40 .LFE55
     /tmp/cclVlxlC.s:34893  .debug_loclists:00002c10 .LLST288
     /tmp/cclVlxlC.s:34888  .debug_loclists:00002c0c .LVUS288
     /tmp/cclVlxlC.s:34926  .debug_loclists:00002c33 .LLST289
     /tmp/cclVlxlC.s:34915  .debug_loclists:00002c29 .LVUS289
     /tmp/cclVlxlC.s:34983  .debug_loclists:00002c6f .LLST290
     /tmp/cclVlxlC.s:34974  .debug_loclists:00002c67 .LVUS290
     /tmp/cclVlxlC.s:35062  .debug_loclists:00002cc7 .LLST291
     /tmp/cclVlxlC.s:35057  .debug_loclists:00002cc3 .LVUS291
     /tmp/cclVlxlC.s:35091  .debug_loclists:00002ce8 .LLST292
     /tmp/cclVlxlC.s:35086  .debug_loclists:00002ce4 .LVUS292
     /tmp/cclVlxlC.s:35120  .debug_loclists:00002d09 .LLST293
     /tmp/cclVlxlC.s:35115  .debug_loclists:00002d05 .LVUS293
     /tmp/cclVlxlC.s:35149  .debug_loclists:00002d2a .LLST294
     /tmp/cclVlxlC.s:35144  .debug_loclists:00002d26 .LVUS294
     /tmp/cclVlxlC.s:6855   .text:00001bec .LBI397
     /tmp/cclVlxlC.s:6854   .text:00001bec .LBB397
     /tmp/cclVlxlC.s:6872   .text:00001c00 .LBE397
     /tmp/cclVlxlC.s:35176  .debug_loclists:00002d49 .LLST295
     /tmp/cclVlxlC.s:35173  .debug_loclists:00002d47 .LVUS295
     /tmp/cclVlxlC.s:35187  .debug_loclists:00002d55 .LLST296
     /tmp/cclVlxlC.s:35184  .debug_loclists:00002d53 .LVUS296
     /tmp/cclVlxlC.s:35202  .debug_loclists:00002d65 .LLST297
     /tmp/cclVlxlC.s:35199  .debug_loclists:00002d63 .LVUS297
     /tmp/cclVlxlC.s:35217  .debug_loclists:00002d75 .LLST298
     /tmp/cclVlxlC.s:35214  .debug_loclists:00002d73 .LVUS298
     /tmp/cclVlxlC.s:35232  .debug_loclists:00002d85 .LLST299
     /tmp/cclVlxlC.s:35229  .debug_loclists:00002d83 .LVUS299
     /tmp/cclVlxlC.s:6868   .text:00001c00 .LVL474
     /tmp/cclVlxlC.s:6790   .text:00001b92 .LVL466
     /tmp/cclVlxlC.s:6846   .text:00001be6 .LVL472
     /tmp/cclVlxlC.s:6927   .text:00001c40 .LFB57
     /tmp/cclVlxlC.s:7572   .text:00001f82 .LFE57
     /tmp/cclVlxlC.s:35253  .debug_loclists:00002d9b .LLST300
     /tmp/cclVlxlC.s:35244  .debug_loclists:00002d93 .LVUS300
     /tmp/cclVlxlC.s:35302  .debug_loclists:00002dd2 .LLST301
     /tmp/cclVlxlC.s:35295  .debug_loclists:00002dcc .LVUS301
     /tmp/cclVlxlC.s:35343  .debug_loclists:00002e01 .LLST302
     /tmp/cclVlxlC.s:35334  .debug_loclists:00002df9 .LVUS302
     /tmp/cclVlxlC.s:35390  .debug_loclists:00002e36 .LLST303
     /tmp/cclVlxlC.s:35385  .debug_loclists:00002e32 .LVUS303
     /tmp/cclVlxlC.s:35417  .debug_loclists:00002e55 .LLST304
     /tmp/cclVlxlC.s:35412  .debug_loclists:00002e51 .LVUS304
     /tmp/cclVlxlC.s:35458  .debug_loclists:00002e82 .LLST305
     /tmp/cclVlxlC.s:35453  .debug_loclists:00002e7e .LVUS305
     /tmp/cclVlxlC.s:35491  .debug_loclists:00002ea5 .LLST306
     /tmp/cclVlxlC.s:35486  .debug_loclists:00002ea1 .LVUS306
     /tmp/cclVlxlC.s:35522  .debug_loclists:00002ec6 .LLST307
     /tmp/cclVlxlC.s:35515  .debug_loclists:00002ec0 .LVUS307
     /tmp/cclVlxlC.s:35567  .debug_loclists:00002ef8 .LLST308
     /tmp/cclVlxlC.s:35556  .debug_loclists:00002eee .LVUS308
     /tmp/cclVlxlC.s:7323   .text:00001e5e .LBI415
     /tmp/cclVlxlC.s:39738  .debug_rnglists:0000026c .LLRL309
     /tmp/cclVlxlC.s:35621  .debug_loclists:00002f32 .LLST310
     /tmp/cclVlxlC.s:35618  .debug_loclists:00002f30 .LVUS310
     /tmp/cclVlxlC.s:35636  .debug_loclists:00002f42 .LLST311
     /tmp/cclVlxlC.s:35633  .debug_loclists:00002f40 .LVUS311
     /tmp/cclVlxlC.s:7329   .text:00001e5e .LBI417
     /tmp/cclVlxlC.s:39751  .debug_rnglists:0000027f .LLRL312
     /tmp/cclVlxlC.s:35649  .debug_loclists:00002f50 .LLST313
     /tmp/cclVlxlC.s:35646  .debug_loclists:00002f4e .LVUS313
     /tmp/cclVlxlC.s:7356   .text:00001e5e .LBI420
     /tmp/cclVlxlC.s:39761  .debug_rnglists:0000028d .LLRL314
     /tmp/cclVlxlC.s:7338   .text:00001e5e .LBI424
     /tmp/cclVlxlC.s:7337   .text:00001e5e .LBB424
     /tmp/cclVlxlC.s:7344   .text:00001e5e .LBE424
     /tmp/cclVlxlC.s:35662  .debug_loclists:00002f5e .LLST315
     /tmp/cclVlxlC.s:35659  .debug_loclists:00002f5c .LVUS315
     /tmp/cclVlxlC.s:7347   .text:00001e5e .LBI426
     /tmp/cclVlxlC.s:7346   .text:00001e5e .LBB426
     /tmp/cclVlxlC.s:7353   .text:00001e5e .LBE426
     /tmp/cclVlxlC.s:35675  .debug_loclists:00002f6c .LLST316
     /tmp/cclVlxlC.s:35672  .debug_loclists:00002f6a .LVUS316
     /tmp/cclVlxlC.s:7365   .text:00001e5e .LBI429
     /tmp/cclVlxlC.s:7364   .text:00001e5e .LBB429
     /tmp/cclVlxlC.s:7371   .text:00001e5e .LBE429
     /tmp/cclVlxlC.s:7374   .text:00001e5e .LBI431
     /tmp/cclVlxlC.s:7373   .text:00001e5e .LBB431
     /tmp/cclVlxlC.s:7380   .text:00001e5e .LBE431
     /tmp/cclVlxlC.s:7388   .text:00001e64 .LBI433
     /tmp/cclVlxlC.s:39771  .debug_rnglists:0000029b .LLRL317
     /tmp/cclVlxlC.s:35688  .debug_loclists:00002f7a .LLST318
     /tmp/cclVlxlC.s:35685  .debug_loclists:00002f78 .LVUS318
     /tmp/cclVlxlC.s:35716  .debug_loclists:00002f97 .LLST319
     /tmp/cclVlxlC.s:35713  .debug_loclists:00002f95 .LVUS319
     /tmp/cclVlxlC.s:35744  .debug_loclists:00002fb4 .LLST320
     /tmp/cclVlxlC.s:35741  .debug_loclists:00002fb2 .LVUS320
     /tmp/cclVlxlC.s:7221   .text:00001dc6 .LVL491
     /tmp/cclVlxlC.s:7229   .text:00001dd4 .LVL492
     /tmp/cclVlxlC.s:7259   .text:00001e00 .LVL494
     /tmp/cclVlxlC.s:7553   .text:00001f66 .LVL503
     /tmp/cclVlxlC.s:7577   .text:00001f82 .LFB59
     /tmp/cclVlxlC.s:7888   .text:000020fc .LFE59
     /tmp/cclVlxlC.s:35778  .debug_loclists:00002fd7 .LLST321
     /tmp/cclVlxlC.s:35769  .debug_loclists:00002fcf .LVUS321
     /tmp/cclVlxlC.s:35823  .debug_loclists:00003008 .LLST322
     /tmp/cclVlxlC.s:35820  .debug_loclists:00003006 .LVUS322
     /tmp/cclVlxlC.s:35838  .debug_loclists:00003019 .LLST323
     /tmp/cclVlxlC.s:35835  .debug_loclists:00003017 .LVUS323
     /tmp/cclVlxlC.s:35853  .debug_loclists:0000302a .LLST324
     /tmp/cclVlxlC.s:35850  .debug_loclists:00003028 .LVUS324
     /tmp/cclVlxlC.s:35868  .debug_loclists:0000303b .LLST325
     /tmp/cclVlxlC.s:35865  .debug_loclists:00003039 .LVUS325
     /tmp/cclVlxlC.s:35885  .debug_loclists:0000304d .LLST326
     /tmp/cclVlxlC.s:35876  .debug_loclists:00003045 .LVUS326
     /tmp/cclVlxlC.s:35934  .debug_loclists:0000307f .LLST327
     /tmp/cclVlxlC.s:35923  .debug_loclists:00003075 .LVUS327
     /tmp/cclVlxlC.s:36013  .debug_loclists:000030d3 .LLST328
     /tmp/cclVlxlC.s:36010  .debug_loclists:000030d1 .LVUS328
     /tmp/cclVlxlC.s:36036  .debug_loclists:000030eb .LLST329
     /tmp/cclVlxlC.s:36031  .debug_loclists:000030e7 .LVUS329
     /tmp/cclVlxlC.s:36065  .debug_loclists:00003109 .LLST330
     /tmp/cclVlxlC.s:36062  .debug_loclists:00003107 .LVUS330
     /tmp/cclVlxlC.s:7720   .text:00002018 .LBI449
     /tmp/cclVlxlC.s:7719   .text:00002018 .LBB449
     /tmp/cclVlxlC.s:7737   .text:0000202e .LBE449
     /tmp/cclVlxlC.s:36076  .debug_loclists:00003115 .LLST331
     /tmp/cclVlxlC.s:36073  .debug_loclists:00003113 .LVUS331
     /tmp/cclVlxlC.s:36087  .debug_loclists:00003121 .LLST332
     /tmp/cclVlxlC.s:36084  .debug_loclists:0000311f .LVUS332
     /tmp/cclVlxlC.s:36099  .debug_loclists:0000312e .LLST333
     /tmp/cclVlxlC.s:36096  .debug_loclists:0000312c .LVUS333
     /tmp/cclVlxlC.s:7734   .text:0000202e .LVL511
     /tmp/cclVlxlC.s:7838   .text:000020b0 .LBI451
     /tmp/cclVlxlC.s:7837   .text:000020b0 .LBB451
     /tmp/cclVlxlC.s:7886   .text:000020fc .LBE451
     /tmp/cclVlxlC.s:36110  .debug_loclists:0000313a .LLST334
     /tmp/cclVlxlC.s:36107  .debug_loclists:00003138 .LVUS334
     /tmp/cclVlxlC.s:36123  .debug_loclists:00003148 .LLST335
     /tmp/cclVlxlC.s:36118  .debug_loclists:00003144 .LVUS335
     /tmp/cclVlxlC.s:36152  .debug_loclists:00003166 .LLST336
     /tmp/cclVlxlC.s:36149  .debug_loclists:00003164 .LVUS336
     /tmp/cclVlxlC.s:36163  .debug_loclists:00003172 .LLST337
     /tmp/cclVlxlC.s:36160  .debug_loclists:00003170 .LVUS337
     /tmp/cclVlxlC.s:36174  .debug_loclists:0000317e .LLST338
     /tmp/cclVlxlC.s:36171  .debug_loclists:0000317c .LVUS338
     /tmp/cclVlxlC.s:36189  .debug_loclists:0000318e .LLST339
     /tmp/cclVlxlC.s:36186  .debug_loclists:0000318c .LVUS339
     /tmp/cclVlxlC.s:36204  .debug_loclists:0000319e .LLST340
     /tmp/cclVlxlC.s:36201  .debug_loclists:0000319c .LVUS340
     /tmp/cclVlxlC.s:7876   .text:000020f2 .LVL525
     /tmp/cclVlxlC.s:7677   .text:00001fdc .LVL508
     /tmp/cclVlxlC.s:7774   .text:0000205c .LVL516
     /tmp/cclVlxlC.s:7826   .text:000020aa .LVL521
     /tmp/cclVlxlC.s:7893   .text:000020fc .LFB61
     /tmp/cclVlxlC.s:8425   .text:0000239a .LFE61
     /tmp/cclVlxlC.s:36227  .debug_loclists:000031b6 .LLST341
     /tmp/cclVlxlC.s:36216  .debug_loclists:000031ac .LVUS341
     /tmp/cclVlxlC.s:36280  .debug_loclists:000031f1 .LLST342
     /tmp/cclVlxlC.s:36277  .debug_loclists:000031ef .LVUS342
     /tmp/cclVlxlC.s:36297  .debug_loclists:00003204 .LLST343
     /tmp/cclVlxlC.s:36292  .debug_loclists:00003200 .LVUS343
     /tmp/cclVlxlC.s:36324  .debug_loclists:00003223 .LLST344
     /tmp/cclVlxlC.s:36321  .debug_loclists:00003221 .LVUS344
     /tmp/cclVlxlC.s:36339  .debug_loclists:00003234 .LLST345
     /tmp/cclVlxlC.s:36336  .debug_loclists:00003232 .LVUS345
     /tmp/cclVlxlC.s:36360  .debug_loclists:0000324b .LLST346
     /tmp/cclVlxlC.s:36351  .debug_loclists:00003243 .LVUS346
     /tmp/cclVlxlC.s:36401  .debug_loclists:00003276 .LLST347
     /tmp/cclVlxlC.s:36398  .debug_loclists:00003274 .LVUS347
     /tmp/cclVlxlC.s:36422  .debug_loclists:0000328f .LLST348
     /tmp/cclVlxlC.s:36419  .debug_loclists:0000328d .LVUS348
     /tmp/cclVlxlC.s:36447  .debug_loclists:000032a9 .LLST349
     /tmp/cclVlxlC.s:36440  .debug_loclists:000032a3 .LVUS349
     /tmp/cclVlxlC.s:36484  .debug_loclists:000032cf .LLST350
     /tmp/cclVlxlC.s:36479  .debug_loclists:000032cb .LVUS350
     /tmp/cclVlxlC.s:8037   .text:00002196 .LBI459
     /tmp/cclVlxlC.s:8036   .text:00002196 .LBB459
     /tmp/cclVlxlC.s:8054   .text:000021ac .LBE459
     /tmp/cclVlxlC.s:36503  .debug_loclists:000032e3 .LLST351
     /tmp/cclVlxlC.s:36500  .debug_loclists:000032e1 .LVUS351
     /tmp/cclVlxlC.s:36514  .debug_loclists:000032ef .LLST352
     /tmp/cclVlxlC.s:36511  .debug_loclists:000032ed .LVUS352
     /tmp/cclVlxlC.s:36526  .debug_loclists:000032fc .LLST353
     /tmp/cclVlxlC.s:36523  .debug_loclists:000032fa .LVUS353
     /tmp/cclVlxlC.s:8051   .text:000021ac .LVL533
     /tmp/cclVlxlC.s:8170   .text:0000224a .LBI461
     /tmp/cclVlxlC.s:8169   .text:0000224a .LBB461
     /tmp/cclVlxlC.s:8423   .text:0000239a .LBE461
     /tmp/cclVlxlC.s:36539  .debug_loclists:0000330a .LLST354
     /tmp/cclVlxlC.s:36534  .debug_loclists:00003306 .LVUS354
     /tmp/cclVlxlC.s:36562  .debug_loclists:00003322 .LLST355
     /tmp/cclVlxlC.s:36555  .debug_loclists:0000331c .LVUS355
     /tmp/cclVlxlC.s:36597  .debug_loclists:00003346 .LLST356
     /tmp/cclVlxlC.s:36594  .debug_loclists:00003344 .LVUS356
     /tmp/cclVlxlC.s:36608  .debug_loclists:00003353 .LLST357
     /tmp/cclVlxlC.s:36605  .debug_loclists:00003351 .LVUS357
     /tmp/cclVlxlC.s:36623  .debug_loclists:00003363 .LLST358
     /tmp/cclVlxlC.s:36620  .debug_loclists:00003361 .LVUS358
     /tmp/cclVlxlC.s:36640  .debug_loclists:00003376 .LLST359
     /tmp/cclVlxlC.s:36635  .debug_loclists:00003372 .LVUS359
     /tmp/cclVlxlC.s:36667  .debug_loclists:00003395 .LLST360
     /tmp/cclVlxlC.s:36664  .debug_loclists:00003393 .LVUS360
     /tmp/cclVlxlC.s:8212   .text:0000228c .LBI463
     /tmp/cclVlxlC.s:8211   .text:0000228c .LBB463
     /tmp/cclVlxlC.s:8421   .text:0000239a .LBE463
     /tmp/cclVlxlC.s:36682  .debug_loclists:000033a6 .LLST361
     /tmp/cclVlxlC.s:36679  .debug_loclists:000033a4 .LVUS361
     /tmp/cclVlxlC.s:36699  .debug_loclists:000033b9 .LLST362
     /tmp/cclVlxlC.s:36696  .debug_loclists:000033b7 .LVUS362
     /tmp/cclVlxlC.s:36718  .debug_loclists:000033ce .LLST363
     /tmp/cclVlxlC.s:36711  .debug_loclists:000033c8 .LVUS363
     /tmp/cclVlxlC.s:36753  .debug_loclists:000033f7 .LLST364
     /tmp/cclVlxlC.s:36750  .debug_loclists:000033f5 .LVUS364
     /tmp/cclVlxlC.s:36770  .debug_loclists:00003409 .LLST365
     /tmp/cclVlxlC.s:36765  .debug_loclists:00003405 .LVUS365
     /tmp/cclVlxlC.s:36797  .debug_loclists:00003426 .LLST366
     /tmp/cclVlxlC.s:36794  .debug_loclists:00003424 .LVUS366
     /tmp/cclVlxlC.s:36816  .debug_loclists:0000343b .LLST367
     /tmp/cclVlxlC.s:36809  .debug_loclists:00003435 .LVUS367
     /tmp/cclVlxlC.s:36842  .debug_loclists:0000345b .LLST368
     /tmp/cclVlxlC.s:36837  .debug_loclists:00003457 .LVUS368
     /tmp/cclVlxlC.s:36873  .debug_loclists:0000347c .LLST369
     /tmp/cclVlxlC.s:36864  .debug_loclists:00003474 .LVUS369
     /tmp/cclVlxlC.s:36905  .debug_loclists:0000349e .LLST370
     /tmp/cclVlxlC.s:36900  .debug_loclists:0000349a .LVUS370
     /tmp/cclVlxlC.s:36934  .debug_loclists:000034bd .LLST371
     /tmp/cclVlxlC.s:36929  .debug_loclists:000034b9 .LVUS371
     /tmp/cclVlxlC.s:36967  .debug_loclists:000034e0 .LLST372
     /tmp/cclVlxlC.s:36958  .debug_loclists:000034d8 .LVUS372
     /tmp/cclVlxlC.s:8300   .text:00002306 .LVL554
     /tmp/cclVlxlC.s:8311   .text:0000231a .LVL555
     /tmp/cclVlxlC.s:8335   .text:00002336 .LVL557
     /tmp/cclVlxlC.s:8403   .text:0000238a .LVL565
     /tmp/cclVlxlC.s:8192   .text:0000226c .LVL545
     /tmp/cclVlxlC.s:8207   .text:00002288 .LVL546
     /tmp/cclVlxlC.s:7994   .text:00002158 .LVL530
     /tmp/cclVlxlC.s:8094   .text:000021dc .LVL538
     /tmp/cclVlxlC.s:8145   .text:0000222a .LVL542
     /tmp/cclVlxlC.s:8430   .text:0000239a .LFB65
     /tmp/cclVlxlC.s:8601   .text:00002446 .LFE65
     /tmp/cclVlxlC.s:37013  .debug_loclists:0000350f .LLST373
     /tmp/cclVlxlC.s:37008  .debug_loclists:0000350b .LVUS373
     /tmp/cclVlxlC.s:37040  .debug_loclists:0000352c .LLST374
     /tmp/cclVlxlC.s:37035  .debug_loclists:00003528 .LVUS374
     /tmp/cclVlxlC.s:37067  .debug_loclists:00003549 .LLST375
     /tmp/cclVlxlC.s:37062  .debug_loclists:00003545 .LVUS375
     /tmp/cclVlxlC.s:37094  .debug_loclists:00003566 .LLST376
     /tmp/cclVlxlC.s:37089  .debug_loclists:00003562 .LVUS376
     /tmp/cclVlxlC.s:37122  .debug_loclists:00003584 .LLST377
     /tmp/cclVlxlC.s:37111  .debug_loclists:0000357a .LVUS377
     /tmp/cclVlxlC.s:37221  .debug_loclists:000035f4 .LLST378
     /tmp/cclVlxlC.s:37210  .debug_loclists:000035ea .LVUS378
     /tmp/cclVlxlC.s:37260  .debug_loclists:0000361c .LLST379
     /tmp/cclVlxlC.s:37253  .debug_loclists:00003616 .LVUS379
     /tmp/cclVlxlC.s:8527   .text:000023f6 .LBB466
     /tmp/cclVlxlC.s:8538   .text:000023fa .LBE466
     /tmp/cclVlxlC.s:37310  .debug_loclists:00003658 .LLST380
     /tmp/cclVlxlC.s:37303  .debug_loclists:00003652 .LVUS380
     /tmp/cclVlxlC.s:37344  .debug_loclists:0000367b .LLST381
     /tmp/cclVlxlC.s:37341  .debug_loclists:00003679 .LVUS381
     /tmp/cclVlxlC.s:8500   .text:000023d4 .LVL573
     /tmp/cclVlxlC.s:8551   .text:0000240c .LVL578
     /tmp/cclVlxlC.s:8570   .text:00002422 .LVL582
     /tmp/cclVlxlC.s:9092   .text:000025dc .LFB71
     /tmp/cclVlxlC.s:9168   .text:0000263e .LFE71
     /tmp/cclVlxlC.s:37354  .debug_loclists:00003686 .LLST416
     /tmp/cclVlxlC.s:37351  .debug_loclists:00003684 .LVUS416
     /tmp/cclVlxlC.s:9138   .text:00002610 .LVL646
     /tmp/cclVlxlC.s:9150   .text:00002624 .LVL647
     /tmp/cclVlxlC.s:9154   .text:0000262a .LVL648
     /tmp/cclVlxlC.s:9173   .text:0000263e .LFB72
     /tmp/cclVlxlC.s:9273   .text:000026a2 .LFE72
     /tmp/cclVlxlC.s:37373  .debug_loclists:0000369a .LLST417
     /tmp/cclVlxlC.s:37366  .debug_loclists:00003694 .LVUS417
     /tmp/cclVlxlC.s:37400  .debug_loclists:000036b6 .LLST418
     /tmp/cclVlxlC.s:37395  .debug_loclists:000036b2 .LVUS418
     /tmp/cclVlxlC.s:37437  .debug_loclists:000036dc .LLST419
     /tmp/cclVlxlC.s:37428  .debug_loclists:000036d4 .LVUS419
     /tmp/cclVlxlC.s:37481  .debug_loclists:00003709 .LLST420
     /tmp/cclVlxlC.s:37474  .debug_loclists:00003703 .LVUS420
     /tmp/cclVlxlC.s:9203   .text:00002654 .LVL651
     /tmp/cclVlxlC.s:9208   .text:0000265c .LVL652
     /tmp/cclVlxlC.s:9212   .text:00002662 .LVL653
     /tmp/cclVlxlC.s:9216   .text:00002668 .LVL654
     /tmp/cclVlxlC.s:9220   .text:0000266e .LVL655
     /tmp/cclVlxlC.s:9224   .text:00002674 .LVL656
     /tmp/cclVlxlC.s:9241   .text:00002686 .LVL657
     /tmp/cclVlxlC.s:9251   .text:0000268e .LVL659
     /tmp/cclVlxlC.s:9277   .text:000026a2 .LFB73
     /tmp/cclVlxlC.s:9299   .text:000026b0 .LFE73
     /tmp/cclVlxlC.s:9297   .text:000026b0 .LVL663
     /tmp/cclVlxlC.s:9303   .text:000026b0 .LFB74
     /tmp/cclVlxlC.s:9325   .text:000026be .LFE74
     /tmp/cclVlxlC.s:9323   .text:000026be .LVL664
     /tmp/cclVlxlC.s:9329   .text:000026be .LFB75
     /tmp/cclVlxlC.s:9710   .text:00002882 .LFE75
     /tmp/cclVlxlC.s:37507  .debug_loclists:00003724 .LLST421
     /tmp/cclVlxlC.s:37504  .debug_loclists:00003722 .LVUS421
     /tmp/cclVlxlC.s:37526  .debug_loclists:00003738 .LLST422
     /tmp/cclVlxlC.s:37519  .debug_loclists:00003732 .LVUS422
     /tmp/cclVlxlC.s:37565  .debug_loclists:00003763 .LLST423
     /tmp/cclVlxlC.s:37558  .debug_loclists:0000375d .LVUS423
     /tmp/cclVlxlC.s:37638  .debug_loclists:000037ae .LLST424
     /tmp/cclVlxlC.s:37635  .debug_loclists:000037ac .LVUS424
     /tmp/cclVlxlC.s:37687  .debug_loclists:000037e4 .LLST425
     /tmp/cclVlxlC.s:37682  .debug_loclists:000037e0 .LVUS425
     /tmp/cclVlxlC.s:9452   .text:00002738 .LBI513
     /tmp/cclVlxlC.s:9451   .text:00002738 .LBB513
     /tmp/cclVlxlC.s:9459   .text:00002738 .LBE513
     /tmp/cclVlxlC.s:37762  .debug_loclists:00003833 .LLST426
     /tmp/cclVlxlC.s:37759  .debug_loclists:00003831 .LVUS426
     /tmp/cclVlxlC.s:9481   .text:0000274e .LBI515
     /tmp/cclVlxlC.s:9480   .text:0000274e .LBB515
     /tmp/cclVlxlC.s:9493   .text:00002756 .LBE515
     /tmp/cclVlxlC.s:37774  .debug_loclists:00003841 .LLST427
     /tmp/cclVlxlC.s:37771  .debug_loclists:0000383f .LVUS427
     /tmp/cclVlxlC.s:9496   .text:00002756 .LBI517
     /tmp/cclVlxlC.s:9495   .text:00002756 .LBB517
     /tmp/cclVlxlC.s:9508   .text:0000275e .LBE517
     /tmp/cclVlxlC.s:37786  .debug_loclists:0000384f .LLST428
     /tmp/cclVlxlC.s:37783  .debug_loclists:0000384d .LVUS428
     /tmp/cclVlxlC.s:9409   .text:000026fe .LVL665
     /tmp/cclVlxlC.s:9419   .text:00002710 .LVL666
     /tmp/cclVlxlC.s:9428   .text:0000271e .LVL667
     /tmp/cclVlxlC.s:9448   .text:00002738 .LVL668
     /tmp/cclVlxlC.s:9527   .text:00002778 .LVL673
     /tmp/cclVlxlC.s:9542   .text:0000278e .LVL674
     /tmp/cclVlxlC.s:9573   .text:000027ba .LVL676
     /tmp/cclVlxlC.s:9651   .text:0000282a .LVL682
     /tmp/cclVlxlC.s:9677   .text:00002850 .LVL683
     /tmp/cclVlxlC.s:9715   .text:00002882 .LFB77
     /tmp/cclVlxlC.s:9766   .text:000028a4 .LFE77
     /tmp/cclVlxlC.s:37802  .debug_loclists:00003861 .LLST429
     /tmp/cclVlxlC.s:37795  .debug_loclists:0000385b .LVUS429
     /tmp/cclVlxlC.s:9732   .text:00002888 .LBI523
     /tmp/cclVlxlC.s:9731   .text:00002888 .LBB523
     /tmp/cclVlxlC.s:9755   .text:0000289c .LBE523
     /tmp/cclVlxlC.s:9736   .text:00002888 .LBI524
     /tmp/cclVlxlC.s:9735   .text:00002888 .LBB524
     /tmp/cclVlxlC.s:9754   .text:0000289c .LBE524
     /tmp/cclVlxlC.s:9743   .text:0000288c .LVL687
     /tmp/cclVlxlC.s:9772   .text.startup:00000000 .LFB80
     /tmp/cclVlxlC.s:12350  .text.startup:00000d0c .LFE80
     /tmp/cclVlxlC.s:9788   .text.startup:00000002 .LBI604
     /tmp/cclVlxlC.s:9787   .text.startup:00000002 .LBB604
     /tmp/cclVlxlC.s:9829   .text.startup:00000024 .LBE604
     /tmp/cclVlxlC.s:9832   .text.startup:00000024 .LBI606
     /tmp/cclVlxlC.s:9831   .text.startup:00000024 .LBB606
     /tmp/cclVlxlC.s:9850   .text.startup:0000003c .LBE606
     /tmp/cclVlxlC.s:9866   .text.startup:0000004a .LBI608
     /tmp/cclVlxlC.s:9865   .text.startup:0000004a .LBB608
     /tmp/cclVlxlC.s:9898   .text.startup:00000070 .LBE608
     /tmp/cclVlxlC.s:9901   .text.startup:00000070 .LBI610
     /tmp/cclVlxlC.s:9900   .text.startup:00000070 .LBB610
     /tmp/cclVlxlC.s:9919   .text.startup:00000082 .LBE610
     /tmp/cclVlxlC.s:9922   .text.startup:00000082 .LBI612
     /tmp/cclVlxlC.s:9921   .text.startup:00000082 .LBB612
     /tmp/cclVlxlC.s:10510  .text.startup:0000038a .LBE612
     /tmp/cclVlxlC.s:9938   .text.startup:00000094 .LBI614
     /tmp/cclVlxlC.s:9937   .text.startup:00000094 .LBB614
     /tmp/cclVlxlC.s:10104  .text.startup:000000e8 .LBE614
     /tmp/cclVlxlC.s:9945   .text.startup:00000096 .LBI616
     /tmp/cclVlxlC.s:39847  .debug_rnglists:00000302 .LLRL430
     /tmp/cclVlxlC.s:9983   .text.startup:000000b0 .LBI618
     /tmp/cclVlxlC.s:39857  .debug_rnglists:0000030e .LLRL431
     /tmp/cclVlxlC.s:10007  .text.startup:000000be .LBI624
     /tmp/cclVlxlC.s:39867  .debug_rnglists:0000031a .LLRL432
     /tmp/cclVlxlC.s:10033  .text.startup:000000c6 .LBI626
     /tmp/cclVlxlC.s:39877  .debug_rnglists:00000326 .LLRL433
     /tmp/cclVlxlC.s:10057  .text.startup:000000d4 .LBI632
     /tmp/cclVlxlC.s:39887  .debug_rnglists:00000332 .LLRL434
     /tmp/cclVlxlC.s:10083  .text.startup:000000dc .LBI634
     /tmp/cclVlxlC.s:39897  .debug_rnglists:0000033e .LLRL435
     /tmp/cclVlxlC.s:10106  .text.startup:000000e8 .LBI640
     /tmp/cclVlxlC.s:10105  .text.startup:000000e8 .LBB640
     /tmp/cclVlxlC.s:10371  .text.startup:000002f2 .LBE640
     /tmp/cclVlxlC.s:10373  .text.startup:000002f2 .LBI642
     /tmp/cclVlxlC.s:10372  .text.startup:000002f2 .LBB642
     /tmp/cclVlxlC.s:10394  .text.startup:00000314 .LBE642
     /tmp/cclVlxlC.s:10395  .text.startup:00000314 .LBB644
     /tmp/cclVlxlC.s:10417  .text.startup:00000324 .LBE644
     /tmp/cclVlxlC.s:10397  .text.startup:00000314 .LBB646
     /tmp/cclVlxlC.s:10411  .text.startup:0000031e .LBE646
     /tmp/cclVlxlC.s:10423  .text.startup:0000032e .LBB648
     /tmp/cclVlxlC.s:10445  .text.startup:0000033e .LBE648
     /tmp/cclVlxlC.s:10425  .text.startup:0000032e .LBB650
     /tmp/cclVlxlC.s:10439  .text.startup:00000338 .LBE650
     /tmp/cclVlxlC.s:10450  .text.startup:00000344 .LBI652
     /tmp/cclVlxlC.s:39907  .debug_rnglists:0000034a .LLRL436
     /tmp/cclVlxlC.s:10513  .text.startup:0000038a .LBI656
     /tmp/cclVlxlC.s:10512  .text.startup:0000038a .LBB656
     /tmp/cclVlxlC.s:10545  .text.startup:000003c0 .LBE656
     /tmp/cclVlxlC.s:10548  .text.startup:000003c0 .LBI658
     /tmp/cclVlxlC.s:10547  .text.startup:000003c0 .LBB658
     /tmp/cclVlxlC.s:10571  .text.startup:000003da .LBE658
     /tmp/cclVlxlC.s:10574  .text.startup:000003da .LBI660
     /tmp/cclVlxlC.s:10573  .text.startup:000003da .LBB660
     /tmp/cclVlxlC.s:10603  .text.startup:00000402 .LBE660
     /tmp/cclVlxlC.s:10606  .text.startup:00000402 .LBI662
     /tmp/cclVlxlC.s:10605  .text.startup:00000402 .LBB662
     /tmp/cclVlxlC.s:10623  .text.startup:00000418 .LBE662
     /tmp/cclVlxlC.s:10626  .text.startup:00000418 .LBI664
     /tmp/cclVlxlC.s:10625  .text.startup:00000418 .LBB664
     /tmp/cclVlxlC.s:10965  .text.startup:000005d6 .LBE664
     /tmp/cclVlxlC.s:10641  .text.startup:00000426 .LBI666
     /tmp/cclVlxlC.s:10640  .text.startup:00000426 .LBB666
     /tmp/cclVlxlC.s:10963  .text.startup:000005d6 .LBE666
     /tmp/cclVlxlC.s:10968  .text.startup:000005d6 .LBI668
     /tmp/cclVlxlC.s:39917  .debug_rnglists:00000356 .LLRL437
     /tmp/cclVlxlC.s:10981  .text.startup:000005e4 .LBB670
     /tmp/cclVlxlC.s:11276  .text.startup:00000748 .LBE670
     /tmp/cclVlxlC.s:10989  .text.startup:000005e6 .LBI671
     /tmp/cclVlxlC.s:10988  .text.startup:000005e6 .LBB671
     /tmp/cclVlxlC.s:11003  .text.startup:000005f2 .LBE671
     /tmp/cclVlxlC.s:11230  .text.startup:00000734 .LBI673
     /tmp/cclVlxlC.s:39927  .debug_rnglists:00000365 .LLRL438
     /tmp/cclVlxlC.s:11256  .text.startup:0000073c .LBI675
     /tmp/cclVlxlC.s:39937  .debug_rnglists:00000371 .LLRL439
     /tmp/cclVlxlC.s:39947  .debug_rnglists:0000037d .LLRL440
     /tmp/cclVlxlC.s:11705  .text.startup:0000096e .LBI682
     /tmp/cclVlxlC.s:39957  .debug_rnglists:0000038c .LLRL441
     /tmp/cclVlxlC.s:12011  .text.startup:00000b36 .LBI688
     /tmp/cclVlxlC.s:12010  .text.startup:00000b36 .LBB688
     /tmp/cclVlxlC.s:12098  .text.startup:00000be0 .LBE688
     /tmp/cclVlxlC.s:12044  .text.startup:00000b7e .LBI690
     /tmp/cclVlxlC.s:12043  .text.startup:00000b7e .LBB690
     /tmp/cclVlxlC.s:12096  .text.startup:00000be0 .LBE690
     /tmp/cclVlxlC.s:12359  .text:000028a4 .LFB105
     /tmp/cclVlxlC.s:14747  .text:000031f8 .LFE105
     /tmp/cclVlxlC.s:12441  .text:000028de .LBI711
     /tmp/cclVlxlC.s:39967  .debug_rnglists:0000039b .LLRL442
     /tmp/cclVlxlC.s:12506  .text:00002938 .LBI713
     /tmp/cclVlxlC.s:12505  .text:00002938 .LBB713
     /tmp/cclVlxlC.s:12511  .text:00002938 .LBE713
     /tmp/cclVlxlC.s:12543  .text:00002962 .LBI715
     /tmp/cclVlxlC.s:39980  .debug_rnglists:000003ad .LLRL443
     /tmp/cclVlxlC.s:37851  .debug_loclists:00003893 .LLST444
     /tmp/cclVlxlC.s:37834  .debug_loclists:00003883 .LVUS444
     /tmp/cclVlxlC.s:37917  .debug_loclists:000038ee .LLST445
     /tmp/cclVlxlC.s:37900  .debug_loclists:000038de .LVUS445
     /tmp/cclVlxlC.s:39990  .debug_rnglists:000003ba .LLRL446
     /tmp/cclVlxlC.s:38136  .debug_loclists:000039d2 .LLST447
     /tmp/cclVlxlC.s:37999  .debug_loclists:0000394a .LVUS447
     /tmp/cclVlxlC.s:12854  .text:00002a36 .LBI718
     /tmp/cclVlxlC.s:40201  .debug_rnglists:00000514 .LLRL448
     /tmp/cclVlxlC.s:38555  .debug_loclists:00003bfc .LLST449
     /tmp/cclVlxlC.s:38548  .debug_loclists:00003bf6 .LVUS449
     /tmp/cclVlxlC.s:38644  .debug_loclists:00003c5b .LLST450
     /tmp/cclVlxlC.s:38607  .debug_loclists:00003c37 .LVUS450
     /tmp/cclVlxlC.s:12860  .text:00002a36 .LBI720
     /tmp/cclVlxlC.s:12859  .text:00002a36 .LBB720
     /tmp/cclVlxlC.s:12873  .text:00002a3e .LBE720
     /tmp/cclVlxlC.s:38867  .debug_loclists:00003d64 .LLST451
     /tmp/cclVlxlC.s:38864  .debug_loclists:00003d62 .LVUS451
     /tmp/cclVlxlC.s:40214  .debug_rnglists:00000528 .LLRL452
     /tmp/cclVlxlC.s:38910  .debug_loclists:00003d90 .LLST453
     /tmp/cclVlxlC.s:38885  .debug_loclists:00003d78 .LVUS453
     /tmp/cclVlxlC.s:14321  .text:0000300c .LVL794
     /tmp/cclVlxlC.s:40236  .debug_rnglists:0000054a .LLRL454
     /tmp/cclVlxlC.s:14000  .text:00002e4a .LBI734
     /tmp/cclVlxlC.s:40249  .debug_rnglists:00000559 .LLRL455
     /tmp/cclVlxlC.s:39082  .debug_loclists:00003e54 .LLST456
     /tmp/cclVlxlC.s:39079  .debug_loclists:00003e52 .LVUS456
     /tmp/cclVlxlC.s:39100  .debug_loclists:00003e67 .LLST457
     /tmp/cclVlxlC.s:39097  .debug_loclists:00003e65 .LVUS457
     /tmp/cclVlxlC.s:39121  .debug_loclists:00003e7d .LLST458
     /tmp/cclVlxlC.s:39118  .debug_loclists:00003e7b .LVUS458
     /tmp/cclVlxlC.s:39144  .debug_loclists:00003e96 .LLST459
     /tmp/cclVlxlC.s:39139  .debug_loclists:00003e92 .LVUS459
     /tmp/cclVlxlC.s:40259  .debug_rnglists:00000566 .LLRL460
     /tmp/cclVlxlC.s:14059  .text:00002e94 .LBI737
     /tmp/cclVlxlC.s:14058  .text:00002e94 .LBB737
     /tmp/cclVlxlC.s:14147  .text:00002f16 .LBE737
     /tmp/cclVlxlC.s:39173  .debug_loclists:00003eb8 .LLST461
     /tmp/cclVlxlC.s:39170  .debug_loclists:00003eb6 .LVUS461
     /tmp/cclVlxlC.s:39184  .debug_loclists:00003ec7 .LLST462
     /tmp/cclVlxlC.s:39181  .debug_loclists:00003ec5 .LVUS462
     /tmp/cclVlxlC.s:39195  .debug_loclists:00003ed3 .LLST463
     /tmp/cclVlxlC.s:39192  .debug_loclists:00003ed1 .LVUS463
     /tmp/cclVlxlC.s:39212  .debug_loclists:00003ee5 .LLST464
     /tmp/cclVlxlC.s:39207  .debug_loclists:00003ee1 .LVUS464
     /tmp/cclVlxlC.s:39241  .debug_loclists:00003f06 .LLST465
     /tmp/cclVlxlC.s:39238  .debug_loclists:00003f04 .LVUS465
     /tmp/cclVlxlC.s:14093  .text:00002edc .LVL785
     /tmp/cclVlxlC.s:14106  .text:00002ef0 .LVL787
     /tmp/cclVlxlC.s:14752  .text:000031f8 .LFB110
     /tmp/cclVlxlC.s:14790  .text:0000323e .LFE110
     /tmp/cclVlxlC.s:13     .text:00000000 .LVL0
     /tmp/cclVlxlC.s:27     .text:00000008 .LVL1
     /tmp/cclVlxlC.s:54     .text:00000012 .LVL2
     /tmp/cclVlxlC.s:85     .text:0000001c .LVL3
     /tmp/cclVlxlC.s:131    .text:0000002c .LVL5
     /tmp/cclVlxlC.s:182    .text:00000050 .LVL6
     /tmp/cclVlxlC.s:228    .text:0000006c .LVL7
     /tmp/cclVlxlC.s:239    .text:0000006e .LVL8
     /tmp/cclVlxlC.s:296    .text:0000008e .LVL17
     /tmp/cclVlxlC.s:352    .text:000000ae .LVL19
     /tmp/cclVlxlC.s:403    .text:000000ce .LVL20
     /tmp/cclVlxlC.s:631    .text:00000160 .LVL44
     /tmp/cclVlxlC.s:409    .text:000000d0 .LVL21
     /tmp/cclVlxlC.s:427    .text:000000e6 .LVL22
     /tmp/cclVlxlC.s:539    .text:00000136 .LVL38
     /tmp/cclVlxlC.s:668    .text:0000017a .LVL47
     /tmp/cclVlxlC.s:722    .text:000001a4 .LVL51
     /tmp/cclVlxlC.s:818    .text:000001e4 .LVL61
     /tmp/cclVlxlC.s:895    .text:0000022a .LVL71
     /tmp/cclVlxlC.s:985    .text:0000029c .LVL74
     /tmp/cclVlxlC.s:1006   .text:000002a0 .LVL76
     /tmp/cclVlxlC.s:1031   .text:000002aa .LVL78
     /tmp/cclVlxlC.s:1048   .text:000002b4 .LVL79
     /tmp/cclVlxlC.s:1099   .text:000002e6 .LVL85
     /tmp/cclVlxlC.s:1210   .text:00000348 .LVL89
     /tmp/cclVlxlC.s:1221   .text:00000350 .LVL91
     /tmp/cclVlxlC.s:8605   .text:00002446 .LVL587
     /tmp/cclVlxlC.s:8766   .text:000024b0 .LVL600
     /tmp/cclVlxlC.s:8796   .text:000024c8 .LVL602
     /tmp/cclVlxlC.s:8693   .text:00002488 .LVL590
     /tmp/cclVlxlC.s:8680   .text:00002482 .LVL588
     /tmp/cclVlxlC.s:8725   .text:00002494 .LVL594
     /tmp/cclVlxlC.s:8712   .text:00002490 .LVL593
     /tmp/cclVlxlC.s:8787   .text:000024c4 .LVL601
     /tmp/cclVlxlC.s:8822   .text:000024ec .LVL605
     /tmp/cclVlxlC.s:8840   .text:000024f4 .LVL607
     /tmp/cclVlxlC.s:8830   .text:000024f0 .LVL606
     /tmp/cclVlxlC.s:8889   .text:00002528 .LVL613
     /tmp/cclVlxlC.s:8897   .text:0000252e .LVL615
     /tmp/cclVlxlC.s:8966   .text:0000256e .LVL625
     /tmp/cclVlxlC.s:8978   .text:00002572 .LVL627
     /tmp/cclVlxlC.s:1274   .text:0000038a .LVL97
     /tmp/cclVlxlC.s:1333   .text:000003ac .LVL105
     /tmp/cclVlxlC.s:1391   .text:000003e2 .LVL111
     /tmp/cclVlxlC.s:1427   .text:000003f8 .LVL112
     /tmp/cclVlxlC.s:1497   .text:0000043e .LVL123
     /tmp/cclVlxlC.s:1640   .text:00000498 .LVL128
     /tmp/cclVlxlC.s:1558   .text:00000462 .LVL124
     /tmp/cclVlxlC.s:16714  .debug_info:00000000 .Ldebug_info0
     /tmp/cclVlxlC.s:1581   .text:0000046e .LVL125
     /tmp/cclVlxlC.s:1599   .text:00000480 .LVL126
     /tmp/cclVlxlC.s:1697   .text:000004d4 .LVL135
     /tmp/cclVlxlC.s:1778   .text:0000053a .LVL140
     /tmp/cclVlxlC.s:1838   .text:00000580 .LVL144
     /tmp/cclVlxlC.s:2001   .text:00000638 .LVL153
     /tmp/cclVlxlC.s:1923   .text:000005ca .LVL146
     /tmp/cclVlxlC.s:1930   .text:000005d2 .LVL147
     /tmp/cclVlxlC.s:2092   .text:000006a8 .LVL160
     /tmp/cclVlxlC.s:2128   .text:000006be .LVL161
     /tmp/cclVlxlC.s:2196   .text:00000702 .LVL172
     /tmp/cclVlxlC.s:2339   .text:0000075c .LVL177
     /tmp/cclVlxlC.s:2257   .text:00000726 .LVL173
     /tmp/cclVlxlC.s:2280   .text:00000732 .LVL174
     /tmp/cclVlxlC.s:2298   .text:00000744 .LVL175
     /tmp/cclVlxlC.s:2396   .text:00000798 .LVL184
     /tmp/cclVlxlC.s:2500   .text:00000804 .LVL186
     /tmp/cclVlxlC.s:2588   .text:00000858 .LVL189
     /tmp/cclVlxlC.s:2735   .text:000008f2 .LVL201
     /tmp/cclVlxlC.s:2701   .text:000008d4 .LVL198
     /tmp/cclVlxlC.s:2670   .text:000008aa .LVL196
     /tmp/cclVlxlC.s:2685   .text:000008be .LVL197
     /tmp/cclVlxlC.s:2755   .text:00000914 .LVL202
     /tmp/cclVlxlC.s:2815   .text:0000095e .LVL207
     /tmp/cclVlxlC.s:2891   .text:000009ae .LVL212
     /tmp/cclVlxlC.s:2955   .text:000009f8 .LVL217
     /tmp/cclVlxlC.s:3050   .text:00000a76 .LVL223
     /tmp/cclVlxlC.s:3119   .text:00000ad4 .LVL228
     /tmp/cclVlxlC.s:3168   .text:00000b06 .LVL231
     /tmp/cclVlxlC.s:3240   .text:00000b64 .LVL236
     /tmp/cclVlxlC.s:4250   .text:00000fca .LVL303
     /tmp/cclVlxlC.s:4276   .text:00000fe0 .LVL305
     /tmp/cclVlxlC.s:3279   .text:00000b92 .LVL238
     /tmp/cclVlxlC.s:3305   .text:00000ba4 .LVL240
     /tmp/cclVlxlC.s:3395   .text:00000c1c .LVL241
     /tmp/cclVlxlC.s:3482   .text:00000c6c .LVL248
     /tmp/cclVlxlC.s:3565   .text:00000cc8 .LVL251
     /tmp/cclVlxlC.s:3674   .text:00000d36 .LVL259
     /tmp/cclVlxlC.s:3719   .text:00000d58 .LVL262
     /tmp/cclVlxlC.s:3767   .text:00000d7a .LVL265
     /tmp/cclVlxlC.s:3929   .text:00000e30 .LVL277
     /tmp/cclVlxlC.s:3881   .text:00000e00 .LVL272
     /tmp/cclVlxlC.s:3865   .text:00000dea .LVL271
     /tmp/cclVlxlC.s:3849   .text:00000dd4 .LVL270
     /tmp/cclVlxlC.s:3967   .text:00000e62 .LVL280
     /tmp/cclVlxlC.s:4084   .text:00000eec .LVL290
     /tmp/cclVlxlC.s:4145   .text:00000f40 .LVL295
     /tmp/cclVlxlC.s:4186   .text:00000f68 .LVL299
     /tmp/cclVlxlC.s:4863   .text:0000131c .LVL316
     /tmp/cclVlxlC.s:5048   .text:000013fc .LVL326
     /tmp/cclVlxlC.s:4967   .text:00001390 .LVL323
     /tmp/cclVlxlC.s:4951   .text:0000137a .LVL322
     /tmp/cclVlxlC.s:4935   .text:00001364 .LVL321
     /tmp/cclVlxlC.s:5437   .text:00001616 .LVL354
     /tmp/cclVlxlC.s:5611   .text:000016e8 .LVL366
     /tmp/cclVlxlC.s:5736   .text:00001774 .LVL372
     /tmp/cclVlxlC.s:5761   .text:00001780 .LVL374
     /tmp/cclVlxlC.s:5801   .text:0000179a .LVL379
     /tmp/cclVlxlC.s:5844   .text:000017b8 .LVL380
     /tmp/cclVlxlC.s:5851   .text:000017c0 .LVL381
     /tmp/cclVlxlC.s:5927   .text:0000181c .LVL398
     /tmp/cclVlxlC.s:5958   .text:0000182e .LVL402
     /tmp/cclVlxlC.s:6023   .text:0000185e .LVL403
     /tmp/cclVlxlC.s:6030   .text:00001866 .LVL404
     /tmp/cclVlxlC.s:6037   .text:0000186e .LVL405
     /tmp/cclVlxlC.s:6043   .text:00001874 .LVL406
     /tmp/cclVlxlC.s:6059   .text:00001886 .LVL409
     /tmp/cclVlxlC.s:6087   .text:000018aa .LVL412
     /tmp/cclVlxlC.s:6148   .text:000018ee .LVL419
     /tmp/cclVlxlC.s:6199   .text:00001918 .LVL425
     /tmp/cclVlxlC.s:6265   .text:00001946 .LVL427
     /tmp/cclVlxlC.s:6276   .text:00001950 .LVL428
     /tmp/cclVlxlC.s:6293   .text:00001958 .LVL429
     /tmp/cclVlxlC.s:6372   .text:000019a0 .LVL441
     /tmp/cclVlxlC.s:6475   .text:00001a08 .LVL442
     /tmp/cclVlxlC.s:6602   .text:00001aca .LVL452
     /tmp/cclVlxlC.s:6671   .text:00001b24 .LVL460
     /tmp/cclVlxlC.s:6808   .text:00001bae .LVL467
     /tmp/cclVlxlC.s:6755   .text:00001b66 .LVL461
     /tmp/cclVlxlC.s:6762   .text:00001b6e .LVL462
     /tmp/cclVlxlC.s:6771   .text:00001b7a .LVL463
     /tmp/cclVlxlC.s:6780   .text:00001b86 .LVL464
     /tmp/cclVlxlC.s:6853   .text:00001bec .LVL473
     /tmp/cclVlxlC.s:6926   .text:00001c40 .LVL481
     /tmp/cclVlxlC.s:7035   .text:00001cb8 .LVL483
     /tmp/cclVlxlC.s:7245   .text:00001dea .LVL493
     /tmp/cclVlxlC.s:7321   .text:00001e5e .LVL500
     /tmp/cclVlxlC.s:7386   .text:00001e64 .LVL501
     /tmp/cclVlxlC.s:7576   .text:00001f82 .LVL505
     /tmp/cclVlxlC.s:7742   .text:00002032 .LVL512
     /tmp/cclVlxlC.s:7747   .text:00002036 .LVL513
     /tmp/cclVlxlC.s:7754   .text:0000203e .LVL514
     /tmp/cclVlxlC.s:7765   .text:0000204e .LVL515
     /tmp/cclVlxlC.s:7791   .text:00002076 .LVL517
     /tmp/cclVlxlC.s:7667   .text:00001fcc .LVL507
     /tmp/cclVlxlC.s:7834   .text:000020b0 .LVL523
     /tmp/cclVlxlC.s:7716   .text:00002018 .LVL510
     /tmp/cclVlxlC.s:7892   .text:000020fc .LVL527
     /tmp/cclVlxlC.s:8059   .text:000021b0 .LVL534
     /tmp/cclVlxlC.s:8064   .text:000021b4 .LVL535
     /tmp/cclVlxlC.s:8076   .text:000021c4 .LVL536
     /tmp/cclVlxlC.s:8085   .text:000021ce .LVL537
     /tmp/cclVlxlC.s:8111   .text:000021f6 .LVL539
     /tmp/cclVlxlC.s:7984   .text:00002148 .LVL529
     /tmp/cclVlxlC.s:8166   .text:0000224a .LVL543
     /tmp/cclVlxlC.s:8033   .text:00002196 .LVL532
     /tmp/cclVlxlC.s:8210   .text:0000228c .LVL547
     /tmp/cclVlxlC.s:8276   .text:000022dc .LVL553
     /tmp/cclVlxlC.s:8229   .text:0000229a .LVL548
     /tmp/cclVlxlC.s:8323   .text:00002324 .LVL556
     /tmp/cclVlxlC.s:8429   .text:0000239a .LVL568
     /tmp/cclVlxlC.s:8507   .text:000023de .LVL574
     /tmp/cclVlxlC.s:8493   .text:000023c8 .LVL572
     /tmp/cclVlxlC.s:8525   .text:000023f6 .LVL575
     /tmp/cclVlxlC.s:8535   .text:000023fa .LVL576
     /tmp/cclVlxlC.s:9125   .text:000025f8 .LVL645
     /tmp/cclVlxlC.s:9172   .text:0000263e .LVL649
     /tmp/cclVlxlC.s:9560   .text:000027a8 .LVL675
     /tmp/cclVlxlC.s:9490   .text:00002756 .LVL670
     /tmp/cclVlxlC.s:9479   .text:0000274e .LVL669
     /tmp/cclVlxlC.s:9714   .text:00002882 .LVL686
     /tmp/cclVlxlC.s:12541  .text:00002962 .LVL689
     /tmp/cclVlxlC.s:12618  .text:000029ac .LVL696
     /tmp/cclVlxlC.s:12852  .text:00002a36 .LVL702
     /tmp/cclVlxlC.s:12870  .text:00002a3e .LVL703
     /tmp/cclVlxlC.s:12973  .text:00002ade .LVL704
     /tmp/cclVlxlC.s:13994  .text:00002e4a .LVL778
     /tmp/cclVlxlC.s:14009  .text:00002e5a .LVL779
     /tmp/cclVlxlC.s:14057  .text:00002e94 .LVL782
     /tmp/cclVlxlC.s:14088  .text:00002ed4 .LVL784
     /tmp/cclVlxlC.s:8      .text:00000000 .Ltext0
     /tmp/cclVlxlC.s:16712  .text:0000323e .Letext0
     /tmp/cclVlxlC.s:91     .text:0000001c .LBB24
     /tmp/cclVlxlC.s:99     .text:0000001c .LBB27
     /tmp/cclVlxlC.s:407    .text:000000d0 .LBB75
     /tmp/cclVlxlC.s:432    .text:000000e6 .LBB78
     /tmp/cclVlxlC.s:467    .text:00000104 .LBB83
     /tmp/cclVlxlC.s:532    .text:00000130 .LBB89
     /tmp/cclVlxlC.s:533    .text:00000130 .LBB90
     /tmp/cclVlxlC.s:591    .text:00000152 .LBB107
     /tmp/cclVlxlC.s:727    .text:000001a4 .LBB113
     /tmp/cclVlxlC.s:1559   .text:00000462 .LBB143
     /tmp/cclVlxlC.s:2258   .text:00000726 .LBB177
     /tmp/cclVlxlC.s:2627   .text:0000087c .LBB250
     /tmp/cclVlxlC.s:2704   .text:000008d4 .LBB251
     /tmp/cclVlxlC.s:2756   .text:00000914 .LBB255
     /tmp/cclVlxlC.s:2896   .text:000009ae .LBB263
     /tmp/cclVlxlC.s:3054   .text:00000a76 .LBB271
     /tmp/cclVlxlC.s:3162   .text:00000b00 .LBB279
     /tmp/cclVlxlC.s:2864   .text:00000992 .LBB290
     /tmp/cclVlxlC.s:3285   .text:00000b92 .LBB293
     /tmp/cclVlxlC.s:3396   .text:00000c1c .LBB294
     /tmp/cclVlxlC.s:3485   .text:00000c6c .LBB298
     /tmp/cclVlxlC.s:3566   .text:00000cc8 .LBB302
     /tmp/cclVlxlC.s:3677   .text:00000d36 .LBB306
     /tmp/cclVlxlC.s:3725   .text:00000d58 .LBB310
     /tmp/cclVlxlC.s:3771   .text:00000d7a .LBB323
     /tmp/cclVlxlC.s:3829   .text:00000dc0 .LBB324
     /tmp/cclVlxlC.s:3884   .text:00000e00 .LBB325
     /tmp/cclVlxlC.s:3968   .text:00000e62 .LBB329
     /tmp/cclVlxlC.s:4037   .text:00000eb6 .LBB335
     /tmp/cclVlxlC.s:4039   .text:00000eb6 .LBB337
     /tmp/cclVlxlC.s:4915   .text:00001350 .LBB355
     /tmp/cclVlxlC.s:4970   .text:00001390 .LBB356
     /tmp/cclVlxlC.s:5448   .text:00001616 .LBB370
     /tmp/cclVlxlC.s:5620   .text:000016e8 .LBB375
     /tmp/cclVlxlC.s:6061   .text:00001886 .LBB383
     /tmp/cclVlxlC.s:6088   .text:000018aa .LBB385
     /tmp/cclVlxlC.s:6271   .text:0000194a .LBB391
     /tmp/cclVlxlC.s:7039   .text:00001cb8 .LBB415
     /tmp/cclVlxlC.s:7079   .text:00001cf8 .LBB417
     /tmp/cclVlxlC.s:7095   .text:00001d0c .LBB420
     /tmp/cclVlxlC.s:7387   .text:00001e64 .LBB433
     /tmp/cclVlxlC.s:8656   .text:00002466 .LBB483
     /tmp/cclVlxlC.s:8704   .text:0000248e .LBB485
     /tmp/cclVlxlC.s:8779   .text:000024be .LBB491
     /tmp/cclVlxlC.s:8823   .text:000024ec .LBB493
     /tmp/cclVlxlC.s:8879   .text:0000251e .LBB498
     /tmp/cclVlxlC.s:8970   .text:0000256e .LBB502
     /tmp/cclVlxlC.s:9944   .text.startup:00000096 .LBB616
     /tmp/cclVlxlC.s:9972   .text.startup:000000ac .LBB618
     /tmp/cclVlxlC.s:10006  .text.startup:000000be .LBB624
     /tmp/cclVlxlC.s:10023  .text.startup:000000c2 .LBB626
     /tmp/cclVlxlC.s:10056  .text.startup:000000d4 .LBB632
     /tmp/cclVlxlC.s:10073  .text.startup:000000d8 .LBB634
     /tmp/cclVlxlC.s:10449  .text.startup:00000344 .LBB652
     /tmp/cclVlxlC.s:10967  .text.startup:000005d6 .LBB668
     /tmp/cclVlxlC.s:11229  .text.startup:00000734 .LBB673
     /tmp/cclVlxlC.s:11246  .text.startup:00000738 .LBB675
     /tmp/cclVlxlC.s:11297  .text.startup:00000764 .LBB681
     /tmp/cclVlxlC.s:11704  .text.startup:0000096e .LBB682
     /tmp/cclVlxlC.s:12440  .text:000028de .LBB711
     /tmp/cclVlxlC.s:12542  .text:00002962 .LBB715
     /tmp/cclVlxlC.s:12619  .text:000029ac .LBB717
     /tmp/cclVlxlC.s:12853  .text:00002a36 .LBB718
     /tmp/cclVlxlC.s:12964  .text:00002ad2 .LBB722
     /tmp/cclVlxlC.s:14580  .text:00003144 .LBB727
     /tmp/cclVlxlC.s:13999  .text:00002e4a .LBB734
     /tmp/cclVlxlC.s:14018  .text:00002e66 .LBB736

UNDEFINED SYMBOLS
vsnprintf_P
strcpy_P
__tablejump2__
__mulsi3
__umulsidi3
__ashrdi3
__lshrdi3
__divmodsi4
__udivmodsi4
__udivmodhi4
__strlen_P
memcmp
rand
srand
memcpy
toupper
platform.c.e84c918c
lcd.c.ac90001b
serial.c.6fc1aed4
spi.c.bfcce3b2
sd.c.0a5fc716
emulator.c.032cd472
timer.c.2e36c149
adc.c.ae5f4aa2
logger.c.8930bbe9
xmem.c.d844338c
initrd.c.2bf2963f
random.c.c437e7c2
main.c.56578d94
gpio.c.8f47833c
ps2.c.b71405e8
german.c.d95371e0
__do_copy_data
__do_clear_bss
