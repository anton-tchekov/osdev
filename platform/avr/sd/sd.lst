   1               		.file	"sd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "sd/sd.c"
  12               	_sd_command:
  13               	.LVL0:
  14               	.LFB13:
  15               		.file 1 "sd/sd.c"
   1:sd/sd.c       **** /**
   2:sd/sd.c       ****  * @file    sd.c
   3:sd/sd.c       ****  * @author  Anton Tchekov
   4:sd/sd.c       ****  * @version 0.2
   5:sd/sd.c       ****  * @date    20.05.2023
   6:sd/sd.c       ****  */
   7:sd/sd.c       **** 
   8:sd/sd.c       **** #include <sd.h>
   9:sd/sd.c       **** #include <spi.h>
  10:sd/sd.c       **** #include <logger.h>
  11:sd/sd.c       **** #include <gpio.h>
  12:sd/sd.c       **** #include <string.h>
  13:sd/sd.c       **** #include <avr/io.h>
  14:sd/sd.c       **** #include <avr/pgmspace.h>
  15:sd/sd.c       **** #include <util/delay.h>
  16:sd/sd.c       **** 
  17:sd/sd.c       **** #define CMD_GO_IDLE_STATE      0x00
  18:sd/sd.c       **** #define CMD_SEND_OP_COND       0x01
  19:sd/sd.c       **** #define CMD_SEND_IF_COND       0x08
  20:sd/sd.c       **** #define CMD_SEND_CSD           0x09
  21:sd/sd.c       **** #define CMD_SEND_CID           0x0A
  22:sd/sd.c       **** #define CMD_SET_BLOCKLEN       0x10
  23:sd/sd.c       **** #define CMD_READ_SINGLE_BLOCK  0x11
  24:sd/sd.c       **** #define CMD_WRITE_SINGLE_BLOCK 0x18
  25:sd/sd.c       **** #define CMD_SD_SEND_OP_COND    0x29
  26:sd/sd.c       **** #define CMD_APP                0x37
  27:sd/sd.c       **** #define CMD_READ_OCR           0x3A
  28:sd/sd.c       **** 
  29:sd/sd.c       **** #define IDLE_STATE             (1 << 0)
  30:sd/sd.c       **** #define ILLEGAL_CMD            (1 << 2)
  31:sd/sd.c       **** 
  32:sd/sd.c       **** #define BLOCK_SIZE             512
  33:sd/sd.c       **** 
  34:sd/sd.c       **** #define SD_1                   (1 << 0)
  35:sd/sd.c       **** #define SD_2                   (1 << 1)
  36:sd/sd.c       **** #define SD_HC                  (1 << 2)
  37:sd/sd.c       **** 
  38:sd/sd.c       **** /* SD card properties */
  39:sd/sd.c       **** static u32
  40:sd/sd.c       **** 	_serial,
  41:sd/sd.c       **** 	_capacity;
  42:sd/sd.c       **** 
  43:sd/sd.c       **** static u8
  44:sd/sd.c       **** 	_oem[3],
  45:sd/sd.c       **** 	_product[6],
  46:sd/sd.c       **** 	_card_type,
  47:sd/sd.c       **** 	_manufacturer,
  48:sd/sd.c       **** 	_revision,
  49:sd/sd.c       **** 	_manufacturing_year,
  50:sd/sd.c       **** 	_manufacturing_month,
  51:sd/sd.c       **** 	_flag_copy,
  52:sd/sd.c       **** 	_flag_write_protect,
  53:sd/sd.c       **** 	_flag_write_protect_temp,
  54:sd/sd.c       **** 	_format;
  55:sd/sd.c       **** 
  56:sd/sd.c       **** static u8 _sd_command(u8 cmd, u32 arg)
  57:sd/sd.c       **** {
  16               		.loc 1 57 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 57 1 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 17, -3
  25 0004 CF93      		push r28
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 28, -4
  28 0006 DF93      		push r29
  29               		.cfi_def_cfa_offset 6
  30               		.cfi_offset 29, -5
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 4 */
  34               	.L__stack_usage = 4
  35 0008 C82F      		mov r28,r24
  36 000a D42F      		mov r29,r20
  37 000c 152F      		mov r17,r21
  38 000e 072F      		mov r16,r23
  58:sd/sd.c       **** 	u8 i, response;
  39               		.loc 1 58 2 is_stmt 1 view .LVU2
  59:sd/sd.c       **** 	spi_xchg(0xFF);
  40               		.loc 1 59 2 view .LVU3
  41 0010 8FEF      		ldi r24,lo8(-1)
  42               	.LVL1:
  43               		.loc 1 59 2 is_stmt 0 view .LVU4
  44 0012 0E94 0000 		call spi_xchg
  45               	.LVL2:
  60:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
  46               		.loc 1 60 2 is_stmt 1 view .LVU5
  47 0016 8C2F      		mov r24,r28
  48 0018 8064      		ori r24,lo8(64)
  49 001a 0E94 0000 		call spi_xchg
  50               	.LVL3:
  61:sd/sd.c       **** 	spi_xchg((arg >> 24) & 0xFF);
  51               		.loc 1 61 2 view .LVU6
  52 001e 802F      		mov r24,r16
  53 0020 0E94 0000 		call spi_xchg
  54               	.LVL4:
  62:sd/sd.c       **** 	spi_xchg((arg >> 16) & 0xFF);
  55               		.loc 1 62 2 view .LVU7
  56 0024 80E0      		ldi r24,0
  57 0026 0E94 0000 		call spi_xchg
  58               	.LVL5:
  63:sd/sd.c       **** 	spi_xchg((arg >> 8) & 0xFF);
  59               		.loc 1 63 2 view .LVU8
  60 002a 812F      		mov r24,r17
  61 002c 0E94 0000 		call spi_xchg
  62               	.LVL6:
  64:sd/sd.c       **** 	spi_xchg((arg >> 0) & 0xFF);
  63               		.loc 1 64 2 view .LVU9
  64 0030 8D2F      		mov r24,r29
  65 0032 0E94 0000 		call spi_xchg
  66               	.LVL7:
  65:sd/sd.c       **** 	switch(cmd)
  67               		.loc 1 65 2 view .LVU10
  66:sd/sd.c       **** 	{
  67:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
  68:sd/sd.c       **** 		spi_xchg(0x95);
  68               		.loc 1 68 3 is_stmt 0 view .LVU11
  69 0036 85E9      		ldi r24,lo8(-107)
  65:sd/sd.c       **** 	switch(cmd)
  70               		.loc 1 65 2 view .LVU12
  71 0038 CC23      		tst r28
  72 003a 01F0      		breq .L13
  69:sd/sd.c       **** 		break;
  70:sd/sd.c       **** 
  71:sd/sd.c       **** 	case CMD_SEND_IF_COND:
  72:sd/sd.c       **** 		spi_xchg(0x87);
  73               		.loc 1 72 3 view .LVU13
  74 003c 87E8      		ldi r24,lo8(-121)
  65:sd/sd.c       **** 	{
  75               		.loc 1 65 2 view .LVU14
  76 003e C830      		cpi r28,lo8(8)
  77 0040 01F0      		breq .L13
  73:sd/sd.c       **** 		break;
  74:sd/sd.c       **** 
  75:sd/sd.c       **** 	default:
  76:sd/sd.c       **** 		spi_xchg(0xFF);
  78               		.loc 1 76 3 is_stmt 1 view .LVU15
  79 0042 8FEF      		ldi r24,lo8(-1)
  80               	.L13:
  72:sd/sd.c       **** 		break;
  81               		.loc 1 72 3 is_stmt 0 view .LVU16
  82 0044 0E94 0000 		call spi_xchg
  83               	.LVL8:
  73:sd/sd.c       **** 		break;
  84               		.loc 1 73 3 is_stmt 1 view .LVU17
  77:sd/sd.c       **** 		break;
  78:sd/sd.c       **** 	}
  79:sd/sd.c       **** 
  80:sd/sd.c       **** 	for(i = 0; i < 10 && ((response = spi_xchg(0xFF)) == 0xFF); ++i) ;
  85               		.loc 1 80 20 view .LVU18
  57:sd/sd.c       **** 	u8 i, response;
  86               		.loc 1 57 1 is_stmt 0 view .LVU19
  87 0048 CAE0      		ldi r28,lo8(10)
  88               	.LVL9:
  89               	.L6:
  90               		.loc 1 80 36 discriminator 3 view .LVU20
  91 004a 8FEF      		ldi r24,lo8(-1)
  92 004c 0E94 0000 		call spi_xchg
  93               	.LVL10:
  94               		.loc 1 80 20 discriminator 3 view .LVU21
  95 0050 8F3F      		cpi r24,lo8(-1)
  96 0052 01F4      		brne .L1
  97               		.loc 1 80 62 is_stmt 1 discriminator 4 view .LVU22
  98               	.LVL11:
  99               		.loc 1 80 20 discriminator 4 view .LVU23
 100 0054 C150      		subi r28,lo8(-(-1))
 101               	.LVL12:
 102               		.loc 1 80 20 is_stmt 0 discriminator 4 view .LVU24
 103 0056 C111      		cpse r28,__zero_reg__
 104 0058 00C0      		rjmp .L6
 105               	.LVL13:
 106               	.L1:
 107               	/* epilogue start */
  81:sd/sd.c       **** 	return response;
  82:sd/sd.c       **** }
 108               		.loc 1 82 1 view .LVU25
 109 005a DF91      		pop r29
 110 005c CF91      		pop r28
 111 005e 1F91      		pop r17
 112 0060 0F91      		pop r16
 113 0062 0895      		ret
 114               		.cfi_endproc
 115               	.LFE13:
 117               	.global	sd_init
 119               	sd_init:
 120               	.LFB17:
  83:sd/sd.c       **** 
  84:sd/sd.c       **** static void _spi_configure_slow(void)
  85:sd/sd.c       **** {
  86:sd/sd.c       **** 	SPCR |= (1 << SPR1) | (1 << SPR0);
  87:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
  88:sd/sd.c       **** }
  89:sd/sd.c       **** 
  90:sd/sd.c       **** static void _sd_timeout(void)
  91:sd/sd.c       **** {
  92:sd/sd.c       **** 	SD_DESELECT;
  93:sd/sd.c       **** 	panic(PSTR("SD timeout"));
  94:sd/sd.c       **** }
  95:sd/sd.c       **** 
  96:sd/sd.c       **** static void _sd_error(void)
  97:sd/sd.c       **** {
  98:sd/sd.c       **** 	SD_DESELECT;
  99:sd/sd.c       **** 	panic(PSTR("SD error"));
 100:sd/sd.c       **** }
 101:sd/sd.c       **** 
 102:sd/sd.c       **** void sd_init(void)
 103:sd/sd.c       **** {
 121               		.loc 1 103 1 is_stmt 1 view -0
 122               		.cfi_startproc
 123 0064 AF92      		push r10
 124               		.cfi_def_cfa_offset 3
 125               		.cfi_offset 10, -2
 126 0066 BF92      		push r11
 127               		.cfi_def_cfa_offset 4
 128               		.cfi_offset 11, -3
 129 0068 CF92      		push r12
 130               		.cfi_def_cfa_offset 5
 131               		.cfi_offset 12, -4
 132 006a DF92      		push r13
 133               		.cfi_def_cfa_offset 6
 134               		.cfi_offset 13, -5
 135 006c EF92      		push r14
 136               		.cfi_def_cfa_offset 7
 137               		.cfi_offset 14, -6
 138 006e FF92      		push r15
 139               		.cfi_def_cfa_offset 8
 140               		.cfi_offset 15, -7
 141 0070 0F93      		push r16
 142               		.cfi_def_cfa_offset 9
 143               		.cfi_offset 16, -8
 144 0072 1F93      		push r17
 145               		.cfi_def_cfa_offset 10
 146               		.cfi_offset 17, -9
 147 0074 CF93      		push r28
 148               		.cfi_def_cfa_offset 11
 149               		.cfi_offset 28, -10
 150 0076 DF93      		push r29
 151               		.cfi_def_cfa_offset 12
 152               		.cfi_offset 29, -11
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 10 */
 156               	.L__stack_usage = 10
 104:sd/sd.c       **** 	log_boot_P(PSTR("SD driver starting"));
 157               		.loc 1 104 2 view .LVU27
 158               	.LBB73:
 159               		.loc 1 104 13 view .LVU28
 160               		.loc 1 104 13 view .LVU29
 161               	.LBE73:
 162               		.loc 1 104 2 is_stmt 0 view .LVU30
 163 0078 80E0      		ldi r24,lo8(__c.22)
 164 007a 90E0      		ldi r25,hi8(__c.22)
 165 007c 9F93      		push r25
 166               		.cfi_def_cfa_offset 13
 167 007e 8F93      		push r24
 168               		.cfi_def_cfa_offset 14
 169 0080 0E94 0000 		call log_boot_P
 170               	.LVL14:
 171               	.LBB74:
 105:sd/sd.c       **** 
 106:sd/sd.c       **** 	{
 107:sd/sd.c       **** 		u8 response;
 172               		.loc 1 107 3 is_stmt 1 view .LVU31
 108:sd/sd.c       **** 		u16 i;
 173               		.loc 1 108 3 view .LVU32
 109:sd/sd.c       **** 		u32 arg;
 174               		.loc 1 109 3 view .LVU33
 110:sd/sd.c       **** 
 111:sd/sd.c       **** 		_card_type = 0;
 175               		.loc 1 111 3 view .LVU34
 176               		.loc 1 111 14 is_stmt 0 view .LVU35
 177 0084 1092 0000 		sts _card_type,__zero_reg__
 112:sd/sd.c       **** 		_spi_configure_slow();
 178               		.loc 1 112 3 is_stmt 1 view .LVU36
 179               	.LBB75:
 180               	.LBI75:
  84:sd/sd.c       **** {
 181               		.loc 1 84 13 view .LVU37
 182               	.LBB76:
  86:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 183               		.loc 1 86 2 view .LVU38
 184 0088 8CB5      		in r24,0x2c
  86:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 185               		.loc 1 86 7 is_stmt 0 view .LVU39
 186 008a 8360      		ori r24,lo8(3)
 187 008c 8CBD      		out 0x2c,r24
  87:sd/sd.c       **** }
 188               		.loc 1 87 2 is_stmt 1 view .LVU40
  87:sd/sd.c       **** }
 189               		.loc 1 87 7 is_stmt 0 view .LVU41
 190 008e 8DB5      		in r24,0x2d
 191 0090 8E7F      		andi r24,lo8(-2)
 192 0092 8DBD      		out 0x2d,r24
 193               	.LVL15:
  87:sd/sd.c       **** }
 194               		.loc 1 87 7 view .LVU42
 195               	.LBE76:
 196               	.LBE75:
 113:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 197               		.loc 1 113 16 is_stmt 1 view .LVU43
 198               	.LBB78:
 199               	.LBB77:
  87:sd/sd.c       **** }
 200               		.loc 1 87 7 is_stmt 0 view .LVU44
 201 0094 0F90      		pop __tmp_reg__
 202 0096 0F90      		pop __tmp_reg__
 203               		.cfi_def_cfa_offset 12
 204 0098 0AE0      		ldi r16,lo8(10)
 205 009a 10E0      		ldi r17,0
 206               	.LVL16:
 207               	.L15:
  87:sd/sd.c       **** }
 208               		.loc 1 87 7 view .LVU45
 209               	.LBE77:
 210               	.LBE78:
 114:sd/sd.c       **** 		{
 115:sd/sd.c       **** 			spi_xchg(0xFF);
 211               		.loc 1 115 4 is_stmt 1 discriminator 3 view .LVU46
 212 009c 8FEF      		ldi r24,lo8(-1)
 213 009e 0E94 0000 		call spi_xchg
 214               	.LVL17:
 113:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 215               		.loc 1 113 22 discriminator 3 view .LVU47
 113:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 216               		.loc 1 113 16 discriminator 3 view .LVU48
 217 00a2 0150      		subi r16,1
 218 00a4 1109      		sbc r17,__zero_reg__
 219               	.LVL18:
 113:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 220               		.loc 1 113 16 is_stmt 0 discriminator 3 view .LVU49
 221 00a6 0115      		cp r16,__zero_reg__
 222 00a8 1105      		cpc r17,__zero_reg__
 223 00aa 01F4      		brne .L15
 116:sd/sd.c       **** 		}
 117:sd/sd.c       **** 
 118:sd/sd.c       **** 		SD_SELECT;
 224               		.loc 1 118 3 is_stmt 1 view .LVU50
 225 00ac 5C98      		cbi 0xb,4
 119:sd/sd.c       **** 		for(i = 0; ; ++i)
 226               		.loc 1 119 3 view .LVU51
 227               	.LVL19:
 228               		.loc 1 119 9 is_stmt 0 view .LVU52
 229 00ae C0E0      		ldi r28,0
 230 00b0 D0E0      		ldi r29,0
 231               	.LBB79:
 232               	.LBB80:
  93:sd/sd.c       **** }
 233               		.loc 1 93 2 view .LVU53
 234 00b2 80E0      		ldi r24,lo8(__c.0)
 235 00b4 E82E      		mov r14,r24
 236 00b6 80E0      		ldi r24,hi8(__c.0)
 237 00b8 F82E      		mov r15,r24
 238               	.LVL20:
 239               	.L18:
  93:sd/sd.c       **** }
 240               		.loc 1 93 2 view .LVU54
 241               	.LBE80:
 242               	.LBE79:
 120:sd/sd.c       **** 		{
 121:sd/sd.c       **** 			if(_sd_command(CMD_GO_IDLE_STATE, 0) == IDLE_STATE)
 243               		.loc 1 121 4 is_stmt 1 view .LVU55
 244               		.loc 1 121 7 is_stmt 0 view .LVU56
 245 00ba 40E0      		ldi r20,0
 246 00bc 50E0      		ldi r21,0
 247 00be BA01      		movw r22,r20
 248 00c0 80E0      		ldi r24,0
 249 00c2 0E94 0000 		call _sd_command
 250               	.LVL21:
 251               		.loc 1 121 6 view .LVU57
 252 00c6 8130      		cpi r24,lo8(1)
 253 00c8 01F0      		breq .L16
 122:sd/sd.c       **** 			{
 123:sd/sd.c       **** 				break;
 124:sd/sd.c       **** 			}
 125:sd/sd.c       **** 
 126:sd/sd.c       **** 			if(i >= 0x1FF)
 254               		.loc 1 126 4 is_stmt 1 view .LVU58
 255               		.loc 1 126 6 is_stmt 0 view .LVU59
 256 00ca CF3F      		cpi r28,-1
 257 00cc 21E0      		ldi r18,1
 258 00ce D207      		cpc r29,r18
 259 00d0 00F0      		brlo .L17
 127:sd/sd.c       **** 			{
 128:sd/sd.c       **** 				_sd_timeout();
 260               		.loc 1 128 5 is_stmt 1 view .LVU60
 261               	.LBB83:
 262               	.LBI79:
  90:sd/sd.c       **** {
 263               		.loc 1 90 13 view .LVU61
 264               	.LBB81:
  92:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 265               		.loc 1 92 2 view .LVU62
 266 00d2 5C9A      		sbi 0xb,4
  93:sd/sd.c       **** }
 267               		.loc 1 93 2 view .LVU63
 268               	.LBE81:
  93:sd/sd.c       **** }
 269               		.loc 1 93 8 view .LVU64
  93:sd/sd.c       **** }
 270               		.loc 1 93 8 view .LVU65
 271               	.LBB82:
  93:sd/sd.c       **** }
 272               		.loc 1 93 2 is_stmt 0 view .LVU66
 273 00d4 FF92      		push r15
 274               		.cfi_def_cfa_offset 13
 275 00d6 EF92      		push r14
 276               		.cfi_def_cfa_offset 14
 277 00d8 0E94 0000 		call panic
 278               	.LVL22:
  94:sd/sd.c       **** 
 279               		.loc 1 94 1 view .LVU67
 280 00dc 0F90      		pop __tmp_reg__
 281 00de 0F90      		pop __tmp_reg__
 282               		.cfi_def_cfa_offset 12
 283               	.L17:
 284               	.LBE82:
 285               	.LBE83:
 119:sd/sd.c       **** 		{
 286               		.loc 1 119 16 is_stmt 1 view .LVU68
 287 00e0 2196      		adiw r28,1
 288               	.LVL23:
 119:sd/sd.c       **** 		{
 289               		.loc 1 119 3 view .LVU69
 121:sd/sd.c       **** 			{
 290               		.loc 1 121 6 is_stmt 0 view .LVU70
 291 00e2 00C0      		rjmp .L18
 292               	.L16:
 129:sd/sd.c       **** 			}
 130:sd/sd.c       **** 		}
 131:sd/sd.c       **** 
 132:sd/sd.c       **** 		if((_sd_command(CMD_SEND_IF_COND, 0x1AA) & ILLEGAL_CMD) == 0)
 293               		.loc 1 132 3 is_stmt 1 view .LVU71
 294               		.loc 1 132 7 is_stmt 0 view .LVU72
 295 00e4 4AEA      		ldi r20,lo8(-86)
 296 00e6 51E0      		ldi r21,lo8(1)
 297 00e8 60E0      		ldi r22,0
 298 00ea 70E0      		ldi r23,0
 299 00ec 88E0      		ldi r24,lo8(8)
 300 00ee 0E94 0000 		call _sd_command
 301               	.LVL24:
 302               		.loc 1 132 5 view .LVU73
 303 00f2 82FD      		sbrc r24,2
 304 00f4 00C0      		rjmp .L19
 133:sd/sd.c       **** 		{
 134:sd/sd.c       **** 			spi_xchg(0xFF);
 305               		.loc 1 134 4 is_stmt 1 view .LVU74
 306 00f6 8FEF      		ldi r24,lo8(-1)
 307 00f8 0E94 0000 		call spi_xchg
 308               	.LVL25:
 135:sd/sd.c       **** 			spi_xchg(0xFF);
 309               		.loc 1 135 4 view .LVU75
 310 00fc 8FEF      		ldi r24,lo8(-1)
 311 00fe 0E94 0000 		call spi_xchg
 312               	.LVL26:
 136:sd/sd.c       **** 			if(((spi_xchg(0xFF) & 0x01) == 0) ||
 313               		.loc 1 136 4 view .LVU76
 314               		.loc 1 136 9 is_stmt 0 view .LVU77
 315 0102 8FEF      		ldi r24,lo8(-1)
 316 0104 0E94 0000 		call spi_xchg
 317               	.LVL27:
 318               		.loc 1 136 6 view .LVU78
 319 0108 80FD      		sbrc r24,0
 320 010a 00C0      		rjmp .L20
 321               	.L22:
 137:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 138:sd/sd.c       **** 			{
 139:sd/sd.c       **** 				_sd_error();
 322               		.loc 1 139 5 is_stmt 1 view .LVU79
 323               	.LBB84:
 324               	.LBI84:
  96:sd/sd.c       **** {
 325               		.loc 1 96 13 view .LVU80
 326               	.LBB85:
  98:sd/sd.c       **** 	panic(PSTR("SD error"));
 327               		.loc 1 98 2 view .LVU81
 328 010c 5C9A      		sbi 0xb,4
  99:sd/sd.c       **** }
 329               		.loc 1 99 2 view .LVU82
 330               	.LBE85:
  99:sd/sd.c       **** }
 331               		.loc 1 99 8 view .LVU83
  99:sd/sd.c       **** }
 332               		.loc 1 99 8 view .LVU84
 333               	.LBB86:
  99:sd/sd.c       **** }
 334               		.loc 1 99 2 is_stmt 0 view .LVU85
 335 010e 80E0      		ldi r24,lo8(__c.1)
 336 0110 90E0      		ldi r25,hi8(__c.1)
 337 0112 9F93      		push r25
 338               		.cfi_def_cfa_offset 13
 339 0114 8F93      		push r24
 340               		.cfi_def_cfa_offset 14
 341 0116 0E94 0000 		call panic
 342               	.LVL28:
 100:sd/sd.c       **** 
 343               		.loc 1 100 1 view .LVU86
 344 011a 0F90      		pop __tmp_reg__
 345 011c 0F90      		pop __tmp_reg__
 346               		.cfi_def_cfa_offset 12
 347               	.L21:
 348               	.LBE86:
 349               	.LBE84:
 140:sd/sd.c       **** 			}
 141:sd/sd.c       **** 
 142:sd/sd.c       **** 			_card_type |= SD_2;
 350               		.loc 1 142 4 is_stmt 1 view .LVU87
 351               		.loc 1 142 15 is_stmt 0 view .LVU88
 352 011e 8091 0000 		lds r24,_card_type
 353 0122 8260      		ori r24,lo8(2)
 354               	.L94:
 143:sd/sd.c       **** 		}
 144:sd/sd.c       **** 		else
 145:sd/sd.c       **** 		{
 146:sd/sd.c       **** 			_sd_command(CMD_APP, 0);
 147:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 148:sd/sd.c       **** 			{
 149:sd/sd.c       **** 				_card_type |= SD_1;
 355               		.loc 1 149 16 view .LVU89
 356 0124 8093 0000 		sts _card_type,r24
 357               	.L23:
 358               	.LBB87:
 359               	.LBB88:
  93:sd/sd.c       **** }
 360               		.loc 1 93 2 view .LVU90
 361 0128 B0E0      		ldi r27,lo8(__c.0)
 362 012a EB2E      		mov r14,r27
 363 012c B0E0      		ldi r27,hi8(__c.0)
 364 012e FB2E      		mov r15,r27
 365               	.LVL29:
 366               	.L28:
  93:sd/sd.c       **** }
 367               		.loc 1 93 2 view .LVU91
 368               	.LBE88:
 369               	.LBE87:
 150:sd/sd.c       **** 			}
 151:sd/sd.c       **** 		}
 152:sd/sd.c       **** 
 153:sd/sd.c       **** 		for(i = 0; ; ++i)
 154:sd/sd.c       **** 		{
 155:sd/sd.c       **** 			if(_card_type & (SD_1 | SD_2))
 370               		.loc 1 155 4 is_stmt 1 view .LVU92
 371               		.loc 1 155 18 is_stmt 0 view .LVU93
 372 0130 C091 0000 		lds r28,_card_type
 373               		.loc 1 155 6 view .LVU94
 374 0134 8C2F      		mov r24,r28
 375 0136 8370      		andi r24,lo8(3)
 156:sd/sd.c       **** 			{
 157:sd/sd.c       **** 				arg = 0;
 158:sd/sd.c       **** 				if(_card_type & SD_2)
 159:sd/sd.c       **** 				{
 160:sd/sd.c       **** 					arg = 0x40000000;
 161:sd/sd.c       **** 				}
 162:sd/sd.c       **** 
 163:sd/sd.c       **** 				_sd_command(CMD_APP, 0);
 376               		.loc 1 163 5 view .LVU95
 377 0138 40E0      		ldi r20,0
 378 013a 50E0      		ldi r21,0
 379 013c BA01      		movw r22,r20
 155:sd/sd.c       **** 			{
 380               		.loc 1 155 6 view .LVU96
 381 013e 8823      		tst r24
 382 0140 01F0      		breq .L24
 157:sd/sd.c       **** 				if(_card_type & SD_2)
 383               		.loc 1 157 5 is_stmt 1 view .LVU97
 384               	.LVL30:
 158:sd/sd.c       **** 				{
 385               		.loc 1 158 5 view .LVU98
 386               		.loc 1 163 5 view .LVU99
 387 0142 87E3      		ldi r24,lo8(55)
 388 0144 0E94 0000 		call _sd_command
 389               	.LVL31:
 164:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 390               		.loc 1 164 5 view .LVU100
 158:sd/sd.c       **** 				{
 391               		.loc 1 158 7 is_stmt 0 view .LVU101
 392 0148 C695      		lsr r28
 393 014a C170      		andi r28,1
 394               	.LVL32:
 158:sd/sd.c       **** 				{
 395               		.loc 1 158 7 view .LVU102
 396 014c 4C2F      		mov r20,r28
 397 014e 50E0      		ldi r21,0
 398 0150 60E0      		ldi r22,0
 399 0152 70E0      		ldi r23,0
 400 0154 AEE1      		ldi r26,30
 401               		1:
 402 0156 440F      		lsl r20
 403 0158 551F      		rol r21
 404 015a 661F      		rol r22
 405 015c 771F      		rol r23
 406 015e AA95      		dec r26
 407 0160 01F4      		brne 1b
 408               		.loc 1 164 16 view .LVU103
 409 0162 89E2      		ldi r24,lo8(41)
 410               	.LVL33:
 411               	.L95:
 165:sd/sd.c       **** 			}
 166:sd/sd.c       **** 			else
 167:sd/sd.c       **** 			{
 168:sd/sd.c       **** 				response = _sd_command(CMD_SEND_OP_COND, 0);
 412               		.loc 1 168 16 view .LVU104
 413 0164 0E94 0000 		call _sd_command
 414               	.LVL34:
 169:sd/sd.c       **** 			}
 170:sd/sd.c       **** 
 171:sd/sd.c       **** 			if((response & IDLE_STATE) == 0)
 415               		.loc 1 171 4 is_stmt 1 view .LVU105
 416 0168 C82F      		mov r28,r24
 417 016a C170      		andi r28,lo8(1)
 418               		.loc 1 171 6 is_stmt 0 view .LVU106
 419 016c CC23      		tst r28
 420 016e 01F0      		breq .L26
 172:sd/sd.c       **** 			{
 173:sd/sd.c       **** 				break;
 174:sd/sd.c       **** 			}
 175:sd/sd.c       **** 
 176:sd/sd.c       **** 			if(i >= 0x7FFF)
 421               		.loc 1 176 4 is_stmt 1 view .LVU107
 422               		.loc 1 176 6 is_stmt 0 view .LVU108
 423 0170 0F3F      		cpi r16,-1
 424 0172 3FE7      		ldi r19,127
 425 0174 1307      		cpc r17,r19
 426 0176 00F0      		brlo .L27
 177:sd/sd.c       **** 			{
 178:sd/sd.c       **** 				_sd_timeout();
 427               		.loc 1 178 5 is_stmt 1 view .LVU109
 428               	.LBB91:
 429               	.LBI87:
  90:sd/sd.c       **** {
 430               		.loc 1 90 13 view .LVU110
 431               	.LBB89:
  92:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 432               		.loc 1 92 2 view .LVU111
 433 0178 5C9A      		sbi 0xb,4
  93:sd/sd.c       **** }
 434               		.loc 1 93 2 view .LVU112
 435               	.LBE89:
  93:sd/sd.c       **** }
 436               		.loc 1 93 8 view .LVU113
  93:sd/sd.c       **** }
 437               		.loc 1 93 8 view .LVU114
 438               	.LBB90:
  93:sd/sd.c       **** }
 439               		.loc 1 93 2 is_stmt 0 view .LVU115
 440 017a FF92      		push r15
 441               		.cfi_def_cfa_offset 13
 442 017c EF92      		push r14
 443               		.cfi_def_cfa_offset 14
 444 017e 0E94 0000 		call panic
 445               	.LVL35:
  94:sd/sd.c       **** 
 446               		.loc 1 94 1 view .LVU116
 447 0182 0F90      		pop __tmp_reg__
 448 0184 0F90      		pop __tmp_reg__
 449               		.cfi_def_cfa_offset 12
 450               	.L27:
 451               	.LBE90:
 452               	.LBE91:
 153:sd/sd.c       **** 		{
 453               		.loc 1 153 16 is_stmt 1 view .LVU117
 454 0186 0F5F      		subi r16,-1
 455 0188 1F4F      		sbci r17,-1
 456               	.LVL36:
 153:sd/sd.c       **** 		{
 457               		.loc 1 153 3 view .LVU118
 155:sd/sd.c       **** 			{
 458               		.loc 1 155 6 is_stmt 0 view .LVU119
 459 018a 00C0      		rjmp .L28
 460               	.LVL37:
 461               	.L20:
 137:sd/sd.c       **** 			{
 462               		.loc 1 137 6 discriminator 1 view .LVU120
 463 018c 8FEF      		ldi r24,lo8(-1)
 464 018e 0E94 0000 		call spi_xchg
 465               	.LVL38:
 136:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 466               		.loc 1 136 38 discriminator 1 view .LVU121
 467 0192 8A3A      		cpi r24,lo8(-86)
 468 0194 01F0      		breq .+2
 469 0196 00C0      		rjmp .L22
 470 0198 00C0      		rjmp .L21
 471               	.L19:
 146:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 472               		.loc 1 146 4 is_stmt 1 view .LVU122
 473 019a 40E0      		ldi r20,0
 474 019c 50E0      		ldi r21,0
 475 019e BA01      		movw r22,r20
 476 01a0 87E3      		ldi r24,lo8(55)
 477 01a2 0E94 0000 		call _sd_command
 478               	.LVL39:
 147:sd/sd.c       **** 			{
 479               		.loc 1 147 4 view .LVU123
 147:sd/sd.c       **** 			{
 480               		.loc 1 147 8 is_stmt 0 view .LVU124
 481 01a6 40E0      		ldi r20,0
 482 01a8 50E0      		ldi r21,0
 483 01aa BA01      		movw r22,r20
 484 01ac 89E2      		ldi r24,lo8(41)
 485 01ae 0E94 0000 		call _sd_command
 486               	.LVL40:
 147:sd/sd.c       **** 			{
 487               		.loc 1 147 6 view .LVU125
 488 01b2 82FD      		sbrc r24,2
 489 01b4 00C0      		rjmp .L23
 149:sd/sd.c       **** 			}
 490               		.loc 1 149 5 is_stmt 1 view .LVU126
 149:sd/sd.c       **** 			}
 491               		.loc 1 149 16 is_stmt 0 view .LVU127
 492 01b6 8091 0000 		lds r24,_card_type
 493 01ba 8160      		ori r24,lo8(1)
 494 01bc 00C0      		rjmp .L94
 495               	.LVL41:
 496               	.L24:
 168:sd/sd.c       **** 			}
 497               		.loc 1 168 5 is_stmt 1 view .LVU128
 168:sd/sd.c       **** 			}
 498               		.loc 1 168 16 is_stmt 0 view .LVU129
 499 01be 81E0      		ldi r24,lo8(1)
 500 01c0 00C0      		rjmp .L95
 501               	.LVL42:
 502               	.L26:
 179:sd/sd.c       **** 			}
 180:sd/sd.c       **** 		}
 181:sd/sd.c       **** 
 182:sd/sd.c       **** 		if(_card_type & SD_2)
 503               		.loc 1 182 3 is_stmt 1 view .LVU130
 504               		.loc 1 182 5 is_stmt 0 view .LVU131
 505 01c2 8091 0000 		lds r24,_card_type
 506               	.LVL43:
 507               		.loc 1 182 5 view .LVU132
 508 01c6 81FF      		sbrs r24,1
 509 01c8 00C0      		rjmp .L29
 183:sd/sd.c       **** 		{
 184:sd/sd.c       **** 			_sd_command(CMD_READ_OCR, 0);
 510               		.loc 1 184 4 is_stmt 1 view .LVU133
 511 01ca 40E0      		ldi r20,0
 512 01cc 50E0      		ldi r21,0
 513 01ce BA01      		movw r22,r20
 514 01d0 8AE3      		ldi r24,lo8(58)
 515 01d2 0E94 0000 		call _sd_command
 516               	.LVL44:
 185:sd/sd.c       **** 			if(spi_xchg(0xFF) & 0x40)
 517               		.loc 1 185 4 view .LVU134
 518               		.loc 1 185 7 is_stmt 0 view .LVU135
 519 01d6 8FEF      		ldi r24,lo8(-1)
 520 01d8 0E94 0000 		call spi_xchg
 521               	.LVL45:
 522               		.loc 1 185 6 view .LVU136
 523 01dc 86FF      		sbrs r24,6
 524 01de 00C0      		rjmp .L30
 186:sd/sd.c       **** 			{
 187:sd/sd.c       **** 				_card_type |= SD_HC;
 525               		.loc 1 187 5 is_stmt 1 view .LVU137
 526               		.loc 1 187 16 is_stmt 0 view .LVU138
 527 01e0 8091 0000 		lds r24,_card_type
 528 01e4 8460      		ori r24,lo8(4)
 529 01e6 8093 0000 		sts _card_type,r24
 530               	.L30:
 188:sd/sd.c       **** 			}
 189:sd/sd.c       **** 
 190:sd/sd.c       **** 			spi_xchg(0xFF);
 531               		.loc 1 190 4 is_stmt 1 view .LVU139
 532 01ea 8FEF      		ldi r24,lo8(-1)
 533 01ec 0E94 0000 		call spi_xchg
 534               	.LVL46:
 191:sd/sd.c       **** 			spi_xchg(0xFF);
 535               		.loc 1 191 4 view .LVU140
 536 01f0 8FEF      		ldi r24,lo8(-1)
 537 01f2 0E94 0000 		call spi_xchg
 538               	.LVL47:
 192:sd/sd.c       **** 			spi_xchg(0xFF);
 539               		.loc 1 192 4 view .LVU141
 540 01f6 8FEF      		ldi r24,lo8(-1)
 541 01f8 0E94 0000 		call spi_xchg
 542               	.LVL48:
 543               	.L29:
 193:sd/sd.c       **** 		}
 194:sd/sd.c       **** 
 195:sd/sd.c       **** 		_sd_command(CMD_SET_BLOCKLEN, BLOCK_SIZE);
 544               		.loc 1 195 3 view .LVU142
 545 01fc 40E0      		ldi r20,0
 546 01fe 52E0      		ldi r21,lo8(2)
 547 0200 60E0      		ldi r22,0
 548 0202 70E0      		ldi r23,0
 549 0204 80E1      		ldi r24,lo8(16)
 550 0206 0E94 0000 		call _sd_command
 551               	.LVL49:
 196:sd/sd.c       **** 		SD_DESELECT;
 552               		.loc 1 196 3 view .LVU143
 553 020a 5C9A      		sbi 0xb,4
 197:sd/sd.c       **** 		_delay_ms(20);
 554               		.loc 1 197 3 view .LVU144
 555               	.LVL50:
 556               	.LBB92:
 557               	.LBI92:
 558               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 559               		.loc 2 166 1 view .LVU145
 560               	.LBB93:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 561               		.loc 2 168 2 view .LVU146
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 562               		.loc 2 190 2 view .LVU147
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 563               		.loc 2 191 2 view .LVU148
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 564               		.loc 2 192 2 view .LVU149
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 565               		.loc 2 194 7 view .LVU150
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 566               		.loc 2 198 9 view .LVU151
 567               	.LBE93:
 568               	.LBE92:
 196:sd/sd.c       **** 		_delay_ms(20);
 569               		.loc 1 196 3 is_stmt 0 view .LVU152
 570 020c 08EC      		ldi r16,lo8(-56)
 571 020e 10E0      		ldi r17,0
 572               	.LVL51:
 573               	.LBB99:
 574               	.LBB98:
 575               	.LBB94:
 576               	.LBB95:
 577               		.file 3 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 578               		.loc 3 105 2 view .LVU153
 579 0210 20E9      		ldi r18,lo8(-112)
 580 0212 31E0      		ldi r19,lo8(1)
 581               	.LVL52:
 582               	.L31:
 583               		.loc 3 105 2 view .LVU154
 584               	.LBE95:
 585               	.LBE94:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 586               		.loc 2 201 4 is_stmt 1 view .LVU155
 587               	.LBB97:
 588               	.LBI94:
 103:/usr/avr/include/util/delay_basic.h **** {
 589               		.loc 3 103 1 view .LVU156
 590               	.LBB96:
 591               		.loc 3 105 2 view .LVU157
 592 0214 C901      		movw r24,r18
 593               	/* #APP */
 594               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 595 0216 0197      		1: sbiw r24,1
 596 0218 01F4      		brne 1b
 597               	 ;  0 "" 2
 598               	.LVL53:
 599               		.loc 3 105 2 is_stmt 0 view .LVU158
 600               	/* #NOAPP */
 601               	.LBE96:
 602               	.LBE97:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 603               		.loc 2 202 4 is_stmt 1 view .LVU159
 198:/usr/avr/include/util/delay.h **** 		{
 604               		.loc 2 198 9 view .LVU160
 605 021a 0150      		subi r16,1
 606 021c 1109      		sbc r17,__zero_reg__
 607               	.LVL54:
 198:/usr/avr/include/util/delay.h **** 		{
 608               		.loc 2 198 9 is_stmt 0 view .LVU161
 609 021e 0115      		cp r16,__zero_reg__
 610 0220 1105      		cpc r17,__zero_reg__
 611 0222 01F4      		brne .L31
 612               	.LVL55:
 198:/usr/avr/include/util/delay.h **** 		{
 613               		.loc 2 198 9 view .LVU162
 614               	.LBE98:
 615               	.LBE99:
 616               	.LBE74:
 198:sd/sd.c       **** 	}
 199:sd/sd.c       **** log_boot_P(PSTR("XXX"));
 617               		.loc 1 199 1 is_stmt 1 view .LVU163
 618               	.LBB100:
 619               		.loc 1 199 12 view .LVU164
 620               		.loc 1 199 12 view .LVU165
 621               	.LBE100:
 622               		.loc 1 199 1 is_stmt 0 view .LVU166
 623 0224 80E0      		ldi r24,lo8(__c.21)
 624 0226 90E0      		ldi r25,hi8(__c.21)
 625 0228 9F93      		push r25
 626               		.cfi_def_cfa_offset 13
 627 022a 8F93      		push r24
 628               		.cfi_def_cfa_offset 14
 629 022c 0E94 0000 		call log_boot_P
 630               	.LVL56:
 631               	.LBB101:
 200:sd/sd.c       **** 	{
 201:sd/sd.c       **** 		u8 i, b, csd_read_bl_len, csd_c_size_mult, csd_structure;
 632               		.loc 1 201 3 is_stmt 1 view .LVU167
 202:sd/sd.c       **** 		u16 j, csd_c_size;
 633               		.loc 1 202 3 view .LVU168
 203:sd/sd.c       **** 
 204:sd/sd.c       **** 		spi_fast();
 634               		.loc 1 204 3 view .LVU169
 635 0230 0E94 0000 		call spi_fast
 636               	.LVL57:
 205:sd/sd.c       **** 		SD_SELECT;
 637               		.loc 1 205 3 view .LVU170
 638 0234 5C98      		cbi 0xb,4
 206:sd/sd.c       **** 
 207:sd/sd.c       **** 		/* Read CID register */
 208:sd/sd.c       **** 		_sd_command(CMD_SEND_CID, 0);
 639               		.loc 1 208 3 view .LVU171
 640 0236 40E0      		ldi r20,0
 641 0238 50E0      		ldi r21,0
 642 023a BA01      		movw r22,r20
 643 023c 8AE0      		ldi r24,lo8(10)
 644 023e 0E94 0000 		call _sd_command
 645               	.LVL58:
 209:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE) {}
 646               		.loc 1 209 3 view .LVU172
 647               		.loc 1 209 8 is_stmt 0 view .LVU173
 648 0242 0F90      		pop __tmp_reg__
 649 0244 0F90      		pop __tmp_reg__
 650               		.cfi_def_cfa_offset 12
 651               	.L32:
 652               		.loc 1 209 34 is_stmt 1 discriminator 1 view .LVU174
 653               		.loc 1 209 24 discriminator 1 view .LVU175
 654               		.loc 1 209 9 is_stmt 0 discriminator 1 view .LVU176
 655 0246 8FEF      		ldi r24,lo8(-1)
 656 0248 0E94 0000 		call spi_xchg
 657               	.LVL59:
 658               		.loc 1 209 24 discriminator 1 view .LVU177
 659 024c 8E3F      		cpi r24,lo8(-2)
 660 024e 01F4      		brne .L32
 661 0250 70E0      		ldi r23,lo8(_oem-1)
 662 0252 A72E      		mov r10,r23
 663 0254 70E0      		ldi r23,hi8(_oem-1)
 664 0256 B72E      		mov r11,r23
 665 0258 E0E0      		ldi r30,lo8(_product-3)
 666 025a CE2E      		mov r12,r30
 667 025c E0E0      		ldi r30,hi8(_product-3)
 668 025e DE2E      		mov r13,r30
 210:sd/sd.c       **** 
 211:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 669               		.loc 1 211 9 view .LVU178
 670 0260 D0E0      		ldi r29,0
 209:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE) {}
 671               		.loc 1 209 24 view .LVU179
 672 0262 F0E6      		ldi r31,lo8(96)
 673 0264 EF2E      		mov r14,r31
 674 0266 F12C      		mov r15,__zero_reg__
 675               	.L44:
 676               	.LVL60:
 212:sd/sd.c       **** 		{
 213:sd/sd.c       **** 			b = spi_xchg(0xFF);
 677               		.loc 1 213 4 is_stmt 1 view .LVU180
 678               		.loc 1 213 8 is_stmt 0 view .LVU181
 679 0268 8FEF      		ldi r24,lo8(-1)
 680 026a 0E94 0000 		call spi_xchg
 681               	.LVL61:
 214:sd/sd.c       **** 			switch(i)
 682               		.loc 1 214 4 is_stmt 1 view .LVU182
 683 026e DF30      		cpi r29,lo8(15)
 684 0270 00F0      		brlo .+2
 685 0272 00C0      		rjmp .L33
 686 0274 ED2F      		mov r30,r29
 687 0276 F0E0      		ldi r31,0
 688 0278 E050      		subi r30,lo8(-(gs(.L35)))
 689 027a F040      		sbci r31,hi8(-(gs(.L35)))
 690 027c B501      		movw r22,r10
 691 027e 6F5F      		subi r22,-1
 692 0280 7F4F      		sbci r23,-1
 693 0282 A601      		movw r20,r12
 694 0284 4F5F      		subi r20,-1
 695 0286 5F4F      		sbci r21,-1
 696 0288 9701      		movw r18,r14
 697 028a 2850      		subi r18,8
 698 028c 3109      		sbc r19,__zero_reg__
 699 028e 0C94 0000 		jmp __tablejump2__
 700               		.section	.jumptables.gcc.sd_init,"a",@progbits
 701               		.p2align	1
 702               	.L35:
 703 0000 0000      		.word gs(.L41)
 704 0002 0000      		.word gs(.L69)
 705 0004 0000      		.word gs(.L69)
 706 0006 0000      		.word gs(.L39)
 707 0008 0000      		.word gs(.L39)
 708 000a 0000      		.word gs(.L39)
 709 000c 0000      		.word gs(.L39)
 710 000e 0000      		.word gs(.L39)
 711 0010 0000      		.word gs(.L38)
 712 0012 0000      		.word gs(.L37)
 713 0014 0000      		.word gs(.L37)
 714 0016 0000      		.word gs(.L37)
 715 0018 0000      		.word gs(.L37)
 716 001a 0000      		.word gs(.L36)
 717 001c 0000      		.word gs(.L34)
 718               		.text
 719               	.L41:
 720               	.LVL62:
 215:sd/sd.c       **** 			{
 216:sd/sd.c       **** 				case 0:
 217:sd/sd.c       **** 					_manufacturer = b;
 721               		.loc 1 217 6 view .LVU183
 722               		.loc 1 217 20 is_stmt 0 view .LVU184
 723 0292 8093 0000 		sts _manufacturer,r24
 218:sd/sd.c       **** 					break;
 724               		.loc 1 218 6 is_stmt 1 view .LVU185
 211:sd/sd.c       **** 		{
 725               		.loc 1 211 22 view .LVU186
 726               	.LVL63:
 211:sd/sd.c       **** 		{
 727               		.loc 1 211 16 view .LVU187
 728 0296 5B01      		movw r10,r22
 729 0298 6A01      		movw r12,r20
 730 029a 7901      		movw r14,r18
 213:sd/sd.c       **** 			switch(i)
 731               		.loc 1 213 4 view .LVU188
 213:sd/sd.c       **** 			switch(i)
 732               		.loc 1 213 8 is_stmt 0 view .LVU189
 733 029c 8FEF      		ldi r24,lo8(-1)
 734               	.LVL64:
 213:sd/sd.c       **** 			switch(i)
 735               		.loc 1 213 8 view .LVU190
 736 029e 0E94 0000 		call spi_xchg
 737               	.LVL65:
 214:sd/sd.c       **** 			{
 738               		.loc 1 214 4 is_stmt 1 view .LVU191
 211:sd/sd.c       **** 		{
 739               		.loc 1 211 22 is_stmt 0 view .LVU192
 740 02a2 D1E0      		ldi r29,lo8(1)
 741               	.LVL66:
 742               	.L40:
 219:sd/sd.c       **** 
 220:sd/sd.c       **** 				case 1:
 221:sd/sd.c       **** 				case 2:
 222:sd/sd.c       **** 					_oem[i - 1] = b;
 743               		.loc 1 222 6 is_stmt 1 view .LVU193
 744               		.loc 1 222 18 is_stmt 0 view .LVU194
 745 02a4 F501      		movw r30,r10
 746 02a6 8193      		st Z+,r24
 747 02a8 5F01      		movw r10,r30
 223:sd/sd.c       **** 					break;
 748               		.loc 1 223 6 is_stmt 1 view .LVU195
 211:sd/sd.c       **** 		{
 749               		.loc 1 211 22 view .LVU196
 750 02aa DF5F      		subi r29,lo8(-(1))
 751               	.LVL67:
 211:sd/sd.c       **** 		{
 752               		.loc 1 211 16 view .LVU197
 753 02ac FFEF      		ldi r31,-1
 754 02ae CF1A      		sub r12,r31
 755 02b0 DF0A      		sbc r13,r31
 756 02b2 28E0      		ldi r18,8
 757 02b4 E21A      		sub r14,r18
 758 02b6 F108      		sbc r15,__zero_reg__
 759 02b8 00C0      		rjmp .L44
 760               	.L69:
 214:sd/sd.c       **** 			{
 761               		.loc 1 214 4 is_stmt 0 view .LVU198
 762 02ba D2E0      		ldi r29,lo8(2)
 763               	.LVL68:
 214:sd/sd.c       **** 			{
 764               		.loc 1 214 4 view .LVU199
 765 02bc 00C0      		rjmp .L40
 766               	.LVL69:
 767               	.L39:
 224:sd/sd.c       **** 
 225:sd/sd.c       **** 				case 3:
 226:sd/sd.c       **** 				case 4:
 227:sd/sd.c       **** 				case 5:
 228:sd/sd.c       **** 				case 6:
 229:sd/sd.c       **** 				case 7:
 230:sd/sd.c       **** 					_product[i - 3] = b;
 768               		.loc 1 230 6 is_stmt 1 view .LVU200
 769               		.loc 1 230 22 is_stmt 0 view .LVU201
 770 02be F601      		movw r30,r12
 771 02c0 8083      		st Z,r24
 231:sd/sd.c       **** 					break;
 772               		.loc 1 231 6 is_stmt 1 view .LVU202
 211:sd/sd.c       **** 		{
 773               		.loc 1 211 22 view .LVU203
 774 02c2 DF5F      		subi r29,lo8(-(1))
 775               	.LVL70:
 211:sd/sd.c       **** 		{
 776               		.loc 1 211 16 view .LVU204
 777 02c4 5B01      		movw r10,r22
 778 02c6 6A01      		movw r12,r20
 779 02c8 7901      		movw r14,r18
 780 02ca 00C0      		rjmp .L44
 781               	.L38:
 232:sd/sd.c       **** 
 233:sd/sd.c       **** 				case 8:
 234:sd/sd.c       **** 					_revision = b;
 782               		.loc 1 234 6 view .LVU205
 783               		.loc 1 234 16 is_stmt 0 view .LVU206
 784 02cc 8093 0000 		sts _revision,r24
 235:sd/sd.c       **** 					break;
 785               		.loc 1 235 6 is_stmt 1 view .LVU207
 211:sd/sd.c       **** 		{
 786               		.loc 1 211 22 view .LVU208
 787               	.LVL71:
 211:sd/sd.c       **** 		{
 788               		.loc 1 211 16 view .LVU209
 789 02d0 5B01      		movw r10,r22
 790 02d2 6A01      		movw r12,r20
 791 02d4 7901      		movw r14,r18
 213:sd/sd.c       **** 			switch(i)
 792               		.loc 1 213 4 view .LVU210
 213:sd/sd.c       **** 			switch(i)
 793               		.loc 1 213 8 is_stmt 0 view .LVU211
 794 02d6 8FEF      		ldi r24,lo8(-1)
 795               	.LVL72:
 213:sd/sd.c       **** 			switch(i)
 796               		.loc 1 213 8 view .LVU212
 797 02d8 0E94 0000 		call spi_xchg
 798               	.LVL73:
 214:sd/sd.c       **** 			{
 799               		.loc 1 214 4 is_stmt 1 view .LVU213
 211:sd/sd.c       **** 		{
 800               		.loc 1 211 22 is_stmt 0 view .LVU214
 801 02dc D9E0      		ldi r29,lo8(9)
 802               	.LVL74:
 803               	.L37:
 236:sd/sd.c       **** 
 237:sd/sd.c       **** 				case 9:
 238:sd/sd.c       **** 				case 10:
 239:sd/sd.c       **** 				case 11:
 240:sd/sd.c       **** 				case 12:
 241:sd/sd.c       **** 					_serial |= (u32)b << ((12 - i) * 8);
 804               		.loc 1 241 6 is_stmt 1 view .LVU215
 805               		.loc 1 241 17 is_stmt 0 view .LVU216
 806 02de 90E0      		ldi r25,0
 807 02e0 A0E0      		ldi r26,0
 808 02e2 B0E0      		ldi r27,0
 809               		.loc 1 241 24 view .LVU217
 810 02e4 0E2C      		mov r0,r14
 811 02e6 00C0      		rjmp 2f
 812               		1:
 813 02e8 880F      		lsl r24
 814 02ea 991F      		rol r25
 815 02ec AA1F      		rol r26
 816 02ee BB1F      		rol r27
 817               		2:
 818 02f0 0A94      		dec r0
 819 02f2 02F4      		brpl 1b
 820               	.LVL75:
 821               		.loc 1 241 14 view .LVU218
 822 02f4 4091 0000 		lds r20,_serial
 823 02f8 5091 0000 		lds r21,_serial+1
 824 02fc 6091 0000 		lds r22,_serial+2
 825 0300 7091 0000 		lds r23,_serial+3
 826 0304 842B      		or r24,r20
 827 0306 952B      		or r25,r21
 828 0308 A62B      		or r26,r22
 829 030a B72B      		or r27,r23
 830 030c 8093 0000 		sts _serial,r24
 831 0310 9093 0000 		sts _serial+1,r25
 832 0314 A093 0000 		sts _serial+2,r26
 833 0318 B093 0000 		sts _serial+3,r27
 242:sd/sd.c       **** 					break;
 834               		.loc 1 242 6 is_stmt 1 view .LVU219
 211:sd/sd.c       **** 		{
 835               		.loc 1 211 22 view .LVU220
 836 031c DF5F      		subi r29,lo8(-(1))
 837               	.LVL76:
 211:sd/sd.c       **** 		{
 838               		.loc 1 211 16 view .LVU221
 839 031e FFEF      		ldi r31,-1
 840 0320 AF1A      		sub r10,r31
 841 0322 BF0A      		sbc r11,r31
 842 0324 2FEF      		ldi r18,-1
 843 0326 C21A      		sub r12,r18
 844 0328 D20A      		sbc r13,r18
 845 032a 38E0      		ldi r19,8
 846 032c E31A      		sub r14,r19
 847 032e F108      		sbc r15,__zero_reg__
 848 0330 00C0      		rjmp .L44
 849               	.LVL77:
 850               	.L36:
 243:sd/sd.c       **** 
 244:sd/sd.c       **** 				case 13:
 245:sd/sd.c       **** 					_manufacturing_year = b << 4;
 851               		.loc 1 245 6 view .LVU222
 852               		.loc 1 245 30 is_stmt 0 view .LVU223
 853 0332 8295      		swap r24
 854               	.LVL78:
 855               		.loc 1 245 30 view .LVU224
 856 0334 807F      		andi r24,lo8(-16)
 857               		.loc 1 245 26 view .LVU225
 858 0336 8093 0000 		sts _manufacturing_year,r24
 246:sd/sd.c       **** 					break;
 859               		.loc 1 246 6 is_stmt 1 view .LVU226
 211:sd/sd.c       **** 		{
 860               		.loc 1 211 22 view .LVU227
 861               	.LVL79:
 211:sd/sd.c       **** 		{
 862               		.loc 1 211 16 view .LVU228
 863 033a 5B01      		movw r10,r22
 864 033c 6A01      		movw r12,r20
 865 033e 7901      		movw r14,r18
 213:sd/sd.c       **** 			switch(i)
 866               		.loc 1 213 4 view .LVU229
 213:sd/sd.c       **** 			switch(i)
 867               		.loc 1 213 8 is_stmt 0 view .LVU230
 868 0340 8FEF      		ldi r24,lo8(-1)
 869 0342 0E94 0000 		call spi_xchg
 870               	.LVL80:
 214:sd/sd.c       **** 			{
 871               		.loc 1 214 4 is_stmt 1 view .LVU231
 872               	.L34:
 247:sd/sd.c       **** 
 248:sd/sd.c       **** 				case 14:
 249:sd/sd.c       **** 					_manufacturing_year |= b >> 4;
 873               		.loc 1 249 6 view .LVU232
 874               		.loc 1 249 26 is_stmt 0 view .LVU233
 875 0346 282F      		mov r18,r24
 876 0348 2295      		swap r18
 877 034a 2F70      		andi r18,lo8(15)
 878 034c 9091 0000 		lds r25,_manufacturing_year
 879 0350 922B      		or r25,r18
 880 0352 9093 0000 		sts _manufacturing_year,r25
 250:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 881               		.loc 1 250 6 is_stmt 1 view .LVU234
 882               		.loc 1 250 31 is_stmt 0 view .LVU235
 883 0356 8F70      		andi r24,lo8(15)
 884               	.LVL81:
 885               		.loc 1 250 27 view .LVU236
 886 0358 8093 0000 		sts _manufacturing_month,r24
 251:sd/sd.c       **** 					break;
 887               		.loc 1 251 6 is_stmt 1 view .LVU237
 211:sd/sd.c       **** 		{
 888               		.loc 1 211 22 view .LVU238
 889               	.LVL82:
 211:sd/sd.c       **** 		{
 890               		.loc 1 211 16 view .LVU239
 891 035c 4FEF      		ldi r20,-1
 892 035e A41A      		sub r10,r20
 893 0360 B40A      		sbc r11,r20
 894 0362 5FEF      		ldi r21,-1
 895 0364 C51A      		sub r12,r21
 896 0366 D50A      		sbc r13,r21
 897 0368 88E0      		ldi r24,8
 898 036a E81A      		sub r14,r24
 899 036c F108      		sbc r15,__zero_reg__
 211:sd/sd.c       **** 		{
 900               		.loc 1 211 22 is_stmt 0 view .LVU240
 901 036e DFE0      		ldi r29,lo8(15)
 902 0370 00C0      		rjmp .L44
 903               	.LVL83:
 904               	.L33:
 211:sd/sd.c       **** 		{
 905               		.loc 1 211 22 is_stmt 1 discriminator 2 view .LVU241
 906 0372 DF5F      		subi r29,lo8(-(1))
 907               	.LVL84:
 211:sd/sd.c       **** 		{
 908               		.loc 1 211 16 discriminator 2 view .LVU242
 909 0374 D231      		cpi r29,lo8(18)
 910 0376 01F0      		breq .L43
 211:sd/sd.c       **** 		{
 911               		.loc 1 211 16 is_stmt 0 view .LVU243
 912 0378 9FEF      		ldi r25,-1
 913 037a A91A      		sub r10,r25
 914 037c B90A      		sbc r11,r25
 915 037e EFEF      		ldi r30,-1
 916 0380 CE1A      		sub r12,r30
 917 0382 DE0A      		sbc r13,r30
 918 0384 F8E0      		ldi r31,8
 919 0386 EF1A      		sub r14,r31
 920 0388 F108      		sbc r15,__zero_reg__
 921 038a 00C0      		rjmp .L44
 922               	.L43:
 252:sd/sd.c       **** 			}
 253:sd/sd.c       **** 		}
 254:sd/sd.c       **** 
 255:sd/sd.c       **** 		/* Read CSD register */
 256:sd/sd.c       **** 		csd_read_bl_len = 0;
 923               		.loc 1 256 3 is_stmt 1 view .LVU244
 924               	.LVL85:
 257:sd/sd.c       **** 		csd_c_size_mult = 0;
 925               		.loc 1 257 3 view .LVU245
 258:sd/sd.c       **** 		csd_structure = 0;
 926               		.loc 1 258 3 view .LVU246
 259:sd/sd.c       **** 		csd_c_size = 0;
 927               		.loc 1 259 3 view .LVU247
 260:sd/sd.c       **** 
 261:sd/sd.c       **** 		_sd_command(CMD_SEND_CSD, 0);
 928               		.loc 1 261 3 view .LVU248
 929 038c 40E0      		ldi r20,0
 930 038e 50E0      		ldi r21,0
 931 0390 BA01      		movw r22,r20
 932 0392 89E0      		ldi r24,lo8(9)
 933               	.LVL86:
 934               		.loc 1 261 3 is_stmt 0 view .LVU249
 935 0394 0E94 0000 		call _sd_command
 936               	.LVL87:
 262:sd/sd.c       **** 		j = 0;
 937               		.loc 1 262 3 is_stmt 1 view .LVU250
 263:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 938               		.loc 1 263 3 view .LVU251
 939               	.L45:
 264:sd/sd.c       **** 		{
 265:sd/sd.c       **** 			if(++j > 0x7FFF)
 266:sd/sd.c       **** 			{
 267:sd/sd.c       **** 				//_sd_timeout();
 268:sd/sd.c       **** 			}
 940               		.loc 1 268 4 view .LVU252
 263:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 941               		.loc 1 263 24 view .LVU253
 263:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 942               		.loc 1 263 9 is_stmt 0 view .LVU254
 943 0398 8FEF      		ldi r24,lo8(-1)
 944 039a 0E94 0000 		call spi_xchg
 945               	.LVL88:
 263:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 946               		.loc 1 263 24 view .LVU255
 947 039e 8E3F      		cpi r24,lo8(-2)
 948 03a0 01F4      		brne .L45
 258:sd/sd.c       **** 		csd_c_size = 0;
 949               		.loc 1 258 17 view .LVU256
 950 03a2 D0E0      		ldi r29,0
 951               	.LVL89:
 257:sd/sd.c       **** 		csd_structure = 0;
 952               		.loc 1 257 19 view .LVU257
 953 03a4 D12C      		mov r13,__zero_reg__
 256:sd/sd.c       **** 		csd_c_size_mult = 0;
 954               		.loc 1 256 19 view .LVU258
 955 03a6 E12C      		mov r14,__zero_reg__
 269:sd/sd.c       **** 		}
 270:sd/sd.c       **** 
 271:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 272:sd/sd.c       **** 		{
 273:sd/sd.c       **** 			b = spi_xchg(0xFF);
 274:sd/sd.c       **** 			if(i == 0)
 275:sd/sd.c       **** 			{
 276:sd/sd.c       **** 				csd_structure = b >> 6;
 277:sd/sd.c       **** 			}
 278:sd/sd.c       **** 			else if(i == 14)
 279:sd/sd.c       **** 			{
 280:sd/sd.c       **** 				if(b & 0x40)
 281:sd/sd.c       **** 				{
 282:sd/sd.c       **** 					_flag_copy = 1;
 283:sd/sd.c       **** 				}
 284:sd/sd.c       **** 
 285:sd/sd.c       **** 				if(b & 0x20)
 286:sd/sd.c       **** 				{
 287:sd/sd.c       **** 					_flag_write_protect = 1;
 288:sd/sd.c       **** 				}
 289:sd/sd.c       **** 
 290:sd/sd.c       **** 				if(b & 0x10)
 291:sd/sd.c       **** 				{
 292:sd/sd.c       **** 					_flag_write_protect_temp = 1;
 956               		.loc 1 292 31 view .LVU259
 957 03a8 FF24      		clr r15
 958 03aa F394      		inc r15
 959               	.LVL90:
 960               	.L65:
 273:sd/sd.c       **** 			if(i == 0)
 961               		.loc 1 273 4 is_stmt 1 view .LVU260
 273:sd/sd.c       **** 			if(i == 0)
 962               		.loc 1 273 8 is_stmt 0 view .LVU261
 963 03ac 8FEF      		ldi r24,lo8(-1)
 964 03ae 0E94 0000 		call spi_xchg
 965               	.LVL91:
 274:sd/sd.c       **** 			{
 966               		.loc 1 274 4 is_stmt 1 view .LVU262
 274:sd/sd.c       **** 			{
 967               		.loc 1 274 6 is_stmt 0 view .LVU263
 968 03b2 C111      		cpse r28,__zero_reg__
 969 03b4 00C0      		rjmp .L46
 970               	.LVL92:
 276:sd/sd.c       **** 			}
 971               		.loc 1 276 5 is_stmt 1 view .LVU264
 276:sd/sd.c       **** 			}
 972               		.loc 1 276 19 is_stmt 0 view .LVU265
 973 03b6 D82F      		mov r29,r24
 974 03b8 D295      		swap r29
 975 03ba D695      		lsr r29
 976 03bc D695      		lsr r29
 977 03be D370      		andi r29,lo8(3)
 271:sd/sd.c       **** 		{
 978               		.loc 1 271 22 is_stmt 1 view .LVU266
 979               	.LVL93:
 271:sd/sd.c       **** 		{
 980               		.loc 1 271 16 view .LVU267
 271:sd/sd.c       **** 		{
 981               		.loc 1 271 22 is_stmt 0 view .LVU268
 982 03c0 C1E0      		ldi r28,lo8(1)
 983 03c2 00C0      		rjmp .L65
 984               	.LVL94:
 985               	.L46:
 278:sd/sd.c       **** 			{
 986               		.loc 1 278 9 is_stmt 1 view .LVU269
 278:sd/sd.c       **** 			{
 987               		.loc 1 278 11 is_stmt 0 view .LVU270
 988 03c4 CE30      		cpi r28,lo8(14)
 989 03c6 01F4      		brne .L48
 280:sd/sd.c       **** 				{
 990               		.loc 1 280 5 is_stmt 1 view .LVU271
 280:sd/sd.c       **** 				{
 991               		.loc 1 280 10 is_stmt 0 view .LVU272
 992 03c8 282F      		mov r18,r24
 993 03ca 30E0      		ldi r19,0
 280:sd/sd.c       **** 				{
 994               		.loc 1 280 7 view .LVU273
 995 03cc 86FD      		sbrc r24,6
 996               	.LVL95:
 282:sd/sd.c       **** 				}
 997               		.loc 1 282 6 is_stmt 1 view .LVU274
 282:sd/sd.c       **** 				}
 998               		.loc 1 282 17 is_stmt 0 view .LVU275
 999 03ce F092 0000 		sts _flag_copy,r15
 1000               	.L49:
 285:sd/sd.c       **** 				{
 1001               		.loc 1 285 5 is_stmt 1 view .LVU276
 285:sd/sd.c       **** 				{
 1002               		.loc 1 285 7 is_stmt 0 view .LVU277
 1003 03d2 85FD      		sbrc r24,5
 287:sd/sd.c       **** 				}
 1004               		.loc 1 287 6 is_stmt 1 view .LVU278
 287:sd/sd.c       **** 				}
 1005               		.loc 1 287 26 is_stmt 0 view .LVU279
 1006 03d4 F092 0000 		sts _flag_write_protect,r15
 1007               	.L50:
 290:sd/sd.c       **** 				{
 1008               		.loc 1 290 5 is_stmt 1 view .LVU280
 290:sd/sd.c       **** 				{
 1009               		.loc 1 290 7 is_stmt 0 view .LVU281
 1010 03d8 84FD      		sbrc r24,4
 1011               		.loc 1 292 6 is_stmt 1 view .LVU282
 1012               		.loc 1 292 31 is_stmt 0 view .LVU283
 1013 03da F092 0000 		sts _flag_write_protect_temp,r15
 1014               	.L51:
 293:sd/sd.c       **** 				}
 294:sd/sd.c       **** 
 295:sd/sd.c       **** 				_format = (b & 0x0C) >> 2;
 1015               		.loc 1 295 5 is_stmt 1 view .LVU284
 1016               		.loc 1 295 26 is_stmt 0 view .LVU285
 1017 03de C901      		movw r24,r18
 1018 03e0 9595      		asr r25
 1019 03e2 8795      		ror r24
 1020 03e4 9595      		asr r25
 1021 03e6 8795      		ror r24
 1022 03e8 8370      		andi r24,lo8(3)
 1023               		.loc 1 295 13 view .LVU286
 1024 03ea 8093 0000 		sts _format,r24
 271:sd/sd.c       **** 		{
 1025               		.loc 1 271 22 is_stmt 1 view .LVU287
 1026               	.LVL96:
 271:sd/sd.c       **** 		{
 1027               		.loc 1 271 16 view .LVU288
 271:sd/sd.c       **** 		{
 1028               		.loc 1 271 22 is_stmt 0 view .LVU289
 1029 03ee CFE0      		ldi r28,lo8(15)
 1030 03f0 00C0      		rjmp .L65
 1031               	.LVL97:
 1032               	.L48:
 296:sd/sd.c       **** 			}
 297:sd/sd.c       **** 			else
 298:sd/sd.c       **** 			{
 299:sd/sd.c       **** 				if(csd_structure == 0x01)
 1033               		.loc 1 299 5 is_stmt 1 view .LVU290
 1034               		.loc 1 299 7 is_stmt 0 view .LVU291
 1035 03f2 D130      		cpi r29,lo8(1)
 1036 03f4 01F0      		breq .+2
 1037 03f6 00C0      		rjmp .L52
 300:sd/sd.c       **** 				{
 301:sd/sd.c       **** 					switch(i)
 1038               		.loc 1 301 6 is_stmt 1 view .LVU292
 1039 03f8 C730      		cpi r28,lo8(7)
 1040 03fa 01F4      		brne .+2
 1041 03fc 00C0      		rjmp .L53
 1042 03fe 98EF      		ldi r25,lo8(-8)
 1043 0400 9C0F      		add r25,r28
 1044 0402 9230      		cpi r25,lo8(2)
 1045 0404 00F4      		brsh .+2
 1046 0406 00C0      		rjmp .L55
 1047               	.LVL98:
 1048               	.L54:
 271:sd/sd.c       **** 		{
 1049               		.loc 1 271 22 discriminator 2 view .LVU293
 1050 0408 CF5F      		subi r28,lo8(-(1))
 1051               	.LVL99:
 271:sd/sd.c       **** 		{
 1052               		.loc 1 271 16 discriminator 2 view .LVU294
 1053 040a C231      		cpi r28,lo8(18)
 1054 040c 01F4      		brne .L65
 302:sd/sd.c       **** 					{
 303:sd/sd.c       **** 						case 7:
 304:sd/sd.c       **** 							b &= 0x3f;
 305:sd/sd.c       **** 
 306:sd/sd.c       **** 						case 8:
 307:sd/sd.c       **** 						case 9:
 308:sd/sd.c       **** 							csd_c_size <<= 8;
 309:sd/sd.c       **** 							csd_c_size |= b;
 310:sd/sd.c       **** 							++csd_c_size;
 311:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 312:sd/sd.c       **** 					}
 313:sd/sd.c       **** 				}
 314:sd/sd.c       **** 				else if(csd_structure == 0x00)
 315:sd/sd.c       **** 				{
 316:sd/sd.c       **** 					switch(i)
 317:sd/sd.c       **** 					{
 318:sd/sd.c       **** 						case 5:
 319:sd/sd.c       **** 							csd_read_bl_len = b & 0x0F;
 320:sd/sd.c       **** 							break;
 321:sd/sd.c       **** 
 322:sd/sd.c       **** 						case 6:
 323:sd/sd.c       **** 							csd_c_size = b & 0x03;
 324:sd/sd.c       **** 							csd_c_size <<= 8;
 325:sd/sd.c       **** 							break;
 326:sd/sd.c       **** 
 327:sd/sd.c       **** 						case 7:
 328:sd/sd.c       **** 							csd_c_size |= b;
 329:sd/sd.c       **** 							csd_c_size <<= 2;
 330:sd/sd.c       **** 							break;
 331:sd/sd.c       **** 
 332:sd/sd.c       **** 						case 8:
 333:sd/sd.c       **** 							csd_c_size |= b >> 6;
 334:sd/sd.c       **** 							++csd_c_size;
 335:sd/sd.c       **** 							break;
 336:sd/sd.c       **** 
 337:sd/sd.c       **** 						case 9:
 338:sd/sd.c       **** 							csd_c_size_mult = b & 0x03;
 339:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 340:sd/sd.c       **** 							break;
 341:sd/sd.c       **** 
 342:sd/sd.c       **** 						case 10:
 343:sd/sd.c       **** 							csd_c_size_mult |= b >> 7;
 344:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 345:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 346:sd/sd.c       **** 							break;
 347:sd/sd.c       **** 					}
 348:sd/sd.c       **** 				}
 349:sd/sd.c       **** 			}
 350:sd/sd.c       **** 		}
 351:sd/sd.c       **** 
 352:sd/sd.c       **** 		SD_DESELECT;
 1055               		.loc 1 352 3 view .LVU295
 1056 040e 5C9A      		sbi 0xb,4
 1057               	.LBE101:
 353:sd/sd.c       **** 	}
 354:sd/sd.c       **** 
 355:sd/sd.c       **** 	log_boot_P(PSTR("SD card detected and initialized"));
 1058               		.loc 1 355 2 view .LVU296
 1059               	.LBB102:
 1060               		.loc 1 355 13 view .LVU297
 1061               		.loc 1 355 13 view .LVU298
 1062               	.LBE102:
 1063               		.loc 1 355 2 is_stmt 0 view .LVU299
 1064 0410 80E0      		ldi r24,lo8(__c.20)
 1065 0412 90E0      		ldi r25,hi8(__c.20)
 1066 0414 9F93      		push r25
 1067               		.cfi_def_cfa_offset 13
 1068 0416 8F93      		push r24
 1069               		.cfi_def_cfa_offset 14
 1070 0418 0E94 0000 		call log_boot_P
 1071               	.LVL100:
 356:sd/sd.c       **** 
 357:sd/sd.c       **** 	/* Print disk info */
 358:sd/sd.c       **** 	log_boot_P(PSTR("Card Type          : %S"),
 1072               		.loc 1 358 2 is_stmt 1 view .LVU300
 1073 041c 8091 0000 		lds r24,_card_type
 1074 0420 0F90      		pop __tmp_reg__
 1075 0422 0F90      		pop __tmp_reg__
 1076               		.cfi_def_cfa_offset 12
 1077 0424 82FF      		sbrs r24,2
 1078 0426 00C0      		rjmp .L70
 1079 0428 80E0      		ldi r24,lo8(__c.19)
 1080 042a 90E0      		ldi r25,hi8(__c.19)
 1081               	.L66:
 1082               	.LBB103:
 1083               		.loc 1 358 13 discriminator 4 view .LVU301
 1084               		.loc 1 358 13 discriminator 4 view .LVU302
 1085               	.LBE103:
 1086               		.loc 1 358 2 is_stmt 0 discriminator 4 view .LVU303
 1087 042c 9F93      		push r25
 1088               		.cfi_def_cfa_offset 13
 1089 042e 8F93      		push r24
 1090               		.cfi_def_cfa_offset 14
 1091 0430 80E0      		ldi r24,lo8(__c.17)
 1092 0432 90E0      		ldi r25,hi8(__c.17)
 1093 0434 9F93      		push r25
 1094               		.cfi_def_cfa_offset 15
 1095 0436 8F93      		push r24
 1096               		.cfi_def_cfa_offset 16
 1097 0438 0E94 0000 		call log_boot_P
 1098               	.LVL101:
 359:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 360:sd/sd.c       **** 
 361:sd/sd.c       **** 	log_boot_P(PSTR("Block Size         : %d"),
 1099               		.loc 1 361 2 is_stmt 1 discriminator 4 view .LVU304
 1100               	.LBB104:
 1101               		.loc 1 361 13 discriminator 4 view .LVU305
 1102               		.loc 1 361 13 discriminator 4 view .LVU306
 1103               	.LBE104:
 1104               		.loc 1 361 2 is_stmt 0 discriminator 4 view .LVU307
 1105 043c 82E0      		ldi r24,lo8(2)
 1106 043e 8F93      		push r24
 1107               		.cfi_def_cfa_offset 17
 1108 0440 1F92      		push __zero_reg__
 1109               		.cfi_def_cfa_offset 18
 1110 0442 80E0      		ldi r24,lo8(__c.16)
 1111 0444 90E0      		ldi r25,hi8(__c.16)
 1112 0446 9F93      		push r25
 1113               		.cfi_def_cfa_offset 19
 1114 0448 8F93      		push r24
 1115               		.cfi_def_cfa_offset 20
 1116 044a 0E94 0000 		call log_boot_P
 1117               	.LVL102:
 362:sd/sd.c       **** 		BLOCK_SIZE);
 363:sd/sd.c       **** 
 364:sd/sd.c       **** 	log_boot_P(PSTR("Manufacturer ID    : %02X"),
 1118               		.loc 1 364 2 is_stmt 1 discriminator 4 view .LVU308
 1119               	.LBB105:
 1120               		.loc 1 364 13 discriminator 4 view .LVU309
 1121               		.loc 1 364 13 discriminator 4 view .LVU310
 1122               	.LBE105:
 1123               		.loc 1 364 2 is_stmt 0 discriminator 4 view .LVU311
 1124 044e 8091 0000 		lds r24,_manufacturer
 1125 0452 1F92      		push __zero_reg__
 1126               		.cfi_def_cfa_offset 21
 1127 0454 8F93      		push r24
 1128               		.cfi_def_cfa_offset 22
 1129 0456 80E0      		ldi r24,lo8(__c.15)
 1130 0458 90E0      		ldi r25,hi8(__c.15)
 1131 045a 9F93      		push r25
 1132               		.cfi_def_cfa_offset 23
 1133 045c 8F93      		push r24
 1134               		.cfi_def_cfa_offset 24
 1135 045e 0E94 0000 		call log_boot_P
 1136               	.LVL103:
 365:sd/sd.c       **** 		_manufacturer);
 366:sd/sd.c       **** 
 367:sd/sd.c       **** 	log_boot_P(PSTR("OEM                : %s"),
 1137               		.loc 1 367 2 is_stmt 1 discriminator 4 view .LVU312
 1138               	.LBB106:
 1139               		.loc 1 367 13 discriminator 4 view .LVU313
 1140               		.loc 1 367 13 discriminator 4 view .LVU314
 1141               	.LBE106:
 1142               		.loc 1 367 2 is_stmt 0 discriminator 4 view .LVU315
 1143 0462 80E0      		ldi r24,lo8(_oem)
 1144 0464 90E0      		ldi r25,hi8(_oem)
 1145 0466 9F93      		push r25
 1146               		.cfi_def_cfa_offset 25
 1147 0468 8F93      		push r24
 1148               		.cfi_def_cfa_offset 26
 1149 046a 80E0      		ldi r24,lo8(__c.14)
 1150 046c 90E0      		ldi r25,hi8(__c.14)
 1151 046e 9F93      		push r25
 1152               		.cfi_def_cfa_offset 27
 1153 0470 8F93      		push r24
 1154               		.cfi_def_cfa_offset 28
 1155 0472 0E94 0000 		call log_boot_P
 1156               	.LVL104:
 368:sd/sd.c       **** 		_oem);
 369:sd/sd.c       **** 
 370:sd/sd.c       **** 	log_boot_P(PSTR("Product Name       : %s"),
 1157               		.loc 1 370 2 is_stmt 1 discriminator 4 view .LVU316
 1158               	.LBB107:
 1159               		.loc 1 370 13 discriminator 4 view .LVU317
 1160               		.loc 1 370 13 discriminator 4 view .LVU318
 1161               	.LBE107:
 1162               		.loc 1 370 2 is_stmt 0 discriminator 4 view .LVU319
 1163 0476 80E0      		ldi r24,lo8(_product)
 1164 0478 90E0      		ldi r25,hi8(_product)
 1165 047a 9F93      		push r25
 1166               		.cfi_def_cfa_offset 29
 1167 047c 8F93      		push r24
 1168               		.cfi_def_cfa_offset 30
 1169 047e 80E0      		ldi r24,lo8(__c.13)
 1170 0480 90E0      		ldi r25,hi8(__c.13)
 1171 0482 9F93      		push r25
 1172               		.cfi_def_cfa_offset 31
 1173 0484 8F93      		push r24
 1174               		.cfi_def_cfa_offset 32
 1175 0486 0E94 0000 		call log_boot_P
 1176               	.LVL105:
 371:sd/sd.c       **** 		_product);
 372:sd/sd.c       **** 
 373:sd/sd.c       **** 	log_boot_P(PSTR("Revision           : %c.%c"),
 1177               		.loc 1 373 2 is_stmt 1 discriminator 4 view .LVU320
 374:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1178               		.loc 1 374 38 is_stmt 0 discriminator 4 view .LVU321
 1179 048a 8091 0000 		lds r24,_revision
 1180               	.LBB108:
 373:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1181               		.loc 1 373 13 is_stmt 1 discriminator 4 view .LVU322
 373:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1182               		.loc 1 373 13 discriminator 4 view .LVU323
 1183               	.LBE108:
 373:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1184               		.loc 1 373 2 is_stmt 0 discriminator 4 view .LVU324
 1185 048e 982F      		mov r25,r24
 1186 0490 9F70      		andi r25,lo8(15)
 1187 0492 905D      		subi r25,lo8(-(48))
 1188 0494 1F92      		push __zero_reg__
 1189               		.cfi_def_cfa_offset 33
 1190 0496 9F93      		push r25
 1191               		.cfi_def_cfa_offset 34
 1192               		.loc 1 374 14 discriminator 4 view .LVU325
 1193 0498 8295      		swap r24
 1194 049a 8F70      		andi r24,lo8(15)
 373:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1195               		.loc 1 373 2 discriminator 4 view .LVU326
 1196 049c 805D      		subi r24,lo8(-(48))
 1197 049e 1F92      		push __zero_reg__
 1198               		.cfi_def_cfa_offset 35
 1199 04a0 8F93      		push r24
 1200               		.cfi_def_cfa_offset 36
 1201 04a2 80E0      		ldi r24,lo8(__c.12)
 1202 04a4 90E0      		ldi r25,hi8(__c.12)
 1203 04a6 9F93      		push r25
 1204               		.cfi_def_cfa_offset 37
 1205 04a8 8F93      		push r24
 1206               		.cfi_def_cfa_offset 38
 1207 04aa 0E94 0000 		call log_boot_P
 1208               	.LVL106:
 375:sd/sd.c       **** 
 376:sd/sd.c       **** 	log_boot_P(PSTR("Serial Number      : 0x%08lX"),
 1209               		.loc 1 376 2 is_stmt 1 discriminator 4 view .LVU327
 1210               	.LBB109:
 1211               		.loc 1 376 13 discriminator 4 view .LVU328
 1212               		.loc 1 376 13 discriminator 4 view .LVU329
 1213               	.LBE109:
 1214               		.loc 1 376 2 is_stmt 0 discriminator 4 view .LVU330
 1215 04ae 8091 0000 		lds r24,_serial+3
 1216 04b2 8F93      		push r24
 1217               		.cfi_def_cfa_offset 39
 1218 04b4 8091 0000 		lds r24,_serial+2
 1219 04b8 8F93      		push r24
 1220               		.cfi_def_cfa_offset 40
 1221 04ba 8091 0000 		lds r24,_serial+1
 1222 04be 8F93      		push r24
 1223               		.cfi_def_cfa_offset 41
 1224 04c0 8091 0000 		lds r24,_serial
 1225 04c4 8F93      		push r24
 1226               		.cfi_def_cfa_offset 42
 1227 04c6 80E0      		ldi r24,lo8(__c.11)
 1228 04c8 90E0      		ldi r25,hi8(__c.11)
 1229 04ca 9F93      		push r25
 1230               		.cfi_def_cfa_offset 43
 1231 04cc 8F93      		push r24
 1232               		.cfi_def_cfa_offset 44
 1233 04ce 0E94 0000 		call log_boot_P
 1234               	.LVL107:
 377:sd/sd.c       **** 		_serial);
 378:sd/sd.c       **** 
 379:sd/sd.c       **** 	log_boot_P(PSTR("Manufacture Date   : %02d-%d"),
 1235               		.loc 1 379 2 is_stmt 1 discriminator 4 view .LVU331
 1236               	.LBB110:
 1237               		.loc 1 379 13 discriminator 4 view .LVU332
 1238               		.loc 1 379 13 discriminator 4 view .LVU333
 1239               	.LBE110:
 1240               		.loc 1 379 2 is_stmt 0 discriminator 4 view .LVU334
 1241 04d2 8DB7      		in r24,__SP_L__
 1242 04d4 9EB7      		in r25,__SP_H__
 1243 04d6 8096      		adiw r24,32
 1244 04d8 0FB6      		in __tmp_reg__,__SREG__
 1245 04da F894      		cli
 1246 04dc 9EBF      		out __SP_H__,r25
 1247 04de 0FBE      		out __SREG__,__tmp_reg__
 1248 04e0 8DBF      		out __SP_L__,r24
 1249               		.cfi_def_cfa_offset 12
 1250 04e2 8091 0000 		lds r24,_manufacturing_year
 1251 04e6 90E0      		ldi r25,0
 1252 04e8 8053      		subi r24,48
 1253 04ea 984F      		sbci r25,-8
 1254 04ec 9F93      		push r25
 1255               		.cfi_def_cfa_offset 13
 1256 04ee 8F93      		push r24
 1257               		.cfi_def_cfa_offset 14
 1258 04f0 8091 0000 		lds r24,_manufacturing_month
 1259 04f4 1F92      		push __zero_reg__
 1260               		.cfi_def_cfa_offset 15
 1261 04f6 8F93      		push r24
 1262               		.cfi_def_cfa_offset 16
 1263 04f8 80E0      		ldi r24,lo8(__c.10)
 1264 04fa 90E0      		ldi r25,hi8(__c.10)
 1265 04fc 9F93      		push r25
 1266               		.cfi_def_cfa_offset 17
 1267 04fe 8F93      		push r24
 1268               		.cfi_def_cfa_offset 18
 1269 0500 0E94 0000 		call log_boot_P
 1270               	.LVL108:
 380:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 381:sd/sd.c       **** 
 382:sd/sd.c       **** 	log_boot_P(PSTR("Capacity           : %ld bytes"),
 1271               		.loc 1 382 2 is_stmt 1 discriminator 4 view .LVU335
 1272               	.LBB111:
 1273               		.loc 1 382 13 discriminator 4 view .LVU336
 1274               		.loc 1 382 13 discriminator 4 view .LVU337
 1275               	.LBE111:
 1276               		.loc 1 382 2 is_stmt 0 discriminator 4 view .LVU338
 1277 0504 8091 0000 		lds r24,_capacity+3
 1278 0508 8F93      		push r24
 1279               		.cfi_def_cfa_offset 19
 1280 050a 8091 0000 		lds r24,_capacity+2
 1281 050e 8F93      		push r24
 1282               		.cfi_def_cfa_offset 20
 1283 0510 8091 0000 		lds r24,_capacity+1
 1284 0514 8F93      		push r24
 1285               		.cfi_def_cfa_offset 21
 1286 0516 8091 0000 		lds r24,_capacity
 1287 051a 8F93      		push r24
 1288               		.cfi_def_cfa_offset 22
 1289 051c 80E0      		ldi r24,lo8(__c.9)
 1290 051e 90E0      		ldi r25,hi8(__c.9)
 1291 0520 9F93      		push r25
 1292               		.cfi_def_cfa_offset 23
 1293 0522 8F93      		push r24
 1294               		.cfi_def_cfa_offset 24
 1295 0524 0E94 0000 		call log_boot_P
 1296               	.LVL109:
 383:sd/sd.c       **** 		_capacity);
 384:sd/sd.c       **** 
 385:sd/sd.c       **** 	log_boot_P(PSTR("Format             : 0x%02X"),
 1297               		.loc 1 385 2 is_stmt 1 discriminator 4 view .LVU339
 1298               	.LBB112:
 1299               		.loc 1 385 13 discriminator 4 view .LVU340
 1300               		.loc 1 385 13 discriminator 4 view .LVU341
 1301               	.LBE112:
 1302               		.loc 1 385 2 is_stmt 0 discriminator 4 view .LVU342
 1303 0528 8091 0000 		lds r24,_format
 1304 052c 1F92      		push __zero_reg__
 1305               		.cfi_def_cfa_offset 25
 1306 052e 8F93      		push r24
 1307               		.cfi_def_cfa_offset 26
 1308 0530 80E0      		ldi r24,lo8(__c.8)
 1309 0532 90E0      		ldi r25,hi8(__c.8)
 1310 0534 9F93      		push r25
 1311               		.cfi_def_cfa_offset 27
 1312 0536 8F93      		push r24
 1313               		.cfi_def_cfa_offset 28
 1314 0538 0E94 0000 		call log_boot_P
 1315               	.LVL110:
 386:sd/sd.c       **** 		_format);
 387:sd/sd.c       **** 
 388:sd/sd.c       **** 	log_boot_P(PSTR("Flags              : %S%S"),
 1316               		.loc 1 388 2 is_stmt 1 discriminator 4 view .LVU343
 1317 053c EDB7      		in r30,__SP_L__
 1318 053e FEB7      		in r31,__SP_H__
 1319 0540 7096      		adiw r30,16
 1320 0542 0FB6      		in __tmp_reg__,__SREG__
 1321 0544 F894      		cli
 1322 0546 FEBF      		out __SP_H__,r31
 1323 0548 0FBE      		out __SREG__,__tmp_reg__
 1324 054a EDBF      		out __SP_L__,r30
 1325               		.cfi_def_cfa_offset 12
 1326 054c 8091 0000 		lds r24,_flag_write_protect_temp
 1327 0550 8111      		cpse r24,__zero_reg__
 1328 0552 00C0      		rjmp .L71
 389:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 390:sd/sd.c       **** 		_flag_write_protect_temp ? PSTR("Temporarily Write Protected") :
 391:sd/sd.c       **** 			(_flag_write_protect ? PSTR("Write Protected") :
 1329               		.loc 1 391 51 is_stmt 0 view .LVU344
 1330 0554 8091 0000 		lds r24,_flag_write_protect
 1331 0558 8823      		tst r24
 1332 055a 01F4      		brne .+2
 1333 055c 00C0      		rjmp .L72
 1334 055e 80E0      		ldi r24,lo8(__c.6)
 1335 0560 90E0      		ldi r25,hi8(__c.6)
 1336               	.L67:
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1337               		.loc 1 388 2 discriminator 2 view .LVU345
 1338 0562 2091 0000 		lds r18,_flag_copy
 1339 0566 2223      		tst r18
 1340 0568 01F4      		brne .+2
 1341 056a 00C0      		rjmp .L73
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1342               		.loc 1 388 2 view .LVU346
 1343 056c 20E0      		ldi r18,lo8(__c.4)
 1344 056e 30E0      		ldi r19,hi8(__c.4)
 1345               	.L68:
 1346               	.LBB113:
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1347               		.loc 1 388 13 is_stmt 1 discriminator 7 view .LVU347
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1348               		.loc 1 388 13 discriminator 7 view .LVU348
 1349               	.LBE113:
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1350               		.loc 1 388 2 is_stmt 0 discriminator 7 view .LVU349
 1351 0570 9F93      		push r25
 1352               		.cfi_def_cfa_offset 13
 1353 0572 8F93      		push r24
 1354               		.cfi_def_cfa_offset 14
 1355 0574 3F93      		push r19
 1356               		.cfi_def_cfa_offset 15
 1357 0576 2F93      		push r18
 1358               		.cfi_def_cfa_offset 16
 1359 0578 80E0      		ldi r24,lo8(__c.2)
 1360 057a 90E0      		ldi r25,hi8(__c.2)
 1361 057c 9F93      		push r25
 1362               		.cfi_def_cfa_offset 17
 1363 057e 8F93      		push r24
 1364               		.cfi_def_cfa_offset 18
 1365 0580 0E94 0000 		call log_boot_P
 1366               	.LVL111:
 392:sd/sd.c       **** 			PSTR("Rewritable")));
 393:sd/sd.c       **** }
 1367               		.loc 1 393 1 discriminator 7 view .LVU350
 1368 0584 0F90      		pop __tmp_reg__
 1369 0586 0F90      		pop __tmp_reg__
 1370 0588 0F90      		pop __tmp_reg__
 1371 058a 0F90      		pop __tmp_reg__
 1372 058c 0F90      		pop __tmp_reg__
 1373 058e 0F90      		pop __tmp_reg__
 1374               		.cfi_def_cfa_offset 12
 1375               	/* epilogue start */
 1376 0590 DF91      		pop r29
 1377 0592 CF91      		pop r28
 1378               	.LVL112:
 1379               		.loc 1 393 1 discriminator 7 view .LVU351
 1380 0594 1F91      		pop r17
 1381 0596 0F91      		pop r16
 1382               	.LVL113:
 1383               		.loc 1 393 1 discriminator 7 view .LVU352
 1384 0598 FF90      		pop r15
 1385 059a EF90      		pop r14
 1386               	.LVL114:
 1387               		.loc 1 393 1 discriminator 7 view .LVU353
 1388 059c DF90      		pop r13
 1389               	.LVL115:
 1390               		.loc 1 393 1 discriminator 7 view .LVU354
 1391 059e CF90      		pop r12
 1392 05a0 BF90      		pop r11
 1393 05a2 AF90      		pop r10
 1394 05a4 0895      		ret
 1395               	.LVL116:
 1396               	.L53:
 1397               	.LBB114:
 304:sd/sd.c       **** 
 1398               		.loc 1 304 8 is_stmt 1 view .LVU355
 304:sd/sd.c       **** 
 1399               		.loc 1 304 10 is_stmt 0 view .LVU356
 1400 05a6 8F73      		andi r24,lo8(63)
 1401               	.LVL117:
 1402               	.L55:
 308:sd/sd.c       **** 							csd_c_size |= b;
 1403               		.loc 1 308 8 is_stmt 1 view .LVU357
 309:sd/sd.c       **** 							++csd_c_size;
 1404               		.loc 1 309 8 view .LVU358
 309:sd/sd.c       **** 							++csd_c_size;
 1405               		.loc 1 309 19 is_stmt 0 view .LVU359
 1406 05a8 282F      		mov r18,r24
 1407 05aa 302F      		mov r19,r16
 1408 05ac 8901      		movw r16,r18
 1409               	.LVL118:
 310:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 1410               		.loc 1 310 8 is_stmt 1 view .LVU360
 1411 05ae 0F5F      		subi r16,-1
 1412 05b0 1F4F      		sbci r17,-1
 1413               	.LVL119:
 311:sd/sd.c       **** 					}
 1414               		.loc 1 311 8 view .LVU361
 311:sd/sd.c       **** 					}
 1415               		.loc 1 311 20 is_stmt 0 view .LVU362
 1416 05b2 C801      		movw r24,r16
 1417               	.LVL120:
 311:sd/sd.c       **** 					}
 1418               		.loc 1 311 20 view .LVU363
 1419 05b4 A0E0      		ldi r26,0
 1420 05b6 B0E0      		ldi r27,0
 311:sd/sd.c       **** 					}
 1421               		.loc 1 311 36 view .LVU364
 1422 05b8 5AE0      		ldi r21,10
 1423               		1:
 1424 05ba 880F      		lsl r24
 1425 05bc 991F      		rol r25
 1426 05be AA1F      		rol r26
 1427 05c0 BB1F      		rol r27
 1428 05c2 5A95      		dec r21
 1429 05c4 01F4      		brne 1b
 311:sd/sd.c       **** 					}
 1430               		.loc 1 311 18 view .LVU365
 1431 05c6 8093 0000 		sts _capacity,r24
 1432 05ca 9093 0000 		sts _capacity+1,r25
 1433 05ce A093 0000 		sts _capacity+2,r26
 1434 05d2 B093 0000 		sts _capacity+3,r27
 1435 05d6 00C0      		rjmp .L54
 1436               	.LVL121:
 1437               	.L52:
 314:sd/sd.c       **** 				{
 1438               		.loc 1 314 10 is_stmt 1 view .LVU366
 314:sd/sd.c       **** 				{
 1439               		.loc 1 314 12 is_stmt 0 view .LVU367
 1440 05d8 D111      		cpse r29,__zero_reg__
 1441 05da 00C0      		rjmp .L54
 316:sd/sd.c       **** 					{
 1442               		.loc 1 316 6 is_stmt 1 view .LVU368
 1443 05dc C830      		cpi r28,lo8(8)
 1444 05de 01F4      		brne .+2
 1445 05e0 00C0      		rjmp .L56
 1446 05e2 00F4      		brsh .L57
 1447 05e4 C630      		cpi r28,lo8(6)
 1448 05e6 01F0      		breq .L58
 1449 05e8 C730      		cpi r28,lo8(7)
 1450 05ea 01F0      		breq .L59
 1451 05ec C530      		cpi r28,lo8(5)
 1452 05ee 01F0      		breq .L60
 1453               	.LVL122:
 271:sd/sd.c       **** 		{
 1454               		.loc 1 271 22 view .LVU369
 1455 05f0 CF5F      		subi r28,lo8(-(1))
 1456               	.LVL123:
 271:sd/sd.c       **** 		{
 1457               		.loc 1 271 16 view .LVU370
 1458 05f2 00C0      		rjmp .L65
 1459               	.LVL124:
 1460               	.L57:
 316:sd/sd.c       **** 					{
 1461               		.loc 1 316 6 is_stmt 0 view .LVU371
 1462 05f4 C930      		cpi r28,lo8(9)
 1463 05f6 01F4      		brne .+2
 1464 05f8 00C0      		rjmp .L62
 1465 05fa CA30      		cpi r28,lo8(10)
 1466 05fc 01F0      		breq .+2
 1467 05fe 00C0      		rjmp .L54
 343:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1468               		.loc 1 343 8 is_stmt 1 view .LVU372
 343:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1469               		.loc 1 343 24 is_stmt 0 view .LVU373
 1470 0600 881F      		rol r24
 1471 0602 8827      		clr r24
 1472 0604 881F      		rol r24
 1473               	.LVL125:
 343:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1474               		.loc 1 343 24 view .LVU374
 1475 0606 D82A      		or r13,r24
 1476               	.LVL126:
 344:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1477               		.loc 1 344 8 is_stmt 1 view .LVU375
 344:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1478               		.loc 1 344 21 is_stmt 0 view .LVU376
 1479 0608 C801      		movw r24,r16
 1480 060a A0E0      		ldi r26,0
 1481 060c B0E0      		ldi r27,0
 345:sd/sd.c       **** 							break;
 1482               		.loc 1 345 26 view .LVU377
 1483 060e 4D2D      		mov r20,r13
 1484 0610 4E0D      		add r20,r14
 1485 0612 5527      		clr r21
 1486 0614 551F      		rol r21
 1487 0616 9A01      		movw r18,r20
 345:sd/sd.c       **** 							break;
 1488               		.loc 1 345 44 view .LVU378
 1489 0618 2E5F      		subi r18,-2
 1490 061a 3F4F      		sbci r19,-1
 344:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1491               		.loc 1 344 37 view .LVU379
 1492 061c 00C0      		rjmp 2f
 1493               		1:
 1494 061e 880F      		lsl r24
 1495 0620 991F      		rol r25
 1496 0622 AA1F      		rol r26
 1497 0624 BB1F      		rol r27
 1498               		2:
 1499 0626 2A95      		dec r18
 1500 0628 02F4      		brpl 1b
 345:sd/sd.c       **** 							break;
 1501               		.loc 1 345 50 view .LVU380
 1502 062a 29E0      		ldi r18,9
 1503               		1:
 1504 062c B695      		lsr r27
 1505 062e A795      		ror r26
 1506 0630 9795      		ror r25
 1507 0632 8795      		ror r24
 1508 0634 2A95      		dec r18
 1509 0636 01F4      		brne 1b
 344:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1510               		.loc 1 344 18 view .LVU381
 1511 0638 8093 0000 		sts _capacity,r24
 1512 063c 9093 0000 		sts _capacity+1,r25
 1513 0640 A093 0000 		sts _capacity+2,r26
 1514 0644 B093 0000 		sts _capacity+3,r27
 346:sd/sd.c       **** 					}
 1515               		.loc 1 346 8 is_stmt 1 view .LVU382
 1516               	.LVL127:
 271:sd/sd.c       **** 		{
 1517               		.loc 1 271 22 view .LVU383
 271:sd/sd.c       **** 		{
 1518               		.loc 1 271 16 view .LVU384
 271:sd/sd.c       **** 		{
 1519               		.loc 1 271 22 is_stmt 0 view .LVU385
 1520 0648 CBE0      		ldi r28,lo8(11)
 1521 064a 00C0      		rjmp .L65
 1522               	.LVL128:
 1523               	.L60:
 319:sd/sd.c       **** 							break;
 1524               		.loc 1 319 8 is_stmt 1 view .LVU386
 319:sd/sd.c       **** 							break;
 1525               		.loc 1 319 24 is_stmt 0 view .LVU387
 1526 064c 8F70      		andi r24,lo8(15)
 1527               	.LVL129:
 319:sd/sd.c       **** 							break;
 1528               		.loc 1 319 24 view .LVU388
 1529 064e E82E      		mov r14,r24
 1530               	.LVL130:
 320:sd/sd.c       **** 
 1531               		.loc 1 320 8 is_stmt 1 view .LVU389
 271:sd/sd.c       **** 		{
 1532               		.loc 1 271 22 view .LVU390
 271:sd/sd.c       **** 		{
 1533               		.loc 1 271 16 view .LVU391
 271:sd/sd.c       **** 		{
 1534               		.loc 1 271 22 is_stmt 0 view .LVU392
 1535 0650 C6E0      		ldi r28,lo8(6)
 1536 0652 00C0      		rjmp .L65
 1537               	.LVL131:
 1538               	.L58:
 323:sd/sd.c       **** 							csd_c_size <<= 8;
 1539               		.loc 1 323 8 is_stmt 1 view .LVU393
 323:sd/sd.c       **** 							csd_c_size <<= 8;
 1540               		.loc 1 323 19 is_stmt 0 view .LVU394
 1541 0654 8370      		andi r24,lo8(3)
 1542               	.LVL132:
 323:sd/sd.c       **** 							csd_c_size <<= 8;
 1543               		.loc 1 323 19 view .LVU395
 1544 0656 082F      		mov r16,r24
 1545               	.LVL133:
 323:sd/sd.c       **** 							csd_c_size <<= 8;
 1546               		.loc 1 323 19 view .LVU396
 1547 0658 10E0      		ldi r17,0
 1548               	.LVL134:
 324:sd/sd.c       **** 							break;
 1549               		.loc 1 324 8 is_stmt 1 view .LVU397
 324:sd/sd.c       **** 							break;
 1550               		.loc 1 324 19 is_stmt 0 view .LVU398
 1551 065a 102F      		mov r17,r16
 1552 065c 0027      		clr r16
 1553               	.LVL135:
 325:sd/sd.c       **** 
 1554               		.loc 1 325 8 is_stmt 1 view .LVU399
 271:sd/sd.c       **** 		{
 1555               		.loc 1 271 22 view .LVU400
 271:sd/sd.c       **** 		{
 1556               		.loc 1 271 16 view .LVU401
 271:sd/sd.c       **** 		{
 1557               		.loc 1 271 22 is_stmt 0 view .LVU402
 1558 065e C7E0      		ldi r28,lo8(7)
 1559 0660 00C0      		rjmp .L65
 1560               	.LVL136:
 1561               	.L59:
 328:sd/sd.c       **** 							csd_c_size <<= 2;
 1562               		.loc 1 328 8 is_stmt 1 view .LVU403
 328:sd/sd.c       **** 							csd_c_size <<= 2;
 1563               		.loc 1 328 19 is_stmt 0 view .LVU404
 1564 0662 082B      		or r16,r24
 1565               	.LVL137:
 329:sd/sd.c       **** 							break;
 1566               		.loc 1 329 8 is_stmt 1 view .LVU405
 329:sd/sd.c       **** 							break;
 1567               		.loc 1 329 19 is_stmt 0 view .LVU406
 1568 0664 000F      		lsl r16
 1569 0666 111F      		rol r17
 1570 0668 000F      		lsl r16
 1571 066a 111F      		rol r17
 1572               	.LVL138:
 330:sd/sd.c       **** 
 1573               		.loc 1 330 8 is_stmt 1 view .LVU407
 271:sd/sd.c       **** 		{
 1574               		.loc 1 271 22 view .LVU408
 271:sd/sd.c       **** 		{
 1575               		.loc 1 271 16 view .LVU409
 271:sd/sd.c       **** 		{
 1576               		.loc 1 271 22 is_stmt 0 view .LVU410
 1577 066c C8E0      		ldi r28,lo8(8)
 1578 066e 00C0      		rjmp .L65
 1579               	.LVL139:
 1580               	.L56:
 333:sd/sd.c       **** 							++csd_c_size;
 1581               		.loc 1 333 8 is_stmt 1 view .LVU411
 333:sd/sd.c       **** 							++csd_c_size;
 1582               		.loc 1 333 24 is_stmt 0 view .LVU412
 1583 0670 8295      		swap r24
 1584               	.LVL140:
 333:sd/sd.c       **** 							++csd_c_size;
 1585               		.loc 1 333 24 view .LVU413
 1586 0672 8695      		lsr r24
 1587 0674 8695      		lsr r24
 1588 0676 8370      		andi r24,lo8(3)
 333:sd/sd.c       **** 							++csd_c_size;
 1589               		.loc 1 333 19 view .LVU414
 1590 0678 082B      		or r16,r24
 1591               	.LVL141:
 334:sd/sd.c       **** 							break;
 1592               		.loc 1 334 8 is_stmt 1 view .LVU415
 1593 067a 0F5F      		subi r16,-1
 1594 067c 1F4F      		sbci r17,-1
 1595               	.LVL142:
 335:sd/sd.c       **** 
 1596               		.loc 1 335 8 view .LVU416
 271:sd/sd.c       **** 		{
 1597               		.loc 1 271 22 view .LVU417
 271:sd/sd.c       **** 		{
 1598               		.loc 1 271 16 view .LVU418
 271:sd/sd.c       **** 		{
 1599               		.loc 1 271 22 is_stmt 0 view .LVU419
 1600 067e C9E0      		ldi r28,lo8(9)
 1601 0680 00C0      		rjmp .L65
 1602               	.LVL143:
 1603               	.L62:
 338:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 1604               		.loc 1 338 8 is_stmt 1 view .LVU420
 339:sd/sd.c       **** 							break;
 1605               		.loc 1 339 8 view .LVU421
 339:sd/sd.c       **** 							break;
 1606               		.loc 1 339 24 is_stmt 0 view .LVU422
 1607 0682 880F      		lsl r24
 1608               	.LVL144:
 339:sd/sd.c       **** 							break;
 1609               		.loc 1 339 24 view .LVU423
 1610 0684 8670      		andi r24,lo8(6)
 1611 0686 D82E      		mov r13,r24
 1612               	.LVL145:
 340:sd/sd.c       **** 
 1613               		.loc 1 340 8 is_stmt 1 view .LVU424
 271:sd/sd.c       **** 		{
 1614               		.loc 1 271 22 view .LVU425
 271:sd/sd.c       **** 		{
 1615               		.loc 1 271 16 view .LVU426
 271:sd/sd.c       **** 		{
 1616               		.loc 1 271 22 is_stmt 0 view .LVU427
 1617 0688 CAE0      		ldi r28,lo8(10)
 1618 068a 00C0      		rjmp .L65
 1619               	.LVL146:
 1620               	.L70:
 271:sd/sd.c       **** 		{
 1621               		.loc 1 271 22 view .LVU428
 1622               	.LBE114:
 358:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1623               		.loc 1 358 2 view .LVU429
 1624 068c 80E0      		ldi r24,lo8(__c.18)
 1625 068e 90E0      		ldi r25,hi8(__c.18)
 1626 0690 00C0      		rjmp .L66
 1627               	.L71:
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1628               		.loc 1 388 2 view .LVU430
 1629 0692 80E0      		ldi r24,lo8(__c.7)
 1630 0694 90E0      		ldi r25,hi8(__c.7)
 1631 0696 00C0      		rjmp .L67
 1632               	.L72:
 391:sd/sd.c       **** 			PSTR("Rewritable")));
 1633               		.loc 1 391 51 view .LVU431
 1634 0698 80E0      		ldi r24,lo8(__c.5)
 1635 069a 90E0      		ldi r25,hi8(__c.5)
 1636 069c 00C0      		rjmp .L67
 1637               	.L73:
 388:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1638               		.loc 1 388 2 view .LVU432
 1639 069e 20E0      		ldi r18,lo8(__c.3)
 1640 06a0 30E0      		ldi r19,hi8(__c.3)
 1641 06a2 00C0      		rjmp .L68
 1642               		.cfi_endproc
 1643               	.LFE17:
 1645               		.section	.progmem.data,"a",@progbits
 1648               	__c.0:
 1649 0000 5344 2074 		.string	"SD timeout"
 1649      696D 656F 
 1649      7574 00
 1652               	__c.1:
 1653 000b 5344 2065 		.string	"SD error"
 1653      7272 6F72 
 1653      00
 1656               	__c.2:
 1657 0014 466C 6167 		.string	"Flags              : %S%S"
 1657      7320 2020 
 1657      2020 2020 
 1657      2020 2020 
 1657      2020 203A 
 1660               	__c.3:
 1661 002e 4F72 6967 		.string	"Original, "
 1661      696E 616C 
 1661      2C20 00
 1664               	__c.4:
 1665 0039 436F 7079 		.string	"Copy, "
 1665      2C20 00
 1668               	__c.5:
 1669 0040 5265 7772 		.string	"Rewritable"
 1669      6974 6162 
 1669      6C65 00
 1672               	__c.6:
 1673 004b 5772 6974 		.string	"Write Protected"
 1673      6520 5072 
 1673      6F74 6563 
 1673      7465 6400 
 1676               	__c.7:
 1677 005b 5465 6D70 		.string	"Temporarily Write Protected"
 1677      6F72 6172 
 1677      696C 7920 
 1677      5772 6974 
 1677      6520 5072 
 1680               	__c.8:
 1681 0077 466F 726D 		.string	"Format             : 0x%02X"
 1681      6174 2020 
 1681      2020 2020 
 1681      2020 2020 
 1681      2020 203A 
 1684               	__c.9:
 1685 0093 4361 7061 		.string	"Capacity           : %ld bytes"
 1685      6369 7479 
 1685      2020 2020 
 1685      2020 2020 
 1685      2020 203A 
 1688               	__c.10:
 1689 00b2 4D61 6E75 		.string	"Manufacture Date   : %02d-%d"
 1689      6661 6374 
 1689      7572 6520 
 1689      4461 7465 
 1689      2020 203A 
 1692               	__c.11:
 1693 00cf 5365 7269 		.string	"Serial Number      : 0x%08lX"
 1693      616C 204E 
 1693      756D 6265 
 1693      7220 2020 
 1693      2020 203A 
 1696               	__c.12:
 1697 00ec 5265 7669 		.string	"Revision           : %c.%c"
 1697      7369 6F6E 
 1697      2020 2020 
 1697      2020 2020 
 1697      2020 203A 
 1700               	__c.13:
 1701 0107 5072 6F64 		.string	"Product Name       : %s"
 1701      7563 7420 
 1701      4E61 6D65 
 1701      2020 2020 
 1701      2020 203A 
 1704               	__c.14:
 1705 011f 4F45 4D20 		.string	"OEM                : %s"
 1705      2020 2020 
 1705      2020 2020 
 1705      2020 2020 
 1705      2020 203A 
 1708               	__c.15:
 1709 0137 4D61 6E75 		.string	"Manufacturer ID    : %02X"
 1709      6661 6374 
 1709      7572 6572 
 1709      2049 4420 
 1709      2020 203A 
 1712               	__c.16:
 1713 0151 426C 6F63 		.string	"Block Size         : %d"
 1713      6B20 5369 
 1713      7A65 2020 
 1713      2020 2020 
 1713      2020 203A 
 1716               	__c.17:
 1717 0169 4361 7264 		.string	"Card Type          : %S"
 1717      2054 7970 
 1717      6520 2020 
 1717      2020 2020 
 1717      2020 203A 
 1720               	__c.18:
 1721 0181 5344 00   		.string	"SD"
 1724               	__c.19:
 1725 0184 5344 4843 		.string	"SDHC"
 1725      00
 1728               	__c.20:
 1729 0189 5344 2063 		.string	"SD card detected and initialized"
 1729      6172 6420 
 1729      6465 7465 
 1729      6374 6564 
 1729      2061 6E64 
 1732               	__c.21:
 1733 01aa 5858 5800 		.string	"XXX"
 1736               	__c.22:
 1737 01ae 5344 2064 		.string	"SD driver starting"
 1737      7269 7665 
 1737      7220 7374 
 1737      6172 7469 
 1737      6E67 00
 1738               		.local	_format
 1739               		.comm	_format,1,1
 1740               		.local	_flag_write_protect_temp
 1741               		.comm	_flag_write_protect_temp,1,1
 1742               		.local	_flag_write_protect
 1743               		.comm	_flag_write_protect,1,1
 1744               		.local	_flag_copy
 1745               		.comm	_flag_copy,1,1
 1746               		.local	_manufacturing_month
 1747               		.comm	_manufacturing_month,1,1
 1748               		.local	_manufacturing_year
 1749               		.comm	_manufacturing_year,1,1
 1750               		.local	_revision
 1751               		.comm	_revision,1,1
 1752               		.local	_manufacturer
 1753               		.comm	_manufacturer,1,1
 1754               		.local	_card_type
 1755               		.comm	_card_type,1,1
 1756               		.local	_product
 1757               		.comm	_product,6,1
 1758               		.local	_oem
 1759               		.comm	_oem,3,1
 1760               		.local	_capacity
 1761               		.comm	_capacity,4,1
 1762               		.local	_serial
 1763               		.comm	_serial,4,1
 1764               		.text
 1765               	.Letext0:
 1766               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 1767               		.file 5 "../../types/types.h"
 1768               		.file 6 "logger/logger.h"
 1769               		.file 7 "spi/spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sd.c
     /tmp/cc0rdxiM.s:2      *ABS*:0000003e __SP_H__
     /tmp/cc0rdxiM.s:3      *ABS*:0000003d __SP_L__
     /tmp/cc0rdxiM.s:4      *ABS*:0000003f __SREG__
     /tmp/cc0rdxiM.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc0rdxiM.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc0rdxiM.s:12     .text:00000000 _sd_command
     /tmp/cc0rdxiM.s:16     .text:00000000 .Loc.0
     /tmp/cc0rdxiM.s:17     .text:00000000 L0
     /tmp/cc0rdxiM.s:18     .text:00000000 .Loc.1
     /tmp/cc0rdxiM.s:39     .text:00000010 .Loc.2
     /tmp/cc0rdxiM.s:40     .text:00000010 .Loc.3
     /tmp/cc0rdxiM.s:43     .text:00000012 .Loc.4
     /tmp/cc0rdxiM.s:46     .text:00000016 .Loc.5
     /tmp/cc0rdxiM.s:51     .text:0000001e .Loc.6
     /tmp/cc0rdxiM.s:55     .text:00000024 .Loc.7
     /tmp/cc0rdxiM.s:59     .text:0000002a .Loc.8
     /tmp/cc0rdxiM.s:63     .text:00000030 .Loc.9
     /tmp/cc0rdxiM.s:67     .text:00000036 .Loc.10
     /tmp/cc0rdxiM.s:68     .text:00000036 .Loc.11
     /tmp/cc0rdxiM.s:70     .text:00000038 .Loc.12
     /tmp/cc0rdxiM.s:73     .text:0000003c .Loc.13
     /tmp/cc0rdxiM.s:75     .text:0000003e .Loc.14
     /tmp/cc0rdxiM.s:78     .text:00000042 .Loc.15
     /tmp/cc0rdxiM.s:81     .text:00000044 .Loc.16
     /tmp/cc0rdxiM.s:84     .text:00000048 .Loc.17
     /tmp/cc0rdxiM.s:85     .text:00000048 .Loc.18
     /tmp/cc0rdxiM.s:86     .text:00000048 .Loc.19
     /tmp/cc0rdxiM.s:90     .text:0000004a .Loc.20
     /tmp/cc0rdxiM.s:94     .text:00000050 .Loc.21
     /tmp/cc0rdxiM.s:97     .text:00000054 .Loc.22
     /tmp/cc0rdxiM.s:99     .text:00000054 .Loc.23
     /tmp/cc0rdxiM.s:102    .text:00000056 .Loc.24
     /tmp/cc0rdxiM.s:108    .text:0000005a .Loc.25
     /tmp/cc0rdxiM.s:114    .text:00000064 L0
     /tmp/cc0rdxiM.s:119    .text:00000064 sd_init
     /tmp/cc0rdxiM.s:121    .text:00000064 .Loc.26
     /tmp/cc0rdxiM.s:122    .text:00000064 L0
     /tmp/cc0rdxiM.s:157    .text:00000078 .Loc.27
     /tmp/cc0rdxiM.s:159    .text:00000078 .Loc.28
     /tmp/cc0rdxiM.s:160    .text:00000078 .Loc.29
     /tmp/cc0rdxiM.s:162    .text:00000078 .Loc.30
     /tmp/cc0rdxiM.s:1736   .progmem.data:000001ae __c.22
     /tmp/cc0rdxiM.s:172    .text:00000084 .Loc.31
     /tmp/cc0rdxiM.s:173    .text:00000084 .Loc.32
     /tmp/cc0rdxiM.s:174    .text:00000084 .Loc.33
     /tmp/cc0rdxiM.s:175    .text:00000084 .Loc.34
     /tmp/cc0rdxiM.s:176    .text:00000084 .Loc.35
     /tmp/cc0rdxiM.s:1753   .bss:00000008 _card_type
     /tmp/cc0rdxiM.s:178    .text:00000088 .Loc.36
     /tmp/cc0rdxiM.s:181    .text:00000088 .Loc.37
     /tmp/cc0rdxiM.s:183    .text:00000088 .Loc.38
     /tmp/cc0rdxiM.s:185    .text:0000008a .Loc.39
     /tmp/cc0rdxiM.s:188    .text:0000008e .Loc.40
     /tmp/cc0rdxiM.s:189    .text:0000008e .Loc.41
     /tmp/cc0rdxiM.s:194    .text:00000094 .Loc.42
     /tmp/cc0rdxiM.s:197    .text:00000094 .Loc.43
     /tmp/cc0rdxiM.s:200    .text:00000094 .Loc.44
     /tmp/cc0rdxiM.s:208    .text:0000009c .Loc.45
     /tmp/cc0rdxiM.s:211    .text:0000009c .Loc.46
     /tmp/cc0rdxiM.s:215    .text:000000a2 .Loc.47
     /tmp/cc0rdxiM.s:216    .text:000000a2 .Loc.48
     /tmp/cc0rdxiM.s:220    .text:000000a6 .Loc.49
     /tmp/cc0rdxiM.s:224    .text:000000ac .Loc.50
     /tmp/cc0rdxiM.s:226    .text:000000ae .Loc.51
     /tmp/cc0rdxiM.s:228    .text:000000ae .Loc.52
     /tmp/cc0rdxiM.s:233    .text:000000b2 .Loc.53
     /tmp/cc0rdxiM.s:1648   .progmem.data:00000000 __c.0
     /tmp/cc0rdxiM.s:240    .text:000000ba .Loc.54
     /tmp/cc0rdxiM.s:243    .text:000000ba .Loc.55
     /tmp/cc0rdxiM.s:244    .text:000000ba .Loc.56
     /tmp/cc0rdxiM.s:251    .text:000000c6 .Loc.57
     /tmp/cc0rdxiM.s:254    .text:000000ca .Loc.58
     /tmp/cc0rdxiM.s:255    .text:000000ca .Loc.59
     /tmp/cc0rdxiM.s:260    .text:000000d2 .Loc.60
     /tmp/cc0rdxiM.s:263    .text:000000d2 .Loc.61
     /tmp/cc0rdxiM.s:265    .text:000000d2 .Loc.62
     /tmp/cc0rdxiM.s:267    .text:000000d4 .Loc.63
     /tmp/cc0rdxiM.s:269    .text:000000d4 .Loc.64
     /tmp/cc0rdxiM.s:270    .text:000000d4 .Loc.65
     /tmp/cc0rdxiM.s:272    .text:000000d4 .Loc.66
     /tmp/cc0rdxiM.s:279    .text:000000dc .Loc.67
     /tmp/cc0rdxiM.s:286    .text:000000e0 .Loc.68
     /tmp/cc0rdxiM.s:289    .text:000000e2 .Loc.69
     /tmp/cc0rdxiM.s:290    .text:000000e2 .Loc.70
     /tmp/cc0rdxiM.s:293    .text:000000e4 .Loc.71
     /tmp/cc0rdxiM.s:294    .text:000000e4 .Loc.72
     /tmp/cc0rdxiM.s:302    .text:000000f2 .Loc.73
     /tmp/cc0rdxiM.s:305    .text:000000f6 .Loc.74
     /tmp/cc0rdxiM.s:309    .text:000000fc .Loc.75
     /tmp/cc0rdxiM.s:313    .text:00000102 .Loc.76
     /tmp/cc0rdxiM.s:314    .text:00000102 .Loc.77
     /tmp/cc0rdxiM.s:318    .text:00000108 .Loc.78
     /tmp/cc0rdxiM.s:322    .text:0000010c .Loc.79
     /tmp/cc0rdxiM.s:325    .text:0000010c .Loc.80
     /tmp/cc0rdxiM.s:327    .text:0000010c .Loc.81
     /tmp/cc0rdxiM.s:329    .text:0000010e .Loc.82
     /tmp/cc0rdxiM.s:331    .text:0000010e .Loc.83
     /tmp/cc0rdxiM.s:332    .text:0000010e .Loc.84
     /tmp/cc0rdxiM.s:334    .text:0000010e .Loc.85
     /tmp/cc0rdxiM.s:1652   .progmem.data:0000000b __c.1
     /tmp/cc0rdxiM.s:343    .text:0000011a .Loc.86
     /tmp/cc0rdxiM.s:350    .text:0000011e .Loc.87
     /tmp/cc0rdxiM.s:351    .text:0000011e .Loc.88
     /tmp/cc0rdxiM.s:355    .text:00000124 .Loc.89
     /tmp/cc0rdxiM.s:360    .text:00000128 .Loc.90
     /tmp/cc0rdxiM.s:367    .text:00000130 .Loc.91
     /tmp/cc0rdxiM.s:370    .text:00000130 .Loc.92
     /tmp/cc0rdxiM.s:371    .text:00000130 .Loc.93
     /tmp/cc0rdxiM.s:373    .text:00000134 .Loc.94
     /tmp/cc0rdxiM.s:376    .text:00000138 .Loc.95
     /tmp/cc0rdxiM.s:380    .text:0000013e .Loc.96
     /tmp/cc0rdxiM.s:383    .text:00000142 .Loc.97
     /tmp/cc0rdxiM.s:385    .text:00000142 .Loc.98
     /tmp/cc0rdxiM.s:386    .text:00000142 .Loc.99
     /tmp/cc0rdxiM.s:390    .text:00000148 .Loc.100
     /tmp/cc0rdxiM.s:391    .text:00000148 .Loc.101
     /tmp/cc0rdxiM.s:395    .text:0000014c .Loc.102
     /tmp/cc0rdxiM.s:408    .text:00000162 .Loc.103
     /tmp/cc0rdxiM.s:412    .text:00000164 .Loc.104
     /tmp/cc0rdxiM.s:415    .text:00000168 .Loc.105
     /tmp/cc0rdxiM.s:418    .text:0000016c .Loc.106
     /tmp/cc0rdxiM.s:421    .text:00000170 .Loc.107
     /tmp/cc0rdxiM.s:422    .text:00000170 .Loc.108
     /tmp/cc0rdxiM.s:427    .text:00000178 .Loc.109
     /tmp/cc0rdxiM.s:430    .text:00000178 .Loc.110
     /tmp/cc0rdxiM.s:432    .text:00000178 .Loc.111
     /tmp/cc0rdxiM.s:434    .text:0000017a .Loc.112
     /tmp/cc0rdxiM.s:436    .text:0000017a .Loc.113
     /tmp/cc0rdxiM.s:437    .text:0000017a .Loc.114
     /tmp/cc0rdxiM.s:439    .text:0000017a .Loc.115
     /tmp/cc0rdxiM.s:446    .text:00000182 .Loc.116
     /tmp/cc0rdxiM.s:453    .text:00000186 .Loc.117
     /tmp/cc0rdxiM.s:457    .text:0000018a .Loc.118
     /tmp/cc0rdxiM.s:458    .text:0000018a .Loc.119
     /tmp/cc0rdxiM.s:462    .text:0000018c .Loc.120
     /tmp/cc0rdxiM.s:466    .text:00000192 .Loc.121
     /tmp/cc0rdxiM.s:468    .text:00000196 L0
     /tmp/cc0rdxiM.s:472    .text:0000019a .Loc.122
     /tmp/cc0rdxiM.s:479    .text:000001a6 .Loc.123
     /tmp/cc0rdxiM.s:480    .text:000001a6 .Loc.124
     /tmp/cc0rdxiM.s:487    .text:000001b2 .Loc.125
     /tmp/cc0rdxiM.s:490    .text:000001b6 .Loc.126
     /tmp/cc0rdxiM.s:491    .text:000001b6 .Loc.127
     /tmp/cc0rdxiM.s:497    .text:000001be .Loc.128
     /tmp/cc0rdxiM.s:498    .text:000001be .Loc.129
     /tmp/cc0rdxiM.s:503    .text:000001c2 .Loc.130
     /tmp/cc0rdxiM.s:504    .text:000001c2 .Loc.131
     /tmp/cc0rdxiM.s:507    .text:000001c6 .Loc.132
     /tmp/cc0rdxiM.s:510    .text:000001ca .Loc.133
     /tmp/cc0rdxiM.s:517    .text:000001d6 .Loc.134
     /tmp/cc0rdxiM.s:518    .text:000001d6 .Loc.135
     /tmp/cc0rdxiM.s:522    .text:000001dc .Loc.136
     /tmp/cc0rdxiM.s:525    .text:000001e0 .Loc.137
     /tmp/cc0rdxiM.s:526    .text:000001e0 .Loc.138
     /tmp/cc0rdxiM.s:531    .text:000001ea .Loc.139
     /tmp/cc0rdxiM.s:535    .text:000001f0 .Loc.140
     /tmp/cc0rdxiM.s:539    .text:000001f6 .Loc.141
     /tmp/cc0rdxiM.s:544    .text:000001fc .Loc.142
     /tmp/cc0rdxiM.s:552    .text:0000020a .Loc.143
     /tmp/cc0rdxiM.s:554    .text:0000020c .Loc.144
     /tmp/cc0rdxiM.s:559    .text:0000020c .Loc.145
     /tmp/cc0rdxiM.s:561    .text:0000020c .Loc.146
     /tmp/cc0rdxiM.s:562    .text:0000020c .Loc.147
     /tmp/cc0rdxiM.s:563    .text:0000020c .Loc.148
     /tmp/cc0rdxiM.s:564    .text:0000020c .Loc.149
     /tmp/cc0rdxiM.s:565    .text:0000020c .Loc.150
     /tmp/cc0rdxiM.s:566    .text:0000020c .Loc.151
     /tmp/cc0rdxiM.s:569    .text:0000020c .Loc.152
     /tmp/cc0rdxiM.s:578    .text:00000210 .Loc.153
     /tmp/cc0rdxiM.s:583    .text:00000214 .Loc.154
     /tmp/cc0rdxiM.s:586    .text:00000214 .Loc.155
     /tmp/cc0rdxiM.s:589    .text:00000214 .Loc.156
     /tmp/cc0rdxiM.s:591    .text:00000214 .Loc.157
     /tmp/cc0rdxiM.s:599    .text:0000021a .Loc.158
     /tmp/cc0rdxiM.s:603    .text:0000021a .Loc.159
     /tmp/cc0rdxiM.s:604    .text:0000021a .Loc.160
     /tmp/cc0rdxiM.s:608    .text:0000021e .Loc.161
     /tmp/cc0rdxiM.s:613    .text:00000224 .Loc.162
     /tmp/cc0rdxiM.s:617    .text:00000224 .Loc.163
     /tmp/cc0rdxiM.s:619    .text:00000224 .Loc.164
     /tmp/cc0rdxiM.s:620    .text:00000224 .Loc.165
     /tmp/cc0rdxiM.s:622    .text:00000224 .Loc.166
     /tmp/cc0rdxiM.s:1732   .progmem.data:000001aa __c.21
     /tmp/cc0rdxiM.s:632    .text:00000230 .Loc.167
     /tmp/cc0rdxiM.s:633    .text:00000230 .Loc.168
     /tmp/cc0rdxiM.s:634    .text:00000230 .Loc.169
     /tmp/cc0rdxiM.s:637    .text:00000234 .Loc.170
     /tmp/cc0rdxiM.s:639    .text:00000236 .Loc.171
     /tmp/cc0rdxiM.s:646    .text:00000242 .Loc.172
     /tmp/cc0rdxiM.s:647    .text:00000242 .Loc.173
     /tmp/cc0rdxiM.s:652    .text:00000246 .Loc.174
     /tmp/cc0rdxiM.s:653    .text:00000246 .Loc.175
     /tmp/cc0rdxiM.s:654    .text:00000246 .Loc.176
     /tmp/cc0rdxiM.s:658    .text:0000024c .Loc.177
     /tmp/cc0rdxiM.s:1757   .bss:0000000f _oem
     /tmp/cc0rdxiM.s:1755   .bss:00000009 _product
     /tmp/cc0rdxiM.s:669    .text:00000260 .Loc.178
     /tmp/cc0rdxiM.s:671    .text:00000262 .Loc.179
     /tmp/cc0rdxiM.s:677    .text:00000268 .Loc.180
     /tmp/cc0rdxiM.s:678    .text:00000268 .Loc.181
     /tmp/cc0rdxiM.s:682    .text:0000026e .Loc.182
     /tmp/cc0rdxiM.s:684    .text:00000272 L0
     /tmp/cc0rdxiM.s:721    .text:00000292 .Loc.183
     /tmp/cc0rdxiM.s:722    .text:00000292 .Loc.184
     /tmp/cc0rdxiM.s:1751   .bss:00000007 _manufacturer
     /tmp/cc0rdxiM.s:724    .text:00000296 .Loc.185
     /tmp/cc0rdxiM.s:725    .text:00000296 .Loc.186
     /tmp/cc0rdxiM.s:727    .text:00000296 .Loc.187
     /tmp/cc0rdxiM.s:731    .text:0000029c .Loc.188
     /tmp/cc0rdxiM.s:732    .text:0000029c .Loc.189
     /tmp/cc0rdxiM.s:735    .text:0000029e .Loc.190
     /tmp/cc0rdxiM.s:738    .text:000002a2 .Loc.191
     /tmp/cc0rdxiM.s:739    .text:000002a2 .Loc.192
     /tmp/cc0rdxiM.s:743    .text:000002a4 .Loc.193
     /tmp/cc0rdxiM.s:744    .text:000002a4 .Loc.194
     /tmp/cc0rdxiM.s:748    .text:000002aa .Loc.195
     /tmp/cc0rdxiM.s:749    .text:000002aa .Loc.196
     /tmp/cc0rdxiM.s:752    .text:000002ac .Loc.197
     /tmp/cc0rdxiM.s:761    .text:000002ba .Loc.198
     /tmp/cc0rdxiM.s:764    .text:000002bc .Loc.199
     /tmp/cc0rdxiM.s:768    .text:000002be .Loc.200
     /tmp/cc0rdxiM.s:769    .text:000002be .Loc.201
     /tmp/cc0rdxiM.s:772    .text:000002c2 .Loc.202
     /tmp/cc0rdxiM.s:773    .text:000002c2 .Loc.203
     /tmp/cc0rdxiM.s:776    .text:000002c4 .Loc.204
     /tmp/cc0rdxiM.s:782    .text:000002cc .Loc.205
     /tmp/cc0rdxiM.s:783    .text:000002cc .Loc.206
     /tmp/cc0rdxiM.s:1749   .bss:00000006 _revision
     /tmp/cc0rdxiM.s:785    .text:000002d0 .Loc.207
     /tmp/cc0rdxiM.s:786    .text:000002d0 .Loc.208
     /tmp/cc0rdxiM.s:788    .text:000002d0 .Loc.209
     /tmp/cc0rdxiM.s:792    .text:000002d6 .Loc.210
     /tmp/cc0rdxiM.s:793    .text:000002d6 .Loc.211
     /tmp/cc0rdxiM.s:796    .text:000002d8 .Loc.212
     /tmp/cc0rdxiM.s:799    .text:000002dc .Loc.213
     /tmp/cc0rdxiM.s:800    .text:000002dc .Loc.214
     /tmp/cc0rdxiM.s:804    .text:000002de .Loc.215
     /tmp/cc0rdxiM.s:805    .text:000002de .Loc.216
     /tmp/cc0rdxiM.s:809    .text:000002e4 .Loc.217
     /tmp/cc0rdxiM.s:821    .text:000002f4 .Loc.218
     /tmp/cc0rdxiM.s:1761   .bss:00000016 _serial
     /tmp/cc0rdxiM.s:834    .text:0000031c .Loc.219
     /tmp/cc0rdxiM.s:835    .text:0000031c .Loc.220
     /tmp/cc0rdxiM.s:838    .text:0000031e .Loc.221
     /tmp/cc0rdxiM.s:851    .text:00000332 .Loc.222
     /tmp/cc0rdxiM.s:852    .text:00000332 .Loc.223
     /tmp/cc0rdxiM.s:855    .text:00000334 .Loc.224
     /tmp/cc0rdxiM.s:857    .text:00000336 .Loc.225
     /tmp/cc0rdxiM.s:1747   .bss:00000005 _manufacturing_year
     /tmp/cc0rdxiM.s:859    .text:0000033a .Loc.226
     /tmp/cc0rdxiM.s:860    .text:0000033a .Loc.227
     /tmp/cc0rdxiM.s:862    .text:0000033a .Loc.228
     /tmp/cc0rdxiM.s:866    .text:00000340 .Loc.229
     /tmp/cc0rdxiM.s:867    .text:00000340 .Loc.230
     /tmp/cc0rdxiM.s:871    .text:00000346 .Loc.231
     /tmp/cc0rdxiM.s:873    .text:00000346 .Loc.232
     /tmp/cc0rdxiM.s:874    .text:00000346 .Loc.233
     /tmp/cc0rdxiM.s:881    .text:00000356 .Loc.234
     /tmp/cc0rdxiM.s:882    .text:00000356 .Loc.235
     /tmp/cc0rdxiM.s:885    .text:00000358 .Loc.236
     /tmp/cc0rdxiM.s:1745   .bss:00000004 _manufacturing_month
     /tmp/cc0rdxiM.s:887    .text:0000035c .Loc.237
     /tmp/cc0rdxiM.s:888    .text:0000035c .Loc.238
     /tmp/cc0rdxiM.s:890    .text:0000035c .Loc.239
     /tmp/cc0rdxiM.s:900    .text:0000036e .Loc.240
     /tmp/cc0rdxiM.s:905    .text:00000372 .Loc.241
     /tmp/cc0rdxiM.s:908    .text:00000374 .Loc.242
     /tmp/cc0rdxiM.s:911    .text:00000378 .Loc.243
     /tmp/cc0rdxiM.s:923    .text:0000038c .Loc.244
     /tmp/cc0rdxiM.s:925    .text:0000038c .Loc.245
     /tmp/cc0rdxiM.s:926    .text:0000038c .Loc.246
     /tmp/cc0rdxiM.s:927    .text:0000038c .Loc.247
     /tmp/cc0rdxiM.s:928    .text:0000038c .Loc.248
     /tmp/cc0rdxiM.s:934    .text:00000394 .Loc.249
     /tmp/cc0rdxiM.s:937    .text:00000398 .Loc.250
     /tmp/cc0rdxiM.s:938    .text:00000398 .Loc.251
     /tmp/cc0rdxiM.s:940    .text:00000398 .Loc.252
     /tmp/cc0rdxiM.s:941    .text:00000398 .Loc.253
     /tmp/cc0rdxiM.s:942    .text:00000398 .Loc.254
     /tmp/cc0rdxiM.s:946    .text:0000039e .Loc.255
     /tmp/cc0rdxiM.s:949    .text:000003a2 .Loc.256
     /tmp/cc0rdxiM.s:952    .text:000003a4 .Loc.257
     /tmp/cc0rdxiM.s:954    .text:000003a6 .Loc.258
     /tmp/cc0rdxiM.s:956    .text:000003a8 .Loc.259
     /tmp/cc0rdxiM.s:961    .text:000003ac .Loc.260
     /tmp/cc0rdxiM.s:962    .text:000003ac .Loc.261
     /tmp/cc0rdxiM.s:966    .text:000003b2 .Loc.262
     /tmp/cc0rdxiM.s:967    .text:000003b2 .Loc.263
     /tmp/cc0rdxiM.s:971    .text:000003b6 .Loc.264
     /tmp/cc0rdxiM.s:972    .text:000003b6 .Loc.265
     /tmp/cc0rdxiM.s:978    .text:000003c0 .Loc.266
     /tmp/cc0rdxiM.s:980    .text:000003c0 .Loc.267
     /tmp/cc0rdxiM.s:981    .text:000003c0 .Loc.268
     /tmp/cc0rdxiM.s:986    .text:000003c4 .Loc.269
     /tmp/cc0rdxiM.s:987    .text:000003c4 .Loc.270
     /tmp/cc0rdxiM.s:990    .text:000003c8 .Loc.271
     /tmp/cc0rdxiM.s:991    .text:000003c8 .Loc.272
     /tmp/cc0rdxiM.s:994    .text:000003cc .Loc.273
     /tmp/cc0rdxiM.s:997    .text:000003ce .Loc.274
     /tmp/cc0rdxiM.s:998    .text:000003ce .Loc.275
     /tmp/cc0rdxiM.s:1743   .bss:00000003 _flag_copy
     /tmp/cc0rdxiM.s:1001   .text:000003d2 .Loc.276
     /tmp/cc0rdxiM.s:1002   .text:000003d2 .Loc.277
     /tmp/cc0rdxiM.s:1004   .text:000003d4 .Loc.278
     /tmp/cc0rdxiM.s:1005   .text:000003d4 .Loc.279
     /tmp/cc0rdxiM.s:1741   .bss:00000002 _flag_write_protect
     /tmp/cc0rdxiM.s:1008   .text:000003d8 .Loc.280
     /tmp/cc0rdxiM.s:1009   .text:000003d8 .Loc.281
     /tmp/cc0rdxiM.s:1011   .text:000003da .Loc.282
     /tmp/cc0rdxiM.s:1012   .text:000003da .Loc.283
     /tmp/cc0rdxiM.s:1739   .bss:00000001 _flag_write_protect_temp
     /tmp/cc0rdxiM.s:1015   .text:000003de .Loc.284
     /tmp/cc0rdxiM.s:1016   .text:000003de .Loc.285
     /tmp/cc0rdxiM.s:1023   .text:000003ea .Loc.286
                             .bss:00000000 _format
     /tmp/cc0rdxiM.s:1025   .text:000003ee .Loc.287
     /tmp/cc0rdxiM.s:1027   .text:000003ee .Loc.288
     /tmp/cc0rdxiM.s:1028   .text:000003ee .Loc.289
     /tmp/cc0rdxiM.s:1033   .text:000003f2 .Loc.290
     /tmp/cc0rdxiM.s:1034   .text:000003f2 .Loc.291
     /tmp/cc0rdxiM.s:1036   .text:000003f6 L0
     /tmp/cc0rdxiM.s:1038   .text:000003f8 .Loc.292
     /tmp/cc0rdxiM.s:1040   .text:000003fc L0
     /tmp/cc0rdxiM.s:1045   .text:00000406 L0
     /tmp/cc0rdxiM.s:1049   .text:00000408 .Loc.293
     /tmp/cc0rdxiM.s:1052   .text:0000040a .Loc.294
     /tmp/cc0rdxiM.s:1055   .text:0000040e .Loc.295
     /tmp/cc0rdxiM.s:1058   .text:00000410 .Loc.296
     /tmp/cc0rdxiM.s:1060   .text:00000410 .Loc.297
     /tmp/cc0rdxiM.s:1061   .text:00000410 .Loc.298
     /tmp/cc0rdxiM.s:1063   .text:00000410 .Loc.299
     /tmp/cc0rdxiM.s:1728   .progmem.data:00000189 __c.20
     /tmp/cc0rdxiM.s:1072   .text:0000041c .Loc.300
     /tmp/cc0rdxiM.s:1724   .progmem.data:00000184 __c.19
     /tmp/cc0rdxiM.s:1083   .text:0000042c .Loc.301
     /tmp/cc0rdxiM.s:1084   .text:0000042c .Loc.302
     /tmp/cc0rdxiM.s:1086   .text:0000042c .Loc.303
     /tmp/cc0rdxiM.s:1716   .progmem.data:00000169 __c.17
     /tmp/cc0rdxiM.s:1099   .text:0000043c .Loc.304
     /tmp/cc0rdxiM.s:1101   .text:0000043c .Loc.305
     /tmp/cc0rdxiM.s:1102   .text:0000043c .Loc.306
     /tmp/cc0rdxiM.s:1104   .text:0000043c .Loc.307
     /tmp/cc0rdxiM.s:1712   .progmem.data:00000151 __c.16
     /tmp/cc0rdxiM.s:1118   .text:0000044e .Loc.308
     /tmp/cc0rdxiM.s:1120   .text:0000044e .Loc.309
     /tmp/cc0rdxiM.s:1121   .text:0000044e .Loc.310
     /tmp/cc0rdxiM.s:1123   .text:0000044e .Loc.311
     /tmp/cc0rdxiM.s:1708   .progmem.data:00000137 __c.15
     /tmp/cc0rdxiM.s:1137   .text:00000462 .Loc.312
     /tmp/cc0rdxiM.s:1139   .text:00000462 .Loc.313
     /tmp/cc0rdxiM.s:1140   .text:00000462 .Loc.314
     /tmp/cc0rdxiM.s:1142   .text:00000462 .Loc.315
     /tmp/cc0rdxiM.s:1704   .progmem.data:0000011f __c.14
     /tmp/cc0rdxiM.s:1157   .text:00000476 .Loc.316
     /tmp/cc0rdxiM.s:1159   .text:00000476 .Loc.317
     /tmp/cc0rdxiM.s:1160   .text:00000476 .Loc.318
     /tmp/cc0rdxiM.s:1162   .text:00000476 .Loc.319
     /tmp/cc0rdxiM.s:1700   .progmem.data:00000107 __c.13
     /tmp/cc0rdxiM.s:1177   .text:0000048a .Loc.320
     /tmp/cc0rdxiM.s:1178   .text:0000048a .Loc.321
     /tmp/cc0rdxiM.s:1181   .text:0000048e .Loc.322
     /tmp/cc0rdxiM.s:1182   .text:0000048e .Loc.323
     /tmp/cc0rdxiM.s:1184   .text:0000048e .Loc.324
     /tmp/cc0rdxiM.s:1192   .text:00000498 .Loc.325
     /tmp/cc0rdxiM.s:1195   .text:0000049c .Loc.326
     /tmp/cc0rdxiM.s:1696   .progmem.data:000000ec __c.12
     /tmp/cc0rdxiM.s:1209   .text:000004ae .Loc.327
     /tmp/cc0rdxiM.s:1211   .text:000004ae .Loc.328
     /tmp/cc0rdxiM.s:1212   .text:000004ae .Loc.329
     /tmp/cc0rdxiM.s:1214   .text:000004ae .Loc.330
     /tmp/cc0rdxiM.s:1692   .progmem.data:000000cf __c.11
     /tmp/cc0rdxiM.s:1235   .text:000004d2 .Loc.331
     /tmp/cc0rdxiM.s:1237   .text:000004d2 .Loc.332
     /tmp/cc0rdxiM.s:1238   .text:000004d2 .Loc.333
     /tmp/cc0rdxiM.s:1240   .text:000004d2 .Loc.334
     /tmp/cc0rdxiM.s:1688   .progmem.data:000000b2 __c.10
     /tmp/cc0rdxiM.s:1271   .text:00000504 .Loc.335
     /tmp/cc0rdxiM.s:1273   .text:00000504 .Loc.336
     /tmp/cc0rdxiM.s:1274   .text:00000504 .Loc.337
     /tmp/cc0rdxiM.s:1276   .text:00000504 .Loc.338
     /tmp/cc0rdxiM.s:1759   .bss:00000012 _capacity
     /tmp/cc0rdxiM.s:1684   .progmem.data:00000093 __c.9
     /tmp/cc0rdxiM.s:1297   .text:00000528 .Loc.339
     /tmp/cc0rdxiM.s:1299   .text:00000528 .Loc.340
     /tmp/cc0rdxiM.s:1300   .text:00000528 .Loc.341
     /tmp/cc0rdxiM.s:1302   .text:00000528 .Loc.342
     /tmp/cc0rdxiM.s:1680   .progmem.data:00000077 __c.8
     /tmp/cc0rdxiM.s:1316   .text:0000053c .Loc.343
     /tmp/cc0rdxiM.s:1329   .text:00000554 .Loc.344
     /tmp/cc0rdxiM.s:1332   .text:0000055c L0
     /tmp/cc0rdxiM.s:1672   .progmem.data:0000004b __c.6
     /tmp/cc0rdxiM.s:1337   .text:00000562 .Loc.345
     /tmp/cc0rdxiM.s:1340   .text:0000056a L0
     /tmp/cc0rdxiM.s:1342   .text:0000056c .Loc.346
     /tmp/cc0rdxiM.s:1664   .progmem.data:00000039 __c.4
     /tmp/cc0rdxiM.s:1347   .text:00000570 .Loc.347
     /tmp/cc0rdxiM.s:1348   .text:00000570 .Loc.348
     /tmp/cc0rdxiM.s:1350   .text:00000570 .Loc.349
     /tmp/cc0rdxiM.s:1656   .progmem.data:00000014 __c.2
     /tmp/cc0rdxiM.s:1367   .text:00000584 .Loc.350
     /tmp/cc0rdxiM.s:1379   .text:00000594 .Loc.351
     /tmp/cc0rdxiM.s:1383   .text:00000598 .Loc.352
     /tmp/cc0rdxiM.s:1387   .text:0000059c .Loc.353
     /tmp/cc0rdxiM.s:1390   .text:0000059e .Loc.354
     /tmp/cc0rdxiM.s:1398   .text:000005a6 .Loc.355
     /tmp/cc0rdxiM.s:1399   .text:000005a6 .Loc.356
     /tmp/cc0rdxiM.s:1403   .text:000005a8 .Loc.357
     /tmp/cc0rdxiM.s:1404   .text:000005a8 .Loc.358
     /tmp/cc0rdxiM.s:1405   .text:000005a8 .Loc.359
     /tmp/cc0rdxiM.s:1410   .text:000005ae .Loc.360
     /tmp/cc0rdxiM.s:1414   .text:000005b2 .Loc.361
     /tmp/cc0rdxiM.s:1415   .text:000005b2 .Loc.362
     /tmp/cc0rdxiM.s:1418   .text:000005b4 .Loc.363
     /tmp/cc0rdxiM.s:1421   .text:000005b8 .Loc.364
     /tmp/cc0rdxiM.s:1430   .text:000005c6 .Loc.365
     /tmp/cc0rdxiM.s:1438   .text:000005d8 .Loc.366
     /tmp/cc0rdxiM.s:1439   .text:000005d8 .Loc.367
     /tmp/cc0rdxiM.s:1442   .text:000005dc .Loc.368
     /tmp/cc0rdxiM.s:1444   .text:000005e0 L0
     /tmp/cc0rdxiM.s:1454   .text:000005f0 .Loc.369
     /tmp/cc0rdxiM.s:1457   .text:000005f2 .Loc.370
     /tmp/cc0rdxiM.s:1461   .text:000005f4 .Loc.371
     /tmp/cc0rdxiM.s:1463   .text:000005f8 L0
     /tmp/cc0rdxiM.s:1466   .text:000005fe L0
     /tmp/cc0rdxiM.s:1468   .text:00000600 .Loc.372
     /tmp/cc0rdxiM.s:1469   .text:00000600 .Loc.373
     /tmp/cc0rdxiM.s:1474   .text:00000606 .Loc.374
     /tmp/cc0rdxiM.s:1477   .text:00000608 .Loc.375
     /tmp/cc0rdxiM.s:1478   .text:00000608 .Loc.376
     /tmp/cc0rdxiM.s:1482   .text:0000060e .Loc.377
     /tmp/cc0rdxiM.s:1488   .text:00000618 .Loc.378
     /tmp/cc0rdxiM.s:1491   .text:0000061c .Loc.379
     /tmp/cc0rdxiM.s:1501   .text:0000062a .Loc.380
     /tmp/cc0rdxiM.s:1510   .text:00000638 .Loc.381
     /tmp/cc0rdxiM.s:1515   .text:00000648 .Loc.382
     /tmp/cc0rdxiM.s:1517   .text:00000648 .Loc.383
     /tmp/cc0rdxiM.s:1518   .text:00000648 .Loc.384
     /tmp/cc0rdxiM.s:1519   .text:00000648 .Loc.385
     /tmp/cc0rdxiM.s:1524   .text:0000064c .Loc.386
     /tmp/cc0rdxiM.s:1525   .text:0000064c .Loc.387
     /tmp/cc0rdxiM.s:1528   .text:0000064e .Loc.388
     /tmp/cc0rdxiM.s:1531   .text:00000650 .Loc.389
     /tmp/cc0rdxiM.s:1532   .text:00000650 .Loc.390
     /tmp/cc0rdxiM.s:1533   .text:00000650 .Loc.391
     /tmp/cc0rdxiM.s:1534   .text:00000650 .Loc.392
     /tmp/cc0rdxiM.s:1539   .text:00000654 .Loc.393
     /tmp/cc0rdxiM.s:1540   .text:00000654 .Loc.394
     /tmp/cc0rdxiM.s:1543   .text:00000656 .Loc.395
     /tmp/cc0rdxiM.s:1546   .text:00000658 .Loc.396
     /tmp/cc0rdxiM.s:1549   .text:0000065a .Loc.397
     /tmp/cc0rdxiM.s:1550   .text:0000065a .Loc.398
     /tmp/cc0rdxiM.s:1554   .text:0000065e .Loc.399
     /tmp/cc0rdxiM.s:1555   .text:0000065e .Loc.400
     /tmp/cc0rdxiM.s:1556   .text:0000065e .Loc.401
     /tmp/cc0rdxiM.s:1557   .text:0000065e .Loc.402
     /tmp/cc0rdxiM.s:1562   .text:00000662 .Loc.403
     /tmp/cc0rdxiM.s:1563   .text:00000662 .Loc.404
     /tmp/cc0rdxiM.s:1566   .text:00000664 .Loc.405
     /tmp/cc0rdxiM.s:1567   .text:00000664 .Loc.406
     /tmp/cc0rdxiM.s:1573   .text:0000066c .Loc.407
     /tmp/cc0rdxiM.s:1574   .text:0000066c .Loc.408
     /tmp/cc0rdxiM.s:1575   .text:0000066c .Loc.409
     /tmp/cc0rdxiM.s:1576   .text:0000066c .Loc.410
     /tmp/cc0rdxiM.s:1581   .text:00000670 .Loc.411
     /tmp/cc0rdxiM.s:1582   .text:00000670 .Loc.412
     /tmp/cc0rdxiM.s:1585   .text:00000672 .Loc.413
     /tmp/cc0rdxiM.s:1589   .text:00000678 .Loc.414
     /tmp/cc0rdxiM.s:1592   .text:0000067a .Loc.415
     /tmp/cc0rdxiM.s:1596   .text:0000067e .Loc.416
     /tmp/cc0rdxiM.s:1597   .text:0000067e .Loc.417
     /tmp/cc0rdxiM.s:1598   .text:0000067e .Loc.418
     /tmp/cc0rdxiM.s:1599   .text:0000067e .Loc.419
     /tmp/cc0rdxiM.s:1604   .text:00000682 .Loc.420
     /tmp/cc0rdxiM.s:1605   .text:00000682 .Loc.421
     /tmp/cc0rdxiM.s:1606   .text:00000682 .Loc.422
     /tmp/cc0rdxiM.s:1609   .text:00000684 .Loc.423
     /tmp/cc0rdxiM.s:1613   .text:00000688 .Loc.424
     /tmp/cc0rdxiM.s:1614   .text:00000688 .Loc.425
     /tmp/cc0rdxiM.s:1615   .text:00000688 .Loc.426
     /tmp/cc0rdxiM.s:1616   .text:00000688 .Loc.427
     /tmp/cc0rdxiM.s:1621   .text:0000068c .Loc.428
     /tmp/cc0rdxiM.s:1623   .text:0000068c .Loc.429
     /tmp/cc0rdxiM.s:1720   .progmem.data:00000181 __c.18
     /tmp/cc0rdxiM.s:1628   .text:00000692 .Loc.430
     /tmp/cc0rdxiM.s:1676   .progmem.data:0000005b __c.7
     /tmp/cc0rdxiM.s:1633   .text:00000698 .Loc.431
     /tmp/cc0rdxiM.s:1668   .progmem.data:00000040 __c.5
     /tmp/cc0rdxiM.s:1638   .text:0000069e .Loc.432
     /tmp/cc0rdxiM.s:1660   .progmem.data:0000002e __c.3
     /tmp/cc0rdxiM.s:1642   .text:000006a4 L0
     /tmp/cc0rdxiM.s:1770   .text:000006a4 L0
                     .debug_frame:00000000 L0
     /tmp/cc0rdxiM.s:80     .text:00000044 .L13
     /tmp/cc0rdxiM.s:106    .text:0000005a .L1
     /tmp/cc0rdxiM.s:89     .text:0000004a .L6
     /tmp/cc0rdxiM.s:207    .text:0000009c .L15
     /tmp/cc0rdxiM.s:292    .text:000000e4 .L16
     /tmp/cc0rdxiM.s:283    .text:000000e0 .L17
     /tmp/cc0rdxiM.s:239    .text:000000ba .L18
     /tmp/cc0rdxiM.s:471    .text:0000019a .L19
     /tmp/cc0rdxiM.s:461    .text:0000018c .L20
     /tmp/cc0rdxiM.s:496    .text:000001be .L24
     /tmp/cc0rdxiM.s:401    .text:00000156 .L11
     /tmp/cc0rdxiM.s:502    .text:000001c2 .L26
     /tmp/cc0rdxiM.s:450    .text:00000186 .L27
     /tmp/cc0rdxiM.s:366    .text:00000130 .L28
     /tmp/cc0rdxiM.s:321    .text:0000010c .L22
     /tmp/cc0rdxiM.s:347    .text:0000011e .L21
     /tmp/cc0rdxiM.s:357    .text:00000128 .L23
     /tmp/cc0rdxiM.s:354    .text:00000124 .L94
     /tmp/cc0rdxiM.s:411    .text:00000164 .L95
     /tmp/cc0rdxiM.s:543    .text:000001fc .L29
     /tmp/cc0rdxiM.s:530    .text:000001ea .L30
     /tmp/cc0rdxiM.s:595    .text:00000216 .L12
     /tmp/cc0rdxiM.s:582    .text:00000214 .L31
     /tmp/cc0rdxiM.s:651    .text:00000246 .L32
     /tmp/cc0rdxiM.s:904    .text:00000372 .L33
     /tmp/cc0rdxiM.s:702    .jumptables.gcc.sd_init:00000000 .L35
     /tmp/cc0rdxiM.s:675    .text:00000268 .L44
     /tmp/cc0rdxiM.s:742    .text:000002a4 .L40
     /tmp/cc0rdxiM.s:817    .text:000002f0 .L21
     /tmp/cc0rdxiM.s:812    .text:000002e8 .L13
     /tmp/cc0rdxiM.s:922    .text:0000038c .L43
     /tmp/cc0rdxiM.s:939    .text:00000398 .L45
     /tmp/cc0rdxiM.s:985    .text:000003c4 .L46
     /tmp/cc0rdxiM.s:960    .text:000003ac .L65
     /tmp/cc0rdxiM.s:1032   .text:000003f2 .L48
     /tmp/cc0rdxiM.s:1437   .text:000005d8 .L52
     /tmp/cc0rdxiM.s:1396   .text:000005a6 .L53
     /tmp/cc0rdxiM.s:1402   .text:000005a8 .L55
     /tmp/cc0rdxiM.s:1620   .text:0000068c .L70
     /tmp/cc0rdxiM.s:1627   .text:00000692 .L71
     /tmp/cc0rdxiM.s:1632   .text:00000698 .L72
     /tmp/cc0rdxiM.s:1637   .text:0000069e .L73
     /tmp/cc0rdxiM.s:1423   .text:000005ba .L14
     /tmp/cc0rdxiM.s:1048   .text:00000408 .L54
     /tmp/cc0rdxiM.s:1580   .text:00000670 .L56
     /tmp/cc0rdxiM.s:1460   .text:000005f4 .L57
     /tmp/cc0rdxiM.s:1538   .text:00000654 .L58
     /tmp/cc0rdxiM.s:1561   .text:00000662 .L59
     /tmp/cc0rdxiM.s:1523   .text:0000064c .L60
     /tmp/cc0rdxiM.s:1603   .text:00000682 .L62
     /tmp/cc0rdxiM.s:1498   .text:00000626 .L22
     /tmp/cc0rdxiM.s:1493   .text:0000061e .L15
     /tmp/cc0rdxiM.s:1503   .text:0000062c .L16
     /tmp/cc0rdxiM.s:1081   .text:0000042c .L66
     /tmp/cc0rdxiM.s:1336   .text:00000562 .L67
     /tmp/cc0rdxiM.s:1345   .text:00000570 .L68
     /tmp/cc0rdxiM.s:719    .text:00000292 .L41
     /tmp/cc0rdxiM.s:760    .text:000002ba .L69
     /tmp/cc0rdxiM.s:767    .text:000002be .L39
     /tmp/cc0rdxiM.s:781    .text:000002cc .L38
     /tmp/cc0rdxiM.s:803    .text:000002de .L37
     /tmp/cc0rdxiM.s:850    .text:00000332 .L36
     /tmp/cc0rdxiM.s:872    .text:00000346 .L34
     /tmp/cc0rdxiM.s:3229   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/cc0rdxiM.s:8      .text:00000000 .Ltext0
     /tmp/cc0rdxiM.s:1765   .text:000006a4 .Letext0
     /tmp/cc0rdxiM.s:4856   .debug_line:00000000 .Ldebug_line0
     /tmp/cc0rdxiM.s:120    .text:00000064 .LFB17
     /tmp/cc0rdxiM.s:1643   .text:000006a4 .LFE17
     /tmp/cc0rdxiM.s:158    .text:00000078 .LBB73
     /tmp/cc0rdxiM.s:161    .text:00000078 .LBE73
     /tmp/cc0rdxiM.s:171    .text:00000084 .LBB74
     /tmp/cc0rdxiM.s:616    .text:00000224 .LBE74
     /tmp/cc0rdxiM.s:3864   .debug_loclists:00000010 .LLST4
     /tmp/cc0rdxiM.s:3859   .debug_loclists:0000000c .LVUS4
     /tmp/cc0rdxiM.s:3895   .debug_loclists:00000031 .LLST5
     /tmp/cc0rdxiM.s:3876   .debug_loclists:0000001f .LVUS5
     /tmp/cc0rdxiM.s:3981   .debug_loclists:00000097 .LLST6
     /tmp/cc0rdxiM.s:3976   .debug_loclists:00000093 .LVUS6
     /tmp/cc0rdxiM.s:180    .text:00000088 .LBI75
     /tmp/cc0rdxiM.s:4806   .debug_rnglists:0000000c .LLRL7
     /tmp/cc0rdxiM.s:262    .text:000000d2 .LBI79
     /tmp/cc0rdxiM.s:4814   .debug_rnglists:00000017 .LLRL8
     /tmp/cc0rdxiM.s:278    .text:000000dc .LVL22
     /tmp/cc0rdxiM.s:324    .text:0000010c .LBI84
     /tmp/cc0rdxiM.s:323    .text:0000010c .LBB84
     /tmp/cc0rdxiM.s:349    .text:0000011e .LBE84
     /tmp/cc0rdxiM.s:342    .text:0000011a .LVL28
     /tmp/cc0rdxiM.s:429    .text:00000178 .LBI87
     /tmp/cc0rdxiM.s:4822   .debug_rnglists:00000022 .LLRL9
     /tmp/cc0rdxiM.s:445    .text:00000182 .LVL35
     /tmp/cc0rdxiM.s:557    .text:0000020c .LBI92
     /tmp/cc0rdxiM.s:4830   .debug_rnglists:0000002d .LLRL10
     /tmp/cc0rdxiM.s:4010   .debug_loclists:000000b6 .LLST11
     /tmp/cc0rdxiM.s:4007   .debug_loclists:000000b4 .LVUS11
     /tmp/cc0rdxiM.s:4022   .debug_loclists:000000c5 .LLST12
     /tmp/cc0rdxiM.s:4019   .debug_loclists:000000c3 .LVUS12
     /tmp/cc0rdxiM.s:4040   .debug_loclists:000000da .LLST13
     /tmp/cc0rdxiM.s:4031   .debug_loclists:000000d2 .LVUS13
     /tmp/cc0rdxiM.s:588    .text:00000214 .LBI94
     /tmp/cc0rdxiM.s:4838   .debug_rnglists:00000038 .LLRL14
     /tmp/cc0rdxiM.s:4079   .debug_loclists:00000107 .LLST15
     /tmp/cc0rdxiM.s:4076   .debug_loclists:00000105 .LVUS15
     /tmp/cc0rdxiM.s:214    .text:000000a2 .LVL17
     /tmp/cc0rdxiM.s:250    .text:000000c6 .LVL21
     /tmp/cc0rdxiM.s:301    .text:000000f2 .LVL24
     /tmp/cc0rdxiM.s:308    .text:000000fc .LVL25
     /tmp/cc0rdxiM.s:312    .text:00000102 .LVL26
     /tmp/cc0rdxiM.s:317    .text:00000108 .LVL27
     /tmp/cc0rdxiM.s:389    .text:00000148 .LVL31
     /tmp/cc0rdxiM.s:414    .text:00000168 .LVL34
     /tmp/cc0rdxiM.s:465    .text:00000192 .LVL38
     /tmp/cc0rdxiM.s:478    .text:000001a6 .LVL39
     /tmp/cc0rdxiM.s:486    .text:000001b2 .LVL40
     /tmp/cc0rdxiM.s:516    .text:000001d6 .LVL44
     /tmp/cc0rdxiM.s:521    .text:000001dc .LVL45
     /tmp/cc0rdxiM.s:534    .text:000001f0 .LVL46
     /tmp/cc0rdxiM.s:538    .text:000001f6 .LVL47
     /tmp/cc0rdxiM.s:542    .text:000001fc .LVL48
     /tmp/cc0rdxiM.s:551    .text:0000020a .LVL49
     /tmp/cc0rdxiM.s:618    .text:00000224 .LBB100
     /tmp/cc0rdxiM.s:621    .text:00000224 .LBE100
     /tmp/cc0rdxiM.s:4846   .debug_rnglists:00000043 .LLRL16
     /tmp/cc0rdxiM.s:4147   .debug_loclists:0000014c .LLST17
     /tmp/cc0rdxiM.s:4088   .debug_loclists:00000112 .LVUS17
     /tmp/cc0rdxiM.s:4345   .debug_loclists:0000024a .LLST18
     /tmp/cc0rdxiM.s:4308   .debug_loclists:00000226 .LVUS18
     /tmp/cc0rdxiM.s:4446   .debug_loclists:000002d7 .LLST19
     /tmp/cc0rdxiM.s:4439   .debug_loclists:000002d1 .LVUS19
     /tmp/cc0rdxiM.s:4475   .debug_loclists:000002f8 .LLST20
     /tmp/cc0rdxiM.s:4464   .debug_loclists:000002ee .LVUS20
     /tmp/cc0rdxiM.s:4526   .debug_loclists:00000333 .LLST21
     /tmp/cc0rdxiM.s:4507   .debug_loclists:00000321 .LVUS21
     /tmp/cc0rdxiM.s:4588   .debug_loclists:00000381 .LLST22
     /tmp/cc0rdxiM.s:4585   .debug_loclists:0000037f .LVUS22
     /tmp/cc0rdxiM.s:4607   .debug_loclists:00000394 .LLST23
     /tmp/cc0rdxiM.s:4596   .debug_loclists:0000038a .LVUS23
     /tmp/cc0rdxiM.s:636    .text:00000234 .LVL57
     /tmp/cc0rdxiM.s:645    .text:00000242 .LVL58
     /tmp/cc0rdxiM.s:657    .text:0000024c .LVL59
     /tmp/cc0rdxiM.s:681    .text:0000026e .LVL61
     /tmp/cc0rdxiM.s:737    .text:000002a2 .LVL65
     /tmp/cc0rdxiM.s:798    .text:000002dc .LVL73
     /tmp/cc0rdxiM.s:870    .text:00000346 .LVL80
     /tmp/cc0rdxiM.s:936    .text:00000398 .LVL87
     /tmp/cc0rdxiM.s:945    .text:0000039e .LVL88
     /tmp/cc0rdxiM.s:965    .text:000003b2 .LVL91
     /tmp/cc0rdxiM.s:1059   .text:00000410 .LBB102
     /tmp/cc0rdxiM.s:1062   .text:00000410 .LBE102
     /tmp/cc0rdxiM.s:1082   .text:0000042c .LBB103
     /tmp/cc0rdxiM.s:1085   .text:0000042c .LBE103
     /tmp/cc0rdxiM.s:1100   .text:0000043c .LBB104
     /tmp/cc0rdxiM.s:1103   .text:0000043c .LBE104
     /tmp/cc0rdxiM.s:1119   .text:0000044e .LBB105
     /tmp/cc0rdxiM.s:1122   .text:0000044e .LBE105
     /tmp/cc0rdxiM.s:1138   .text:00000462 .LBB106
     /tmp/cc0rdxiM.s:1141   .text:00000462 .LBE106
     /tmp/cc0rdxiM.s:1158   .text:00000476 .LBB107
     /tmp/cc0rdxiM.s:1161   .text:00000476 .LBE107
     /tmp/cc0rdxiM.s:1180   .text:0000048e .LBB108
     /tmp/cc0rdxiM.s:1183   .text:0000048e .LBE108
     /tmp/cc0rdxiM.s:1210   .text:000004ae .LBB109
     /tmp/cc0rdxiM.s:1213   .text:000004ae .LBE109
     /tmp/cc0rdxiM.s:1236   .text:000004d2 .LBB110
     /tmp/cc0rdxiM.s:1239   .text:000004d2 .LBE110
     /tmp/cc0rdxiM.s:1272   .text:00000504 .LBB111
     /tmp/cc0rdxiM.s:1275   .text:00000504 .LBE111
     /tmp/cc0rdxiM.s:1298   .text:00000528 .LBB112
     /tmp/cc0rdxiM.s:1301   .text:00000528 .LBE112
     /tmp/cc0rdxiM.s:1346   .text:00000570 .LBB113
     /tmp/cc0rdxiM.s:1349   .text:00000570 .LBE113
     /tmp/cc0rdxiM.s:170    .text:00000084 .LVL14
     /tmp/cc0rdxiM.s:630    .text:00000230 .LVL56
     /tmp/cc0rdxiM.s:1071   .text:0000041c .LVL100
     /tmp/cc0rdxiM.s:1098   .text:0000043c .LVL101
     /tmp/cc0rdxiM.s:1117   .text:0000044e .LVL102
     /tmp/cc0rdxiM.s:1136   .text:00000462 .LVL103
     /tmp/cc0rdxiM.s:1156   .text:00000476 .LVL104
     /tmp/cc0rdxiM.s:1176   .text:0000048a .LVL105
     /tmp/cc0rdxiM.s:1208   .text:000004ae .LVL106
     /tmp/cc0rdxiM.s:1234   .text:000004d2 .LVL107
     /tmp/cc0rdxiM.s:1270   .text:00000504 .LVL108
     /tmp/cc0rdxiM.s:1296   .text:00000528 .LVL109
     /tmp/cc0rdxiM.s:1315   .text:0000053c .LVL110
     /tmp/cc0rdxiM.s:1366   .text:00000584 .LVL111
     /tmp/cc0rdxiM.s:14     .text:00000000 .LFB13
     /tmp/cc0rdxiM.s:115    .text:00000064 .LFE13
     /tmp/cc0rdxiM.s:4662   .debug_loclists:000003d3 .LLST0
     /tmp/cc0rdxiM.s:4655   .debug_loclists:000003cd .LVUS0
     /tmp/cc0rdxiM.s:4687   .debug_loclists:000003ea .LLST1
     /tmp/cc0rdxiM.s:4682   .debug_loclists:000003e6 .LVUS1
     /tmp/cc0rdxiM.s:4722   .debug_loclists:0000040b .LLST2
     /tmp/cc0rdxiM.s:4713   .debug_loclists:00000403 .LVUS2
     /tmp/cc0rdxiM.s:4764   .debug_loclists:00000433 .LLST3
     /tmp/cc0rdxiM.s:4757   .debug_loclists:0000042d .LVUS3
     /tmp/cc0rdxiM.s:45     .text:00000016 .LVL2
     /tmp/cc0rdxiM.s:50     .text:0000001e .LVL3
     /tmp/cc0rdxiM.s:54     .text:00000024 .LVL4
     /tmp/cc0rdxiM.s:58     .text:0000002a .LVL5
     /tmp/cc0rdxiM.s:62     .text:00000030 .LVL6
     /tmp/cc0rdxiM.s:66     .text:00000036 .LVL7
     /tmp/cc0rdxiM.s:83     .text:00000048 .LVL8
     /tmp/cc0rdxiM.s:93     .text:00000050 .LVL10
     /tmp/cc0rdxiM.s:1771   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
spi_xchg
log_boot_P
panic
spi_fast
__tablejump2__
__do_clear_bss
