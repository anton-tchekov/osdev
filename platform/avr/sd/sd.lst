   1               		.file	"sd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "sd/sd.c"
  12               	_sd_command:
  13               	.LVL0:
  14               	.LFB16:
  15               		.file 1 "sd/sd.c"
   1:sd/sd.c       **** /**
   2:sd/sd.c       ****  * @file    sd.c
   3:sd/sd.c       ****  * @author  Anton Tchekov
   4:sd/sd.c       ****  * @version 0.2
   5:sd/sd.c       ****  * @date    20.05.2023
   6:sd/sd.c       ****  */
   7:sd/sd.c       **** 
   8:sd/sd.c       **** #include <sd.h>
   9:sd/sd.c       **** #include <spi.h>
  10:sd/sd.c       **** #include <logger.h>
  11:sd/sd.c       **** #include <gpio.h>
  12:sd/sd.c       **** #include <string.h>
  13:sd/sd.c       **** #include <avr/io.h>
  14:sd/sd.c       **** #include <avr/pgmspace.h>
  15:sd/sd.c       **** #include <util/delay.h>
  16:sd/sd.c       **** 
  17:sd/sd.c       **** #define BLOCK_SIZE             512
  18:sd/sd.c       **** #define BLOCK_SIZE_POT           9
  19:sd/sd.c       **** 
  20:sd/sd.c       **** #define CMD_GO_IDLE_STATE      0x00
  21:sd/sd.c       **** #define CMD_SEND_OP_COND       0x01
  22:sd/sd.c       **** #define CMD_SEND_IF_COND       0x08
  23:sd/sd.c       **** #define CMD_SEND_CSD           0x09
  24:sd/sd.c       **** #define CMD_SEND_CID           0x0A
  25:sd/sd.c       **** #define CMD_SET_BLOCKLEN       0x10
  26:sd/sd.c       **** #define CMD_READ_SINGLE_BLOCK  0x11
  27:sd/sd.c       **** #define CMD_WRITE_SINGLE_BLOCK 0x18
  28:sd/sd.c       **** #define CMD_SD_SEND_OP_COND    0x29
  29:sd/sd.c       **** #define CMD_APP                0x37
  30:sd/sd.c       **** #define CMD_READ_OCR           0x3A
  31:sd/sd.c       **** 
  32:sd/sd.c       **** #define IDLE_STATE             (1 << 0)
  33:sd/sd.c       **** #define ILLEGAL_CMD            (1 << 2)
  34:sd/sd.c       **** 
  35:sd/sd.c       **** #define SD_1                   (1 << 0)
  36:sd/sd.c       **** #define SD_2                   (1 << 1)
  37:sd/sd.c       **** #define SD_HC                  (1 << 2)
  38:sd/sd.c       **** 
  39:sd/sd.c       **** /* SD card properties */
  40:sd/sd.c       **** static u32
  41:sd/sd.c       **** 	_serial,
  42:sd/sd.c       **** 	_capacity;
  43:sd/sd.c       **** 
  44:sd/sd.c       **** static u8
  45:sd/sd.c       **** 	_oem[3],
  46:sd/sd.c       **** 	_product[6],
  47:sd/sd.c       **** 	_card_type,
  48:sd/sd.c       **** 	_manufacturer,
  49:sd/sd.c       **** 	_revision,
  50:sd/sd.c       **** 	_manufacturing_year,
  51:sd/sd.c       **** 	_manufacturing_month,
  52:sd/sd.c       **** 	_flag_copy,
  53:sd/sd.c       **** 	_flag_write_protect,
  54:sd/sd.c       **** 	_flag_write_protect_temp,
  55:sd/sd.c       **** 	_format;
  56:sd/sd.c       **** 
  57:sd/sd.c       **** /* --- PRIVATE --- */
  58:sd/sd.c       **** 
  59:sd/sd.c       **** /**
  60:sd/sd.c       ****  * @brief TODO
  61:sd/sd.c       ****  */
  62:sd/sd.c       **** static void _spi_configure_slow(void)
  63:sd/sd.c       **** {
  64:sd/sd.c       **** 	SPCR |= (1 << SPR1) | (1 << SPR0);
  65:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
  66:sd/sd.c       **** }
  67:sd/sd.c       **** 
  68:sd/sd.c       **** /**
  69:sd/sd.c       ****  * @brief TODO
  70:sd/sd.c       ****  */
  71:sd/sd.c       **** static void _sd_timeout(void)
  72:sd/sd.c       **** {
  73:sd/sd.c       **** 	SD_DESELECT;
  74:sd/sd.c       **** 	panic(PSTR("SD timeout"));
  75:sd/sd.c       **** }
  76:sd/sd.c       **** 
  77:sd/sd.c       **** /**
  78:sd/sd.c       ****  * @brief TODO
  79:sd/sd.c       ****  */
  80:sd/sd.c       **** static void _sd_error(void)
  81:sd/sd.c       **** {
  82:sd/sd.c       **** 	SD_DESELECT;
  83:sd/sd.c       **** 	panic(PSTR("SD error"));
  84:sd/sd.c       **** }
  85:sd/sd.c       **** 
  86:sd/sd.c       **** /**
  87:sd/sd.c       ****  * @brief TODO
  88:sd/sd.c       ****  *
  89:sd/sd.c       ****  * @param cmd TODO
  90:sd/sd.c       ****  * @param arg TODO
  91:sd/sd.c       ****  * @return TODO
  92:sd/sd.c       ****  */
  93:sd/sd.c       **** static u8 _sd_command(u8 cmd, u32 arg)
  94:sd/sd.c       **** {
  16               		.loc 1 94 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 94 1 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 17, -3
  25 0004 CF93      		push r28
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 28, -4
  28 0006 DF93      		push r29
  29               		.cfi_def_cfa_offset 6
  30               		.cfi_offset 29, -5
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 4 */
  34               	.L__stack_usage = 4
  35 0008 C82F      		mov r28,r24
  36 000a D42F      		mov r29,r20
  37 000c 152F      		mov r17,r21
  38 000e 072F      		mov r16,r23
  95:sd/sd.c       **** 	u8 i, response;
  39               		.loc 1 95 2 is_stmt 1 view .LVU2
  96:sd/sd.c       **** 	spi_xchg(0xFF);
  40               		.loc 1 96 2 view .LVU3
  41 0010 8FEF      		ldi r24,lo8(-1)
  42               	.LVL1:
  43               		.loc 1 96 2 is_stmt 0 view .LVU4
  44 0012 0E94 0000 		call spi_xchg
  45               	.LVL2:
  97:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
  46               		.loc 1 97 2 is_stmt 1 view .LVU5
  47 0016 8C2F      		mov r24,r28
  48 0018 8064      		ori r24,lo8(64)
  49 001a 0E94 0000 		call spi_xchg
  50               	.LVL3:
  98:sd/sd.c       **** 	spi_xchg((arg >> 24) & 0xFF);
  51               		.loc 1 98 2 view .LVU6
  52 001e 802F      		mov r24,r16
  53 0020 0E94 0000 		call spi_xchg
  54               	.LVL4:
  99:sd/sd.c       **** 	spi_xchg((arg >> 16) & 0xFF);
  55               		.loc 1 99 2 view .LVU7
  56 0024 80E0      		ldi r24,0
  57 0026 0E94 0000 		call spi_xchg
  58               	.LVL5:
 100:sd/sd.c       **** 	spi_xchg((arg >> 8) & 0xFF);
  59               		.loc 1 100 2 view .LVU8
  60 002a 812F      		mov r24,r17
  61 002c 0E94 0000 		call spi_xchg
  62               	.LVL6:
 101:sd/sd.c       **** 	spi_xchg((arg >> 0) & 0xFF);
  63               		.loc 1 101 2 view .LVU9
  64 0030 8D2F      		mov r24,r29
  65 0032 0E94 0000 		call spi_xchg
  66               	.LVL7:
 102:sd/sd.c       **** 	switch(cmd)
  67               		.loc 1 102 2 view .LVU10
 103:sd/sd.c       **** 	{
 104:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
 105:sd/sd.c       **** 		spi_xchg(0x95);
  68               		.loc 1 105 3 is_stmt 0 view .LVU11
  69 0036 85E9      		ldi r24,lo8(-107)
 102:sd/sd.c       **** 	switch(cmd)
  70               		.loc 1 102 2 view .LVU12
  71 0038 CC23      		tst r28
  72 003a 01F0      		breq .L13
 106:sd/sd.c       **** 		break;
 107:sd/sd.c       **** 
 108:sd/sd.c       **** 	case CMD_SEND_IF_COND:
 109:sd/sd.c       **** 		spi_xchg(0x87);
  73               		.loc 1 109 3 view .LVU13
  74 003c 87E8      		ldi r24,lo8(-121)
 102:sd/sd.c       **** 	{
  75               		.loc 1 102 2 view .LVU14
  76 003e C830      		cpi r28,lo8(8)
  77 0040 01F0      		breq .L13
 110:sd/sd.c       **** 		break;
 111:sd/sd.c       **** 
 112:sd/sd.c       **** 	default:
 113:sd/sd.c       **** 		spi_xchg(0xFF);
  78               		.loc 1 113 3 is_stmt 1 view .LVU15
  79 0042 8FEF      		ldi r24,lo8(-1)
  80               	.L13:
 109:sd/sd.c       **** 		break;
  81               		.loc 1 109 3 is_stmt 0 view .LVU16
  82 0044 0E94 0000 		call spi_xchg
  83               	.LVL8:
 110:sd/sd.c       **** 		break;
  84               		.loc 1 110 3 is_stmt 1 view .LVU17
 114:sd/sd.c       **** 		break;
 115:sd/sd.c       **** 	}
 116:sd/sd.c       **** 
 117:sd/sd.c       **** 	for(i = 0; i < 10 && ((response = spi_xchg(0xFF)) == 0xFF); ++i) ;
  85               		.loc 1 117 20 view .LVU18
  94:sd/sd.c       **** 	u8 i, response;
  86               		.loc 1 94 1 is_stmt 0 view .LVU19
  87 0048 CAE0      		ldi r28,lo8(10)
  88               	.LVL9:
  89               	.L6:
  90               		.loc 1 117 36 discriminator 3 view .LVU20
  91 004a 8FEF      		ldi r24,lo8(-1)
  92 004c 0E94 0000 		call spi_xchg
  93               	.LVL10:
  94               		.loc 1 117 20 discriminator 3 view .LVU21
  95 0050 8F3F      		cpi r24,lo8(-1)
  96 0052 01F4      		brne .L1
  97               		.loc 1 117 62 is_stmt 1 discriminator 4 view .LVU22
  98               	.LVL11:
  99               		.loc 1 117 20 discriminator 4 view .LVU23
 100 0054 C150      		subi r28,lo8(-(-1))
 101               	.LVL12:
 102               		.loc 1 117 20 is_stmt 0 discriminator 4 view .LVU24
 103 0056 C111      		cpse r28,__zero_reg__
 104 0058 00C0      		rjmp .L6
 105               	.LVL13:
 106               	.L1:
 107               	/* epilogue start */
 118:sd/sd.c       **** 	return response;
 119:sd/sd.c       **** }
 108               		.loc 1 119 1 view .LVU25
 109 005a DF91      		pop r29
 110 005c CF91      		pop r28
 111 005e 1F91      		pop r17
 112 0060 0F91      		pop r16
 113 0062 0895      		ret
 114               		.cfi_endproc
 115               	.LFE16:
 118               	_sd_error:
 119               	.LFB15:
  81:sd/sd.c       **** 	SD_DESELECT;
 120               		.loc 1 81 1 is_stmt 1 view -0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
  82:sd/sd.c       **** 	panic(PSTR("SD error"));
 126               		.loc 1 82 2 view .LVU27
 127 0064 5C9A      		sbi 0xb,4
  83:sd/sd.c       **** }
 128               		.loc 1 83 2 view .LVU28
 129               	.LBB24:
  83:sd/sd.c       **** }
 130               		.loc 1 83 8 view .LVU29
  83:sd/sd.c       **** }
 131               		.loc 1 83 8 view .LVU30
 132               	.LBE24:
  83:sd/sd.c       **** }
 133               		.loc 1 83 2 is_stmt 0 view .LVU31
 134 0066 80E0      		ldi r24,lo8(__c.19)
 135 0068 90E0      		ldi r25,hi8(__c.19)
 136 006a 9F93      		push r25
 137               		.cfi_def_cfa_offset 3
 138 006c 8F93      		push r24
 139               		.cfi_def_cfa_offset 4
 140 006e 0E94 0000 		call panic
 141               	.LVL14:
  84:sd/sd.c       **** 
 142               		.loc 1 84 1 view .LVU32
 143 0072 0F90      		pop __tmp_reg__
 144 0074 0F90      		pop __tmp_reg__
 145               		.cfi_def_cfa_offset 2
 146               	/* epilogue start */
 147 0076 0895      		ret
 148               		.cfi_endproc
 149               	.LFE15:
 152               	_sd_timeout:
 153               	.LFB14:
  72:sd/sd.c       **** 	SD_DESELECT;
 154               		.loc 1 72 1 is_stmt 1 view -0
 155               		.cfi_startproc
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
  73:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 160               		.loc 1 73 2 view .LVU34
 161 0078 5C9A      		sbi 0xb,4
  74:sd/sd.c       **** }
 162               		.loc 1 74 2 view .LVU35
 163               	.LBB25:
  74:sd/sd.c       **** }
 164               		.loc 1 74 8 view .LVU36
  74:sd/sd.c       **** }
 165               		.loc 1 74 8 view .LVU37
 166               	.LBE25:
  74:sd/sd.c       **** }
 167               		.loc 1 74 2 is_stmt 0 view .LVU38
 168 007a 80E0      		ldi r24,lo8(__c.18)
 169 007c 90E0      		ldi r25,hi8(__c.18)
 170 007e 9F93      		push r25
 171               		.cfi_def_cfa_offset 3
 172 0080 8F93      		push r24
 173               		.cfi_def_cfa_offset 4
 174 0082 0E94 0000 		call panic
 175               	.LVL15:
  75:sd/sd.c       **** 
 176               		.loc 1 75 1 view .LVU39
 177 0086 0F90      		pop __tmp_reg__
 178 0088 0F90      		pop __tmp_reg__
 179               		.cfi_def_cfa_offset 2
 180               	/* epilogue start */
 181 008a 0895      		ret
 182               		.cfi_endproc
 183               	.LFE14:
 185               	.global	sd_init
 187               	sd_init:
 188               	.LFB20:
 120:sd/sd.c       **** 
 121:sd/sd.c       **** /**
 122:sd/sd.c       ****  * @brief TODO
 123:sd/sd.c       ****  *
 124:sd/sd.c       ****  * @param cmd TODO
 125:sd/sd.c       ****  * @param arg TODO
 126:sd/sd.c       ****  * @param out TODO
 127:sd/sd.c       ****  * @return  TODO
 128:sd/sd.c       ****  */
 129:sd/sd.c       **** static Status _sd_command_try(u8 cmd, u32 arg, u8 *out)
 130:sd/sd.c       **** {
 131:sd/sd.c       **** 	u8 i, response;
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 137:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 138:sd/sd.c       **** 	switch(cmd)
 139:sd/sd.c       **** 	{
 140:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
 141:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0x95));
 142:sd/sd.c       **** 		break;
 143:sd/sd.c       **** 
 144:sd/sd.c       **** 	case CMD_SEND_IF_COND:
 145:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0x87));
 146:sd/sd.c       **** 		break;
 147:sd/sd.c       **** 
 148:sd/sd.c       **** 	default:
 149:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0xFF));
 150:sd/sd.c       **** 		break;
 151:sd/sd.c       **** 	}
 152:sd/sd.c       **** 
 153:sd/sd.c       **** 	for(i = 0; ; ++i)
 154:sd/sd.c       **** 	{
 155:sd/sd.c       **** 		RETURN_IF(spi_rx_try(&response));
 156:sd/sd.c       **** 		if(response != 0xFF)
 157:sd/sd.c       **** 		{
 158:sd/sd.c       **** 			break;
 159:sd/sd.c       **** 		}
 160:sd/sd.c       **** 
 161:sd/sd.c       **** 		if(i >= 10)
 162:sd/sd.c       **** 		{
 163:sd/sd.c       **** 			return STATUS_TIMEOUT;
 164:sd/sd.c       **** 		}
 165:sd/sd.c       **** 	}
 166:sd/sd.c       **** 
 167:sd/sd.c       **** 	*out = response;
 168:sd/sd.c       **** 	return STATUS_OK;
 169:sd/sd.c       **** }
 170:sd/sd.c       **** 
 171:sd/sd.c       **** /**
 172:sd/sd.c       ****  * @brief TODO
 173:sd/sd.c       ****  *
 174:sd/sd.c       ****  * @param block TODO
 175:sd/sd.c       ****  * @return TODO
 176:sd/sd.c       ****  */
 177:sd/sd.c       **** static u32 _sd_block_addr(u32 block)
 178:sd/sd.c       **** {
 179:sd/sd.c       **** 	return _card_type & SD_HC ? block : (block << BLOCK_SIZE_POT);
 180:sd/sd.c       **** }
 181:sd/sd.c       **** 
 182:sd/sd.c       **** /**
 183:sd/sd.c       ****  * @brief TODO
 184:sd/sd.c       ****  */
 185:sd/sd.c       **** static void _sd_info_print(void)
 186:sd/sd.c       **** {
 187:sd/sd.c       **** 	log_boot_P(PSTR("Card Type          : %S"),
 188:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 189:sd/sd.c       **** 
 190:sd/sd.c       **** 	log_boot_P(PSTR("Block Size         : %d"),
 191:sd/sd.c       **** 		BLOCK_SIZE);
 192:sd/sd.c       **** 
 193:sd/sd.c       **** 	log_boot_P(PSTR("Manufacturer ID    : %02X"),
 194:sd/sd.c       **** 		_manufacturer);
 195:sd/sd.c       **** 
 196:sd/sd.c       **** 	log_boot_P(PSTR("OEM                : %s"),
 197:sd/sd.c       **** 		_oem);
 198:sd/sd.c       **** 
 199:sd/sd.c       **** 	log_boot_P(PSTR("Product Name       : %s"),
 200:sd/sd.c       **** 		_product);
 201:sd/sd.c       **** 
 202:sd/sd.c       **** 	log_boot_P(PSTR("Revision           : %c.%c"),
 203:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 204:sd/sd.c       **** 
 205:sd/sd.c       **** 	log_boot_P(PSTR("Serial Number      : 0x%08lX"),
 206:sd/sd.c       **** 		_serial);
 207:sd/sd.c       **** 
 208:sd/sd.c       **** 	log_boot_P(PSTR("Manufacture Date   : %02d-%d"),
 209:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 210:sd/sd.c       **** 
 211:sd/sd.c       **** 	log_boot_P(PSTR("Capacity           : %ld blocks (%ld bytes)"),
 212:sd/sd.c       **** 		_capacity, _capacity * BLOCK_SIZE);
 213:sd/sd.c       **** 
 214:sd/sd.c       **** 	log_boot_P(PSTR("Format             : 0x%02X"),
 215:sd/sd.c       **** 		_format);
 216:sd/sd.c       **** 
 217:sd/sd.c       **** 	log_boot_P(PSTR("Flags              : %S%S"),
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 219:sd/sd.c       **** 		_flag_write_protect_temp ? PSTR("Temporarily Write Protected") :
 220:sd/sd.c       **** 			(_flag_write_protect ? PSTR("Write Protected") :
 221:sd/sd.c       **** 			PSTR("Rewritable")));
 222:sd/sd.c       **** }
 223:sd/sd.c       **** 
 224:sd/sd.c       **** /* --- PUBLIC --- */
 225:sd/sd.c       **** void sd_init(void)
 226:sd/sd.c       **** {
 189               		.loc 1 226 1 is_stmt 1 view -0
 190               		.cfi_startproc
 191 008c AF92      		push r10
 192               		.cfi_def_cfa_offset 3
 193               		.cfi_offset 10, -2
 194 008e BF92      		push r11
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 11, -3
 197 0090 CF92      		push r12
 198               		.cfi_def_cfa_offset 5
 199               		.cfi_offset 12, -4
 200 0092 DF92      		push r13
 201               		.cfi_def_cfa_offset 6
 202               		.cfi_offset 13, -5
 203 0094 EF92      		push r14
 204               		.cfi_def_cfa_offset 7
 205               		.cfi_offset 14, -6
 206 0096 FF92      		push r15
 207               		.cfi_def_cfa_offset 8
 208               		.cfi_offset 15, -7
 209 0098 0F93      		push r16
 210               		.cfi_def_cfa_offset 9
 211               		.cfi_offset 16, -8
 212 009a 1F93      		push r17
 213               		.cfi_def_cfa_offset 10
 214               		.cfi_offset 17, -9
 215 009c CF93      		push r28
 216               		.cfi_def_cfa_offset 11
 217               		.cfi_offset 28, -10
 218 009e DF93      		push r29
 219               		.cfi_def_cfa_offset 12
 220               		.cfi_offset 29, -11
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 10 */
 224               	.L__stack_usage = 10
 227:sd/sd.c       **** 	log_boot_P(PSTR("SD driver starting"));
 225               		.loc 1 227 2 view .LVU41
 226               	.LBB57:
 227               		.loc 1 227 13 view .LVU42
 228               		.loc 1 227 13 view .LVU43
 229               	.LBE57:
 230               		.loc 1 227 2 is_stmt 0 view .LVU44
 231 00a0 80E0      		ldi r24,lo8(__c.22)
 232 00a2 90E0      		ldi r25,hi8(__c.22)
 233 00a4 9F93      		push r25
 234               		.cfi_def_cfa_offset 13
 235 00a6 8F93      		push r24
 236               		.cfi_def_cfa_offset 14
 237 00a8 0E94 0000 		call log_boot_P
 238               	.LVL16:
 239               	.LBB58:
 228:sd/sd.c       **** 
 229:sd/sd.c       **** 	{
 230:sd/sd.c       **** 		u8 response;
 240               		.loc 1 230 3 is_stmt 1 view .LVU45
 231:sd/sd.c       **** 		u16 i;
 241               		.loc 1 231 3 view .LVU46
 232:sd/sd.c       **** 		u32 arg;
 242               		.loc 1 232 3 view .LVU47
 233:sd/sd.c       **** 
 234:sd/sd.c       **** 		SD_DESELECT;
 243               		.loc 1 234 3 view .LVU48
 244 00ac 5C9A      		sbi 0xb,4
 235:sd/sd.c       **** 		_spi_configure_slow();
 245               		.loc 1 235 3 view .LVU49
 246               	.LBB59:
 247               	.LBI59:
  62:sd/sd.c       **** {
 248               		.loc 1 62 13 view .LVU50
 249               	.LBB60:
  64:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 250               		.loc 1 64 2 view .LVU51
 251 00ae 8CB5      		in r24,0x2c
  64:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 252               		.loc 1 64 7 is_stmt 0 view .LVU52
 253 00b0 8360      		ori r24,lo8(3)
 254 00b2 8CBD      		out 0x2c,r24
  65:sd/sd.c       **** }
 255               		.loc 1 65 2 is_stmt 1 view .LVU53
  65:sd/sd.c       **** }
 256               		.loc 1 65 7 is_stmt 0 view .LVU54
 257 00b4 8DB5      		in r24,0x2d
 258 00b6 8E7F      		andi r24,lo8(-2)
 259 00b8 8DBD      		out 0x2d,r24
 260               	.LBE60:
 261               	.LBE59:
 236:sd/sd.c       **** 		_card_type = 0;
 262               		.loc 1 236 3 is_stmt 1 view .LVU55
 263               		.loc 1 236 14 is_stmt 0 view .LVU56
 264 00ba 1092 0000 		sts _card_type,__zero_reg__
 237:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 265               		.loc 1 237 3 is_stmt 1 view .LVU57
 266               	.LVL17:
 267               		.loc 1 237 16 view .LVU58
 236:sd/sd.c       **** 		_card_type = 0;
 268               		.loc 1 236 14 is_stmt 0 view .LVU59
 269 00be 0F90      		pop __tmp_reg__
 270 00c0 0F90      		pop __tmp_reg__
 271               		.cfi_def_cfa_offset 12
 272 00c2 0AE0      		ldi r16,lo8(10)
 273 00c4 10E0      		ldi r17,0
 274               	.LVL18:
 275               	.L17:
 238:sd/sd.c       **** 		{
 239:sd/sd.c       **** 			spi_xchg(0xFF);
 276               		.loc 1 239 4 is_stmt 1 discriminator 3 view .LVU60
 277 00c6 8FEF      		ldi r24,lo8(-1)
 278 00c8 0E94 0000 		call spi_xchg
 279               	.LVL19:
 237:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 280               		.loc 1 237 22 discriminator 3 view .LVU61
 237:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 281               		.loc 1 237 16 discriminator 3 view .LVU62
 282 00cc 0150      		subi r16,1
 283 00ce 1109      		sbc r17,__zero_reg__
 284               	.LVL20:
 237:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 285               		.loc 1 237 16 is_stmt 0 discriminator 3 view .LVU63
 286 00d0 0115      		cp r16,__zero_reg__
 287 00d2 1105      		cpc r17,__zero_reg__
 288 00d4 01F4      		brne .L17
 240:sd/sd.c       **** 		}
 241:sd/sd.c       **** 
 242:sd/sd.c       **** 		SD_SELECT;
 289               		.loc 1 242 3 is_stmt 1 view .LVU64
 290 00d6 5C98      		cbi 0xb,4
 243:sd/sd.c       **** 		for(i = 0; ; ++i)
 291               		.loc 1 243 3 view .LVU65
 292               	.LVL21:
 293               		.loc 1 243 9 is_stmt 0 view .LVU66
 294 00d8 C0E0      		ldi r28,0
 295 00da D0E0      		ldi r29,0
 296               	.LVL22:
 297               	.L20:
 244:sd/sd.c       **** 		{
 245:sd/sd.c       **** 			if(_sd_command(CMD_GO_IDLE_STATE, 0) == IDLE_STATE)
 298               		.loc 1 245 4 is_stmt 1 view .LVU67
 299               		.loc 1 245 7 is_stmt 0 view .LVU68
 300 00dc 40E0      		ldi r20,0
 301 00de 50E0      		ldi r21,0
 302 00e0 BA01      		movw r22,r20
 303 00e2 80E0      		ldi r24,0
 304 00e4 0E94 0000 		call _sd_command
 305               	.LVL23:
 306               		.loc 1 245 6 view .LVU69
 307 00e8 8130      		cpi r24,lo8(1)
 308 00ea 01F0      		breq .L18
 246:sd/sd.c       **** 			{
 247:sd/sd.c       **** 				break;
 248:sd/sd.c       **** 			}
 249:sd/sd.c       **** 
 250:sd/sd.c       **** 			if(i == 0x1FF)
 309               		.loc 1 250 4 is_stmt 1 view .LVU70
 310               		.loc 1 250 6 is_stmt 0 view .LVU71
 311 00ec CF3F      		cpi r28,-1
 312 00ee 21E0      		ldi r18,1
 313 00f0 D207      		cpc r29,r18
 314 00f2 01F4      		brne .L19
 251:sd/sd.c       **** 			{
 252:sd/sd.c       **** 				_sd_timeout();
 315               		.loc 1 252 5 is_stmt 1 view .LVU72
 316 00f4 0E94 0000 		call _sd_timeout
 317               	.LVL24:
 318               	.L19:
 243:sd/sd.c       **** 		{
 319               		.loc 1 243 16 view .LVU73
 320 00f8 2196      		adiw r28,1
 321               	.LVL25:
 243:sd/sd.c       **** 		{
 322               		.loc 1 243 3 view .LVU74
 245:sd/sd.c       **** 			{
 323               		.loc 1 245 6 is_stmt 0 view .LVU75
 324 00fa 00C0      		rjmp .L20
 325               	.L18:
 253:sd/sd.c       **** 			}
 254:sd/sd.c       **** 		}
 255:sd/sd.c       **** 
 256:sd/sd.c       **** 		if((_sd_command(CMD_SEND_IF_COND, 0x1AA) & ILLEGAL_CMD) == 0)
 326               		.loc 1 256 3 is_stmt 1 view .LVU76
 327               		.loc 1 256 7 is_stmt 0 view .LVU77
 328 00fc 4AEA      		ldi r20,lo8(-86)
 329 00fe 51E0      		ldi r21,lo8(1)
 330 0100 60E0      		ldi r22,0
 331 0102 70E0      		ldi r23,0
 332 0104 88E0      		ldi r24,lo8(8)
 333 0106 0E94 0000 		call _sd_command
 334               	.LVL26:
 335               		.loc 1 256 5 view .LVU78
 336 010a 82FD      		sbrc r24,2
 337 010c 00C0      		rjmp .L21
 257:sd/sd.c       **** 		{
 258:sd/sd.c       **** 			spi_xchg(0xFF);
 338               		.loc 1 258 4 is_stmt 1 view .LVU79
 339 010e 8FEF      		ldi r24,lo8(-1)
 340 0110 0E94 0000 		call spi_xchg
 341               	.LVL27:
 259:sd/sd.c       **** 			spi_xchg(0xFF);
 342               		.loc 1 259 4 view .LVU80
 343 0114 8FEF      		ldi r24,lo8(-1)
 344 0116 0E94 0000 		call spi_xchg
 345               	.LVL28:
 260:sd/sd.c       **** 			if(((spi_xchg(0xFF) & 0x01) == 0) ||
 346               		.loc 1 260 4 view .LVU81
 347               		.loc 1 260 9 is_stmt 0 view .LVU82
 348 011a 8FEF      		ldi r24,lo8(-1)
 349 011c 0E94 0000 		call spi_xchg
 350               	.LVL29:
 351               		.loc 1 260 6 view .LVU83
 352 0120 80FD      		sbrc r24,0
 353 0122 00C0      		rjmp .L22
 354               	.L24:
 261:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 262:sd/sd.c       **** 			{
 263:sd/sd.c       **** 				_sd_error();
 355               		.loc 1 263 5 is_stmt 1 view .LVU84
 356 0124 0E94 0000 		call _sd_error
 357               	.LVL30:
 358               	.L23:
 264:sd/sd.c       **** 			}
 265:sd/sd.c       **** 
 266:sd/sd.c       **** 			_card_type |= SD_2;
 359               		.loc 1 266 4 view .LVU85
 360               		.loc 1 266 15 is_stmt 0 view .LVU86
 361 0128 8091 0000 		lds r24,_card_type
 362 012c 8260      		ori r24,lo8(2)
 363               	.L106:
 267:sd/sd.c       **** 		}
 268:sd/sd.c       **** 		else
 269:sd/sd.c       **** 		{
 270:sd/sd.c       **** 			_sd_command(CMD_APP, 0);
 271:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 272:sd/sd.c       **** 			{
 273:sd/sd.c       **** 				_card_type |= SD_1;
 364               		.loc 1 273 16 view .LVU87
 365 012e 8093 0000 		sts _card_type,r24
 366               	.LVL31:
 367               	.L30:
 274:sd/sd.c       **** 			}
 275:sd/sd.c       **** 		}
 276:sd/sd.c       **** 
 277:sd/sd.c       **** 		for(i = 0; ; ++i)
 278:sd/sd.c       **** 		{
 279:sd/sd.c       **** 			if(_card_type & (SD_1 | SD_2))
 368               		.loc 1 279 4 is_stmt 1 view .LVU88
 369               		.loc 1 279 18 is_stmt 0 view .LVU89
 370 0132 C091 0000 		lds r28,_card_type
 371               		.loc 1 279 6 view .LVU90
 372 0136 8C2F      		mov r24,r28
 373 0138 8370      		andi r24,lo8(3)
 280:sd/sd.c       **** 			{
 281:sd/sd.c       **** 				arg = 0;
 282:sd/sd.c       **** 				if(_card_type & SD_2)
 283:sd/sd.c       **** 				{
 284:sd/sd.c       **** 					arg = 0x40000000;
 285:sd/sd.c       **** 				}
 286:sd/sd.c       **** 
 287:sd/sd.c       **** 				_sd_command(CMD_APP, 0);
 374               		.loc 1 287 5 view .LVU91
 375 013a 40E0      		ldi r20,0
 376 013c 50E0      		ldi r21,0
 377 013e BA01      		movw r22,r20
 279:sd/sd.c       **** 			{
 378               		.loc 1 279 6 view .LVU92
 379 0140 8823      		tst r24
 380 0142 01F0      		breq .L26
 281:sd/sd.c       **** 				if(_card_type & SD_2)
 381               		.loc 1 281 5 is_stmt 1 view .LVU93
 382               	.LVL32:
 282:sd/sd.c       **** 				{
 383               		.loc 1 282 5 view .LVU94
 384               		.loc 1 287 5 view .LVU95
 385 0144 87E3      		ldi r24,lo8(55)
 386 0146 0E94 0000 		call _sd_command
 387               	.LVL33:
 288:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 388               		.loc 1 288 5 view .LVU96
 282:sd/sd.c       **** 				{
 389               		.loc 1 282 7 is_stmt 0 view .LVU97
 390 014a C695      		lsr r28
 391 014c C170      		andi r28,1
 392               	.LVL34:
 282:sd/sd.c       **** 				{
 393               		.loc 1 282 7 view .LVU98
 394 014e 4C2F      		mov r20,r28
 395 0150 50E0      		ldi r21,0
 396 0152 60E0      		ldi r22,0
 397 0154 70E0      		ldi r23,0
 398 0156 BEE1      		ldi r27,30
 399               		1:
 400 0158 440F      		lsl r20
 401 015a 551F      		rol r21
 402 015c 661F      		rol r22
 403 015e 771F      		rol r23
 404 0160 BA95      		dec r27
 405 0162 01F4      		brne 1b
 406               		.loc 1 288 16 view .LVU99
 407 0164 89E2      		ldi r24,lo8(41)
 408               	.LVL35:
 409               	.L107:
 289:sd/sd.c       **** 			}
 290:sd/sd.c       **** 			else
 291:sd/sd.c       **** 			{
 292:sd/sd.c       **** 				response = _sd_command(CMD_SEND_OP_COND, 0);
 410               		.loc 1 292 16 view .LVU100
 411 0166 0E94 0000 		call _sd_command
 412               	.LVL36:
 293:sd/sd.c       **** 			}
 294:sd/sd.c       **** 
 295:sd/sd.c       **** 			if((response & IDLE_STATE) == 0)
 413               		.loc 1 295 4 is_stmt 1 view .LVU101
 414 016a C82F      		mov r28,r24
 415 016c C170      		andi r28,lo8(1)
 416               		.loc 1 295 6 is_stmt 0 view .LVU102
 417 016e CC23      		tst r28
 418 0170 01F0      		breq .L28
 296:sd/sd.c       **** 			{
 297:sd/sd.c       **** 				break;
 298:sd/sd.c       **** 			}
 299:sd/sd.c       **** 
 300:sd/sd.c       **** 			if(i == 0x7FFF)
 419               		.loc 1 300 4 is_stmt 1 view .LVU103
 420               		.loc 1 300 6 is_stmt 0 view .LVU104
 421 0172 0F3F      		cpi r16,-1
 422 0174 3FE7      		ldi r19,127
 423 0176 1307      		cpc r17,r19
 424 0178 01F4      		brne .L29
 301:sd/sd.c       **** 			{
 302:sd/sd.c       **** 				_sd_timeout();
 425               		.loc 1 302 5 is_stmt 1 view .LVU105
 426 017a 0E94 0000 		call _sd_timeout
 427               	.LVL37:
 428               	.L29:
 277:sd/sd.c       **** 		{
 429               		.loc 1 277 16 view .LVU106
 430 017e 0F5F      		subi r16,-1
 431 0180 1F4F      		sbci r17,-1
 432               	.LVL38:
 277:sd/sd.c       **** 		{
 433               		.loc 1 277 3 view .LVU107
 279:sd/sd.c       **** 			{
 434               		.loc 1 279 6 is_stmt 0 view .LVU108
 435 0182 00C0      		rjmp .L30
 436               	.LVL39:
 437               	.L22:
 261:sd/sd.c       **** 			{
 438               		.loc 1 261 6 discriminator 1 view .LVU109
 439 0184 8FEF      		ldi r24,lo8(-1)
 440 0186 0E94 0000 		call spi_xchg
 441               	.LVL40:
 260:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 442               		.loc 1 260 38 discriminator 1 view .LVU110
 443 018a 8A3A      		cpi r24,lo8(-86)
 444 018c 01F4      		brne .L24
 445 018e 00C0      		rjmp .L23
 446               	.L21:
 270:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 447               		.loc 1 270 4 is_stmt 1 view .LVU111
 448 0190 40E0      		ldi r20,0
 449 0192 50E0      		ldi r21,0
 450 0194 BA01      		movw r22,r20
 451 0196 87E3      		ldi r24,lo8(55)
 452 0198 0E94 0000 		call _sd_command
 453               	.LVL41:
 271:sd/sd.c       **** 			{
 454               		.loc 1 271 4 view .LVU112
 271:sd/sd.c       **** 			{
 455               		.loc 1 271 8 is_stmt 0 view .LVU113
 456 019c 40E0      		ldi r20,0
 457 019e 50E0      		ldi r21,0
 458 01a0 BA01      		movw r22,r20
 459 01a2 89E2      		ldi r24,lo8(41)
 460 01a4 0E94 0000 		call _sd_command
 461               	.LVL42:
 271:sd/sd.c       **** 			{
 462               		.loc 1 271 6 view .LVU114
 463 01a8 82FD      		sbrc r24,2
 464 01aa 00C0      		rjmp .L30
 273:sd/sd.c       **** 			}
 465               		.loc 1 273 5 is_stmt 1 view .LVU115
 273:sd/sd.c       **** 			}
 466               		.loc 1 273 16 is_stmt 0 view .LVU116
 467 01ac 8091 0000 		lds r24,_card_type
 468 01b0 8160      		ori r24,lo8(1)
 469 01b2 00C0      		rjmp .L106
 470               	.LVL43:
 471               	.L26:
 292:sd/sd.c       **** 			}
 472               		.loc 1 292 5 is_stmt 1 view .LVU117
 292:sd/sd.c       **** 			}
 473               		.loc 1 292 16 is_stmt 0 view .LVU118
 474 01b4 81E0      		ldi r24,lo8(1)
 475 01b6 00C0      		rjmp .L107
 476               	.LVL44:
 477               	.L28:
 303:sd/sd.c       **** 			}
 304:sd/sd.c       **** 		}
 305:sd/sd.c       **** 
 306:sd/sd.c       **** 		if(_card_type & SD_2)
 478               		.loc 1 306 3 is_stmt 1 view .LVU119
 479               		.loc 1 306 5 is_stmt 0 view .LVU120
 480 01b8 8091 0000 		lds r24,_card_type
 481               	.LVL45:
 482               		.loc 1 306 5 view .LVU121
 483 01bc 81FF      		sbrs r24,1
 484 01be 00C0      		rjmp .L31
 307:sd/sd.c       **** 		{
 308:sd/sd.c       **** 			if(_sd_command(CMD_READ_OCR, 0))
 485               		.loc 1 308 4 is_stmt 1 view .LVU122
 486               		.loc 1 308 7 is_stmt 0 view .LVU123
 487 01c0 40E0      		ldi r20,0
 488 01c2 50E0      		ldi r21,0
 489 01c4 BA01      		movw r22,r20
 490 01c6 8AE3      		ldi r24,lo8(58)
 491 01c8 0E94 0000 		call _sd_command
 492               	.LVL46:
 493               		.loc 1 308 6 view .LVU124
 494 01cc 8111      		cpse r24,__zero_reg__
 309:sd/sd.c       **** 			{
 310:sd/sd.c       **** 				_sd_error();
 495               		.loc 1 310 5 is_stmt 1 view .LVU125
 496 01ce 0E94 0000 		call _sd_error
 497               	.LVL47:
 498               	.L32:
 311:sd/sd.c       **** 			}
 312:sd/sd.c       **** 
 313:sd/sd.c       **** 			if(spi_xchg(0xFF) & 0x40)
 499               		.loc 1 313 4 view .LVU126
 500               		.loc 1 313 7 is_stmt 0 view .LVU127
 501 01d2 8FEF      		ldi r24,lo8(-1)
 502 01d4 0E94 0000 		call spi_xchg
 503               	.LVL48:
 504               		.loc 1 313 6 view .LVU128
 505 01d8 86FF      		sbrs r24,6
 506 01da 00C0      		rjmp .L33
 314:sd/sd.c       **** 			{
 315:sd/sd.c       **** 				_card_type |= SD_HC;
 507               		.loc 1 315 5 is_stmt 1 view .LVU129
 508               		.loc 1 315 16 is_stmt 0 view .LVU130
 509 01dc 8091 0000 		lds r24,_card_type
 510 01e0 8460      		ori r24,lo8(4)
 511 01e2 8093 0000 		sts _card_type,r24
 512               	.L33:
 316:sd/sd.c       **** 			}
 317:sd/sd.c       **** 
 318:sd/sd.c       **** 			spi_xchg(0xFF);
 513               		.loc 1 318 4 is_stmt 1 view .LVU131
 514 01e6 8FEF      		ldi r24,lo8(-1)
 515 01e8 0E94 0000 		call spi_xchg
 516               	.LVL49:
 319:sd/sd.c       **** 			spi_xchg(0xFF);
 517               		.loc 1 319 4 view .LVU132
 518 01ec 8FEF      		ldi r24,lo8(-1)
 519 01ee 0E94 0000 		call spi_xchg
 520               	.LVL50:
 320:sd/sd.c       **** 			spi_xchg(0xFF);
 521               		.loc 1 320 4 view .LVU133
 522 01f2 8FEF      		ldi r24,lo8(-1)
 523 01f4 0E94 0000 		call spi_xchg
 524               	.LVL51:
 525               	.L31:
 321:sd/sd.c       **** 		}
 322:sd/sd.c       **** 
 323:sd/sd.c       **** 		if(_sd_command(CMD_SET_BLOCKLEN, 512))
 526               		.loc 1 323 3 view .LVU134
 527               		.loc 1 323 6 is_stmt 0 view .LVU135
 528 01f8 40E0      		ldi r20,0
 529 01fa 52E0      		ldi r21,lo8(2)
 530 01fc 60E0      		ldi r22,0
 531 01fe 70E0      		ldi r23,0
 532 0200 80E1      		ldi r24,lo8(16)
 533 0202 0E94 0000 		call _sd_command
 534               	.LVL52:
 535               		.loc 1 323 5 view .LVU136
 536 0206 8111      		cpse r24,__zero_reg__
 324:sd/sd.c       **** 		{
 325:sd/sd.c       **** 			_sd_error();
 537               		.loc 1 325 4 is_stmt 1 view .LVU137
 538 0208 0E94 0000 		call _sd_error
 539               	.LVL53:
 540               	.L34:
 326:sd/sd.c       **** 		}
 327:sd/sd.c       **** 
 328:sd/sd.c       **** 		SD_DESELECT;
 541               		.loc 1 328 3 view .LVU138
 542 020c 5C9A      		sbi 0xb,4
 329:sd/sd.c       **** 		spi_fast();
 543               		.loc 1 329 3 view .LVU139
 544 020e 0E94 0000 		call spi_fast
 545               	.LVL54:
 330:sd/sd.c       **** 		_delay_ms(20);
 546               		.loc 1 330 3 view .LVU140
 547               	.LBB61:
 548               	.LBI61:
 549               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 550               		.loc 2 166 1 view .LVU141
 551               	.LBB62:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 552               		.loc 2 168 2 view .LVU142
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 553               		.loc 2 190 2 view .LVU143
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 554               		.loc 2 191 2 view .LVU144
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 555               		.loc 2 192 2 view .LVU145
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 556               		.loc 2 194 7 view .LVU146
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 557               		.loc 2 198 9 view .LVU147
 558               	.LBE62:
 559               	.LBE61:
 329:sd/sd.c       **** 		_delay_ms(20);
 560               		.loc 1 329 3 is_stmt 0 view .LVU148
 561 0212 08EC      		ldi r16,lo8(-56)
 562 0214 10E0      		ldi r17,0
 563               	.LVL55:
 564               	.LBB68:
 565               	.LBB67:
 566               	.LBB63:
 567               	.LBB64:
 568               		.file 3 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 569               		.loc 3 105 2 view .LVU149
 570 0216 20E9      		ldi r18,lo8(-112)
 571 0218 31E0      		ldi r19,lo8(1)
 572               	.LVL56:
 573               	.L35:
 574               		.loc 3 105 2 view .LVU150
 575               	.LBE64:
 576               	.LBE63:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 577               		.loc 2 201 4 is_stmt 1 view .LVU151
 578               	.LBB66:
 579               	.LBI63:
 103:/usr/avr/include/util/delay_basic.h **** {
 580               		.loc 3 103 1 view .LVU152
 581               	.LBB65:
 582               		.loc 3 105 2 view .LVU153
 583 021a C901      		movw r24,r18
 584               	/* #APP */
 585               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 586 021c 0197      		1: sbiw r24,1
 587 021e 01F4      		brne 1b
 588               	 ;  0 "" 2
 589               	.LVL57:
 590               		.loc 3 105 2 is_stmt 0 view .LVU154
 591               	/* #NOAPP */
 592               	.LBE65:
 593               	.LBE66:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 594               		.loc 2 202 4 is_stmt 1 view .LVU155
 198:/usr/avr/include/util/delay.h **** 		{
 595               		.loc 2 198 9 view .LVU156
 596 0220 0150      		subi r16,1
 597 0222 1109      		sbc r17,__zero_reg__
 598               	.LVL58:
 198:/usr/avr/include/util/delay.h **** 		{
 599               		.loc 2 198 9 is_stmt 0 view .LVU157
 600 0224 0115      		cp r16,__zero_reg__
 601 0226 1105      		cpc r17,__zero_reg__
 602 0228 01F4      		brne .L35
 603               	.LVL59:
 198:/usr/avr/include/util/delay.h **** 		{
 604               		.loc 2 198 9 view .LVU158
 605               	.LBE67:
 606               	.LBE68:
 607               	.LBE58:
 331:sd/sd.c       **** 	}
 332:sd/sd.c       **** 
 333:sd/sd.c       **** 	log_boot_P(PSTR("SD card initialized"));
 608               		.loc 1 333 2 is_stmt 1 view .LVU159
 609               	.LBB69:
 610               		.loc 1 333 13 view .LVU160
 611               		.loc 1 333 13 view .LVU161
 612               	.LBE69:
 613               		.loc 1 333 2 is_stmt 0 view .LVU162
 614 022a 80E0      		ldi r24,lo8(__c.21)
 615 022c 90E0      		ldi r25,hi8(__c.21)
 616 022e 9F93      		push r25
 617               		.cfi_def_cfa_offset 13
 618 0230 8F93      		push r24
 619               		.cfi_def_cfa_offset 14
 620 0232 0E94 0000 		call log_boot_P
 621               	.LVL60:
 334:sd/sd.c       **** 	log_boot_P(PSTR("Reading SD card parameters"));
 622               		.loc 1 334 2 is_stmt 1 view .LVU163
 623               	.LBB70:
 624               		.loc 1 334 13 view .LVU164
 625               		.loc 1 334 13 view .LVU165
 626               	.LBE70:
 627               		.loc 1 334 2 is_stmt 0 view .LVU166
 628 0236 80E0      		ldi r24,lo8(__c.20)
 629 0238 90E0      		ldi r25,hi8(__c.20)
 630 023a 9F93      		push r25
 631               		.cfi_def_cfa_offset 15
 632 023c 8F93      		push r24
 633               		.cfi_def_cfa_offset 16
 634 023e 0E94 0000 		call log_boot_P
 635               	.LVL61:
 636               	.LBB71:
 335:sd/sd.c       **** 
 336:sd/sd.c       **** 	{
 337:sd/sd.c       **** 		u8 i, b, csd_read_bl_len, csd_c_size_mult, csd_structure;
 637               		.loc 1 337 3 is_stmt 1 view .LVU167
 338:sd/sd.c       **** 		u16 j, csd_c_size;
 638               		.loc 1 338 3 view .LVU168
 339:sd/sd.c       **** 
 340:sd/sd.c       **** 		spi_fast();
 639               		.loc 1 340 3 view .LVU169
 640 0242 0E94 0000 		call spi_fast
 641               	.LVL62:
 341:sd/sd.c       **** 		SD_SELECT;
 642               		.loc 1 341 3 view .LVU170
 643 0246 5C98      		cbi 0xb,4
 342:sd/sd.c       **** 
 343:sd/sd.c       **** 		/* Read CID register */
 344:sd/sd.c       **** 		_sd_command(CMD_SEND_CID, 0);
 644               		.loc 1 344 3 view .LVU171
 645 0248 40E0      		ldi r20,0
 646 024a 50E0      		ldi r21,0
 647 024c BA01      		movw r22,r20
 648 024e 8AE0      		ldi r24,lo8(10)
 649 0250 0E94 0000 		call _sd_command
 650               	.LVL63:
 345:sd/sd.c       **** 		j = 0;
 651               		.loc 1 345 3 view .LVU172
 346:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 652               		.loc 1 346 3 view .LVU173
 653               		.loc 1 346 8 is_stmt 0 view .LVU174
 654 0254 0F90      		pop __tmp_reg__
 655 0256 0F90      		pop __tmp_reg__
 656 0258 0F90      		pop __tmp_reg__
 657 025a 0F90      		pop __tmp_reg__
 658               		.cfi_def_cfa_offset 12
 345:sd/sd.c       **** 		j = 0;
 659               		.loc 1 345 5 view .LVU175
 660 025c E12C      		mov r14,__zero_reg__
 661 025e F12C      		mov r15,__zero_reg__
 662               	.LVL64:
 663               	.L36:
 664               		.loc 1 346 24 is_stmt 1 view .LVU176
 665               		.loc 1 346 9 is_stmt 0 view .LVU177
 666 0260 8FEF      		ldi r24,lo8(-1)
 667 0262 0E94 0000 		call spi_xchg
 668               	.LVL65:
 669               		.loc 1 346 24 view .LVU178
 670 0266 8E3F      		cpi r24,lo8(-2)
 671 0268 01F4      		brne .L38
 672 026a E0E0      		ldi r30,lo8(_oem-1)
 673 026c AE2E      		mov r10,r30
 674 026e E0E0      		ldi r30,hi8(_oem-1)
 675 0270 BE2E      		mov r11,r30
 676 0272 F0E0      		ldi r31,lo8(_product-3)
 677 0274 CF2E      		mov r12,r31
 678 0276 F0E0      		ldi r31,hi8(_product-3)
 679 0278 DF2E      		mov r13,r31
 347:sd/sd.c       **** 		{
 348:sd/sd.c       **** 			if(++j > 0x7FFF)
 349:sd/sd.c       **** 			{
 350:sd/sd.c       **** 				_sd_timeout();
 351:sd/sd.c       **** 			}
 352:sd/sd.c       **** 		}
 353:sd/sd.c       **** 
 354:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 680               		.loc 1 354 9 view .LVU179
 681 027a D0E0      		ldi r29,0
 346:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 682               		.loc 1 346 24 view .LVU180
 683 027c A0E6      		ldi r26,lo8(96)
 684 027e EA2E      		mov r14,r26
 685 0280 F12C      		mov r15,__zero_reg__
 686               	.LVL66:
 687               	.L50:
 355:sd/sd.c       **** 		{
 356:sd/sd.c       **** 			b = spi_xchg(0xFF);
 688               		.loc 1 356 4 is_stmt 1 view .LVU181
 689               		.loc 1 356 8 is_stmt 0 view .LVU182
 690 0282 8FEF      		ldi r24,lo8(-1)
 691 0284 0E94 0000 		call spi_xchg
 692               	.LVL67:
 357:sd/sd.c       **** 			switch(i)
 693               		.loc 1 357 4 is_stmt 1 view .LVU183
 694 0288 DF30      		cpi r29,lo8(15)
 695 028a 00F0      		brlo .+2
 696 028c 00C0      		rjmp .L39
 697 028e ED2F      		mov r30,r29
 698 0290 F0E0      		ldi r31,0
 699 0292 E050      		subi r30,lo8(-(gs(.L41)))
 700 0294 F040      		sbci r31,hi8(-(gs(.L41)))
 701 0296 B501      		movw r22,r10
 702 0298 6F5F      		subi r22,-1
 703 029a 7F4F      		sbci r23,-1
 704 029c A601      		movw r20,r12
 705 029e 4F5F      		subi r20,-1
 706 02a0 5F4F      		sbci r21,-1
 707 02a2 9701      		movw r18,r14
 708 02a4 2850      		subi r18,8
 709 02a6 3109      		sbc r19,__zero_reg__
 710 02a8 0C94 0000 		jmp __tablejump2__
 711               		.section	.jumptables.gcc.sd_init,"a",@progbits
 712               		.p2align	1
 713               	.L41:
 714 0000 0000      		.word gs(.L47)
 715 0002 0000      		.word gs(.L77)
 716 0004 0000      		.word gs(.L77)
 717 0006 0000      		.word gs(.L45)
 718 0008 0000      		.word gs(.L45)
 719 000a 0000      		.word gs(.L45)
 720 000c 0000      		.word gs(.L45)
 721 000e 0000      		.word gs(.L45)
 722 0010 0000      		.word gs(.L44)
 723 0012 0000      		.word gs(.L43)
 724 0014 0000      		.word gs(.L43)
 725 0016 0000      		.word gs(.L43)
 726 0018 0000      		.word gs(.L43)
 727 001a 0000      		.word gs(.L42)
 728 001c 0000      		.word gs(.L40)
 729               		.text
 730               	.LVL68:
 731               	.L38:
 348:sd/sd.c       **** 			{
 732               		.loc 1 348 4 view .LVU184
 348:sd/sd.c       **** 			{
 733               		.loc 1 348 6 is_stmt 0 view .LVU185
 734 02ac 4FEF      		ldi r20,-1
 735 02ae E41A      		sub r14,r20
 736 02b0 F40A      		sbc r15,r20
 737               	.LVL69:
 348:sd/sd.c       **** 			{
 738               		.loc 1 348 6 view .LVU186
 739 02b2 F7FE      		sbrs r15,7
 740 02b4 00C0      		rjmp .L36
 350:sd/sd.c       **** 			}
 741               		.loc 1 350 5 is_stmt 1 view .LVU187
 742 02b6 0E94 0000 		call _sd_timeout
 743               	.LVL70:
 744 02ba 00C0      		rjmp .L36
 745               	.LVL71:
 746               	.L47:
 358:sd/sd.c       **** 			{
 359:sd/sd.c       **** 				case 0:
 360:sd/sd.c       **** 					_manufacturer = b;
 747               		.loc 1 360 6 view .LVU188
 748               		.loc 1 360 20 is_stmt 0 view .LVU189
 749 02bc 8093 0000 		sts _manufacturer,r24
 361:sd/sd.c       **** 					break;
 750               		.loc 1 361 6 is_stmt 1 view .LVU190
 354:sd/sd.c       **** 		{
 751               		.loc 1 354 22 view .LVU191
 752               	.LVL72:
 354:sd/sd.c       **** 		{
 753               		.loc 1 354 16 view .LVU192
 754 02c0 5B01      		movw r10,r22
 755 02c2 6A01      		movw r12,r20
 756 02c4 7901      		movw r14,r18
 356:sd/sd.c       **** 			switch(i)
 757               		.loc 1 356 4 view .LVU193
 356:sd/sd.c       **** 			switch(i)
 758               		.loc 1 356 8 is_stmt 0 view .LVU194
 759 02c6 8FEF      		ldi r24,lo8(-1)
 760               	.LVL73:
 356:sd/sd.c       **** 			switch(i)
 761               		.loc 1 356 8 view .LVU195
 762 02c8 0E94 0000 		call spi_xchg
 763               	.LVL74:
 357:sd/sd.c       **** 			{
 764               		.loc 1 357 4 is_stmt 1 view .LVU196
 354:sd/sd.c       **** 		{
 765               		.loc 1 354 22 is_stmt 0 view .LVU197
 766 02cc D1E0      		ldi r29,lo8(1)
 767               	.LVL75:
 768               	.L46:
 362:sd/sd.c       **** 
 363:sd/sd.c       **** 				case 1:
 364:sd/sd.c       **** 				case 2:
 365:sd/sd.c       **** 					_oem[i - 1] = b;
 769               		.loc 1 365 6 is_stmt 1 view .LVU198
 770               		.loc 1 365 18 is_stmt 0 view .LVU199
 771 02ce F501      		movw r30,r10
 772 02d0 8193      		st Z+,r24
 773 02d2 5F01      		movw r10,r30
 366:sd/sd.c       **** 					break;
 774               		.loc 1 366 6 is_stmt 1 view .LVU200
 354:sd/sd.c       **** 		{
 775               		.loc 1 354 22 view .LVU201
 776 02d4 DF5F      		subi r29,lo8(-(1))
 777               	.LVL76:
 354:sd/sd.c       **** 		{
 778               		.loc 1 354 16 view .LVU202
 779 02d6 FFEF      		ldi r31,-1
 780 02d8 CF1A      		sub r12,r31
 781 02da DF0A      		sbc r13,r31
 782 02dc 28E0      		ldi r18,8
 783 02de E21A      		sub r14,r18
 784 02e0 F108      		sbc r15,__zero_reg__
 785 02e2 00C0      		rjmp .L50
 786               	.L77:
 357:sd/sd.c       **** 			{
 787               		.loc 1 357 4 is_stmt 0 view .LVU203
 788 02e4 D2E0      		ldi r29,lo8(2)
 789               	.LVL77:
 357:sd/sd.c       **** 			{
 790               		.loc 1 357 4 view .LVU204
 791 02e6 00C0      		rjmp .L46
 792               	.LVL78:
 793               	.L45:
 367:sd/sd.c       **** 
 368:sd/sd.c       **** 				case 3:
 369:sd/sd.c       **** 				case 4:
 370:sd/sd.c       **** 				case 5:
 371:sd/sd.c       **** 				case 6:
 372:sd/sd.c       **** 				case 7:
 373:sd/sd.c       **** 					_product[i - 3] = b;
 794               		.loc 1 373 6 is_stmt 1 view .LVU205
 795               		.loc 1 373 22 is_stmt 0 view .LVU206
 796 02e8 F601      		movw r30,r12
 797 02ea 8083      		st Z,r24
 374:sd/sd.c       **** 					break;
 798               		.loc 1 374 6 is_stmt 1 view .LVU207
 354:sd/sd.c       **** 		{
 799               		.loc 1 354 22 view .LVU208
 800 02ec DF5F      		subi r29,lo8(-(1))
 801               	.LVL79:
 354:sd/sd.c       **** 		{
 802               		.loc 1 354 16 view .LVU209
 803 02ee 5B01      		movw r10,r22
 804 02f0 6A01      		movw r12,r20
 805 02f2 7901      		movw r14,r18
 806 02f4 00C0      		rjmp .L50
 807               	.L44:
 375:sd/sd.c       **** 
 376:sd/sd.c       **** 				case 8:
 377:sd/sd.c       **** 					_revision = b;
 808               		.loc 1 377 6 view .LVU210
 809               		.loc 1 377 16 is_stmt 0 view .LVU211
 810 02f6 8093 0000 		sts _revision,r24
 378:sd/sd.c       **** 					break;
 811               		.loc 1 378 6 is_stmt 1 view .LVU212
 354:sd/sd.c       **** 		{
 812               		.loc 1 354 22 view .LVU213
 813               	.LVL80:
 354:sd/sd.c       **** 		{
 814               		.loc 1 354 16 view .LVU214
 815 02fa 5B01      		movw r10,r22
 816 02fc 6A01      		movw r12,r20
 817 02fe 7901      		movw r14,r18
 356:sd/sd.c       **** 			switch(i)
 818               		.loc 1 356 4 view .LVU215
 356:sd/sd.c       **** 			switch(i)
 819               		.loc 1 356 8 is_stmt 0 view .LVU216
 820 0300 8FEF      		ldi r24,lo8(-1)
 821               	.LVL81:
 356:sd/sd.c       **** 			switch(i)
 822               		.loc 1 356 8 view .LVU217
 823 0302 0E94 0000 		call spi_xchg
 824               	.LVL82:
 357:sd/sd.c       **** 			{
 825               		.loc 1 357 4 is_stmt 1 view .LVU218
 354:sd/sd.c       **** 		{
 826               		.loc 1 354 22 is_stmt 0 view .LVU219
 827 0306 D9E0      		ldi r29,lo8(9)
 828               	.LVL83:
 829               	.L43:
 379:sd/sd.c       **** 
 380:sd/sd.c       **** 				case 9:
 381:sd/sd.c       **** 				case 10:
 382:sd/sd.c       **** 				case 11:
 383:sd/sd.c       **** 				case 12:
 384:sd/sd.c       **** 					_serial |= (u32)b << ((12 - i) * 8);
 830               		.loc 1 384 6 is_stmt 1 view .LVU220
 831               		.loc 1 384 17 is_stmt 0 view .LVU221
 832 0308 90E0      		ldi r25,0
 833 030a A0E0      		ldi r26,0
 834 030c B0E0      		ldi r27,0
 835               		.loc 1 384 24 view .LVU222
 836 030e 0E2C      		mov r0,r14
 837 0310 00C0      		rjmp 2f
 838               		1:
 839 0312 880F      		lsl r24
 840 0314 991F      		rol r25
 841 0316 AA1F      		rol r26
 842 0318 BB1F      		rol r27
 843               		2:
 844 031a 0A94      		dec r0
 845 031c 02F4      		brpl 1b
 846               	.LVL84:
 847               		.loc 1 384 14 view .LVU223
 848 031e 4091 0000 		lds r20,_serial
 849 0322 5091 0000 		lds r21,_serial+1
 850 0326 6091 0000 		lds r22,_serial+2
 851 032a 7091 0000 		lds r23,_serial+3
 852 032e 842B      		or r24,r20
 853 0330 952B      		or r25,r21
 854 0332 A62B      		or r26,r22
 855 0334 B72B      		or r27,r23
 856 0336 8093 0000 		sts _serial,r24
 857 033a 9093 0000 		sts _serial+1,r25
 858 033e A093 0000 		sts _serial+2,r26
 859 0342 B093 0000 		sts _serial+3,r27
 385:sd/sd.c       **** 					break;
 860               		.loc 1 385 6 is_stmt 1 view .LVU224
 354:sd/sd.c       **** 		{
 861               		.loc 1 354 22 view .LVU225
 862 0346 DF5F      		subi r29,lo8(-(1))
 863               	.LVL85:
 354:sd/sd.c       **** 		{
 864               		.loc 1 354 16 view .LVU226
 865 0348 FFEF      		ldi r31,-1
 866 034a AF1A      		sub r10,r31
 867 034c BF0A      		sbc r11,r31
 868 034e 2FEF      		ldi r18,-1
 869 0350 C21A      		sub r12,r18
 870 0352 D20A      		sbc r13,r18
 871 0354 38E0      		ldi r19,8
 872 0356 E31A      		sub r14,r19
 873 0358 F108      		sbc r15,__zero_reg__
 874 035a 00C0      		rjmp .L50
 875               	.LVL86:
 876               	.L42:
 386:sd/sd.c       **** 
 387:sd/sd.c       **** 				case 13:
 388:sd/sd.c       **** 					_manufacturing_year = b << 4;
 877               		.loc 1 388 6 view .LVU227
 878               		.loc 1 388 30 is_stmt 0 view .LVU228
 879 035c 8295      		swap r24
 880               	.LVL87:
 881               		.loc 1 388 30 view .LVU229
 882 035e 807F      		andi r24,lo8(-16)
 883               		.loc 1 388 26 view .LVU230
 884 0360 8093 0000 		sts _manufacturing_year,r24
 389:sd/sd.c       **** 					break;
 885               		.loc 1 389 6 is_stmt 1 view .LVU231
 354:sd/sd.c       **** 		{
 886               		.loc 1 354 22 view .LVU232
 887               	.LVL88:
 354:sd/sd.c       **** 		{
 888               		.loc 1 354 16 view .LVU233
 889 0364 5B01      		movw r10,r22
 890 0366 6A01      		movw r12,r20
 891 0368 7901      		movw r14,r18
 356:sd/sd.c       **** 			switch(i)
 892               		.loc 1 356 4 view .LVU234
 356:sd/sd.c       **** 			switch(i)
 893               		.loc 1 356 8 is_stmt 0 view .LVU235
 894 036a 8FEF      		ldi r24,lo8(-1)
 895 036c 0E94 0000 		call spi_xchg
 896               	.LVL89:
 357:sd/sd.c       **** 			{
 897               		.loc 1 357 4 is_stmt 1 view .LVU236
 898               	.L40:
 390:sd/sd.c       **** 
 391:sd/sd.c       **** 				case 14:
 392:sd/sd.c       **** 					_manufacturing_year |= b >> 4;
 899               		.loc 1 392 6 view .LVU237
 900               		.loc 1 392 26 is_stmt 0 view .LVU238
 901 0370 282F      		mov r18,r24
 902 0372 2295      		swap r18
 903 0374 2F70      		andi r18,lo8(15)
 904 0376 9091 0000 		lds r25,_manufacturing_year
 905 037a 922B      		or r25,r18
 906 037c 9093 0000 		sts _manufacturing_year,r25
 393:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 907               		.loc 1 393 6 is_stmt 1 view .LVU239
 908               		.loc 1 393 31 is_stmt 0 view .LVU240
 909 0380 8F70      		andi r24,lo8(15)
 910               	.LVL90:
 911               		.loc 1 393 27 view .LVU241
 912 0382 8093 0000 		sts _manufacturing_month,r24
 394:sd/sd.c       **** 					break;
 913               		.loc 1 394 6 is_stmt 1 view .LVU242
 354:sd/sd.c       **** 		{
 914               		.loc 1 354 22 view .LVU243
 915               	.LVL91:
 354:sd/sd.c       **** 		{
 916               		.loc 1 354 16 view .LVU244
 917 0386 4FEF      		ldi r20,-1
 918 0388 A41A      		sub r10,r20
 919 038a B40A      		sbc r11,r20
 920 038c 5FEF      		ldi r21,-1
 921 038e C51A      		sub r12,r21
 922 0390 D50A      		sbc r13,r21
 923 0392 88E0      		ldi r24,8
 924 0394 E81A      		sub r14,r24
 925 0396 F108      		sbc r15,__zero_reg__
 354:sd/sd.c       **** 		{
 926               		.loc 1 354 22 is_stmt 0 view .LVU245
 927 0398 DFE0      		ldi r29,lo8(15)
 928 039a 00C0      		rjmp .L50
 929               	.LVL92:
 930               	.L39:
 354:sd/sd.c       **** 		{
 931               		.loc 1 354 22 is_stmt 1 discriminator 2 view .LVU246
 932 039c DF5F      		subi r29,lo8(-(1))
 933               	.LVL93:
 354:sd/sd.c       **** 		{
 934               		.loc 1 354 16 discriminator 2 view .LVU247
 935 039e D231      		cpi r29,lo8(18)
 936 03a0 01F0      		breq .L49
 354:sd/sd.c       **** 		{
 937               		.loc 1 354 16 is_stmt 0 view .LVU248
 938 03a2 9FEF      		ldi r25,-1
 939 03a4 A91A      		sub r10,r25
 940 03a6 B90A      		sbc r11,r25
 941 03a8 EFEF      		ldi r30,-1
 942 03aa CE1A      		sub r12,r30
 943 03ac DE0A      		sbc r13,r30
 944 03ae F8E0      		ldi r31,8
 945 03b0 EF1A      		sub r14,r31
 946 03b2 F108      		sbc r15,__zero_reg__
 947 03b4 00C0      		rjmp .L50
 948               	.L49:
 395:sd/sd.c       **** 			}
 396:sd/sd.c       **** 		}
 397:sd/sd.c       **** 
 398:sd/sd.c       **** 		/* Read CSD register */
 399:sd/sd.c       **** 		csd_read_bl_len = 0;
 949               		.loc 1 399 3 is_stmt 1 view .LVU249
 950               	.LVL94:
 400:sd/sd.c       **** 		csd_c_size_mult = 0;
 951               		.loc 1 400 3 view .LVU250
 401:sd/sd.c       **** 		csd_structure = 0;
 952               		.loc 1 401 3 view .LVU251
 402:sd/sd.c       **** 		csd_c_size = 0;
 953               		.loc 1 402 3 view .LVU252
 403:sd/sd.c       **** 
 404:sd/sd.c       **** 		_sd_command(CMD_SEND_CSD, 0);
 954               		.loc 1 404 3 view .LVU253
 955 03b6 40E0      		ldi r20,0
 956 03b8 50E0      		ldi r21,0
 957 03ba BA01      		movw r22,r20
 958 03bc 89E0      		ldi r24,lo8(9)
 959               	.LVL95:
 960               		.loc 1 404 3 is_stmt 0 view .LVU254
 961 03be 0E94 0000 		call _sd_command
 962               	.LVL96:
 405:sd/sd.c       **** 		j = 0;
 963               		.loc 1 405 3 is_stmt 1 view .LVU255
 406:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 964               		.loc 1 406 3 view .LVU256
 405:sd/sd.c       **** 		j = 0;
 965               		.loc 1 405 5 is_stmt 0 view .LVU257
 966 03c2 E12C      		mov r14,__zero_reg__
 967 03c4 F12C      		mov r15,__zero_reg__
 968               	.LVL97:
 969               	.L51:
 970               		.loc 1 406 24 is_stmt 1 view .LVU258
 971               		.loc 1 406 9 is_stmt 0 view .LVU259
 972 03c6 8FEF      		ldi r24,lo8(-1)
 973 03c8 0E94 0000 		call spi_xchg
 974               	.LVL98:
 975               		.loc 1 406 24 view .LVU260
 976 03cc 8E3F      		cpi r24,lo8(-2)
 977 03ce 01F4      		brne .L53
 401:sd/sd.c       **** 		csd_c_size = 0;
 978               		.loc 1 401 17 view .LVU261
 979 03d0 D0E0      		ldi r29,0
 980               	.LVL99:
 400:sd/sd.c       **** 		csd_structure = 0;
 981               		.loc 1 400 19 view .LVU262
 982 03d2 D12C      		mov r13,__zero_reg__
 399:sd/sd.c       **** 		csd_c_size_mult = 0;
 983               		.loc 1 399 19 view .LVU263
 984 03d4 E12C      		mov r14,__zero_reg__
 985               	.LVL100:
 407:sd/sd.c       **** 		{
 408:sd/sd.c       **** 			if(++j > 0x7FFF)
 409:sd/sd.c       **** 			{
 410:sd/sd.c       **** 				_sd_timeout();
 411:sd/sd.c       **** 			}
 412:sd/sd.c       **** 		}
 413:sd/sd.c       **** 
 414:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 415:sd/sd.c       **** 		{
 416:sd/sd.c       **** 			b = spi_xchg(0xFF);
 417:sd/sd.c       **** 			if(i == 0)
 418:sd/sd.c       **** 			{
 419:sd/sd.c       **** 				csd_structure = b >> 6;
 420:sd/sd.c       **** 			}
 421:sd/sd.c       **** 			else if(i == 14)
 422:sd/sd.c       **** 			{
 423:sd/sd.c       **** 				if(b & 0x40)
 424:sd/sd.c       **** 				{
 425:sd/sd.c       **** 					_flag_copy = 1;
 426:sd/sd.c       **** 				}
 427:sd/sd.c       **** 
 428:sd/sd.c       **** 				if(b & 0x20)
 429:sd/sd.c       **** 				{
 430:sd/sd.c       **** 					_flag_write_protect = 1;
 431:sd/sd.c       **** 				}
 432:sd/sd.c       **** 
 433:sd/sd.c       **** 				if(b & 0x10)
 434:sd/sd.c       **** 				{
 435:sd/sd.c       **** 					_flag_write_protect_temp = 1;
 986               		.loc 1 435 31 view .LVU264
 987 03d6 FF24      		clr r15
 988 03d8 F394      		inc r15
 989               	.LVL101:
 990               	.L73:
 416:sd/sd.c       **** 			if(i == 0)
 991               		.loc 1 416 4 is_stmt 1 view .LVU265
 416:sd/sd.c       **** 			if(i == 0)
 992               		.loc 1 416 8 is_stmt 0 view .LVU266
 993 03da 8FEF      		ldi r24,lo8(-1)
 994 03dc 0E94 0000 		call spi_xchg
 995               	.LVL102:
 417:sd/sd.c       **** 			{
 996               		.loc 1 417 4 is_stmt 1 view .LVU267
 417:sd/sd.c       **** 			{
 997               		.loc 1 417 6 is_stmt 0 view .LVU268
 998 03e0 C111      		cpse r28,__zero_reg__
 999 03e2 00C0      		rjmp .L54
 1000               	.LVL103:
 419:sd/sd.c       **** 			}
 1001               		.loc 1 419 5 is_stmt 1 view .LVU269
 419:sd/sd.c       **** 			}
 1002               		.loc 1 419 19 is_stmt 0 view .LVU270
 1003 03e4 D82F      		mov r29,r24
 1004 03e6 D295      		swap r29
 1005 03e8 D695      		lsr r29
 1006 03ea D695      		lsr r29
 1007 03ec D370      		andi r29,lo8(3)
 414:sd/sd.c       **** 		{
 1008               		.loc 1 414 22 is_stmt 1 view .LVU271
 1009               	.LVL104:
 414:sd/sd.c       **** 		{
 1010               		.loc 1 414 16 view .LVU272
 414:sd/sd.c       **** 		{
 1011               		.loc 1 414 22 is_stmt 0 view .LVU273
 1012 03ee C1E0      		ldi r28,lo8(1)
 1013 03f0 00C0      		rjmp .L73
 1014               	.LVL105:
 1015               	.L53:
 408:sd/sd.c       **** 			{
 1016               		.loc 1 408 4 is_stmt 1 view .LVU274
 408:sd/sd.c       **** 			{
 1017               		.loc 1 408 6 is_stmt 0 view .LVU275
 1018 03f2 2FEF      		ldi r18,-1
 1019 03f4 E21A      		sub r14,r18
 1020 03f6 F20A      		sbc r15,r18
 1021               	.LVL106:
 408:sd/sd.c       **** 			{
 1022               		.loc 1 408 6 view .LVU276
 1023 03f8 F7FE      		sbrs r15,7
 1024 03fa 00C0      		rjmp .L51
 410:sd/sd.c       **** 			}
 1025               		.loc 1 410 5 is_stmt 1 view .LVU277
 1026 03fc 0E94 0000 		call _sd_timeout
 1027               	.LVL107:
 1028 0400 00C0      		rjmp .L51
 1029               	.LVL108:
 1030               	.L54:
 421:sd/sd.c       **** 			{
 1031               		.loc 1 421 9 view .LVU278
 421:sd/sd.c       **** 			{
 1032               		.loc 1 421 11 is_stmt 0 view .LVU279
 1033 0402 CE30      		cpi r28,lo8(14)
 1034 0404 01F4      		brne .L56
 423:sd/sd.c       **** 				{
 1035               		.loc 1 423 5 is_stmt 1 view .LVU280
 423:sd/sd.c       **** 				{
 1036               		.loc 1 423 10 is_stmt 0 view .LVU281
 1037 0406 282F      		mov r18,r24
 1038 0408 30E0      		ldi r19,0
 423:sd/sd.c       **** 				{
 1039               		.loc 1 423 7 view .LVU282
 1040 040a 86FD      		sbrc r24,6
 1041               	.LVL109:
 425:sd/sd.c       **** 				}
 1042               		.loc 1 425 6 is_stmt 1 view .LVU283
 425:sd/sd.c       **** 				}
 1043               		.loc 1 425 17 is_stmt 0 view .LVU284
 1044 040c F092 0000 		sts _flag_copy,r15
 1045               	.L57:
 428:sd/sd.c       **** 				{
 1046               		.loc 1 428 5 is_stmt 1 view .LVU285
 428:sd/sd.c       **** 				{
 1047               		.loc 1 428 7 is_stmt 0 view .LVU286
 1048 0410 85FD      		sbrc r24,5
 430:sd/sd.c       **** 				}
 1049               		.loc 1 430 6 is_stmt 1 view .LVU287
 430:sd/sd.c       **** 				}
 1050               		.loc 1 430 26 is_stmt 0 view .LVU288
 1051 0412 F092 0000 		sts _flag_write_protect,r15
 1052               	.L58:
 433:sd/sd.c       **** 				{
 1053               		.loc 1 433 5 is_stmt 1 view .LVU289
 433:sd/sd.c       **** 				{
 1054               		.loc 1 433 7 is_stmt 0 view .LVU290
 1055 0416 84FD      		sbrc r24,4
 1056               		.loc 1 435 6 is_stmt 1 view .LVU291
 1057               		.loc 1 435 31 is_stmt 0 view .LVU292
 1058 0418 F092 0000 		sts _flag_write_protect_temp,r15
 1059               	.L59:
 436:sd/sd.c       **** 				}
 437:sd/sd.c       **** 
 438:sd/sd.c       **** 				_format = (b & 0x0C) >> 2;
 1060               		.loc 1 438 5 is_stmt 1 view .LVU293
 1061               		.loc 1 438 26 is_stmt 0 view .LVU294
 1062 041c C901      		movw r24,r18
 1063 041e 9595      		asr r25
 1064 0420 8795      		ror r24
 1065 0422 9595      		asr r25
 1066 0424 8795      		ror r24
 1067 0426 8370      		andi r24,lo8(3)
 1068               		.loc 1 438 13 view .LVU295
 1069 0428 8093 0000 		sts _format,r24
 414:sd/sd.c       **** 		{
 1070               		.loc 1 414 22 is_stmt 1 view .LVU296
 1071               	.LVL110:
 414:sd/sd.c       **** 		{
 1072               		.loc 1 414 16 view .LVU297
 414:sd/sd.c       **** 		{
 1073               		.loc 1 414 22 is_stmt 0 view .LVU298
 1074 042c CFE0      		ldi r28,lo8(15)
 1075 042e 00C0      		rjmp .L73
 1076               	.LVL111:
 1077               	.L56:
 439:sd/sd.c       **** 			}
 440:sd/sd.c       **** 			else
 441:sd/sd.c       **** 			{
 442:sd/sd.c       **** 				if(csd_structure == 0x01)
 1078               		.loc 1 442 5 is_stmt 1 view .LVU299
 1079               		.loc 1 442 7 is_stmt 0 view .LVU300
 1080 0430 D130      		cpi r29,lo8(1)
 1081 0432 01F0      		breq .+2
 1082 0434 00C0      		rjmp .L60
 443:sd/sd.c       **** 				{
 444:sd/sd.c       **** 					switch(i)
 1083               		.loc 1 444 6 is_stmt 1 view .LVU301
 1084 0436 C730      		cpi r28,lo8(7)
 1085 0438 01F4      		brne .+2
 1086 043a 00C0      		rjmp .L61
 1087 043c 98EF      		ldi r25,lo8(-8)
 1088 043e 9C0F      		add r25,r28
 1089 0440 9230      		cpi r25,lo8(2)
 1090 0442 00F4      		brsh .+2
 1091 0444 00C0      		rjmp .L63
 1092               	.LVL112:
 1093               	.L62:
 414:sd/sd.c       **** 		{
 1094               		.loc 1 414 22 discriminator 2 view .LVU302
 1095 0446 CF5F      		subi r28,lo8(-(1))
 1096               	.LVL113:
 414:sd/sd.c       **** 		{
 1097               		.loc 1 414 16 discriminator 2 view .LVU303
 1098 0448 C231      		cpi r28,lo8(18)
 1099 044a 01F4      		brne .L73
 445:sd/sd.c       **** 					{
 446:sd/sd.c       **** 						case 7:
 447:sd/sd.c       **** 							b &= 0x3f;
 448:sd/sd.c       **** 
 449:sd/sd.c       **** 						case 8:
 450:sd/sd.c       **** 						case 9:
 451:sd/sd.c       **** 							csd_c_size <<= 8;
 452:sd/sd.c       **** 							csd_c_size |= b;
 453:sd/sd.c       **** 							++csd_c_size;
 454:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 455:sd/sd.c       **** 					}
 456:sd/sd.c       **** 				}
 457:sd/sd.c       **** 				else if(csd_structure == 0x00)
 458:sd/sd.c       **** 				{
 459:sd/sd.c       **** 					switch(i)
 460:sd/sd.c       **** 					{
 461:sd/sd.c       **** 						case 5:
 462:sd/sd.c       **** 							csd_read_bl_len = b & 0x0F;
 463:sd/sd.c       **** 							break;
 464:sd/sd.c       **** 
 465:sd/sd.c       **** 						case 6:
 466:sd/sd.c       **** 							csd_c_size = b & 0x03;
 467:sd/sd.c       **** 							csd_c_size <<= 8;
 468:sd/sd.c       **** 							break;
 469:sd/sd.c       **** 
 470:sd/sd.c       **** 						case 7:
 471:sd/sd.c       **** 							csd_c_size |= b;
 472:sd/sd.c       **** 							csd_c_size <<= 2;
 473:sd/sd.c       **** 							break;
 474:sd/sd.c       **** 
 475:sd/sd.c       **** 						case 8:
 476:sd/sd.c       **** 							csd_c_size |= b >> 6;
 477:sd/sd.c       **** 							++csd_c_size;
 478:sd/sd.c       **** 							break;
 479:sd/sd.c       **** 
 480:sd/sd.c       **** 						case 9:
 481:sd/sd.c       **** 							csd_c_size_mult = b & 0x03;
 482:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 483:sd/sd.c       **** 							break;
 484:sd/sd.c       **** 
 485:sd/sd.c       **** 						case 10:
 486:sd/sd.c       **** 							csd_c_size_mult |= b >> 7;
 487:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 488:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 489:sd/sd.c       **** 							break;
 490:sd/sd.c       **** 					}
 491:sd/sd.c       **** 				}
 492:sd/sd.c       **** 			}
 493:sd/sd.c       **** 		}
 494:sd/sd.c       **** 
 495:sd/sd.c       **** 		SD_DESELECT;
 1100               		.loc 1 495 3 view .LVU304
 1101 044c 5C9A      		sbi 0xb,4
 1102               	.LBE71:
 496:sd/sd.c       **** 	}
 497:sd/sd.c       **** 
 498:sd/sd.c       **** 	/* Print disk info */
 499:sd/sd.c       **** 	_sd_info_print();
 1103               		.loc 1 499 2 view .LVU305
 1104               	.LBB72:
 1105               	.LBI72:
 185:sd/sd.c       **** {
 1106               		.loc 1 185 13 view .LVU306
 1107               	.LBB73:
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1108               		.loc 1 187 2 view .LVU307
 1109 044e 8091 0000 		lds r24,_card_type
 1110 0452 82FF      		sbrs r24,2
 1111 0454 00C0      		rjmp .L78
 1112 0456 80E0      		ldi r24,lo8(__c.17)
 1113 0458 90E0      		ldi r25,hi8(__c.17)
 1114               	.L74:
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1115               		.loc 1 187 2 is_stmt 0 view .LVU308
 1116               	.LBE73:
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1117               		.loc 1 187 13 is_stmt 1 view .LVU309
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1118               		.loc 1 187 13 view .LVU310
 1119               	.LBB74:
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1120               		.loc 1 187 2 is_stmt 0 view .LVU311
 1121 045a 9F93      		push r25
 1122               		.cfi_def_cfa_offset 13
 1123 045c 8F93      		push r24
 1124               		.cfi_def_cfa_offset 14
 1125 045e 80E0      		ldi r24,lo8(__c.15)
 1126 0460 90E0      		ldi r25,hi8(__c.15)
 1127 0462 9F93      		push r25
 1128               		.cfi_def_cfa_offset 15
 1129 0464 8F93      		push r24
 1130               		.cfi_def_cfa_offset 16
 1131 0466 0E94 0000 		call log_boot_P
 1132               	.LVL114:
 190:sd/sd.c       **** 		BLOCK_SIZE);
 1133               		.loc 1 190 2 is_stmt 1 view .LVU312
 1134               	.LBE74:
 190:sd/sd.c       **** 		BLOCK_SIZE);
 1135               		.loc 1 190 13 view .LVU313
 190:sd/sd.c       **** 		BLOCK_SIZE);
 1136               		.loc 1 190 13 view .LVU314
 1137               	.LBB75:
 190:sd/sd.c       **** 		BLOCK_SIZE);
 1138               		.loc 1 190 2 is_stmt 0 view .LVU315
 1139 046a 82E0      		ldi r24,lo8(2)
 1140 046c 8F93      		push r24
 1141               		.cfi_def_cfa_offset 17
 1142 046e 1F92      		push __zero_reg__
 1143               		.cfi_def_cfa_offset 18
 1144 0470 80E0      		ldi r24,lo8(__c.14)
 1145 0472 90E0      		ldi r25,hi8(__c.14)
 1146 0474 9F93      		push r25
 1147               		.cfi_def_cfa_offset 19
 1148 0476 8F93      		push r24
 1149               		.cfi_def_cfa_offset 20
 1150 0478 0E94 0000 		call log_boot_P
 1151               	.LVL115:
 193:sd/sd.c       **** 		_manufacturer);
 1152               		.loc 1 193 2 is_stmt 1 view .LVU316
 1153               	.LBE75:
 193:sd/sd.c       **** 		_manufacturer);
 1154               		.loc 1 193 13 view .LVU317
 193:sd/sd.c       **** 		_manufacturer);
 1155               		.loc 1 193 13 view .LVU318
 1156               	.LBB76:
 193:sd/sd.c       **** 		_manufacturer);
 1157               		.loc 1 193 2 is_stmt 0 view .LVU319
 1158 047c 8091 0000 		lds r24,_manufacturer
 1159 0480 1F92      		push __zero_reg__
 1160               		.cfi_def_cfa_offset 21
 1161 0482 8F93      		push r24
 1162               		.cfi_def_cfa_offset 22
 1163 0484 80E0      		ldi r24,lo8(__c.13)
 1164 0486 90E0      		ldi r25,hi8(__c.13)
 1165 0488 9F93      		push r25
 1166               		.cfi_def_cfa_offset 23
 1167 048a 8F93      		push r24
 1168               		.cfi_def_cfa_offset 24
 1169 048c 0E94 0000 		call log_boot_P
 1170               	.LVL116:
 196:sd/sd.c       **** 		_oem);
 1171               		.loc 1 196 2 is_stmt 1 view .LVU320
 1172               	.LBE76:
 196:sd/sd.c       **** 		_oem);
 1173               		.loc 1 196 13 view .LVU321
 196:sd/sd.c       **** 		_oem);
 1174               		.loc 1 196 13 view .LVU322
 1175               	.LBB77:
 196:sd/sd.c       **** 		_oem);
 1176               		.loc 1 196 2 is_stmt 0 view .LVU323
 1177 0490 80E0      		ldi r24,lo8(_oem)
 1178 0492 90E0      		ldi r25,hi8(_oem)
 1179 0494 9F93      		push r25
 1180               		.cfi_def_cfa_offset 25
 1181 0496 8F93      		push r24
 1182               		.cfi_def_cfa_offset 26
 1183 0498 80E0      		ldi r24,lo8(__c.12)
 1184 049a 90E0      		ldi r25,hi8(__c.12)
 1185 049c 9F93      		push r25
 1186               		.cfi_def_cfa_offset 27
 1187 049e 8F93      		push r24
 1188               		.cfi_def_cfa_offset 28
 1189 04a0 0E94 0000 		call log_boot_P
 1190               	.LVL117:
 199:sd/sd.c       **** 		_product);
 1191               		.loc 1 199 2 is_stmt 1 view .LVU324
 1192               	.LBE77:
 199:sd/sd.c       **** 		_product);
 1193               		.loc 1 199 13 view .LVU325
 199:sd/sd.c       **** 		_product);
 1194               		.loc 1 199 13 view .LVU326
 1195               	.LBB78:
 199:sd/sd.c       **** 		_product);
 1196               		.loc 1 199 2 is_stmt 0 view .LVU327
 1197 04a4 80E0      		ldi r24,lo8(_product)
 1198 04a6 90E0      		ldi r25,hi8(_product)
 1199 04a8 9F93      		push r25
 1200               		.cfi_def_cfa_offset 29
 1201 04aa 8F93      		push r24
 1202               		.cfi_def_cfa_offset 30
 1203 04ac 80E0      		ldi r24,lo8(__c.11)
 1204 04ae 90E0      		ldi r25,hi8(__c.11)
 1205 04b0 9F93      		push r25
 1206               		.cfi_def_cfa_offset 31
 1207 04b2 8F93      		push r24
 1208               		.cfi_def_cfa_offset 32
 1209 04b4 0E94 0000 		call log_boot_P
 1210               	.LVL118:
 202:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1211               		.loc 1 202 2 is_stmt 1 view .LVU328
 203:sd/sd.c       **** 
 1212               		.loc 1 203 38 is_stmt 0 view .LVU329
 1213 04b8 8091 0000 		lds r24,_revision
 1214               	.LBE78:
 202:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1215               		.loc 1 202 13 is_stmt 1 view .LVU330
 202:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1216               		.loc 1 202 13 view .LVU331
 1217               	.LBB79:
 202:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1218               		.loc 1 202 2 is_stmt 0 view .LVU332
 1219 04bc 982F      		mov r25,r24
 1220 04be 9F70      		andi r25,lo8(15)
 1221 04c0 905D      		subi r25,lo8(-(48))
 1222 04c2 1F92      		push __zero_reg__
 1223               		.cfi_def_cfa_offset 33
 1224 04c4 9F93      		push r25
 1225               		.cfi_def_cfa_offset 34
 203:sd/sd.c       **** 
 1226               		.loc 1 203 14 view .LVU333
 1227 04c6 8295      		swap r24
 1228 04c8 8F70      		andi r24,lo8(15)
 202:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1229               		.loc 1 202 2 view .LVU334
 1230 04ca 805D      		subi r24,lo8(-(48))
 1231 04cc 1F92      		push __zero_reg__
 1232               		.cfi_def_cfa_offset 35
 1233 04ce 8F93      		push r24
 1234               		.cfi_def_cfa_offset 36
 1235 04d0 80E0      		ldi r24,lo8(__c.10)
 1236 04d2 90E0      		ldi r25,hi8(__c.10)
 1237 04d4 9F93      		push r25
 1238               		.cfi_def_cfa_offset 37
 1239 04d6 8F93      		push r24
 1240               		.cfi_def_cfa_offset 38
 1241 04d8 0E94 0000 		call log_boot_P
 1242               	.LVL119:
 205:sd/sd.c       **** 		_serial);
 1243               		.loc 1 205 2 is_stmt 1 view .LVU335
 1244               	.LBE79:
 205:sd/sd.c       **** 		_serial);
 1245               		.loc 1 205 13 view .LVU336
 205:sd/sd.c       **** 		_serial);
 1246               		.loc 1 205 13 view .LVU337
 1247               	.LBB80:
 205:sd/sd.c       **** 		_serial);
 1248               		.loc 1 205 2 is_stmt 0 view .LVU338
 1249 04dc 8091 0000 		lds r24,_serial+3
 1250 04e0 8F93      		push r24
 1251               		.cfi_def_cfa_offset 39
 1252 04e2 8091 0000 		lds r24,_serial+2
 1253 04e6 8F93      		push r24
 1254               		.cfi_def_cfa_offset 40
 1255 04e8 8091 0000 		lds r24,_serial+1
 1256 04ec 8F93      		push r24
 1257               		.cfi_def_cfa_offset 41
 1258 04ee 8091 0000 		lds r24,_serial
 1259 04f2 8F93      		push r24
 1260               		.cfi_def_cfa_offset 42
 1261 04f4 80E0      		ldi r24,lo8(__c.9)
 1262 04f6 90E0      		ldi r25,hi8(__c.9)
 1263 04f8 9F93      		push r25
 1264               		.cfi_def_cfa_offset 43
 1265 04fa 8F93      		push r24
 1266               		.cfi_def_cfa_offset 44
 1267 04fc 0E94 0000 		call log_boot_P
 1268               	.LVL120:
 208:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1269               		.loc 1 208 2 is_stmt 1 view .LVU339
 1270               	.LBE80:
 208:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1271               		.loc 1 208 13 view .LVU340
 208:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1272               		.loc 1 208 13 view .LVU341
 1273               	.LBB81:
 208:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1274               		.loc 1 208 2 is_stmt 0 view .LVU342
 1275 0500 2DB7      		in r18,__SP_L__
 1276 0502 3EB7      		in r19,__SP_H__
 1277 0504 205E      		subi r18,-32
 1278 0506 3F4F      		sbci r19,-1
 1279 0508 0FB6      		in __tmp_reg__,__SREG__
 1280 050a F894      		cli
 1281 050c 3EBF      		out __SP_H__,r19
 1282 050e 0FBE      		out __SREG__,__tmp_reg__
 1283 0510 2DBF      		out __SP_L__,r18
 1284               		.cfi_def_cfa_offset 12
 1285 0512 8091 0000 		lds r24,_manufacturing_year
 1286 0516 90E0      		ldi r25,0
 1287 0518 8053      		subi r24,48
 1288 051a 984F      		sbci r25,-8
 1289 051c 9F93      		push r25
 1290               		.cfi_def_cfa_offset 13
 1291 051e 8F93      		push r24
 1292               		.cfi_def_cfa_offset 14
 1293 0520 8091 0000 		lds r24,_manufacturing_month
 1294 0524 1F92      		push __zero_reg__
 1295               		.cfi_def_cfa_offset 15
 1296 0526 8F93      		push r24
 1297               		.cfi_def_cfa_offset 16
 1298 0528 80E0      		ldi r24,lo8(__c.8)
 1299 052a 90E0      		ldi r25,hi8(__c.8)
 1300 052c 9F93      		push r25
 1301               		.cfi_def_cfa_offset 17
 1302 052e 8F93      		push r24
 1303               		.cfi_def_cfa_offset 18
 1304 0530 0E94 0000 		call log_boot_P
 1305               	.LVL121:
 211:sd/sd.c       **** 		_capacity, _capacity * BLOCK_SIZE);
 1306               		.loc 1 211 2 is_stmt 1 view .LVU343
 1307 0534 8091 0000 		lds r24,_capacity
 1308 0538 9091 0000 		lds r25,_capacity+1
 1309 053c A091 0000 		lds r26,_capacity+2
 1310 0540 B091 0000 		lds r27,_capacity+3
 1311               	.LBE81:
 211:sd/sd.c       **** 		_capacity, _capacity * BLOCK_SIZE);
 1312               		.loc 1 211 13 view .LVU344
 211:sd/sd.c       **** 		_capacity, _capacity * BLOCK_SIZE);
 1313               		.loc 1 211 13 view .LVU345
 1314               	.LBB82:
 211:sd/sd.c       **** 		_capacity, _capacity * BLOCK_SIZE);
 1315               		.loc 1 211 2 is_stmt 0 view .LVU346
 1316 0544 AC01      		movw r20,r24
 1317 0546 BD01      		movw r22,r26
 1318 0548 29E0      		ldi r18,9
 1319               		1:
 1320 054a 440F      		lsl r20
 1321 054c 551F      		rol r21
 1322 054e 661F      		rol r22
 1323 0550 771F      		rol r23
 1324 0552 2A95      		dec r18
 1325 0554 01F4      		brne 1b
 1326 0556 7F93      		push r23
 1327               		.cfi_def_cfa_offset 19
 1328 0558 6F93      		push r22
 1329               		.cfi_def_cfa_offset 20
 1330 055a 5F93      		push r21
 1331               		.cfi_def_cfa_offset 21
 1332 055c 4F93      		push r20
 1333               		.cfi_def_cfa_offset 22
 1334 055e BF93      		push r27
 1335               		.cfi_def_cfa_offset 23
 1336 0560 AF93      		push r26
 1337               		.cfi_def_cfa_offset 24
 1338 0562 9F93      		push r25
 1339               		.cfi_def_cfa_offset 25
 1340 0564 8F93      		push r24
 1341               		.cfi_def_cfa_offset 26
 1342 0566 80E0      		ldi r24,lo8(__c.7)
 1343 0568 90E0      		ldi r25,hi8(__c.7)
 1344 056a 9F93      		push r25
 1345               		.cfi_def_cfa_offset 27
 1346 056c 8F93      		push r24
 1347               		.cfi_def_cfa_offset 28
 1348 056e 0E94 0000 		call log_boot_P
 1349               	.LVL122:
 214:sd/sd.c       **** 		_format);
 1350               		.loc 1 214 2 is_stmt 1 view .LVU347
 1351               	.LBE82:
 214:sd/sd.c       **** 		_format);
 1352               		.loc 1 214 13 view .LVU348
 214:sd/sd.c       **** 		_format);
 1353               		.loc 1 214 13 view .LVU349
 1354               	.LBB83:
 214:sd/sd.c       **** 		_format);
 1355               		.loc 1 214 2 is_stmt 0 view .LVU350
 1356 0572 8091 0000 		lds r24,_format
 1357 0576 1F92      		push __zero_reg__
 1358               		.cfi_def_cfa_offset 29
 1359 0578 8F93      		push r24
 1360               		.cfi_def_cfa_offset 30
 1361 057a 80E0      		ldi r24,lo8(__c.6)
 1362 057c 90E0      		ldi r25,hi8(__c.6)
 1363 057e 9F93      		push r25
 1364               		.cfi_def_cfa_offset 31
 1365 0580 8F93      		push r24
 1366               		.cfi_def_cfa_offset 32
 1367 0582 0E94 0000 		call log_boot_P
 1368               	.LVL123:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1369               		.loc 1 217 2 is_stmt 1 view .LVU351
 1370 0586 4DB7      		in r20,__SP_L__
 1371 0588 5EB7      		in r21,__SP_H__
 1372 058a 4C5E      		subi r20,-20
 1373 058c 5F4F      		sbci r21,-1
 1374 058e 0FB6      		in __tmp_reg__,__SREG__
 1375 0590 F894      		cli
 1376 0592 5EBF      		out __SP_H__,r21
 1377 0594 0FBE      		out __SREG__,__tmp_reg__
 1378 0596 4DBF      		out __SP_L__,r20
 1379               		.cfi_def_cfa_offset 12
 1380 0598 8091 0000 		lds r24,_flag_write_protect_temp
 1381 059c 8111      		cpse r24,__zero_reg__
 1382 059e 00C0      		rjmp .L79
 220:sd/sd.c       **** 			PSTR("Rewritable")));
 1383               		.loc 1 220 51 is_stmt 0 view .LVU352
 1384 05a0 8091 0000 		lds r24,_flag_write_protect
 1385 05a4 8823      		tst r24
 1386 05a6 01F4      		brne .+2
 1387 05a8 00C0      		rjmp .L80
 1388 05aa 80E0      		ldi r24,lo8(__c.4)
 1389 05ac 90E0      		ldi r25,hi8(__c.4)
 1390               	.L75:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1391               		.loc 1 217 2 view .LVU353
 1392 05ae 2091 0000 		lds r18,_flag_copy
 1393 05b2 2223      		tst r18
 1394 05b4 01F4      		brne .+2
 1395 05b6 00C0      		rjmp .L81
 1396 05b8 20E0      		ldi r18,lo8(__c.2)
 1397 05ba 30E0      		ldi r19,hi8(__c.2)
 1398               	.L76:
 1399               	.LBE83:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1400               		.loc 1 217 13 is_stmt 1 view .LVU354
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1401               		.loc 1 217 13 view .LVU355
 1402               	.LBB84:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1403               		.loc 1 217 2 is_stmt 0 view .LVU356
 1404 05bc 9F93      		push r25
 1405               		.cfi_def_cfa_offset 13
 1406 05be 8F93      		push r24
 1407               		.cfi_def_cfa_offset 14
 1408 05c0 3F93      		push r19
 1409               		.cfi_def_cfa_offset 15
 1410 05c2 2F93      		push r18
 1411               		.cfi_def_cfa_offset 16
 1412 05c4 80E0      		ldi r24,lo8(__c.0)
 1413 05c6 90E0      		ldi r25,hi8(__c.0)
 1414 05c8 9F93      		push r25
 1415               		.cfi_def_cfa_offset 17
 1416 05ca 8F93      		push r24
 1417               		.cfi_def_cfa_offset 18
 1418 05cc 0E94 0000 		call log_boot_P
 1419               	.LVL124:
 1420               	.LBE84:
 1421               	.LBE72:
 500:sd/sd.c       **** }
 1422               		.loc 1 500 1 view .LVU357
 1423 05d0 0F90      		pop __tmp_reg__
 1424 05d2 0F90      		pop __tmp_reg__
 1425 05d4 0F90      		pop __tmp_reg__
 1426 05d6 0F90      		pop __tmp_reg__
 1427 05d8 0F90      		pop __tmp_reg__
 1428 05da 0F90      		pop __tmp_reg__
 1429               		.cfi_def_cfa_offset 12
 1430               	/* epilogue start */
 1431 05dc DF91      		pop r29
 1432 05de CF91      		pop r28
 1433               	.LVL125:
 1434               		.loc 1 500 1 view .LVU358
 1435 05e0 1F91      		pop r17
 1436 05e2 0F91      		pop r16
 1437               	.LVL126:
 1438               		.loc 1 500 1 view .LVU359
 1439 05e4 FF90      		pop r15
 1440 05e6 EF90      		pop r14
 1441               	.LVL127:
 1442               		.loc 1 500 1 view .LVU360
 1443 05e8 DF90      		pop r13
 1444               	.LVL128:
 1445               		.loc 1 500 1 view .LVU361
 1446 05ea CF90      		pop r12
 1447 05ec BF90      		pop r11
 1448 05ee AF90      		pop r10
 1449 05f0 0895      		ret
 1450               	.LVL129:
 1451               	.L61:
 1452               	.LBB86:
 447:sd/sd.c       **** 
 1453               		.loc 1 447 8 is_stmt 1 view .LVU362
 447:sd/sd.c       **** 
 1454               		.loc 1 447 10 is_stmt 0 view .LVU363
 1455 05f2 8F73      		andi r24,lo8(63)
 1456               	.LVL130:
 1457               	.L63:
 451:sd/sd.c       **** 							csd_c_size |= b;
 1458               		.loc 1 451 8 is_stmt 1 view .LVU364
 452:sd/sd.c       **** 							++csd_c_size;
 1459               		.loc 1 452 8 view .LVU365
 452:sd/sd.c       **** 							++csd_c_size;
 1460               		.loc 1 452 19 is_stmt 0 view .LVU366
 1461 05f4 482F      		mov r20,r24
 1462 05f6 502F      		mov r21,r16
 1463 05f8 8A01      		movw r16,r20
 1464               	.LVL131:
 453:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 1465               		.loc 1 453 8 is_stmt 1 view .LVU367
 1466 05fa 0F5F      		subi r16,-1
 1467 05fc 1F4F      		sbci r17,-1
 1468               	.LVL132:
 454:sd/sd.c       **** 					}
 1469               		.loc 1 454 8 view .LVU368
 454:sd/sd.c       **** 					}
 1470               		.loc 1 454 20 is_stmt 0 view .LVU369
 1471 05fe C801      		movw r24,r16
 1472               	.LVL133:
 454:sd/sd.c       **** 					}
 1473               		.loc 1 454 20 view .LVU370
 1474 0600 A0E0      		ldi r26,0
 1475 0602 B0E0      		ldi r27,0
 454:sd/sd.c       **** 					}
 1476               		.loc 1 454 36 view .LVU371
 1477 0604 6AE0      		ldi r22,10
 1478               		1:
 1479 0606 880F      		lsl r24
 1480 0608 991F      		rol r25
 1481 060a AA1F      		rol r26
 1482 060c BB1F      		rol r27
 1483 060e 6A95      		dec r22
 1484 0610 01F4      		brne 1b
 454:sd/sd.c       **** 					}
 1485               		.loc 1 454 18 view .LVU372
 1486 0612 8093 0000 		sts _capacity,r24
 1487 0616 9093 0000 		sts _capacity+1,r25
 1488 061a A093 0000 		sts _capacity+2,r26
 1489 061e B093 0000 		sts _capacity+3,r27
 1490 0622 00C0      		rjmp .L62
 1491               	.LVL134:
 1492               	.L60:
 457:sd/sd.c       **** 				{
 1493               		.loc 1 457 10 is_stmt 1 view .LVU373
 457:sd/sd.c       **** 				{
 1494               		.loc 1 457 12 is_stmt 0 view .LVU374
 1495 0624 D111      		cpse r29,__zero_reg__
 1496 0626 00C0      		rjmp .L62
 459:sd/sd.c       **** 					{
 1497               		.loc 1 459 6 is_stmt 1 view .LVU375
 1498 0628 C830      		cpi r28,lo8(8)
 1499 062a 01F4      		brne .+2
 1500 062c 00C0      		rjmp .L64
 1501 062e 00F4      		brsh .L65
 1502 0630 C630      		cpi r28,lo8(6)
 1503 0632 01F0      		breq .L66
 1504 0634 C730      		cpi r28,lo8(7)
 1505 0636 01F0      		breq .L67
 1506 0638 C530      		cpi r28,lo8(5)
 1507 063a 01F0      		breq .L68
 1508               	.LVL135:
 414:sd/sd.c       **** 		{
 1509               		.loc 1 414 22 view .LVU376
 1510 063c CF5F      		subi r28,lo8(-(1))
 1511               	.LVL136:
 414:sd/sd.c       **** 		{
 1512               		.loc 1 414 16 view .LVU377
 1513 063e 00C0      		rjmp .L73
 1514               	.LVL137:
 1515               	.L65:
 459:sd/sd.c       **** 					{
 1516               		.loc 1 459 6 is_stmt 0 view .LVU378
 1517 0640 C930      		cpi r28,lo8(9)
 1518 0642 01F4      		brne .+2
 1519 0644 00C0      		rjmp .L70
 1520 0646 CA30      		cpi r28,lo8(10)
 1521 0648 01F0      		breq .+2
 1522 064a 00C0      		rjmp .L62
 486:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1523               		.loc 1 486 8 is_stmt 1 view .LVU379
 486:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1524               		.loc 1 486 24 is_stmt 0 view .LVU380
 1525 064c 881F      		rol r24
 1526 064e 8827      		clr r24
 1527 0650 881F      		rol r24
 1528               	.LVL138:
 486:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1529               		.loc 1 486 24 view .LVU381
 1530 0652 D82A      		or r13,r24
 1531               	.LVL139:
 487:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1532               		.loc 1 487 8 is_stmt 1 view .LVU382
 487:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1533               		.loc 1 487 21 is_stmt 0 view .LVU383
 1534 0654 C801      		movw r24,r16
 1535 0656 A0E0      		ldi r26,0
 1536 0658 B0E0      		ldi r27,0
 488:sd/sd.c       **** 							break;
 1537               		.loc 1 488 26 view .LVU384
 1538 065a ED2D      		mov r30,r13
 1539 065c EE0D      		add r30,r14
 1540 065e FF27      		clr r31
 1541 0660 FF1F      		rol r31
 1542 0662 9F01      		movw r18,r30
 488:sd/sd.c       **** 							break;
 1543               		.loc 1 488 44 view .LVU385
 1544 0664 2E5F      		subi r18,-2
 1545 0666 3F4F      		sbci r19,-1
 487:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1546               		.loc 1 487 37 view .LVU386
 1547 0668 00C0      		rjmp 2f
 1548               		1:
 1549 066a 880F      		lsl r24
 1550 066c 991F      		rol r25
 1551 066e AA1F      		rol r26
 1552 0670 BB1F      		rol r27
 1553               		2:
 1554 0672 2A95      		dec r18
 1555 0674 02F4      		brpl 1b
 488:sd/sd.c       **** 							break;
 1556               		.loc 1 488 50 view .LVU387
 1557 0676 39E0      		ldi r19,9
 1558               		1:
 1559 0678 B695      		lsr r27
 1560 067a A795      		ror r26
 1561 067c 9795      		ror r25
 1562 067e 8795      		ror r24
 1563 0680 3A95      		dec r19
 1564 0682 01F4      		brne 1b
 487:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1565               		.loc 1 487 18 view .LVU388
 1566 0684 8093 0000 		sts _capacity,r24
 1567 0688 9093 0000 		sts _capacity+1,r25
 1568 068c A093 0000 		sts _capacity+2,r26
 1569 0690 B093 0000 		sts _capacity+3,r27
 489:sd/sd.c       **** 					}
 1570               		.loc 1 489 8 is_stmt 1 view .LVU389
 1571               	.LVL140:
 414:sd/sd.c       **** 		{
 1572               		.loc 1 414 22 view .LVU390
 414:sd/sd.c       **** 		{
 1573               		.loc 1 414 16 view .LVU391
 414:sd/sd.c       **** 		{
 1574               		.loc 1 414 22 is_stmt 0 view .LVU392
 1575 0694 CBE0      		ldi r28,lo8(11)
 1576 0696 00C0      		rjmp .L73
 1577               	.LVL141:
 1578               	.L68:
 462:sd/sd.c       **** 							break;
 1579               		.loc 1 462 8 is_stmt 1 view .LVU393
 462:sd/sd.c       **** 							break;
 1580               		.loc 1 462 24 is_stmt 0 view .LVU394
 1581 0698 8F70      		andi r24,lo8(15)
 1582               	.LVL142:
 462:sd/sd.c       **** 							break;
 1583               		.loc 1 462 24 view .LVU395
 1584 069a E82E      		mov r14,r24
 1585               	.LVL143:
 463:sd/sd.c       **** 
 1586               		.loc 1 463 8 is_stmt 1 view .LVU396
 414:sd/sd.c       **** 		{
 1587               		.loc 1 414 22 view .LVU397
 414:sd/sd.c       **** 		{
 1588               		.loc 1 414 16 view .LVU398
 414:sd/sd.c       **** 		{
 1589               		.loc 1 414 22 is_stmt 0 view .LVU399
 1590 069c C6E0      		ldi r28,lo8(6)
 1591 069e 00C0      		rjmp .L73
 1592               	.LVL144:
 1593               	.L66:
 466:sd/sd.c       **** 							csd_c_size <<= 8;
 1594               		.loc 1 466 8 is_stmt 1 view .LVU400
 466:sd/sd.c       **** 							csd_c_size <<= 8;
 1595               		.loc 1 466 19 is_stmt 0 view .LVU401
 1596 06a0 8370      		andi r24,lo8(3)
 1597               	.LVL145:
 466:sd/sd.c       **** 							csd_c_size <<= 8;
 1598               		.loc 1 466 19 view .LVU402
 1599 06a2 082F      		mov r16,r24
 1600               	.LVL146:
 466:sd/sd.c       **** 							csd_c_size <<= 8;
 1601               		.loc 1 466 19 view .LVU403
 1602 06a4 10E0      		ldi r17,0
 1603               	.LVL147:
 467:sd/sd.c       **** 							break;
 1604               		.loc 1 467 8 is_stmt 1 view .LVU404
 467:sd/sd.c       **** 							break;
 1605               		.loc 1 467 19 is_stmt 0 view .LVU405
 1606 06a6 102F      		mov r17,r16
 1607 06a8 0027      		clr r16
 1608               	.LVL148:
 468:sd/sd.c       **** 
 1609               		.loc 1 468 8 is_stmt 1 view .LVU406
 414:sd/sd.c       **** 		{
 1610               		.loc 1 414 22 view .LVU407
 414:sd/sd.c       **** 		{
 1611               		.loc 1 414 16 view .LVU408
 414:sd/sd.c       **** 		{
 1612               		.loc 1 414 22 is_stmt 0 view .LVU409
 1613 06aa C7E0      		ldi r28,lo8(7)
 1614 06ac 00C0      		rjmp .L73
 1615               	.LVL149:
 1616               	.L67:
 471:sd/sd.c       **** 							csd_c_size <<= 2;
 1617               		.loc 1 471 8 is_stmt 1 view .LVU410
 471:sd/sd.c       **** 							csd_c_size <<= 2;
 1618               		.loc 1 471 19 is_stmt 0 view .LVU411
 1619 06ae 082B      		or r16,r24
 1620               	.LVL150:
 472:sd/sd.c       **** 							break;
 1621               		.loc 1 472 8 is_stmt 1 view .LVU412
 472:sd/sd.c       **** 							break;
 1622               		.loc 1 472 19 is_stmt 0 view .LVU413
 1623 06b0 000F      		lsl r16
 1624 06b2 111F      		rol r17
 1625 06b4 000F      		lsl r16
 1626 06b6 111F      		rol r17
 1627               	.LVL151:
 473:sd/sd.c       **** 
 1628               		.loc 1 473 8 is_stmt 1 view .LVU414
 414:sd/sd.c       **** 		{
 1629               		.loc 1 414 22 view .LVU415
 414:sd/sd.c       **** 		{
 1630               		.loc 1 414 16 view .LVU416
 414:sd/sd.c       **** 		{
 1631               		.loc 1 414 22 is_stmt 0 view .LVU417
 1632 06b8 C8E0      		ldi r28,lo8(8)
 1633 06ba 00C0      		rjmp .L73
 1634               	.LVL152:
 1635               	.L64:
 476:sd/sd.c       **** 							++csd_c_size;
 1636               		.loc 1 476 8 is_stmt 1 view .LVU418
 476:sd/sd.c       **** 							++csd_c_size;
 1637               		.loc 1 476 24 is_stmt 0 view .LVU419
 1638 06bc 8295      		swap r24
 1639               	.LVL153:
 476:sd/sd.c       **** 							++csd_c_size;
 1640               		.loc 1 476 24 view .LVU420
 1641 06be 8695      		lsr r24
 1642 06c0 8695      		lsr r24
 1643 06c2 8370      		andi r24,lo8(3)
 476:sd/sd.c       **** 							++csd_c_size;
 1644               		.loc 1 476 19 view .LVU421
 1645 06c4 082B      		or r16,r24
 1646               	.LVL154:
 477:sd/sd.c       **** 							break;
 1647               		.loc 1 477 8 is_stmt 1 view .LVU422
 1648 06c6 0F5F      		subi r16,-1
 1649 06c8 1F4F      		sbci r17,-1
 1650               	.LVL155:
 478:sd/sd.c       **** 
 1651               		.loc 1 478 8 view .LVU423
 414:sd/sd.c       **** 		{
 1652               		.loc 1 414 22 view .LVU424
 414:sd/sd.c       **** 		{
 1653               		.loc 1 414 16 view .LVU425
 414:sd/sd.c       **** 		{
 1654               		.loc 1 414 22 is_stmt 0 view .LVU426
 1655 06ca C9E0      		ldi r28,lo8(9)
 1656 06cc 00C0      		rjmp .L73
 1657               	.LVL156:
 1658               	.L70:
 481:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 1659               		.loc 1 481 8 is_stmt 1 view .LVU427
 482:sd/sd.c       **** 							break;
 1660               		.loc 1 482 8 view .LVU428
 482:sd/sd.c       **** 							break;
 1661               		.loc 1 482 24 is_stmt 0 view .LVU429
 1662 06ce 880F      		lsl r24
 1663               	.LVL157:
 482:sd/sd.c       **** 							break;
 1664               		.loc 1 482 24 view .LVU430
 1665 06d0 8670      		andi r24,lo8(6)
 1666 06d2 D82E      		mov r13,r24
 1667               	.LVL158:
 483:sd/sd.c       **** 
 1668               		.loc 1 483 8 is_stmt 1 view .LVU431
 414:sd/sd.c       **** 		{
 1669               		.loc 1 414 22 view .LVU432
 414:sd/sd.c       **** 		{
 1670               		.loc 1 414 16 view .LVU433
 414:sd/sd.c       **** 		{
 1671               		.loc 1 414 22 is_stmt 0 view .LVU434
 1672 06d4 CAE0      		ldi r28,lo8(10)
 1673 06d6 00C0      		rjmp .L73
 1674               	.LVL159:
 1675               	.L78:
 414:sd/sd.c       **** 		{
 1676               		.loc 1 414 22 view .LVU435
 1677               	.LBE86:
 1678               	.LBB87:
 1679               	.LBB85:
 187:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1680               		.loc 1 187 2 view .LVU436
 1681 06d8 80E0      		ldi r24,lo8(__c.16)
 1682 06da 90E0      		ldi r25,hi8(__c.16)
 1683 06dc 00C0      		rjmp .L74
 1684               	.L79:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1685               		.loc 1 217 2 view .LVU437
 1686 06de 80E0      		ldi r24,lo8(__c.5)
 1687 06e0 90E0      		ldi r25,hi8(__c.5)
 1688 06e2 00C0      		rjmp .L75
 1689               	.L80:
 220:sd/sd.c       **** 			PSTR("Rewritable")));
 1690               		.loc 1 220 51 view .LVU438
 1691 06e4 80E0      		ldi r24,lo8(__c.3)
 1692 06e6 90E0      		ldi r25,hi8(__c.3)
 1693 06e8 00C0      		rjmp .L75
 1694               	.L81:
 217:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1695               		.loc 1 217 2 view .LVU439
 1696 06ea 20E0      		ldi r18,lo8(__c.1)
 1697 06ec 30E0      		ldi r19,hi8(__c.1)
 1698 06ee 00C0      		rjmp .L76
 1699               	.LBE85:
 1700               	.LBE87:
 1701               		.cfi_endproc
 1702               	.LFE20:
 1704               	.global	sd_read
 1706               	sd_read:
 1707               	.LVL160:
 1708               	.LFB21:
 501:sd/sd.c       **** 
 502:sd/sd.c       **** Status sd_read(u32 block, void *data)
 503:sd/sd.c       **** {
 1709               		.loc 1 503 1 is_stmt 1 view -0
 1710               		.cfi_startproc
 1711               		.loc 1 503 1 is_stmt 0 view .LVU441
 1712 06f0 CF92      		push r12
 1713               		.cfi_def_cfa_offset 3
 1714               		.cfi_offset 12, -2
 1715 06f2 DF92      		push r13
 1716               		.cfi_def_cfa_offset 4
 1717               		.cfi_offset 13, -3
 1718 06f4 EF92      		push r14
 1719               		.cfi_def_cfa_offset 5
 1720               		.cfi_offset 14, -4
 1721 06f6 FF92      		push r15
 1722               		.cfi_def_cfa_offset 6
 1723               		.cfi_offset 15, -5
 1724 06f8 0F93      		push r16
 1725               		.cfi_def_cfa_offset 7
 1726               		.cfi_offset 16, -6
 1727 06fa 1F93      		push r17
 1728               		.cfi_def_cfa_offset 8
 1729               		.cfi_offset 17, -7
 1730 06fc CF93      		push r28
 1731               		.cfi_def_cfa_offset 9
 1732               		.cfi_offset 28, -8
 1733 06fe DF93      		push r29
 1734               		.cfi_def_cfa_offset 10
 1735               		.cfi_offset 29, -9
 1736 0700 00D0      		rcall .
 1737               		.cfi_def_cfa_offset 12
 1738 0702 CDB7      		in r28,__SP_L__
 1739 0704 DEB7      		in r29,__SP_H__
 1740               		.cfi_def_cfa_register 28
 1741               	/* prologue: function */
 1742               	/* frame size = 2 */
 1743               	/* stack size = 10 */
 1744               	.L__stack_usage = 10
 1745 0706 6B01      		movw r12,r22
 1746 0708 7C01      		movw r14,r24
 1747 070a 8A01      		movw r16,r20
 504:sd/sd.c       **** 	u16 i;
 1748               		.loc 1 504 2 is_stmt 1 view .LVU442
 505:sd/sd.c       **** 	u8 *data8, response;
 1749               		.loc 1 505 2 view .LVU443
 506:sd/sd.c       **** 
 507:sd/sd.c       **** 	data8 = data;
 1750               		.loc 1 507 2 view .LVU444
 1751               	.LVL161:
 508:sd/sd.c       **** 
 509:sd/sd.c       **** 	SD_SELECT;
 1752               		.loc 1 509 2 view .LVU445
 1753 070c 5C98      		cbi 0xb,4
 510:sd/sd.c       **** 
 511:sd/sd.c       **** 	/* Start read */
 512:sd/sd.c       **** 	RETURN_IF(_sd_command_try(CMD_READ_SINGLE_BLOCK,
 1754               		.loc 1 512 2 view .LVU446
 1755               	.LBB117:
 1756               		.loc 1 512 2 view .LVU447
 1757               	.LVL162:
 1758               	.LBB118:
 1759               	.LBI118:
 177:sd/sd.c       **** {
 1760               		.loc 1 177 12 view .LVU448
 1761               	.LBB119:
 179:sd/sd.c       **** }
 1762               		.loc 1 179 2 view .LVU449
 179:sd/sd.c       **** }
 1763               		.loc 1 179 36 is_stmt 0 view .LVU450
 1764 070e 8091 0000 		lds r24,_card_type
 1765 0712 82FD      		sbrc r24,2
 1766 0714 00C0      		rjmp .L109
 1767 0716 99E0      		ldi r25,9
 1768               		1:
 1769 0718 CC0C      		lsl r12
 1770 071a DD1C      		rol r13
 1771 071c EE1C      		rol r14
 1772 071e FF1C      		rol r15
 1773 0720 9A95      		dec r25
 1774 0722 01F4      		brne 1b
 1775               	.LVL163:
 1776               	.L109:
 179:sd/sd.c       **** }
 1777               		.loc 1 179 36 view .LVU451
 1778               	.LBE119:
 1779               	.LBE118:
 1780               	.LBB120:
 1781               	.LBI120:
 129:sd/sd.c       **** {
 1782               		.loc 1 129 15 is_stmt 1 view .LVU452
 1783               	.LBB121:
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 1784               		.loc 1 131 2 view .LVU453
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1785               		.loc 1 132 2 view .LVU454
 1786               	.LBB122:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1787               		.loc 1 132 2 view .LVU455
 1788 0724 8FEF      		ldi r24,lo8(-1)
 1789 0726 0E94 0000 		call spi_tx_try
 1790               	.LVL164:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1791               		.loc 1 132 2 view .LVU456
 1792 072a 8111      		cpse r24,__zero_reg__
 1793 072c 00C0      		rjmp .L108
 1794               	.LBE122:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1795               		.loc 1 132 2 view .LVU457
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1796               		.loc 1 132 29 view .LVU458
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1797               		.loc 1 133 2 view .LVU459
 1798               	.LBB123:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1799               		.loc 1 133 2 view .LVU460
 1800 072e 81E5      		ldi r24,lo8(81)
 1801               	.LVL165:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1802               		.loc 1 133 2 is_stmt 0 view .LVU461
 1803 0730 0E94 0000 		call spi_tx_try
 1804               	.LVL166:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1805               		.loc 1 133 2 is_stmt 1 view .LVU462
 1806 0734 8111      		cpse r24,__zero_reg__
 1807 0736 00C0      		rjmp .L108
 1808               	.LBE123:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1809               		.loc 1 133 2 view .LVU463
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1810               		.loc 1 133 35 view .LVU464
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1811               		.loc 1 134 2 view .LVU465
 1812               	.LBB124:
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1813               		.loc 1 134 2 view .LVU466
 1814 0738 8F2D      		mov r24,r15
 1815               	.LVL167:
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1816               		.loc 1 134 2 is_stmt 0 view .LVU467
 1817 073a 0E94 0000 		call spi_tx_try
 1818               	.LVL168:
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1819               		.loc 1 134 2 is_stmt 1 view .LVU468
 1820 073e 8111      		cpse r24,__zero_reg__
 1821 0740 00C0      		rjmp .L108
 1822               	.LBE124:
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1823               		.loc 1 134 2 view .LVU469
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1824               		.loc 1 134 34 view .LVU470
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1825               		.loc 1 135 2 view .LVU471
 1826               	.LBB125:
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1827               		.loc 1 135 2 view .LVU472
 1828 0742 8E2D      		mov r24,r14
 1829               	.LVL169:
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1830               		.loc 1 135 2 is_stmt 0 view .LVU473
 1831 0744 0E94 0000 		call spi_tx_try
 1832               	.LVL170:
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1833               		.loc 1 135 2 is_stmt 1 view .LVU474
 1834 0748 8111      		cpse r24,__zero_reg__
 1835 074a 00C0      		rjmp .L108
 1836               	.LBE125:
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1837               		.loc 1 135 2 view .LVU475
 135:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1838               		.loc 1 135 34 view .LVU476
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1839               		.loc 1 136 2 view .LVU477
 1840               	.LBB126:
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1841               		.loc 1 136 2 view .LVU478
 1842 074c 8D2D      		mov r24,r13
 1843               	.LVL171:
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1844               		.loc 1 136 2 is_stmt 0 view .LVU479
 1845 074e 0E94 0000 		call spi_tx_try
 1846               	.LVL172:
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1847               		.loc 1 136 2 is_stmt 1 view .LVU480
 1848 0752 8111      		cpse r24,__zero_reg__
 1849 0754 00C0      		rjmp .L108
 1850               	.LBE126:
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1851               		.loc 1 136 2 view .LVU481
 136:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1852               		.loc 1 136 33 view .LVU482
 137:sd/sd.c       **** 	switch(cmd)
 1853               		.loc 1 137 2 view .LVU483
 1854               	.LBB127:
 137:sd/sd.c       **** 	switch(cmd)
 1855               		.loc 1 137 2 view .LVU484
 1856 0756 8C2D      		mov r24,r12
 1857               	.LVL173:
 137:sd/sd.c       **** 	switch(cmd)
 1858               		.loc 1 137 2 is_stmt 0 view .LVU485
 1859 0758 0E94 0000 		call spi_tx_try
 1860               	.LVL174:
 137:sd/sd.c       **** 	switch(cmd)
 1861               		.loc 1 137 2 is_stmt 1 view .LVU486
 1862 075c 8111      		cpse r24,__zero_reg__
 1863 075e 00C0      		rjmp .L108
 1864               	.LBE127:
 137:sd/sd.c       **** 	switch(cmd)
 1865               		.loc 1 137 2 view .LVU487
 137:sd/sd.c       **** 	switch(cmd)
 1866               		.loc 1 137 28 view .LVU488
 138:sd/sd.c       **** 	{
 1867               		.loc 1 138 2 view .LVU489
 149:sd/sd.c       **** 		break;
 1868               		.loc 1 149 3 view .LVU490
 1869               	.LBB128:
 149:sd/sd.c       **** 		break;
 1870               		.loc 1 149 3 view .LVU491
 1871 0760 8FEF      		ldi r24,lo8(-1)
 1872               	.LVL175:
 149:sd/sd.c       **** 		break;
 1873               		.loc 1 149 3 is_stmt 0 view .LVU492
 1874 0762 0E94 0000 		call spi_tx_try
 1875               	.LVL176:
 149:sd/sd.c       **** 		break;
 1876               		.loc 1 149 3 is_stmt 1 view .LVU493
 1877 0766 8111      		cpse r24,__zero_reg__
 1878 0768 00C0      		rjmp .L108
 1879 076a 8BE0      		ldi r24,lo8(11)
 1880 076c F82E      		mov r15,r24
 1881               	.LVL177:
 1882               	.L117:
 149:sd/sd.c       **** 		break;
 1883               		.loc 1 149 3 is_stmt 0 view .LVU494
 1884               	.LBE128:
 155:sd/sd.c       **** 		if(response != 0xFF)
 1885               		.loc 1 155 3 is_stmt 1 view .LVU495
 1886               	.LBB129:
 155:sd/sd.c       **** 		if(response != 0xFF)
 1887               		.loc 1 155 3 view .LVU496
 1888 076e CE01      		movw r24,r28
 1889 0770 0196      		adiw r24,1
 1890 0772 0E94 0000 		call spi_rx_try
 1891               	.LVL178:
 155:sd/sd.c       **** 		if(response != 0xFF)
 1892               		.loc 1 155 3 view .LVU497
 1893 0776 8111      		cpse r24,__zero_reg__
 1894 0778 00C0      		rjmp .L108
 1895               	.LBE129:
 155:sd/sd.c       **** 		if(response != 0xFF)
 1896               		.loc 1 155 3 view .LVU498
 155:sd/sd.c       **** 		if(response != 0xFF)
 1897               		.loc 1 155 35 view .LVU499
 156:sd/sd.c       **** 		{
 1898               		.loc 1 156 3 view .LVU500
 156:sd/sd.c       **** 		{
 1899               		.loc 1 156 15 is_stmt 0 view .LVU501
 1900 077a 8981      		ldd r24,Y+1
 1901               	.LVL179:
 156:sd/sd.c       **** 		{
 1902               		.loc 1 156 5 view .LVU502
 1903 077c 8F3F      		cpi r24,lo8(-1)
 1904 077e 01F4      		brne .L119
 161:sd/sd.c       **** 		{
 1905               		.loc 1 161 3 is_stmt 1 view .LVU503
 161:sd/sd.c       **** 		{
 1906               		.loc 1 161 5 is_stmt 0 view .LVU504
 1907 0780 FA94      		dec r15
 1908               	.LVL180:
 161:sd/sd.c       **** 		{
 1909               		.loc 1 161 5 view .LVU505
 1910 0782 F110      		cpse r15,__zero_reg__
 1911 0784 00C0      		rjmp .L117
 1912               	.LVL181:
 1913               	.L124:
 161:sd/sd.c       **** 		{
 1914               		.loc 1 161 5 view .LVU506
 1915               	.LBE121:
 1916               	.LBE120:
 1917               	.LBE117:
 513:sd/sd.c       **** 		_sd_block_addr(block), &response));
 514:sd/sd.c       **** 	if(response)
 515:sd/sd.c       **** 	{
 516:sd/sd.c       **** 		SD_DESELECT;
 517:sd/sd.c       **** 		return STATUS_FAIL;
 518:sd/sd.c       **** 	}
 519:sd/sd.c       **** 
 520:sd/sd.c       **** 	/* Wait for ready */
 521:sd/sd.c       **** 	for(i = 0; ; ++i)
 522:sd/sd.c       **** 	{
 523:sd/sd.c       **** 		RETURN_IF(spi_xchg_try(0xFF, &response));
 524:sd/sd.c       **** 		if(response == 0xFE)
 525:sd/sd.c       **** 		{
 526:sd/sd.c       **** 			break;
 527:sd/sd.c       **** 		}
 528:sd/sd.c       **** 
 529:sd/sd.c       **** 		if(i == 0xFFFF)
 530:sd/sd.c       **** 		{
 531:sd/sd.c       **** 			SD_DESELECT;
 532:sd/sd.c       **** 			return STATUS_TIMEOUT;
 1918               		.loc 1 532 11 view .LVU507
 1919 0786 82E0      		ldi r24,lo8(2)
 1920 0788 00C0      		rjmp .L108
 1921               	.LVL182:
 1922               	.L119:
 1923               	.LBB132:
 1924               	.LBB131:
 1925               	.LBB130:
 167:sd/sd.c       **** 	return STATUS_OK;
 1926               		.loc 1 167 2 is_stmt 1 view .LVU508
 167:sd/sd.c       **** 	return STATUS_OK;
 1927               		.loc 1 167 7 is_stmt 0 view .LVU509
 1928 078a 8A83      		std Y+2,r24
 168:sd/sd.c       **** }
 1929               		.loc 1 168 2 is_stmt 1 view .LVU510
 1930               	.LVL183:
 168:sd/sd.c       **** }
 1931               		.loc 1 168 2 is_stmt 0 view .LVU511
 1932               	.LBE130:
 1933               	.LBE131:
 512:sd/sd.c       **** 		_sd_block_addr(block), &response));
 1934               		.loc 1 512 2 is_stmt 1 view .LVU512
 1935               	.LBE132:
 512:sd/sd.c       **** 		_sd_block_addr(block), &response));
 1936               		.loc 1 512 2 view .LVU513
 513:sd/sd.c       **** 	if(response)
 1937               		.loc 1 513 37 view .LVU514
 514:sd/sd.c       **** 	{
 1938               		.loc 1 514 2 view .LVU515
 521:sd/sd.c       **** 	{
 1939               		.loc 1 521 8 is_stmt 0 view .LVU516
 1940 078c E12C      		mov r14,__zero_reg__
 1941 078e F12C      		mov r15,__zero_reg__
 514:sd/sd.c       **** 	{
 1942               		.loc 1 514 4 view .LVU517
 1943 0790 8823      		tst r24
 1944 0792 01F0      		breq .L121
 516:sd/sd.c       **** 		return STATUS_FAIL;
 1945               		.loc 1 516 3 is_stmt 1 view .LVU518
 1946 0794 5C9A      		sbi 0xb,4
 517:sd/sd.c       **** 	}
 1947               		.loc 1 517 3 view .LVU519
 517:sd/sd.c       **** 	}
 1948               		.loc 1 517 10 is_stmt 0 view .LVU520
 1949 0796 81E0      		ldi r24,lo8(1)
 1950               	.LVL184:
 1951               	.L108:
 1952               	/* epilogue start */
 533:sd/sd.c       **** 		}
 534:sd/sd.c       **** 	}
 535:sd/sd.c       **** 
 536:sd/sd.c       **** 	/* Read data */
 537:sd/sd.c       **** 	for(i = 0; i < BLOCK_SIZE; ++i)
 538:sd/sd.c       **** 	{
 539:sd/sd.c       **** 		if(spi_rx_try(&data8[i]))
 540:sd/sd.c       **** 		{
 541:sd/sd.c       **** 			return STATUS_TIMEOUT;
 542:sd/sd.c       **** 		}
 543:sd/sd.c       **** 	}
 544:sd/sd.c       **** 
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 547:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 548:sd/sd.c       **** 	SD_DESELECT;
 549:sd/sd.c       **** 	return STATUS_OK;
 550:sd/sd.c       **** }
 1953               		.loc 1 550 1 view .LVU521
 1954 0798 0F90      		pop __tmp_reg__
 1955 079a 0F90      		pop __tmp_reg__
 1956 079c DF91      		pop r29
 1957 079e CF91      		pop r28
 1958 07a0 1F91      		pop r17
 1959 07a2 0F91      		pop r16
 1960               	.LVL185:
 1961               		.loc 1 550 1 view .LVU522
 1962 07a4 FF90      		pop r15
 1963 07a6 EF90      		pop r14
 1964 07a8 DF90      		pop r13
 1965 07aa CF90      		pop r12
 1966 07ac 0895      		ret
 1967               	.LVL186:
 1968               	.L123:
 521:sd/sd.c       **** 	{
 1969               		.loc 1 521 15 is_stmt 1 view .LVU523
 1970 07ae 8FEF      		ldi r24,-1
 1971 07b0 E81A      		sub r14,r24
 1972 07b2 F80A      		sbc r15,r24
 1973               	.LVL187:
 521:sd/sd.c       **** 	{
 1974               		.loc 1 521 2 view .LVU524
 1975               	.L121:
 523:sd/sd.c       **** 		if(response == 0xFE)
 1976               		.loc 1 523 3 view .LVU525
 1977               	.LBB133:
 523:sd/sd.c       **** 		if(response == 0xFE)
 1978               		.loc 1 523 3 view .LVU526
 1979 07b4 BE01      		movw r22,r28
 1980 07b6 6E5F      		subi r22,-2
 1981 07b8 7F4F      		sbci r23,-1
 1982 07ba 8FEF      		ldi r24,lo8(-1)
 1983 07bc 0E94 0000 		call spi_xchg_try
 1984               	.LVL188:
 523:sd/sd.c       **** 		if(response == 0xFE)
 1985               		.loc 1 523 3 view .LVU527
 1986 07c0 8111      		cpse r24,__zero_reg__
 1987 07c2 00C0      		rjmp .L108
 1988               	.LBE133:
 523:sd/sd.c       **** 		if(response == 0xFE)
 1989               		.loc 1 523 3 discriminator 2 view .LVU528
 523:sd/sd.c       **** 		if(response == 0xFE)
 1990               		.loc 1 523 43 discriminator 2 view .LVU529
 524:sd/sd.c       **** 		{
 1991               		.loc 1 524 3 discriminator 2 view .LVU530
 524:sd/sd.c       **** 		{
 1992               		.loc 1 524 5 is_stmt 0 discriminator 2 view .LVU531
 1993 07c4 8A81      		ldd r24,Y+2
 1994               	.LVL189:
 524:sd/sd.c       **** 		{
 1995               		.loc 1 524 5 discriminator 2 view .LVU532
 1996 07c6 8E3F      		cpi r24,lo8(-2)
 1997 07c8 01F0      		breq .L129
 529:sd/sd.c       **** 		{
 1998               		.loc 1 529 3 is_stmt 1 view .LVU533
 529:sd/sd.c       **** 		{
 1999               		.loc 1 529 5 is_stmt 0 view .LVU534
 2000 07ca 8FEF      		ldi r24,-1
 2001 07cc E816      		cp r14,r24
 2002 07ce F806      		cpc r15,r24
 2003 07d0 01F4      		brne .L123
 531:sd/sd.c       **** 			return STATUS_TIMEOUT;
 2004               		.loc 1 531 4 is_stmt 1 view .LVU535
 2005 07d2 5C9A      		sbi 0xb,4
 532:sd/sd.c       **** 		}
 2006               		.loc 1 532 4 view .LVU536
 532:sd/sd.c       **** 		}
 2007               		.loc 1 532 11 is_stmt 0 view .LVU537
 2008 07d4 00C0      		rjmp .L124
 2009               	.L129:
 537:sd/sd.c       **** 	{
 2010               		.loc 1 537 8 view .LVU538
 2011 07d6 E12C      		mov r14,__zero_reg__
 2012 07d8 F12C      		mov r15,__zero_reg__
 2013               	.LVL190:
 2014               	.L122:
 539:sd/sd.c       **** 		{
 2015               		.loc 1 539 3 is_stmt 1 view .LVU539
 539:sd/sd.c       **** 		{
 2016               		.loc 1 539 6 is_stmt 0 view .LVU540
 2017 07da C801      		movw r24,r16
 2018 07dc 8E0D      		add r24,r14
 2019 07de 9F1D      		adc r25,r15
 2020 07e0 0E94 0000 		call spi_rx_try
 2021               	.LVL191:
 539:sd/sd.c       **** 		{
 2022               		.loc 1 539 5 view .LVU541
 2023 07e4 8111      		cpse r24,__zero_reg__
 2024 07e6 00C0      		rjmp .L124
 537:sd/sd.c       **** 	{
 2025               		.loc 1 537 29 is_stmt 1 discriminator 2 view .LVU542
 2026 07e8 8FEF      		ldi r24,-1
 2027 07ea E81A      		sub r14,r24
 2028 07ec F80A      		sbc r15,r24
 2029               	.LVL192:
 537:sd/sd.c       **** 	{
 2030               		.loc 1 537 15 discriminator 2 view .LVU543
 2031 07ee E114      		cp r14,__zero_reg__
 2032 07f0 82E0      		ldi r24,2
 2033 07f2 F806      		cpc r15,r24
 2034 07f4 01F4      		brne .L122
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2035               		.loc 1 545 2 view .LVU544
 2036               	.LBB134:
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2037               		.loc 1 545 2 view .LVU545
 2038 07f6 8FEF      		ldi r24,lo8(-1)
 2039 07f8 0E94 0000 		call spi_tx_try
 2040               	.LVL193:
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2041               		.loc 1 545 2 view .LVU546
 2042 07fc 8111      		cpse r24,__zero_reg__
 2043 07fe 00C0      		rjmp .L108
 2044               	.LBE134:
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2045               		.loc 1 545 2 discriminator 2 view .LVU547
 545:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2046               		.loc 1 545 29 discriminator 2 view .LVU548
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2047               		.loc 1 546 2 discriminator 2 view .LVU549
 2048               	.LBB135:
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2049               		.loc 1 546 2 discriminator 2 view .LVU550
 2050 0800 8FEF      		ldi r24,lo8(-1)
 2051               	.LVL194:
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2052               		.loc 1 546 2 is_stmt 0 discriminator 2 view .LVU551
 2053 0802 0E94 0000 		call spi_tx_try
 2054               	.LVL195:
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2055               		.loc 1 546 2 is_stmt 1 discriminator 2 view .LVU552
 2056 0806 8111      		cpse r24,__zero_reg__
 2057 0808 00C0      		rjmp .L108
 2058               	.LBE135:
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2059               		.loc 1 546 2 discriminator 2 view .LVU553
 546:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2060               		.loc 1 546 29 discriminator 2 view .LVU554
 547:sd/sd.c       **** 	SD_DESELECT;
 2061               		.loc 1 547 2 discriminator 2 view .LVU555
 2062               	.LBB136:
 547:sd/sd.c       **** 	SD_DESELECT;
 2063               		.loc 1 547 2 discriminator 2 view .LVU556
 2064 080a 8FEF      		ldi r24,lo8(-1)
 2065               	.LVL196:
 547:sd/sd.c       **** 	SD_DESELECT;
 2066               		.loc 1 547 2 is_stmt 0 discriminator 2 view .LVU557
 2067 080c 0E94 0000 		call spi_tx_try
 2068               	.LVL197:
 547:sd/sd.c       **** 	SD_DESELECT;
 2069               		.loc 1 547 2 is_stmt 1 discriminator 2 view .LVU558
 2070 0810 8111      		cpse r24,__zero_reg__
 2071 0812 00C0      		rjmp .L108
 2072               	.LBE136:
 547:sd/sd.c       **** 	SD_DESELECT;
 2073               		.loc 1 547 2 discriminator 2 view .LVU559
 547:sd/sd.c       **** 	SD_DESELECT;
 2074               		.loc 1 547 29 discriminator 2 view .LVU560
 548:sd/sd.c       **** 	return STATUS_OK;
 2075               		.loc 1 548 2 discriminator 2 view .LVU561
 2076 0814 5C9A      		sbi 0xb,4
 549:sd/sd.c       **** }
 2077               		.loc 1 549 2 discriminator 2 view .LVU562
 549:sd/sd.c       **** }
 2078               		.loc 1 549 9 is_stmt 0 discriminator 2 view .LVU563
 2079 0816 00C0      		rjmp .L108
 2080               		.cfi_endproc
 2081               	.LFE21:
 2083               		.section	.progmem.data,"a",@progbits
 2086               	__c.0:
 2087 0000 466C 6167 		.string	"Flags              : %S%S"
 2087      7320 2020 
 2087      2020 2020 
 2087      2020 2020 
 2087      2020 203A 
 2090               	__c.1:
 2091 001a 4F72 6967 		.string	"Original, "
 2091      696E 616C 
 2091      2C20 00
 2094               	__c.2:
 2095 0025 436F 7079 		.string	"Copy, "
 2095      2C20 00
 2098               	__c.3:
 2099 002c 5265 7772 		.string	"Rewritable"
 2099      6974 6162 
 2099      6C65 00
 2102               	__c.4:
 2103 0037 5772 6974 		.string	"Write Protected"
 2103      6520 5072 
 2103      6F74 6563 
 2103      7465 6400 
 2106               	__c.5:
 2107 0047 5465 6D70 		.string	"Temporarily Write Protected"
 2107      6F72 6172 
 2107      696C 7920 
 2107      5772 6974 
 2107      6520 5072 
 2110               	__c.6:
 2111 0063 466F 726D 		.string	"Format             : 0x%02X"
 2111      6174 2020 
 2111      2020 2020 
 2111      2020 2020 
 2111      2020 203A 
 2114               	__c.7:
 2115 007f 4361 7061 		.string	"Capacity           : %ld blocks (%ld bytes)"
 2115      6369 7479 
 2115      2020 2020 
 2115      2020 2020 
 2115      2020 203A 
 2118               	__c.8:
 2119 00ab 4D61 6E75 		.string	"Manufacture Date   : %02d-%d"
 2119      6661 6374 
 2119      7572 6520 
 2119      4461 7465 
 2119      2020 203A 
 2122               	__c.9:
 2123 00c8 5365 7269 		.string	"Serial Number      : 0x%08lX"
 2123      616C 204E 
 2123      756D 6265 
 2123      7220 2020 
 2123      2020 203A 
 2126               	__c.10:
 2127 00e5 5265 7669 		.string	"Revision           : %c.%c"
 2127      7369 6F6E 
 2127      2020 2020 
 2127      2020 2020 
 2127      2020 203A 
 2130               	__c.11:
 2131 0100 5072 6F64 		.string	"Product Name       : %s"
 2131      7563 7420 
 2131      4E61 6D65 
 2131      2020 2020 
 2131      2020 203A 
 2134               	__c.12:
 2135 0118 4F45 4D20 		.string	"OEM                : %s"
 2135      2020 2020 
 2135      2020 2020 
 2135      2020 2020 
 2135      2020 203A 
 2138               	__c.13:
 2139 0130 4D61 6E75 		.string	"Manufacturer ID    : %02X"
 2139      6661 6374 
 2139      7572 6572 
 2139      2049 4420 
 2139      2020 203A 
 2142               	__c.14:
 2143 014a 426C 6F63 		.string	"Block Size         : %d"
 2143      6B20 5369 
 2143      7A65 2020 
 2143      2020 2020 
 2143      2020 203A 
 2146               	__c.15:
 2147 0162 4361 7264 		.string	"Card Type          : %S"
 2147      2054 7970 
 2147      6520 2020 
 2147      2020 2020 
 2147      2020 203A 
 2150               	__c.16:
 2151 017a 5344 00   		.string	"SD"
 2154               	__c.17:
 2155 017d 5344 4843 		.string	"SDHC"
 2155      00
 2158               	__c.18:
 2159 0182 5344 2074 		.string	"SD timeout"
 2159      696D 656F 
 2159      7574 00
 2162               	__c.19:
 2163 018d 5344 2065 		.string	"SD error"
 2163      7272 6F72 
 2163      00
 2166               	__c.20:
 2167 0196 5265 6164 		.string	"Reading SD card parameters"
 2167      696E 6720 
 2167      5344 2063 
 2167      6172 6420 
 2167      7061 7261 
 2170               	__c.21:
 2171 01b1 5344 2063 		.string	"SD card initialized"
 2171      6172 6420 
 2171      696E 6974 
 2171      6961 6C69 
 2171      7A65 6400 
 2174               	__c.22:
 2175 01c5 5344 2064 		.string	"SD driver starting"
 2175      7269 7665 
 2175      7220 7374 
 2175      6172 7469 
 2175      6E67 00
 2176               		.local	_format
 2177               		.comm	_format,1,1
 2178               		.local	_flag_write_protect_temp
 2179               		.comm	_flag_write_protect_temp,1,1
 2180               		.local	_flag_write_protect
 2181               		.comm	_flag_write_protect,1,1
 2182               		.local	_flag_copy
 2183               		.comm	_flag_copy,1,1
 2184               		.local	_manufacturing_month
 2185               		.comm	_manufacturing_month,1,1
 2186               		.local	_manufacturing_year
 2187               		.comm	_manufacturing_year,1,1
 2188               		.local	_revision
 2189               		.comm	_revision,1,1
 2190               		.local	_manufacturer
 2191               		.comm	_manufacturer,1,1
 2192               		.local	_card_type
 2193               		.comm	_card_type,1,1
 2194               		.local	_product
 2195               		.comm	_product,6,1
 2196               		.local	_oem
 2197               		.comm	_oem,3,1
 2198               		.local	_capacity
 2199               		.comm	_capacity,4,1
 2200               		.local	_serial
 2201               		.comm	_serial,4,1
 2202               		.text
 2203               	.Letext0:
 2204               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 2205               		.file 5 "../../types/types.h"
 2206               		.file 6 "../../status/status.h"
 2207               		.file 7 "spi/spi.h"
 2208               		.file 8 "logger/logger.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sd.c
     /tmp/ccPA1bPt.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccPA1bPt.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccPA1bPt.s:4      *ABS*:0000003f __SREG__
     /tmp/ccPA1bPt.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccPA1bPt.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccPA1bPt.s:12     .text:00000000 _sd_command
     /tmp/ccPA1bPt.s:16     .text:00000000 .Loc.0
     /tmp/ccPA1bPt.s:17     .text:00000000 L0
     /tmp/ccPA1bPt.s:18     .text:00000000 .Loc.1
     /tmp/ccPA1bPt.s:39     .text:00000010 .Loc.2
     /tmp/ccPA1bPt.s:40     .text:00000010 .Loc.3
     /tmp/ccPA1bPt.s:43     .text:00000012 .Loc.4
     /tmp/ccPA1bPt.s:46     .text:00000016 .Loc.5
     /tmp/ccPA1bPt.s:51     .text:0000001e .Loc.6
     /tmp/ccPA1bPt.s:55     .text:00000024 .Loc.7
     /tmp/ccPA1bPt.s:59     .text:0000002a .Loc.8
     /tmp/ccPA1bPt.s:63     .text:00000030 .Loc.9
     /tmp/ccPA1bPt.s:67     .text:00000036 .Loc.10
     /tmp/ccPA1bPt.s:68     .text:00000036 .Loc.11
     /tmp/ccPA1bPt.s:70     .text:00000038 .Loc.12
     /tmp/ccPA1bPt.s:73     .text:0000003c .Loc.13
     /tmp/ccPA1bPt.s:75     .text:0000003e .Loc.14
     /tmp/ccPA1bPt.s:78     .text:00000042 .Loc.15
     /tmp/ccPA1bPt.s:81     .text:00000044 .Loc.16
     /tmp/ccPA1bPt.s:84     .text:00000048 .Loc.17
     /tmp/ccPA1bPt.s:85     .text:00000048 .Loc.18
     /tmp/ccPA1bPt.s:86     .text:00000048 .Loc.19
     /tmp/ccPA1bPt.s:90     .text:0000004a .Loc.20
     /tmp/ccPA1bPt.s:94     .text:00000050 .Loc.21
     /tmp/ccPA1bPt.s:97     .text:00000054 .Loc.22
     /tmp/ccPA1bPt.s:99     .text:00000054 .Loc.23
     /tmp/ccPA1bPt.s:102    .text:00000056 .Loc.24
     /tmp/ccPA1bPt.s:108    .text:0000005a .Loc.25
     /tmp/ccPA1bPt.s:114    .text:00000064 L0
     /tmp/ccPA1bPt.s:118    .text:00000064 _sd_error
     /tmp/ccPA1bPt.s:120    .text:00000064 .Loc.26
     /tmp/ccPA1bPt.s:121    .text:00000064 L0
     /tmp/ccPA1bPt.s:126    .text:00000064 .Loc.27
     /tmp/ccPA1bPt.s:128    .text:00000066 .Loc.28
     /tmp/ccPA1bPt.s:130    .text:00000066 .Loc.29
     /tmp/ccPA1bPt.s:131    .text:00000066 .Loc.30
     /tmp/ccPA1bPt.s:133    .text:00000066 .Loc.31
     /tmp/ccPA1bPt.s:2162   .progmem.data:0000018d __c.19
     /tmp/ccPA1bPt.s:142    .text:00000072 .Loc.32
     /tmp/ccPA1bPt.s:148    .text:00000078 L0
     /tmp/ccPA1bPt.s:152    .text:00000078 _sd_timeout
     /tmp/ccPA1bPt.s:154    .text:00000078 .Loc.33
     /tmp/ccPA1bPt.s:155    .text:00000078 L0
     /tmp/ccPA1bPt.s:160    .text:00000078 .Loc.34
     /tmp/ccPA1bPt.s:162    .text:0000007a .Loc.35
     /tmp/ccPA1bPt.s:164    .text:0000007a .Loc.36
     /tmp/ccPA1bPt.s:165    .text:0000007a .Loc.37
     /tmp/ccPA1bPt.s:167    .text:0000007a .Loc.38
     /tmp/ccPA1bPt.s:2158   .progmem.data:00000182 __c.18
     /tmp/ccPA1bPt.s:176    .text:00000086 .Loc.39
     /tmp/ccPA1bPt.s:182    .text:0000008c L0
     /tmp/ccPA1bPt.s:187    .text:0000008c sd_init
     /tmp/ccPA1bPt.s:189    .text:0000008c .Loc.40
     /tmp/ccPA1bPt.s:190    .text:0000008c L0
     /tmp/ccPA1bPt.s:225    .text:000000a0 .Loc.41
     /tmp/ccPA1bPt.s:227    .text:000000a0 .Loc.42
     /tmp/ccPA1bPt.s:228    .text:000000a0 .Loc.43
     /tmp/ccPA1bPt.s:230    .text:000000a0 .Loc.44
     /tmp/ccPA1bPt.s:2174   .progmem.data:000001c5 __c.22
     /tmp/ccPA1bPt.s:240    .text:000000ac .Loc.45
     /tmp/ccPA1bPt.s:241    .text:000000ac .Loc.46
     /tmp/ccPA1bPt.s:242    .text:000000ac .Loc.47
     /tmp/ccPA1bPt.s:243    .text:000000ac .Loc.48
     /tmp/ccPA1bPt.s:245    .text:000000ae .Loc.49
     /tmp/ccPA1bPt.s:248    .text:000000ae .Loc.50
     /tmp/ccPA1bPt.s:250    .text:000000ae .Loc.51
     /tmp/ccPA1bPt.s:252    .text:000000b0 .Loc.52
     /tmp/ccPA1bPt.s:255    .text:000000b4 .Loc.53
     /tmp/ccPA1bPt.s:256    .text:000000b4 .Loc.54
     /tmp/ccPA1bPt.s:262    .text:000000ba .Loc.55
     /tmp/ccPA1bPt.s:263    .text:000000ba .Loc.56
     /tmp/ccPA1bPt.s:2191   .bss:00000008 _card_type
     /tmp/ccPA1bPt.s:265    .text:000000be .Loc.57
     /tmp/ccPA1bPt.s:267    .text:000000be .Loc.58
     /tmp/ccPA1bPt.s:268    .text:000000be .Loc.59
     /tmp/ccPA1bPt.s:276    .text:000000c6 .Loc.60
     /tmp/ccPA1bPt.s:280    .text:000000cc .Loc.61
     /tmp/ccPA1bPt.s:281    .text:000000cc .Loc.62
     /tmp/ccPA1bPt.s:285    .text:000000d0 .Loc.63
     /tmp/ccPA1bPt.s:289    .text:000000d6 .Loc.64
     /tmp/ccPA1bPt.s:291    .text:000000d8 .Loc.65
     /tmp/ccPA1bPt.s:293    .text:000000d8 .Loc.66
     /tmp/ccPA1bPt.s:298    .text:000000dc .Loc.67
     /tmp/ccPA1bPt.s:299    .text:000000dc .Loc.68
     /tmp/ccPA1bPt.s:306    .text:000000e8 .Loc.69
     /tmp/ccPA1bPt.s:309    .text:000000ec .Loc.70
     /tmp/ccPA1bPt.s:310    .text:000000ec .Loc.71
     /tmp/ccPA1bPt.s:315    .text:000000f4 .Loc.72
     /tmp/ccPA1bPt.s:319    .text:000000f8 .Loc.73
     /tmp/ccPA1bPt.s:322    .text:000000fa .Loc.74
     /tmp/ccPA1bPt.s:323    .text:000000fa .Loc.75
     /tmp/ccPA1bPt.s:326    .text:000000fc .Loc.76
     /tmp/ccPA1bPt.s:327    .text:000000fc .Loc.77
     /tmp/ccPA1bPt.s:335    .text:0000010a .Loc.78
     /tmp/ccPA1bPt.s:338    .text:0000010e .Loc.79
     /tmp/ccPA1bPt.s:342    .text:00000114 .Loc.80
     /tmp/ccPA1bPt.s:346    .text:0000011a .Loc.81
     /tmp/ccPA1bPt.s:347    .text:0000011a .Loc.82
     /tmp/ccPA1bPt.s:351    .text:00000120 .Loc.83
     /tmp/ccPA1bPt.s:355    .text:00000124 .Loc.84
     /tmp/ccPA1bPt.s:359    .text:00000128 .Loc.85
     /tmp/ccPA1bPt.s:360    .text:00000128 .Loc.86
     /tmp/ccPA1bPt.s:364    .text:0000012e .Loc.87
     /tmp/ccPA1bPt.s:368    .text:00000132 .Loc.88
     /tmp/ccPA1bPt.s:369    .text:00000132 .Loc.89
     /tmp/ccPA1bPt.s:371    .text:00000136 .Loc.90
     /tmp/ccPA1bPt.s:374    .text:0000013a .Loc.91
     /tmp/ccPA1bPt.s:378    .text:00000140 .Loc.92
     /tmp/ccPA1bPt.s:381    .text:00000144 .Loc.93
     /tmp/ccPA1bPt.s:383    .text:00000144 .Loc.94
     /tmp/ccPA1bPt.s:384    .text:00000144 .Loc.95
     /tmp/ccPA1bPt.s:388    .text:0000014a .Loc.96
     /tmp/ccPA1bPt.s:389    .text:0000014a .Loc.97
     /tmp/ccPA1bPt.s:393    .text:0000014e .Loc.98
     /tmp/ccPA1bPt.s:406    .text:00000164 .Loc.99
     /tmp/ccPA1bPt.s:410    .text:00000166 .Loc.100
     /tmp/ccPA1bPt.s:413    .text:0000016a .Loc.101
     /tmp/ccPA1bPt.s:416    .text:0000016e .Loc.102
     /tmp/ccPA1bPt.s:419    .text:00000172 .Loc.103
     /tmp/ccPA1bPt.s:420    .text:00000172 .Loc.104
     /tmp/ccPA1bPt.s:425    .text:0000017a .Loc.105
     /tmp/ccPA1bPt.s:429    .text:0000017e .Loc.106
     /tmp/ccPA1bPt.s:433    .text:00000182 .Loc.107
     /tmp/ccPA1bPt.s:434    .text:00000182 .Loc.108
     /tmp/ccPA1bPt.s:438    .text:00000184 .Loc.109
     /tmp/ccPA1bPt.s:442    .text:0000018a .Loc.110
     /tmp/ccPA1bPt.s:447    .text:00000190 .Loc.111
     /tmp/ccPA1bPt.s:454    .text:0000019c .Loc.112
     /tmp/ccPA1bPt.s:455    .text:0000019c .Loc.113
     /tmp/ccPA1bPt.s:462    .text:000001a8 .Loc.114
     /tmp/ccPA1bPt.s:465    .text:000001ac .Loc.115
     /tmp/ccPA1bPt.s:466    .text:000001ac .Loc.116
     /tmp/ccPA1bPt.s:472    .text:000001b4 .Loc.117
     /tmp/ccPA1bPt.s:473    .text:000001b4 .Loc.118
     /tmp/ccPA1bPt.s:478    .text:000001b8 .Loc.119
     /tmp/ccPA1bPt.s:479    .text:000001b8 .Loc.120
     /tmp/ccPA1bPt.s:482    .text:000001bc .Loc.121
     /tmp/ccPA1bPt.s:485    .text:000001c0 .Loc.122
     /tmp/ccPA1bPt.s:486    .text:000001c0 .Loc.123
     /tmp/ccPA1bPt.s:493    .text:000001cc .Loc.124
     /tmp/ccPA1bPt.s:495    .text:000001ce .Loc.125
     /tmp/ccPA1bPt.s:499    .text:000001d2 .Loc.126
     /tmp/ccPA1bPt.s:500    .text:000001d2 .Loc.127
     /tmp/ccPA1bPt.s:504    .text:000001d8 .Loc.128
     /tmp/ccPA1bPt.s:507    .text:000001dc .Loc.129
     /tmp/ccPA1bPt.s:508    .text:000001dc .Loc.130
     /tmp/ccPA1bPt.s:513    .text:000001e6 .Loc.131
     /tmp/ccPA1bPt.s:517    .text:000001ec .Loc.132
     /tmp/ccPA1bPt.s:521    .text:000001f2 .Loc.133
     /tmp/ccPA1bPt.s:526    .text:000001f8 .Loc.134
     /tmp/ccPA1bPt.s:527    .text:000001f8 .Loc.135
     /tmp/ccPA1bPt.s:535    .text:00000206 .Loc.136
     /tmp/ccPA1bPt.s:537    .text:00000208 .Loc.137
     /tmp/ccPA1bPt.s:541    .text:0000020c .Loc.138
     /tmp/ccPA1bPt.s:543    .text:0000020e .Loc.139
     /tmp/ccPA1bPt.s:546    .text:00000212 .Loc.140
     /tmp/ccPA1bPt.s:550    .text:00000212 .Loc.141
     /tmp/ccPA1bPt.s:552    .text:00000212 .Loc.142
     /tmp/ccPA1bPt.s:553    .text:00000212 .Loc.143
     /tmp/ccPA1bPt.s:554    .text:00000212 .Loc.144
     /tmp/ccPA1bPt.s:555    .text:00000212 .Loc.145
     /tmp/ccPA1bPt.s:556    .text:00000212 .Loc.146
     /tmp/ccPA1bPt.s:557    .text:00000212 .Loc.147
     /tmp/ccPA1bPt.s:560    .text:00000212 .Loc.148
     /tmp/ccPA1bPt.s:569    .text:00000216 .Loc.149
     /tmp/ccPA1bPt.s:574    .text:0000021a .Loc.150
     /tmp/ccPA1bPt.s:577    .text:0000021a .Loc.151
     /tmp/ccPA1bPt.s:580    .text:0000021a .Loc.152
     /tmp/ccPA1bPt.s:582    .text:0000021a .Loc.153
     /tmp/ccPA1bPt.s:590    .text:00000220 .Loc.154
     /tmp/ccPA1bPt.s:594    .text:00000220 .Loc.155
     /tmp/ccPA1bPt.s:595    .text:00000220 .Loc.156
     /tmp/ccPA1bPt.s:599    .text:00000224 .Loc.157
     /tmp/ccPA1bPt.s:604    .text:0000022a .Loc.158
     /tmp/ccPA1bPt.s:608    .text:0000022a .Loc.159
     /tmp/ccPA1bPt.s:610    .text:0000022a .Loc.160
     /tmp/ccPA1bPt.s:611    .text:0000022a .Loc.161
     /tmp/ccPA1bPt.s:613    .text:0000022a .Loc.162
     /tmp/ccPA1bPt.s:2170   .progmem.data:000001b1 __c.21
     /tmp/ccPA1bPt.s:622    .text:00000236 .Loc.163
     /tmp/ccPA1bPt.s:624    .text:00000236 .Loc.164
     /tmp/ccPA1bPt.s:625    .text:00000236 .Loc.165
     /tmp/ccPA1bPt.s:627    .text:00000236 .Loc.166
     /tmp/ccPA1bPt.s:2166   .progmem.data:00000196 __c.20
     /tmp/ccPA1bPt.s:637    .text:00000242 .Loc.167
     /tmp/ccPA1bPt.s:638    .text:00000242 .Loc.168
     /tmp/ccPA1bPt.s:639    .text:00000242 .Loc.169
     /tmp/ccPA1bPt.s:642    .text:00000246 .Loc.170
     /tmp/ccPA1bPt.s:644    .text:00000248 .Loc.171
     /tmp/ccPA1bPt.s:651    .text:00000254 .Loc.172
     /tmp/ccPA1bPt.s:652    .text:00000254 .Loc.173
     /tmp/ccPA1bPt.s:653    .text:00000254 .Loc.174
     /tmp/ccPA1bPt.s:659    .text:0000025c .Loc.175
     /tmp/ccPA1bPt.s:664    .text:00000260 .Loc.176
     /tmp/ccPA1bPt.s:665    .text:00000260 .Loc.177
     /tmp/ccPA1bPt.s:669    .text:00000266 .Loc.178
     /tmp/ccPA1bPt.s:2195   .bss:0000000f _oem
     /tmp/ccPA1bPt.s:2193   .bss:00000009 _product
     /tmp/ccPA1bPt.s:680    .text:0000027a .Loc.179
     /tmp/ccPA1bPt.s:682    .text:0000027c .Loc.180
     /tmp/ccPA1bPt.s:688    .text:00000282 .Loc.181
     /tmp/ccPA1bPt.s:689    .text:00000282 .Loc.182
     /tmp/ccPA1bPt.s:693    .text:00000288 .Loc.183
     /tmp/ccPA1bPt.s:695    .text:0000028c L0
     /tmp/ccPA1bPt.s:732    .text:000002ac .Loc.184
     /tmp/ccPA1bPt.s:733    .text:000002ac .Loc.185
     /tmp/ccPA1bPt.s:738    .text:000002b2 .Loc.186
     /tmp/ccPA1bPt.s:741    .text:000002b6 .Loc.187
     /tmp/ccPA1bPt.s:747    .text:000002bc .Loc.188
     /tmp/ccPA1bPt.s:748    .text:000002bc .Loc.189
     /tmp/ccPA1bPt.s:2189   .bss:00000007 _manufacturer
     /tmp/ccPA1bPt.s:750    .text:000002c0 .Loc.190
     /tmp/ccPA1bPt.s:751    .text:000002c0 .Loc.191
     /tmp/ccPA1bPt.s:753    .text:000002c0 .Loc.192
     /tmp/ccPA1bPt.s:757    .text:000002c6 .Loc.193
     /tmp/ccPA1bPt.s:758    .text:000002c6 .Loc.194
     /tmp/ccPA1bPt.s:761    .text:000002c8 .Loc.195
     /tmp/ccPA1bPt.s:764    .text:000002cc .Loc.196
     /tmp/ccPA1bPt.s:765    .text:000002cc .Loc.197
     /tmp/ccPA1bPt.s:769    .text:000002ce .Loc.198
     /tmp/ccPA1bPt.s:770    .text:000002ce .Loc.199
     /tmp/ccPA1bPt.s:774    .text:000002d4 .Loc.200
     /tmp/ccPA1bPt.s:775    .text:000002d4 .Loc.201
     /tmp/ccPA1bPt.s:778    .text:000002d6 .Loc.202
     /tmp/ccPA1bPt.s:787    .text:000002e4 .Loc.203
     /tmp/ccPA1bPt.s:790    .text:000002e6 .Loc.204
     /tmp/ccPA1bPt.s:794    .text:000002e8 .Loc.205
     /tmp/ccPA1bPt.s:795    .text:000002e8 .Loc.206
     /tmp/ccPA1bPt.s:798    .text:000002ec .Loc.207
     /tmp/ccPA1bPt.s:799    .text:000002ec .Loc.208
     /tmp/ccPA1bPt.s:802    .text:000002ee .Loc.209
     /tmp/ccPA1bPt.s:808    .text:000002f6 .Loc.210
     /tmp/ccPA1bPt.s:809    .text:000002f6 .Loc.211
     /tmp/ccPA1bPt.s:2187   .bss:00000006 _revision
     /tmp/ccPA1bPt.s:811    .text:000002fa .Loc.212
     /tmp/ccPA1bPt.s:812    .text:000002fa .Loc.213
     /tmp/ccPA1bPt.s:814    .text:000002fa .Loc.214
     /tmp/ccPA1bPt.s:818    .text:00000300 .Loc.215
     /tmp/ccPA1bPt.s:819    .text:00000300 .Loc.216
     /tmp/ccPA1bPt.s:822    .text:00000302 .Loc.217
     /tmp/ccPA1bPt.s:825    .text:00000306 .Loc.218
     /tmp/ccPA1bPt.s:826    .text:00000306 .Loc.219
     /tmp/ccPA1bPt.s:830    .text:00000308 .Loc.220
     /tmp/ccPA1bPt.s:831    .text:00000308 .Loc.221
     /tmp/ccPA1bPt.s:835    .text:0000030e .Loc.222
     /tmp/ccPA1bPt.s:847    .text:0000031e .Loc.223
     /tmp/ccPA1bPt.s:2199   .bss:00000016 _serial
     /tmp/ccPA1bPt.s:860    .text:00000346 .Loc.224
     /tmp/ccPA1bPt.s:861    .text:00000346 .Loc.225
     /tmp/ccPA1bPt.s:864    .text:00000348 .Loc.226
     /tmp/ccPA1bPt.s:877    .text:0000035c .Loc.227
     /tmp/ccPA1bPt.s:878    .text:0000035c .Loc.228
     /tmp/ccPA1bPt.s:881    .text:0000035e .Loc.229
     /tmp/ccPA1bPt.s:883    .text:00000360 .Loc.230
     /tmp/ccPA1bPt.s:2185   .bss:00000005 _manufacturing_year
     /tmp/ccPA1bPt.s:885    .text:00000364 .Loc.231
     /tmp/ccPA1bPt.s:886    .text:00000364 .Loc.232
     /tmp/ccPA1bPt.s:888    .text:00000364 .Loc.233
     /tmp/ccPA1bPt.s:892    .text:0000036a .Loc.234
     /tmp/ccPA1bPt.s:893    .text:0000036a .Loc.235
     /tmp/ccPA1bPt.s:897    .text:00000370 .Loc.236
     /tmp/ccPA1bPt.s:899    .text:00000370 .Loc.237
     /tmp/ccPA1bPt.s:900    .text:00000370 .Loc.238
     /tmp/ccPA1bPt.s:907    .text:00000380 .Loc.239
     /tmp/ccPA1bPt.s:908    .text:00000380 .Loc.240
     /tmp/ccPA1bPt.s:911    .text:00000382 .Loc.241
     /tmp/ccPA1bPt.s:2183   .bss:00000004 _manufacturing_month
     /tmp/ccPA1bPt.s:913    .text:00000386 .Loc.242
     /tmp/ccPA1bPt.s:914    .text:00000386 .Loc.243
     /tmp/ccPA1bPt.s:916    .text:00000386 .Loc.244
     /tmp/ccPA1bPt.s:926    .text:00000398 .Loc.245
     /tmp/ccPA1bPt.s:931    .text:0000039c .Loc.246
     /tmp/ccPA1bPt.s:934    .text:0000039e .Loc.247
     /tmp/ccPA1bPt.s:937    .text:000003a2 .Loc.248
     /tmp/ccPA1bPt.s:949    .text:000003b6 .Loc.249
     /tmp/ccPA1bPt.s:951    .text:000003b6 .Loc.250
     /tmp/ccPA1bPt.s:952    .text:000003b6 .Loc.251
     /tmp/ccPA1bPt.s:953    .text:000003b6 .Loc.252
     /tmp/ccPA1bPt.s:954    .text:000003b6 .Loc.253
     /tmp/ccPA1bPt.s:960    .text:000003be .Loc.254
     /tmp/ccPA1bPt.s:963    .text:000003c2 .Loc.255
     /tmp/ccPA1bPt.s:964    .text:000003c2 .Loc.256
     /tmp/ccPA1bPt.s:965    .text:000003c2 .Loc.257
     /tmp/ccPA1bPt.s:970    .text:000003c6 .Loc.258
     /tmp/ccPA1bPt.s:971    .text:000003c6 .Loc.259
     /tmp/ccPA1bPt.s:975    .text:000003cc .Loc.260
     /tmp/ccPA1bPt.s:978    .text:000003d0 .Loc.261
     /tmp/ccPA1bPt.s:981    .text:000003d2 .Loc.262
     /tmp/ccPA1bPt.s:983    .text:000003d4 .Loc.263
     /tmp/ccPA1bPt.s:986    .text:000003d6 .Loc.264
     /tmp/ccPA1bPt.s:991    .text:000003da .Loc.265
     /tmp/ccPA1bPt.s:992    .text:000003da .Loc.266
     /tmp/ccPA1bPt.s:996    .text:000003e0 .Loc.267
     /tmp/ccPA1bPt.s:997    .text:000003e0 .Loc.268
     /tmp/ccPA1bPt.s:1001   .text:000003e4 .Loc.269
     /tmp/ccPA1bPt.s:1002   .text:000003e4 .Loc.270
     /tmp/ccPA1bPt.s:1008   .text:000003ee .Loc.271
     /tmp/ccPA1bPt.s:1010   .text:000003ee .Loc.272
     /tmp/ccPA1bPt.s:1011   .text:000003ee .Loc.273
     /tmp/ccPA1bPt.s:1016   .text:000003f2 .Loc.274
     /tmp/ccPA1bPt.s:1017   .text:000003f2 .Loc.275
     /tmp/ccPA1bPt.s:1022   .text:000003f8 .Loc.276
     /tmp/ccPA1bPt.s:1025   .text:000003fc .Loc.277
     /tmp/ccPA1bPt.s:1031   .text:00000402 .Loc.278
     /tmp/ccPA1bPt.s:1032   .text:00000402 .Loc.279
     /tmp/ccPA1bPt.s:1035   .text:00000406 .Loc.280
     /tmp/ccPA1bPt.s:1036   .text:00000406 .Loc.281
     /tmp/ccPA1bPt.s:1039   .text:0000040a .Loc.282
     /tmp/ccPA1bPt.s:1042   .text:0000040c .Loc.283
     /tmp/ccPA1bPt.s:1043   .text:0000040c .Loc.284
     /tmp/ccPA1bPt.s:2181   .bss:00000003 _flag_copy
     /tmp/ccPA1bPt.s:1046   .text:00000410 .Loc.285
     /tmp/ccPA1bPt.s:1047   .text:00000410 .Loc.286
     /tmp/ccPA1bPt.s:1049   .text:00000412 .Loc.287
     /tmp/ccPA1bPt.s:1050   .text:00000412 .Loc.288
     /tmp/ccPA1bPt.s:2179   .bss:00000002 _flag_write_protect
     /tmp/ccPA1bPt.s:1053   .text:00000416 .Loc.289
     /tmp/ccPA1bPt.s:1054   .text:00000416 .Loc.290
     /tmp/ccPA1bPt.s:1056   .text:00000418 .Loc.291
     /tmp/ccPA1bPt.s:1057   .text:00000418 .Loc.292
     /tmp/ccPA1bPt.s:2177   .bss:00000001 _flag_write_protect_temp
     /tmp/ccPA1bPt.s:1060   .text:0000041c .Loc.293
     /tmp/ccPA1bPt.s:1061   .text:0000041c .Loc.294
     /tmp/ccPA1bPt.s:1068   .text:00000428 .Loc.295
                             .bss:00000000 _format
     /tmp/ccPA1bPt.s:1070   .text:0000042c .Loc.296
     /tmp/ccPA1bPt.s:1072   .text:0000042c .Loc.297
     /tmp/ccPA1bPt.s:1073   .text:0000042c .Loc.298
     /tmp/ccPA1bPt.s:1078   .text:00000430 .Loc.299
     /tmp/ccPA1bPt.s:1079   .text:00000430 .Loc.300
     /tmp/ccPA1bPt.s:1081   .text:00000434 L0
     /tmp/ccPA1bPt.s:1083   .text:00000436 .Loc.301
     /tmp/ccPA1bPt.s:1085   .text:0000043a L0
     /tmp/ccPA1bPt.s:1090   .text:00000444 L0
     /tmp/ccPA1bPt.s:1094   .text:00000446 .Loc.302
     /tmp/ccPA1bPt.s:1097   .text:00000448 .Loc.303
     /tmp/ccPA1bPt.s:1100   .text:0000044c .Loc.304
     /tmp/ccPA1bPt.s:1103   .text:0000044e .Loc.305
     /tmp/ccPA1bPt.s:1106   .text:0000044e .Loc.306
     /tmp/ccPA1bPt.s:1108   .text:0000044e .Loc.307
     /tmp/ccPA1bPt.s:2154   .progmem.data:0000017d __c.17
     /tmp/ccPA1bPt.s:1115   .text:0000045a .Loc.308
     /tmp/ccPA1bPt.s:1117   .text:0000045a .Loc.309
     /tmp/ccPA1bPt.s:1118   .text:0000045a .Loc.310
     /tmp/ccPA1bPt.s:1120   .text:0000045a .Loc.311
     /tmp/ccPA1bPt.s:2146   .progmem.data:00000162 __c.15
     /tmp/ccPA1bPt.s:1133   .text:0000046a .Loc.312
     /tmp/ccPA1bPt.s:1135   .text:0000046a .Loc.313
     /tmp/ccPA1bPt.s:1136   .text:0000046a .Loc.314
     /tmp/ccPA1bPt.s:1138   .text:0000046a .Loc.315
     /tmp/ccPA1bPt.s:2142   .progmem.data:0000014a __c.14
     /tmp/ccPA1bPt.s:1152   .text:0000047c .Loc.316
     /tmp/ccPA1bPt.s:1154   .text:0000047c .Loc.317
     /tmp/ccPA1bPt.s:1155   .text:0000047c .Loc.318
     /tmp/ccPA1bPt.s:1157   .text:0000047c .Loc.319
     /tmp/ccPA1bPt.s:2138   .progmem.data:00000130 __c.13
     /tmp/ccPA1bPt.s:1171   .text:00000490 .Loc.320
     /tmp/ccPA1bPt.s:1173   .text:00000490 .Loc.321
     /tmp/ccPA1bPt.s:1174   .text:00000490 .Loc.322
     /tmp/ccPA1bPt.s:1176   .text:00000490 .Loc.323
     /tmp/ccPA1bPt.s:2134   .progmem.data:00000118 __c.12
     /tmp/ccPA1bPt.s:1191   .text:000004a4 .Loc.324
     /tmp/ccPA1bPt.s:1193   .text:000004a4 .Loc.325
     /tmp/ccPA1bPt.s:1194   .text:000004a4 .Loc.326
     /tmp/ccPA1bPt.s:1196   .text:000004a4 .Loc.327
     /tmp/ccPA1bPt.s:2130   .progmem.data:00000100 __c.11
     /tmp/ccPA1bPt.s:1211   .text:000004b8 .Loc.328
     /tmp/ccPA1bPt.s:1212   .text:000004b8 .Loc.329
     /tmp/ccPA1bPt.s:1215   .text:000004bc .Loc.330
     /tmp/ccPA1bPt.s:1216   .text:000004bc .Loc.331
     /tmp/ccPA1bPt.s:1218   .text:000004bc .Loc.332
     /tmp/ccPA1bPt.s:1226   .text:000004c6 .Loc.333
     /tmp/ccPA1bPt.s:1229   .text:000004ca .Loc.334
     /tmp/ccPA1bPt.s:2126   .progmem.data:000000e5 __c.10
     /tmp/ccPA1bPt.s:1243   .text:000004dc .Loc.335
     /tmp/ccPA1bPt.s:1245   .text:000004dc .Loc.336
     /tmp/ccPA1bPt.s:1246   .text:000004dc .Loc.337
     /tmp/ccPA1bPt.s:1248   .text:000004dc .Loc.338
     /tmp/ccPA1bPt.s:2122   .progmem.data:000000c8 __c.9
     /tmp/ccPA1bPt.s:1269   .text:00000500 .Loc.339
     /tmp/ccPA1bPt.s:1271   .text:00000500 .Loc.340
     /tmp/ccPA1bPt.s:1272   .text:00000500 .Loc.341
     /tmp/ccPA1bPt.s:1274   .text:00000500 .Loc.342
     /tmp/ccPA1bPt.s:2118   .progmem.data:000000ab __c.8
     /tmp/ccPA1bPt.s:1306   .text:00000534 .Loc.343
     /tmp/ccPA1bPt.s:2197   .bss:00000012 _capacity
     /tmp/ccPA1bPt.s:1312   .text:00000544 .Loc.344
     /tmp/ccPA1bPt.s:1313   .text:00000544 .Loc.345
     /tmp/ccPA1bPt.s:1315   .text:00000544 .Loc.346
     /tmp/ccPA1bPt.s:2114   .progmem.data:0000007f __c.7
     /tmp/ccPA1bPt.s:1350   .text:00000572 .Loc.347
     /tmp/ccPA1bPt.s:1352   .text:00000572 .Loc.348
     /tmp/ccPA1bPt.s:1353   .text:00000572 .Loc.349
     /tmp/ccPA1bPt.s:1355   .text:00000572 .Loc.350
     /tmp/ccPA1bPt.s:2110   .progmem.data:00000063 __c.6
     /tmp/ccPA1bPt.s:1369   .text:00000586 .Loc.351
     /tmp/ccPA1bPt.s:1383   .text:000005a0 .Loc.352
     /tmp/ccPA1bPt.s:1386   .text:000005a8 L0
     /tmp/ccPA1bPt.s:2102   .progmem.data:00000037 __c.4
     /tmp/ccPA1bPt.s:1391   .text:000005ae .Loc.353
     /tmp/ccPA1bPt.s:1394   .text:000005b6 L0
     /tmp/ccPA1bPt.s:2094   .progmem.data:00000025 __c.2
     /tmp/ccPA1bPt.s:1400   .text:000005bc .Loc.354
     /tmp/ccPA1bPt.s:1401   .text:000005bc .Loc.355
     /tmp/ccPA1bPt.s:1403   .text:000005bc .Loc.356
     /tmp/ccPA1bPt.s:2086   .progmem.data:00000000 __c.0
     /tmp/ccPA1bPt.s:1422   .text:000005d0 .Loc.357
     /tmp/ccPA1bPt.s:1434   .text:000005e0 .Loc.358
     /tmp/ccPA1bPt.s:1438   .text:000005e4 .Loc.359
     /tmp/ccPA1bPt.s:1442   .text:000005e8 .Loc.360
     /tmp/ccPA1bPt.s:1445   .text:000005ea .Loc.361
     /tmp/ccPA1bPt.s:1453   .text:000005f2 .Loc.362
     /tmp/ccPA1bPt.s:1454   .text:000005f2 .Loc.363
     /tmp/ccPA1bPt.s:1458   .text:000005f4 .Loc.364
     /tmp/ccPA1bPt.s:1459   .text:000005f4 .Loc.365
     /tmp/ccPA1bPt.s:1460   .text:000005f4 .Loc.366
     /tmp/ccPA1bPt.s:1465   .text:000005fa .Loc.367
     /tmp/ccPA1bPt.s:1469   .text:000005fe .Loc.368
     /tmp/ccPA1bPt.s:1470   .text:000005fe .Loc.369
     /tmp/ccPA1bPt.s:1473   .text:00000600 .Loc.370
     /tmp/ccPA1bPt.s:1476   .text:00000604 .Loc.371
     /tmp/ccPA1bPt.s:1485   .text:00000612 .Loc.372
     /tmp/ccPA1bPt.s:1493   .text:00000624 .Loc.373
     /tmp/ccPA1bPt.s:1494   .text:00000624 .Loc.374
     /tmp/ccPA1bPt.s:1497   .text:00000628 .Loc.375
     /tmp/ccPA1bPt.s:1499   .text:0000062c L0
     /tmp/ccPA1bPt.s:1509   .text:0000063c .Loc.376
     /tmp/ccPA1bPt.s:1512   .text:0000063e .Loc.377
     /tmp/ccPA1bPt.s:1516   .text:00000640 .Loc.378
     /tmp/ccPA1bPt.s:1518   .text:00000644 L0
     /tmp/ccPA1bPt.s:1521   .text:0000064a L0
     /tmp/ccPA1bPt.s:1523   .text:0000064c .Loc.379
     /tmp/ccPA1bPt.s:1524   .text:0000064c .Loc.380
     /tmp/ccPA1bPt.s:1529   .text:00000652 .Loc.381
     /tmp/ccPA1bPt.s:1532   .text:00000654 .Loc.382
     /tmp/ccPA1bPt.s:1533   .text:00000654 .Loc.383
     /tmp/ccPA1bPt.s:1537   .text:0000065a .Loc.384
     /tmp/ccPA1bPt.s:1543   .text:00000664 .Loc.385
     /tmp/ccPA1bPt.s:1546   .text:00000668 .Loc.386
     /tmp/ccPA1bPt.s:1556   .text:00000676 .Loc.387
     /tmp/ccPA1bPt.s:1565   .text:00000684 .Loc.388
     /tmp/ccPA1bPt.s:1570   .text:00000694 .Loc.389
     /tmp/ccPA1bPt.s:1572   .text:00000694 .Loc.390
     /tmp/ccPA1bPt.s:1573   .text:00000694 .Loc.391
     /tmp/ccPA1bPt.s:1574   .text:00000694 .Loc.392
     /tmp/ccPA1bPt.s:1579   .text:00000698 .Loc.393
     /tmp/ccPA1bPt.s:1580   .text:00000698 .Loc.394
     /tmp/ccPA1bPt.s:1583   .text:0000069a .Loc.395
     /tmp/ccPA1bPt.s:1586   .text:0000069c .Loc.396
     /tmp/ccPA1bPt.s:1587   .text:0000069c .Loc.397
     /tmp/ccPA1bPt.s:1588   .text:0000069c .Loc.398
     /tmp/ccPA1bPt.s:1589   .text:0000069c .Loc.399
     /tmp/ccPA1bPt.s:1594   .text:000006a0 .Loc.400
     /tmp/ccPA1bPt.s:1595   .text:000006a0 .Loc.401
     /tmp/ccPA1bPt.s:1598   .text:000006a2 .Loc.402
     /tmp/ccPA1bPt.s:1601   .text:000006a4 .Loc.403
     /tmp/ccPA1bPt.s:1604   .text:000006a6 .Loc.404
     /tmp/ccPA1bPt.s:1605   .text:000006a6 .Loc.405
     /tmp/ccPA1bPt.s:1609   .text:000006aa .Loc.406
     /tmp/ccPA1bPt.s:1610   .text:000006aa .Loc.407
     /tmp/ccPA1bPt.s:1611   .text:000006aa .Loc.408
     /tmp/ccPA1bPt.s:1612   .text:000006aa .Loc.409
     /tmp/ccPA1bPt.s:1617   .text:000006ae .Loc.410
     /tmp/ccPA1bPt.s:1618   .text:000006ae .Loc.411
     /tmp/ccPA1bPt.s:1621   .text:000006b0 .Loc.412
     /tmp/ccPA1bPt.s:1622   .text:000006b0 .Loc.413
     /tmp/ccPA1bPt.s:1628   .text:000006b8 .Loc.414
     /tmp/ccPA1bPt.s:1629   .text:000006b8 .Loc.415
     /tmp/ccPA1bPt.s:1630   .text:000006b8 .Loc.416
     /tmp/ccPA1bPt.s:1631   .text:000006b8 .Loc.417
     /tmp/ccPA1bPt.s:1636   .text:000006bc .Loc.418
     /tmp/ccPA1bPt.s:1637   .text:000006bc .Loc.419
     /tmp/ccPA1bPt.s:1640   .text:000006be .Loc.420
     /tmp/ccPA1bPt.s:1644   .text:000006c4 .Loc.421
     /tmp/ccPA1bPt.s:1647   .text:000006c6 .Loc.422
     /tmp/ccPA1bPt.s:1651   .text:000006ca .Loc.423
     /tmp/ccPA1bPt.s:1652   .text:000006ca .Loc.424
     /tmp/ccPA1bPt.s:1653   .text:000006ca .Loc.425
     /tmp/ccPA1bPt.s:1654   .text:000006ca .Loc.426
     /tmp/ccPA1bPt.s:1659   .text:000006ce .Loc.427
     /tmp/ccPA1bPt.s:1660   .text:000006ce .Loc.428
     /tmp/ccPA1bPt.s:1661   .text:000006ce .Loc.429
     /tmp/ccPA1bPt.s:1664   .text:000006d0 .Loc.430
     /tmp/ccPA1bPt.s:1668   .text:000006d4 .Loc.431
     /tmp/ccPA1bPt.s:1669   .text:000006d4 .Loc.432
     /tmp/ccPA1bPt.s:1670   .text:000006d4 .Loc.433
     /tmp/ccPA1bPt.s:1671   .text:000006d4 .Loc.434
     /tmp/ccPA1bPt.s:1676   .text:000006d8 .Loc.435
     /tmp/ccPA1bPt.s:1680   .text:000006d8 .Loc.436
     /tmp/ccPA1bPt.s:2150   .progmem.data:0000017a __c.16
     /tmp/ccPA1bPt.s:1685   .text:000006de .Loc.437
     /tmp/ccPA1bPt.s:2106   .progmem.data:00000047 __c.5
     /tmp/ccPA1bPt.s:1690   .text:000006e4 .Loc.438
     /tmp/ccPA1bPt.s:2098   .progmem.data:0000002c __c.3
     /tmp/ccPA1bPt.s:1695   .text:000006ea .Loc.439
     /tmp/ccPA1bPt.s:2090   .progmem.data:0000001a __c.1
     /tmp/ccPA1bPt.s:1701   .text:000006f0 L0
     /tmp/ccPA1bPt.s:1706   .text:000006f0 sd_read
     /tmp/ccPA1bPt.s:1709   .text:000006f0 .Loc.440
     /tmp/ccPA1bPt.s:1710   .text:000006f0 L0
     /tmp/ccPA1bPt.s:1711   .text:000006f0 .Loc.441
     /tmp/ccPA1bPt.s:1736   .text:00000702 L0
     /tmp/ccPA1bPt.s:1748   .text:0000070c .Loc.442
     /tmp/ccPA1bPt.s:1749   .text:0000070c .Loc.443
     /tmp/ccPA1bPt.s:1750   .text:0000070c .Loc.444
     /tmp/ccPA1bPt.s:1752   .text:0000070c .Loc.445
     /tmp/ccPA1bPt.s:1754   .text:0000070e .Loc.446
     /tmp/ccPA1bPt.s:1756   .text:0000070e .Loc.447
     /tmp/ccPA1bPt.s:1760   .text:0000070e .Loc.448
     /tmp/ccPA1bPt.s:1762   .text:0000070e .Loc.449
     /tmp/ccPA1bPt.s:1763   .text:0000070e .Loc.450
     /tmp/ccPA1bPt.s:1777   .text:00000724 .Loc.451
     /tmp/ccPA1bPt.s:1782   .text:00000724 .Loc.452
     /tmp/ccPA1bPt.s:1784   .text:00000724 .Loc.453
     /tmp/ccPA1bPt.s:1785   .text:00000724 .Loc.454
     /tmp/ccPA1bPt.s:1787   .text:00000724 .Loc.455
     /tmp/ccPA1bPt.s:1791   .text:0000072a .Loc.456
     /tmp/ccPA1bPt.s:1795   .text:0000072e .Loc.457
     /tmp/ccPA1bPt.s:1796   .text:0000072e .Loc.458
     /tmp/ccPA1bPt.s:1797   .text:0000072e .Loc.459
     /tmp/ccPA1bPt.s:1799   .text:0000072e .Loc.460
     /tmp/ccPA1bPt.s:1802   .text:00000730 .Loc.461
     /tmp/ccPA1bPt.s:1805   .text:00000734 .Loc.462
     /tmp/ccPA1bPt.s:1809   .text:00000738 .Loc.463
     /tmp/ccPA1bPt.s:1810   .text:00000738 .Loc.464
     /tmp/ccPA1bPt.s:1811   .text:00000738 .Loc.465
     /tmp/ccPA1bPt.s:1813   .text:00000738 .Loc.466
     /tmp/ccPA1bPt.s:1816   .text:0000073a .Loc.467
     /tmp/ccPA1bPt.s:1819   .text:0000073e .Loc.468
     /tmp/ccPA1bPt.s:1823   .text:00000742 .Loc.469
     /tmp/ccPA1bPt.s:1824   .text:00000742 .Loc.470
     /tmp/ccPA1bPt.s:1825   .text:00000742 .Loc.471
     /tmp/ccPA1bPt.s:1827   .text:00000742 .Loc.472
     /tmp/ccPA1bPt.s:1830   .text:00000744 .Loc.473
     /tmp/ccPA1bPt.s:1833   .text:00000748 .Loc.474
     /tmp/ccPA1bPt.s:1837   .text:0000074c .Loc.475
     /tmp/ccPA1bPt.s:1838   .text:0000074c .Loc.476
     /tmp/ccPA1bPt.s:1839   .text:0000074c .Loc.477
     /tmp/ccPA1bPt.s:1841   .text:0000074c .Loc.478
     /tmp/ccPA1bPt.s:1844   .text:0000074e .Loc.479
     /tmp/ccPA1bPt.s:1847   .text:00000752 .Loc.480
     /tmp/ccPA1bPt.s:1851   .text:00000756 .Loc.481
     /tmp/ccPA1bPt.s:1852   .text:00000756 .Loc.482
     /tmp/ccPA1bPt.s:1853   .text:00000756 .Loc.483
     /tmp/ccPA1bPt.s:1855   .text:00000756 .Loc.484
     /tmp/ccPA1bPt.s:1858   .text:00000758 .Loc.485
     /tmp/ccPA1bPt.s:1861   .text:0000075c .Loc.486
     /tmp/ccPA1bPt.s:1865   .text:00000760 .Loc.487
     /tmp/ccPA1bPt.s:1866   .text:00000760 .Loc.488
     /tmp/ccPA1bPt.s:1867   .text:00000760 .Loc.489
     /tmp/ccPA1bPt.s:1868   .text:00000760 .Loc.490
     /tmp/ccPA1bPt.s:1870   .text:00000760 .Loc.491
     /tmp/ccPA1bPt.s:1873   .text:00000762 .Loc.492
     /tmp/ccPA1bPt.s:1876   .text:00000766 .Loc.493
     /tmp/ccPA1bPt.s:1883   .text:0000076e .Loc.494
     /tmp/ccPA1bPt.s:1885   .text:0000076e .Loc.495
     /tmp/ccPA1bPt.s:1887   .text:0000076e .Loc.496
     /tmp/ccPA1bPt.s:1892   .text:00000776 .Loc.497
     /tmp/ccPA1bPt.s:1896   .text:0000077a .Loc.498
     /tmp/ccPA1bPt.s:1897   .text:0000077a .Loc.499
     /tmp/ccPA1bPt.s:1898   .text:0000077a .Loc.500
     /tmp/ccPA1bPt.s:1899   .text:0000077a .Loc.501
     /tmp/ccPA1bPt.s:1902   .text:0000077c .Loc.502
     /tmp/ccPA1bPt.s:1905   .text:00000780 .Loc.503
     /tmp/ccPA1bPt.s:1906   .text:00000780 .Loc.504
     /tmp/ccPA1bPt.s:1909   .text:00000782 .Loc.505
     /tmp/ccPA1bPt.s:1914   .text:00000786 .Loc.506
     /tmp/ccPA1bPt.s:1918   .text:00000786 .Loc.507
     /tmp/ccPA1bPt.s:1926   .text:0000078a .Loc.508
     /tmp/ccPA1bPt.s:1927   .text:0000078a .Loc.509
     /tmp/ccPA1bPt.s:1929   .text:0000078c .Loc.510
     /tmp/ccPA1bPt.s:1931   .text:0000078c .Loc.511
     /tmp/ccPA1bPt.s:1934   .text:0000078c .Loc.512
     /tmp/ccPA1bPt.s:1936   .text:0000078c .Loc.513
     /tmp/ccPA1bPt.s:1937   .text:0000078c .Loc.514
     /tmp/ccPA1bPt.s:1938   .text:0000078c .Loc.515
     /tmp/ccPA1bPt.s:1939   .text:0000078c .Loc.516
     /tmp/ccPA1bPt.s:1942   .text:00000790 .Loc.517
     /tmp/ccPA1bPt.s:1945   .text:00000794 .Loc.518
     /tmp/ccPA1bPt.s:1947   .text:00000796 .Loc.519
     /tmp/ccPA1bPt.s:1948   .text:00000796 .Loc.520
     /tmp/ccPA1bPt.s:1953   .text:00000798 .Loc.521
     /tmp/ccPA1bPt.s:1961   .text:000007a4 .Loc.522
     /tmp/ccPA1bPt.s:1969   .text:000007ae .Loc.523
     /tmp/ccPA1bPt.s:1974   .text:000007b4 .Loc.524
     /tmp/ccPA1bPt.s:1976   .text:000007b4 .Loc.525
     /tmp/ccPA1bPt.s:1978   .text:000007b4 .Loc.526
     /tmp/ccPA1bPt.s:1985   .text:000007c0 .Loc.527
     /tmp/ccPA1bPt.s:1989   .text:000007c4 .Loc.528
     /tmp/ccPA1bPt.s:1990   .text:000007c4 .Loc.529
     /tmp/ccPA1bPt.s:1991   .text:000007c4 .Loc.530
     /tmp/ccPA1bPt.s:1992   .text:000007c4 .Loc.531
     /tmp/ccPA1bPt.s:1995   .text:000007c6 .Loc.532
     /tmp/ccPA1bPt.s:1998   .text:000007ca .Loc.533
     /tmp/ccPA1bPt.s:1999   .text:000007ca .Loc.534
     /tmp/ccPA1bPt.s:2004   .text:000007d2 .Loc.535
     /tmp/ccPA1bPt.s:2006   .text:000007d4 .Loc.536
     /tmp/ccPA1bPt.s:2007   .text:000007d4 .Loc.537
     /tmp/ccPA1bPt.s:2010   .text:000007d6 .Loc.538
     /tmp/ccPA1bPt.s:2015   .text:000007da .Loc.539
     /tmp/ccPA1bPt.s:2016   .text:000007da .Loc.540
     /tmp/ccPA1bPt.s:2022   .text:000007e4 .Loc.541
     /tmp/ccPA1bPt.s:2025   .text:000007e8 .Loc.542
     /tmp/ccPA1bPt.s:2030   .text:000007ee .Loc.543
     /tmp/ccPA1bPt.s:2035   .text:000007f6 .Loc.544
     /tmp/ccPA1bPt.s:2037   .text:000007f6 .Loc.545
     /tmp/ccPA1bPt.s:2041   .text:000007fc .Loc.546
     /tmp/ccPA1bPt.s:2045   .text:00000800 .Loc.547
     /tmp/ccPA1bPt.s:2046   .text:00000800 .Loc.548
     /tmp/ccPA1bPt.s:2047   .text:00000800 .Loc.549
     /tmp/ccPA1bPt.s:2049   .text:00000800 .Loc.550
     /tmp/ccPA1bPt.s:2052   .text:00000802 .Loc.551
     /tmp/ccPA1bPt.s:2055   .text:00000806 .Loc.552
     /tmp/ccPA1bPt.s:2059   .text:0000080a .Loc.553
     /tmp/ccPA1bPt.s:2060   .text:0000080a .Loc.554
     /tmp/ccPA1bPt.s:2061   .text:0000080a .Loc.555
     /tmp/ccPA1bPt.s:2063   .text:0000080a .Loc.556
     /tmp/ccPA1bPt.s:2066   .text:0000080c .Loc.557
     /tmp/ccPA1bPt.s:2069   .text:00000810 .Loc.558
     /tmp/ccPA1bPt.s:2073   .text:00000814 .Loc.559
     /tmp/ccPA1bPt.s:2074   .text:00000814 .Loc.560
     /tmp/ccPA1bPt.s:2075   .text:00000814 .Loc.561
     /tmp/ccPA1bPt.s:2077   .text:00000816 .Loc.562
     /tmp/ccPA1bPt.s:2078   .text:00000816 .Loc.563
     /tmp/ccPA1bPt.s:2080   .text:00000818 L0
     /tmp/ccPA1bPt.s:2209   .text:00000818 L0
                     .debug_frame:00000000 L0
     /tmp/ccPA1bPt.s:80     .text:00000044 .L13
     /tmp/ccPA1bPt.s:106    .text:0000005a .L1
     /tmp/ccPA1bPt.s:89     .text:0000004a .L6
     /tmp/ccPA1bPt.s:275    .text:000000c6 .L17
     /tmp/ccPA1bPt.s:325    .text:000000fc .L18
     /tmp/ccPA1bPt.s:318    .text:000000f8 .L19
     /tmp/ccPA1bPt.s:297    .text:000000dc .L20
     /tmp/ccPA1bPt.s:446    .text:00000190 .L21
     /tmp/ccPA1bPt.s:437    .text:00000184 .L22
     /tmp/ccPA1bPt.s:471    .text:000001b4 .L26
     /tmp/ccPA1bPt.s:399    .text:00000158 .L11
     /tmp/ccPA1bPt.s:477    .text:000001b8 .L28
     /tmp/ccPA1bPt.s:428    .text:0000017e .L29
     /tmp/ccPA1bPt.s:367    .text:00000132 .L30
     /tmp/ccPA1bPt.s:354    .text:00000124 .L24
     /tmp/ccPA1bPt.s:358    .text:00000128 .L23
     /tmp/ccPA1bPt.s:363    .text:0000012e .L106
     /tmp/ccPA1bPt.s:409    .text:00000166 .L107
     /tmp/ccPA1bPt.s:525    .text:000001f8 .L31
     /tmp/ccPA1bPt.s:512    .text:000001e6 .L33
     /tmp/ccPA1bPt.s:586    .text:0000021c .L12
     /tmp/ccPA1bPt.s:573    .text:0000021a .L35
     /tmp/ccPA1bPt.s:731    .text:000002ac .L38
     /tmp/ccPA1bPt.s:930    .text:0000039c .L39
     /tmp/ccPA1bPt.s:713    .jumptables.gcc.sd_init:00000000 .L41
     /tmp/ccPA1bPt.s:663    .text:00000260 .L36
     /tmp/ccPA1bPt.s:687    .text:00000282 .L50
     /tmp/ccPA1bPt.s:768    .text:000002ce .L46
     /tmp/ccPA1bPt.s:843    .text:0000031a .L21
     /tmp/ccPA1bPt.s:838    .text:00000312 .L13
     /tmp/ccPA1bPt.s:948    .text:000003b6 .L49
     /tmp/ccPA1bPt.s:1015   .text:000003f2 .L53
     /tmp/ccPA1bPt.s:1030   .text:00000402 .L54
     /tmp/ccPA1bPt.s:990    .text:000003da .L73
     /tmp/ccPA1bPt.s:969    .text:000003c6 .L51
     /tmp/ccPA1bPt.s:1077   .text:00000430 .L56
     /tmp/ccPA1bPt.s:1492   .text:00000624 .L60
     /tmp/ccPA1bPt.s:1451   .text:000005f2 .L61
     /tmp/ccPA1bPt.s:1457   .text:000005f4 .L63
     /tmp/ccPA1bPt.s:1675   .text:000006d8 .L78
     /tmp/ccPA1bPt.s:1319   .text:0000054a .L14
     /tmp/ccPA1bPt.s:1684   .text:000006de .L79
     /tmp/ccPA1bPt.s:1689   .text:000006e4 .L80
     /tmp/ccPA1bPt.s:1694   .text:000006ea .L81
     /tmp/ccPA1bPt.s:1478   .text:00000606 .L15
     /tmp/ccPA1bPt.s:1093   .text:00000446 .L62
     /tmp/ccPA1bPt.s:1635   .text:000006bc .L64
     /tmp/ccPA1bPt.s:1515   .text:00000640 .L65
     /tmp/ccPA1bPt.s:1593   .text:000006a0 .L66
     /tmp/ccPA1bPt.s:1616   .text:000006ae .L67
     /tmp/ccPA1bPt.s:1578   .text:00000698 .L68
     /tmp/ccPA1bPt.s:1658   .text:000006ce .L70
     /tmp/ccPA1bPt.s:1553   .text:00000672 .L22
     /tmp/ccPA1bPt.s:1548   .text:0000066a .L16
     /tmp/ccPA1bPt.s:1558   .text:00000678 .L17
     /tmp/ccPA1bPt.s:1114   .text:0000045a .L74
     /tmp/ccPA1bPt.s:1390   .text:000005ae .L75
     /tmp/ccPA1bPt.s:1398   .text:000005bc .L76
     /tmp/ccPA1bPt.s:1776   .text:00000724 .L109
     /tmp/ccPA1bPt.s:1768   .text:00000718 .L18
     /tmp/ccPA1bPt.s:1951   .text:00000798 .L108
     /tmp/ccPA1bPt.s:1922   .text:0000078a .L119
     /tmp/ccPA1bPt.s:1882   .text:0000076e .L117
     /tmp/ccPA1bPt.s:1975   .text:000007b4 .L121
     /tmp/ccPA1bPt.s:2009   .text:000007d6 .L129
     /tmp/ccPA1bPt.s:1968   .text:000007ae .L123
     /tmp/ccPA1bPt.s:1913   .text:00000786 .L124
     /tmp/ccPA1bPt.s:2014   .text:000007da .L122
     /tmp/ccPA1bPt.s:746    .text:000002bc .L47
     /tmp/ccPA1bPt.s:786    .text:000002e4 .L77
     /tmp/ccPA1bPt.s:793    .text:000002e8 .L45
     /tmp/ccPA1bPt.s:807    .text:000002f6 .L44
     /tmp/ccPA1bPt.s:829    .text:00000308 .L43
     /tmp/ccPA1bPt.s:876    .text:0000035c .L42
     /tmp/ccPA1bPt.s:898    .text:00000370 .L40
     /tmp/ccPA1bPt.s:4234   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccPA1bPt.s:8      .text:00000000 .Ltext0
     /tmp/ccPA1bPt.s:2203   .text:00000818 .Letext0
     /tmp/ccPA1bPt.s:6679   .debug_line:00000000 .Ldebug_line0
     /tmp/ccPA1bPt.s:1708   .text:000006f0 .LFB21
     /tmp/ccPA1bPt.s:2081   .text:00000818 .LFE21
     /tmp/ccPA1bPt.s:5154   .debug_loclists:00000010 .LLST22
     /tmp/ccPA1bPt.s:5149   .debug_loclists:0000000c .LVUS22
     /tmp/ccPA1bPt.s:5189   .debug_loclists:00000035 .LLST23
     /tmp/ccPA1bPt.s:5180   .debug_loclists:0000002d .LVUS23
     /tmp/ccPA1bPt.s:5232   .debug_loclists:00000066 .LLST24
     /tmp/ccPA1bPt.s:5229   .debug_loclists:00000064 .LVUS24
     /tmp/ccPA1bPt.s:5253   .debug_loclists:0000007b .LLST25
     /tmp/ccPA1bPt.s:5244   .debug_loclists:00000073 .LVUS25
     /tmp/ccPA1bPt.s:6661   .debug_rnglists:00000038 .LLRL26
     /tmp/ccPA1bPt.s:5298   .debug_loclists:000000ae .LLST27
     /tmp/ccPA1bPt.s:5293   .debug_loclists:000000aa .LVUS27
     /tmp/ccPA1bPt.s:1759   .text:0000070e .LBI118
     /tmp/ccPA1bPt.s:1758   .text:0000070e .LBB118
     /tmp/ccPA1bPt.s:1779   .text:00000724 .LBE118
     /tmp/ccPA1bPt.s:5315   .debug_loclists:000000c1 .LLST28
     /tmp/ccPA1bPt.s:5312   .debug_loclists:000000bf .LVUS28
     /tmp/ccPA1bPt.s:1781   .text:00000724 .LBI120
     /tmp/ccPA1bPt.s:6669   .debug_rnglists:00000043 .LLRL29
     /tmp/ccPA1bPt.s:5338   .debug_loclists:000000d8 .LLST30
     /tmp/ccPA1bPt.s:5333   .debug_loclists:000000d4 .LVUS30
     /tmp/ccPA1bPt.s:5357   .debug_loclists:000000ed .LLST31
     /tmp/ccPA1bPt.s:5352   .debug_loclists:000000e9 .LVUS31
     /tmp/ccPA1bPt.s:5398   .debug_loclists:00000118 .LLST32
     /tmp/ccPA1bPt.s:5391   .debug_loclists:00000112 .LVUS32
     /tmp/ccPA1bPt.s:1786   .text:00000724 .LBB122
     /tmp/ccPA1bPt.s:1794   .text:0000072e .LBE122
     /tmp/ccPA1bPt.s:5430   .debug_loclists:0000013c .LLST33
     /tmp/ccPA1bPt.s:5427   .debug_loclists:0000013a .LVUS33
     /tmp/ccPA1bPt.s:1790   .text:0000072a .LVL164
     /tmp/ccPA1bPt.s:1798   .text:0000072e .LBB123
     /tmp/ccPA1bPt.s:1808   .text:00000738 .LBE123
     /tmp/ccPA1bPt.s:5440   .debug_loclists:00000146 .LLST34
     /tmp/ccPA1bPt.s:5437   .debug_loclists:00000144 .LVUS34
     /tmp/ccPA1bPt.s:1804   .text:00000734 .LVL166
     /tmp/ccPA1bPt.s:1812   .text:00000738 .LBB124
     /tmp/ccPA1bPt.s:1822   .text:00000742 .LBE124
     /tmp/ccPA1bPt.s:5450   .debug_loclists:00000150 .LLST35
     /tmp/ccPA1bPt.s:5447   .debug_loclists:0000014e .LVUS35
     /tmp/ccPA1bPt.s:1818   .text:0000073e .LVL168
     /tmp/ccPA1bPt.s:1826   .text:00000742 .LBB125
     /tmp/ccPA1bPt.s:1836   .text:0000074c .LBE125
     /tmp/ccPA1bPt.s:5460   .debug_loclists:0000015a .LLST36
     /tmp/ccPA1bPt.s:5457   .debug_loclists:00000158 .LVUS36
     /tmp/ccPA1bPt.s:1832   .text:00000748 .LVL170
     /tmp/ccPA1bPt.s:1840   .text:0000074c .LBB126
     /tmp/ccPA1bPt.s:1850   .text:00000756 .LBE126
     /tmp/ccPA1bPt.s:5470   .debug_loclists:00000164 .LLST37
     /tmp/ccPA1bPt.s:5467   .debug_loclists:00000162 .LVUS37
     /tmp/ccPA1bPt.s:1846   .text:00000752 .LVL172
     /tmp/ccPA1bPt.s:1854   .text:00000756 .LBB127
     /tmp/ccPA1bPt.s:1864   .text:00000760 .LBE127
     /tmp/ccPA1bPt.s:5480   .debug_loclists:0000016e .LLST38
     /tmp/ccPA1bPt.s:5477   .debug_loclists:0000016c .LVUS38
     /tmp/ccPA1bPt.s:1860   .text:0000075c .LVL174
     /tmp/ccPA1bPt.s:1869   .text:00000760 .LBB128
     /tmp/ccPA1bPt.s:1884   .text:0000076e .LBE128
     /tmp/ccPA1bPt.s:5490   .debug_loclists:00000178 .LLST39
     /tmp/ccPA1bPt.s:5487   .debug_loclists:00000176 .LVUS39
     /tmp/ccPA1bPt.s:1875   .text:00000766 .LVL176
     /tmp/ccPA1bPt.s:1886   .text:0000076e .LBB129
     /tmp/ccPA1bPt.s:1895   .text:0000077a .LBE129
     /tmp/ccPA1bPt.s:5500   .debug_loclists:00000182 .LLST40
     /tmp/ccPA1bPt.s:5497   .debug_loclists:00000180 .LVUS40
     /tmp/ccPA1bPt.s:1891   .text:00000776 .LVL178
     /tmp/ccPA1bPt.s:1977   .text:000007b4 .LBB133
     /tmp/ccPA1bPt.s:1988   .text:000007c4 .LBE133
     /tmp/ccPA1bPt.s:5510   .debug_loclists:0000018c .LLST41
     /tmp/ccPA1bPt.s:5507   .debug_loclists:0000018a .LVUS41
     /tmp/ccPA1bPt.s:1984   .text:000007c0 .LVL188
     /tmp/ccPA1bPt.s:2036   .text:000007f6 .LBB134
     /tmp/ccPA1bPt.s:2044   .text:00000800 .LBE134
     /tmp/ccPA1bPt.s:5520   .debug_loclists:00000196 .LLST42
     /tmp/ccPA1bPt.s:5517   .debug_loclists:00000194 .LVUS42
     /tmp/ccPA1bPt.s:2040   .text:000007fc .LVL193
     /tmp/ccPA1bPt.s:2048   .text:00000800 .LBB135
     /tmp/ccPA1bPt.s:2058   .text:0000080a .LBE135
     /tmp/ccPA1bPt.s:5530   .debug_loclists:000001a0 .LLST43
     /tmp/ccPA1bPt.s:5527   .debug_loclists:0000019e .LVUS43
     /tmp/ccPA1bPt.s:2054   .text:00000806 .LVL195
     /tmp/ccPA1bPt.s:2062   .text:0000080a .LBB136
     /tmp/ccPA1bPt.s:2072   .text:00000814 .LBE136
     /tmp/ccPA1bPt.s:5540   .debug_loclists:000001aa .LLST44
     /tmp/ccPA1bPt.s:5537   .debug_loclists:000001a8 .LVUS44
     /tmp/ccPA1bPt.s:2068   .text:00000810 .LVL197
     /tmp/ccPA1bPt.s:2021   .text:000007e4 .LVL191
     /tmp/ccPA1bPt.s:188    .text:0000008c .LFB20
     /tmp/ccPA1bPt.s:1702   .text:000006f0 .LFE20
     /tmp/ccPA1bPt.s:226    .text:000000a0 .LBB57
     /tmp/ccPA1bPt.s:229    .text:000000a0 .LBE57
     /tmp/ccPA1bPt.s:239    .text:000000ac .LBB58
     /tmp/ccPA1bPt.s:607    .text:0000022a .LBE58
     /tmp/ccPA1bPt.s:5552   .debug_loclists:000001b6 .LLST4
     /tmp/ccPA1bPt.s:5547   .debug_loclists:000001b2 .LVUS4
     /tmp/ccPA1bPt.s:5583   .debug_loclists:000001d7 .LLST5
     /tmp/ccPA1bPt.s:5564   .debug_loclists:000001c5 .LVUS5
     /tmp/ccPA1bPt.s:5669   .debug_loclists:0000023d .LLST6
     /tmp/ccPA1bPt.s:5664   .debug_loclists:00000239 .LVUS6
     /tmp/ccPA1bPt.s:247    .text:000000ae .LBI59
     /tmp/ccPA1bPt.s:246    .text:000000ae .LBB59
     /tmp/ccPA1bPt.s:261    .text:000000ba .LBE59
     /tmp/ccPA1bPt.s:548    .text:00000212 .LBI61
     /tmp/ccPA1bPt.s:6629   .debug_rnglists:0000000c .LLRL7
     /tmp/ccPA1bPt.s:5698   .debug_loclists:0000025c .LLST8
     /tmp/ccPA1bPt.s:5695   .debug_loclists:0000025a .LVUS8
     /tmp/ccPA1bPt.s:5710   .debug_loclists:0000026b .LLST9
     /tmp/ccPA1bPt.s:5707   .debug_loclists:00000269 .LVUS9
     /tmp/ccPA1bPt.s:5728   .debug_loclists:00000280 .LLST10
     /tmp/ccPA1bPt.s:5719   .debug_loclists:00000278 .LVUS10
     /tmp/ccPA1bPt.s:579    .text:0000021a .LBI63
     /tmp/ccPA1bPt.s:6637   .debug_rnglists:00000017 .LLRL11
     /tmp/ccPA1bPt.s:5767   .debug_loclists:000002ad .LLST12
     /tmp/ccPA1bPt.s:5764   .debug_loclists:000002ab .LVUS12
     /tmp/ccPA1bPt.s:279    .text:000000cc .LVL19
     /tmp/ccPA1bPt.s:305    .text:000000e8 .LVL23
     /tmp/ccPA1bPt.s:317    .text:000000f8 .LVL24
     /tmp/ccPA1bPt.s:334    .text:0000010a .LVL26
     /tmp/ccPA1bPt.s:341    .text:00000114 .LVL27
     /tmp/ccPA1bPt.s:345    .text:0000011a .LVL28
     /tmp/ccPA1bPt.s:350    .text:00000120 .LVL29
     /tmp/ccPA1bPt.s:357    .text:00000128 .LVL30
     /tmp/ccPA1bPt.s:387    .text:0000014a .LVL33
     /tmp/ccPA1bPt.s:412    .text:0000016a .LVL36
     /tmp/ccPA1bPt.s:427    .text:0000017e .LVL37
     /tmp/ccPA1bPt.s:441    .text:0000018a .LVL40
     /tmp/ccPA1bPt.s:453    .text:0000019c .LVL41
     /tmp/ccPA1bPt.s:461    .text:000001a8 .LVL42
     /tmp/ccPA1bPt.s:492    .text:000001cc .LVL46
     /tmp/ccPA1bPt.s:497    .text:000001d2 .LVL47
     /tmp/ccPA1bPt.s:503    .text:000001d8 .LVL48
     /tmp/ccPA1bPt.s:516    .text:000001ec .LVL49
     /tmp/ccPA1bPt.s:520    .text:000001f2 .LVL50
     /tmp/ccPA1bPt.s:524    .text:000001f8 .LVL51
     /tmp/ccPA1bPt.s:534    .text:00000206 .LVL52
     /tmp/ccPA1bPt.s:539    .text:0000020c .LVL53
     /tmp/ccPA1bPt.s:545    .text:00000212 .LVL54
     /tmp/ccPA1bPt.s:609    .text:0000022a .LBB69
     /tmp/ccPA1bPt.s:612    .text:0000022a .LBE69
     /tmp/ccPA1bPt.s:623    .text:00000236 .LBB70
     /tmp/ccPA1bPt.s:626    .text:00000236 .LBE70
     /tmp/ccPA1bPt.s:6645   .debug_rnglists:00000022 .LLRL13
     /tmp/ccPA1bPt.s:5837   .debug_loclists:000002f4 .LLST14
     /tmp/ccPA1bPt.s:5776   .debug_loclists:000002b8 .LVUS14
     /tmp/ccPA1bPt.s:6044   .debug_loclists:000003fd .LLST15
     /tmp/ccPA1bPt.s:6003   .debug_loclists:000003d5 .LVUS15
     /tmp/ccPA1bPt.s:6159   .debug_loclists:0000049c .LLST16
     /tmp/ccPA1bPt.s:6148   .debug_loclists:00000492 .LVUS16
     /tmp/ccPA1bPt.s:6203   .debug_loclists:000004d0 .LLST17
     /tmp/ccPA1bPt.s:6188   .debug_loclists:000004c2 .LVUS17
     /tmp/ccPA1bPt.s:6267   .debug_loclists:0000051c .LLST18
     /tmp/ccPA1bPt.s:6246   .debug_loclists:00000508 .LVUS18
     /tmp/ccPA1bPt.s:6345   .debug_loclists:0000057c .LLST19
     /tmp/ccPA1bPt.s:6332   .debug_loclists:00000570 .LVUS19
     /tmp/ccPA1bPt.s:6414   .debug_loclists:000005cb .LLST20
     /tmp/ccPA1bPt.s:6399   .debug_loclists:000005bd .LVUS20
     /tmp/ccPA1bPt.s:641    .text:00000246 .LVL62
     /tmp/ccPA1bPt.s:650    .text:00000254 .LVL63
     /tmp/ccPA1bPt.s:668    .text:00000266 .LVL65
     /tmp/ccPA1bPt.s:692    .text:00000288 .LVL67
     /tmp/ccPA1bPt.s:743    .text:000002ba .LVL70
     /tmp/ccPA1bPt.s:763    .text:000002cc .LVL74
     /tmp/ccPA1bPt.s:824    .text:00000306 .LVL82
     /tmp/ccPA1bPt.s:896    .text:00000370 .LVL89
     /tmp/ccPA1bPt.s:962    .text:000003c2 .LVL96
     /tmp/ccPA1bPt.s:974    .text:000003cc .LVL98
     /tmp/ccPA1bPt.s:995    .text:000003e0 .LVL102
     /tmp/ccPA1bPt.s:1027   .text:00000400 .LVL107
     /tmp/ccPA1bPt.s:1105   .text:0000044e .LBI72
     /tmp/ccPA1bPt.s:6653   .debug_rnglists:0000002d .LLRL21
     /tmp/ccPA1bPt.s:1132   .text:0000046a .LVL114
     /tmp/ccPA1bPt.s:1151   .text:0000047c .LVL115
     /tmp/ccPA1bPt.s:1170   .text:00000490 .LVL116
     /tmp/ccPA1bPt.s:1190   .text:000004a4 .LVL117
     /tmp/ccPA1bPt.s:1210   .text:000004b8 .LVL118
     /tmp/ccPA1bPt.s:1242   .text:000004dc .LVL119
     /tmp/ccPA1bPt.s:1268   .text:00000500 .LVL120
     /tmp/ccPA1bPt.s:1305   .text:00000534 .LVL121
     /tmp/ccPA1bPt.s:1349   .text:00000572 .LVL122
     /tmp/ccPA1bPt.s:1368   .text:00000586 .LVL123
     /tmp/ccPA1bPt.s:1419   .text:000005d0 .LVL124
     /tmp/ccPA1bPt.s:238    .text:000000ac .LVL16
     /tmp/ccPA1bPt.s:621    .text:00000236 .LVL60
     /tmp/ccPA1bPt.s:635    .text:00000242 .LVL61
     /tmp/ccPA1bPt.s:14     .text:00000000 .LFB16
     /tmp/ccPA1bPt.s:115    .text:00000064 .LFE16
     /tmp/ccPA1bPt.s:6485   .debug_loclists:0000061e .LLST0
     /tmp/ccPA1bPt.s:6478   .debug_loclists:00000618 .LVUS0
     /tmp/ccPA1bPt.s:6510   .debug_loclists:00000635 .LLST1
     /tmp/ccPA1bPt.s:6505   .debug_loclists:00000631 .LVUS1
     /tmp/ccPA1bPt.s:6545   .debug_loclists:00000656 .LLST2
     /tmp/ccPA1bPt.s:6536   .debug_loclists:0000064e .LVUS2
     /tmp/ccPA1bPt.s:6587   .debug_loclists:0000067e .LLST3
     /tmp/ccPA1bPt.s:6580   .debug_loclists:00000678 .LVUS3
     /tmp/ccPA1bPt.s:45     .text:00000016 .LVL2
     /tmp/ccPA1bPt.s:50     .text:0000001e .LVL3
     /tmp/ccPA1bPt.s:54     .text:00000024 .LVL4
     /tmp/ccPA1bPt.s:58     .text:0000002a .LVL5
     /tmp/ccPA1bPt.s:62     .text:00000030 .LVL6
     /tmp/ccPA1bPt.s:66     .text:00000036 .LVL7
     /tmp/ccPA1bPt.s:83     .text:00000048 .LVL8
     /tmp/ccPA1bPt.s:93     .text:00000050 .LVL10
     /tmp/ccPA1bPt.s:119    .text:00000064 .LFB15
     /tmp/ccPA1bPt.s:149    .text:00000078 .LFE15
     /tmp/ccPA1bPt.s:129    .text:00000066 .LBB24
     /tmp/ccPA1bPt.s:132    .text:00000066 .LBE24
     /tmp/ccPA1bPt.s:141    .text:00000072 .LVL14
     /tmp/ccPA1bPt.s:153    .text:00000078 .LFB14
     /tmp/ccPA1bPt.s:183    .text:0000008c .LFE14
     /tmp/ccPA1bPt.s:163    .text:0000007a .LBB25
     /tmp/ccPA1bPt.s:166    .text:0000007a .LBE25
     /tmp/ccPA1bPt.s:175    .text:00000086 .LVL15
     /tmp/ccPA1bPt.s:2210   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
spi_xchg
panic
log_boot_P
spi_fast
__tablejump2__
spi_tx_try
spi_rx_try
spi_xchg_try
__do_clear_bss
