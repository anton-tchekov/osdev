   1               		.file	"sd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "sd/sd.c"
  12               	_sd_command:
  13               	.LVL0:
  14               	.LFB16:
  15               		.file 1 "sd/sd.c"
   1:sd/sd.c       **** /**
   2:sd/sd.c       ****  * @file    sd.c
   3:sd/sd.c       ****  * @author  Anton Tchekov
   4:sd/sd.c       ****  * @version 0.2
   5:sd/sd.c       ****  * @date    20.05.2023
   6:sd/sd.c       ****  */
   7:sd/sd.c       **** 
   8:sd/sd.c       **** #include <sd.h>
   9:sd/sd.c       **** #include <spi.h>
  10:sd/sd.c       **** #include <logger.h>
  11:sd/sd.c       **** #include <gpio.h>
  12:sd/sd.c       **** #include <string.h>
  13:sd/sd.c       **** #include <avr/io.h>
  14:sd/sd.c       **** #include <avr/pgmspace.h>
  15:sd/sd.c       **** #include <util/delay.h>
  16:sd/sd.c       **** 
  17:sd/sd.c       **** #define CMD_GO_IDLE_STATE      0x00
  18:sd/sd.c       **** #define CMD_SEND_OP_COND       0x01
  19:sd/sd.c       **** #define CMD_SEND_IF_COND       0x08
  20:sd/sd.c       **** #define CMD_SEND_CSD           0x09
  21:sd/sd.c       **** #define CMD_SEND_CID           0x0A
  22:sd/sd.c       **** #define CMD_SET_BLOCKLEN       0x10
  23:sd/sd.c       **** #define CMD_READ_SINGLE_BLOCK  0x11
  24:sd/sd.c       **** #define CMD_WRITE_SINGLE_BLOCK 0x18
  25:sd/sd.c       **** #define CMD_SD_SEND_OP_COND    0x29
  26:sd/sd.c       **** #define CMD_APP                0x37
  27:sd/sd.c       **** #define CMD_READ_OCR           0x3A
  28:sd/sd.c       **** 
  29:sd/sd.c       **** #define IDLE_STATE             (1 << 0)
  30:sd/sd.c       **** #define ILLEGAL_CMD            (1 << 2)
  31:sd/sd.c       **** 
  32:sd/sd.c       **** #define SD_1                   (1 << 0)
  33:sd/sd.c       **** #define SD_2                   (1 << 1)
  34:sd/sd.c       **** #define SD_HC                  (1 << 2)
  35:sd/sd.c       **** 
  36:sd/sd.c       **** /* SD card properties */
  37:sd/sd.c       **** static u32
  38:sd/sd.c       **** 	_serial,
  39:sd/sd.c       **** 	_capacity;
  40:sd/sd.c       **** 
  41:sd/sd.c       **** static u8
  42:sd/sd.c       **** 	_oem[3],
  43:sd/sd.c       **** 	_product[6],
  44:sd/sd.c       **** 	_card_type,
  45:sd/sd.c       **** 	_manufacturer,
  46:sd/sd.c       **** 	_revision,
  47:sd/sd.c       **** 	_manufacturing_year,
  48:sd/sd.c       **** 	_manufacturing_month,
  49:sd/sd.c       **** 	_flag_copy,
  50:sd/sd.c       **** 	_flag_write_protect,
  51:sd/sd.c       **** 	_flag_write_protect_temp,
  52:sd/sd.c       **** 	_format;
  53:sd/sd.c       **** 
  54:sd/sd.c       **** /* --- PRIVATE --- */
  55:sd/sd.c       **** 
  56:sd/sd.c       **** /**
  57:sd/sd.c       ****  * @brief Put SPI into slow mode for initialization
  58:sd/sd.c       ****  */
  59:sd/sd.c       **** static void _spi_configure_slow(void)
  60:sd/sd.c       **** {
  61:sd/sd.c       **** 	SPCR |= (1 << SPR1) | (1 << SPR0);
  62:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
  63:sd/sd.c       **** }
  64:sd/sd.c       **** 
  65:sd/sd.c       **** /**
  66:sd/sd.c       ****  * @brief Trigger an SD timeout panic
  67:sd/sd.c       ****  */
  68:sd/sd.c       **** static void _sd_timeout(void)
  69:sd/sd.c       **** {
  70:sd/sd.c       **** 	SD_DESELECT;
  71:sd/sd.c       **** 	panic(PSTR("SD timeout"));
  72:sd/sd.c       **** }
  73:sd/sd.c       **** 
  74:sd/sd.c       **** /**
  75:sd/sd.c       ****  * @brief Trigger an SD error panic
  76:sd/sd.c       ****  */
  77:sd/sd.c       **** static void _sd_error(void)
  78:sd/sd.c       **** {
  79:sd/sd.c       **** 	SD_DESELECT;
  80:sd/sd.c       **** 	panic(PSTR("SD error"));
  81:sd/sd.c       **** }
  82:sd/sd.c       **** 
  83:sd/sd.c       **** /**
  84:sd/sd.c       ****  * @brief Execute an SD command (panic if failed)
  85:sd/sd.c       ****  *
  86:sd/sd.c       ****  * @param cmd Command number
  87:sd/sd.c       ****  * @param arg Address parameter
  88:sd/sd.c       ****  * @return Output byte
  89:sd/sd.c       ****  */
  90:sd/sd.c       **** static u8 _sd_command(u8 cmd, u32 arg)
  91:sd/sd.c       **** {
  16               		.loc 1 91 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 91 1 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 17, -3
  25 0004 CF93      		push r28
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 28, -4
  28 0006 DF93      		push r29
  29               		.cfi_def_cfa_offset 6
  30               		.cfi_offset 29, -5
  31               	/* prologue: function */
  32               	/* frame size = 0 */
  33               	/* stack size = 4 */
  34               	.L__stack_usage = 4
  35 0008 C82F      		mov r28,r24
  36 000a D42F      		mov r29,r20
  37 000c 152F      		mov r17,r21
  38 000e 072F      		mov r16,r23
  92:sd/sd.c       **** 	u8 i, response;
  39               		.loc 1 92 2 is_stmt 1 view .LVU2
  93:sd/sd.c       **** 	spi_xchg(0xFF);
  40               		.loc 1 93 2 view .LVU3
  41 0010 8FEF      		ldi r24,lo8(-1)
  42               	.LVL1:
  43               		.loc 1 93 2 is_stmt 0 view .LVU4
  44 0012 0E94 0000 		call spi_xchg
  45               	.LVL2:
  94:sd/sd.c       **** 	spi_xchg(0x40 | cmd);
  46               		.loc 1 94 2 is_stmt 1 view .LVU5
  47 0016 8C2F      		mov r24,r28
  48 0018 8064      		ori r24,lo8(64)
  49 001a 0E94 0000 		call spi_xchg
  50               	.LVL3:
  95:sd/sd.c       **** 	spi_xchg((arg >> 24) & 0xFF);
  51               		.loc 1 95 2 view .LVU6
  52 001e 802F      		mov r24,r16
  53 0020 0E94 0000 		call spi_xchg
  54               	.LVL4:
  96:sd/sd.c       **** 	spi_xchg((arg >> 16) & 0xFF);
  55               		.loc 1 96 2 view .LVU7
  56 0024 80E0      		ldi r24,0
  57 0026 0E94 0000 		call spi_xchg
  58               	.LVL5:
  97:sd/sd.c       **** 	spi_xchg((arg >> 8) & 0xFF);
  59               		.loc 1 97 2 view .LVU8
  60 002a 812F      		mov r24,r17
  61 002c 0E94 0000 		call spi_xchg
  62               	.LVL6:
  98:sd/sd.c       **** 	spi_xchg((arg >> 0) & 0xFF);
  63               		.loc 1 98 2 view .LVU9
  64 0030 8D2F      		mov r24,r29
  65 0032 0E94 0000 		call spi_xchg
  66               	.LVL7:
  99:sd/sd.c       **** 	switch(cmd)
  67               		.loc 1 99 2 view .LVU10
 100:sd/sd.c       **** 	{
 101:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
 102:sd/sd.c       **** 		spi_xchg(0x95);
  68               		.loc 1 102 3 is_stmt 0 view .LVU11
  69 0036 85E9      		ldi r24,lo8(-107)
  99:sd/sd.c       **** 	switch(cmd)
  70               		.loc 1 99 2 view .LVU12
  71 0038 CC23      		tst r28
  72 003a 01F0      		breq .L13
 103:sd/sd.c       **** 		break;
 104:sd/sd.c       **** 
 105:sd/sd.c       **** 	case CMD_SEND_IF_COND:
 106:sd/sd.c       **** 		spi_xchg(0x87);
  73               		.loc 1 106 3 view .LVU13
  74 003c 87E8      		ldi r24,lo8(-121)
  99:sd/sd.c       **** 	{
  75               		.loc 1 99 2 view .LVU14
  76 003e C830      		cpi r28,lo8(8)
  77 0040 01F0      		breq .L13
 107:sd/sd.c       **** 		break;
 108:sd/sd.c       **** 
 109:sd/sd.c       **** 	default:
 110:sd/sd.c       **** 		spi_xchg(0xFF);
  78               		.loc 1 110 3 is_stmt 1 view .LVU15
  79 0042 8FEF      		ldi r24,lo8(-1)
  80               	.L13:
 106:sd/sd.c       **** 		break;
  81               		.loc 1 106 3 is_stmt 0 view .LVU16
  82 0044 0E94 0000 		call spi_xchg
  83               	.LVL8:
 107:sd/sd.c       **** 		break;
  84               		.loc 1 107 3 is_stmt 1 view .LVU17
 111:sd/sd.c       **** 		break;
 112:sd/sd.c       **** 	}
 113:sd/sd.c       **** 
 114:sd/sd.c       **** 	for(i = 0; i < 10 && ((response = spi_xchg(0xFF)) == 0xFF); ++i) ;
  85               		.loc 1 114 20 view .LVU18
  91:sd/sd.c       **** 	u8 i, response;
  86               		.loc 1 91 1 is_stmt 0 view .LVU19
  87 0048 CAE0      		ldi r28,lo8(10)
  88               	.LVL9:
  89               	.L6:
  90               		.loc 1 114 36 discriminator 3 view .LVU20
  91 004a 8FEF      		ldi r24,lo8(-1)
  92 004c 0E94 0000 		call spi_xchg
  93               	.LVL10:
  94               		.loc 1 114 20 discriminator 3 view .LVU21
  95 0050 8F3F      		cpi r24,lo8(-1)
  96 0052 01F4      		brne .L1
  97               		.loc 1 114 62 is_stmt 1 discriminator 4 view .LVU22
  98               	.LVL11:
  99               		.loc 1 114 20 discriminator 4 view .LVU23
 100 0054 C150      		subi r28,lo8(-(-1))
 101               	.LVL12:
 102               		.loc 1 114 20 is_stmt 0 discriminator 4 view .LVU24
 103 0056 C111      		cpse r28,__zero_reg__
 104 0058 00C0      		rjmp .L6
 105               	.LVL13:
 106               	.L1:
 107               	/* epilogue start */
 115:sd/sd.c       **** 	return response;
 116:sd/sd.c       **** }
 108               		.loc 1 116 1 view .LVU25
 109 005a DF91      		pop r29
 110 005c CF91      		pop r28
 111 005e 1F91      		pop r17
 112 0060 0F91      		pop r16
 113 0062 0895      		ret
 114               		.cfi_endproc
 115               	.LFE16:
 118               	_sd_error:
 119               	.LFB15:
  78:sd/sd.c       **** 	SD_DESELECT;
 120               		.loc 1 78 1 is_stmt 1 view -0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
  79:sd/sd.c       **** 	panic(PSTR("SD error"));
 126               		.loc 1 79 2 view .LVU27
 127 0064 5C9A      		sbi 0xb,4
  80:sd/sd.c       **** }
 128               		.loc 1 80 2 view .LVU28
 129               	.LBB24:
  80:sd/sd.c       **** }
 130               		.loc 1 80 8 view .LVU29
  80:sd/sd.c       **** }
 131               		.loc 1 80 8 view .LVU30
 132               	.LBE24:
  80:sd/sd.c       **** }
 133               		.loc 1 80 2 is_stmt 0 view .LVU31
 134 0066 80E0      		ldi r24,lo8(__c.20)
 135 0068 90E0      		ldi r25,hi8(__c.20)
 136 006a 9F93      		push r25
 137               		.cfi_def_cfa_offset 3
 138 006c 8F93      		push r24
 139               		.cfi_def_cfa_offset 4
 140 006e 0E94 0000 		call panic
 141               	.LVL14:
  81:sd/sd.c       **** 
 142               		.loc 1 81 1 view .LVU32
 143 0072 0F90      		pop __tmp_reg__
 144 0074 0F90      		pop __tmp_reg__
 145               		.cfi_def_cfa_offset 2
 146               	/* epilogue start */
 147 0076 0895      		ret
 148               		.cfi_endproc
 149               	.LFE15:
 152               	_sd_timeout:
 153               	.LFB14:
  69:sd/sd.c       **** 	SD_DESELECT;
 154               		.loc 1 69 1 is_stmt 1 view -0
 155               		.cfi_startproc
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
  70:sd/sd.c       **** 	panic(PSTR("SD timeout"));
 160               		.loc 1 70 2 view .LVU34
 161 0078 5C9A      		sbi 0xb,4
  71:sd/sd.c       **** }
 162               		.loc 1 71 2 view .LVU35
 163               	.LBB25:
  71:sd/sd.c       **** }
 164               		.loc 1 71 8 view .LVU36
  71:sd/sd.c       **** }
 165               		.loc 1 71 8 view .LVU37
 166               	.LBE25:
  71:sd/sd.c       **** }
 167               		.loc 1 71 2 is_stmt 0 view .LVU38
 168 007a 80E0      		ldi r24,lo8(__c.19)
 169 007c 90E0      		ldi r25,hi8(__c.19)
 170 007e 9F93      		push r25
 171               		.cfi_def_cfa_offset 3
 172 0080 8F93      		push r24
 173               		.cfi_def_cfa_offset 4
 174 0082 0E94 0000 		call panic
 175               	.LVL15:
  72:sd/sd.c       **** 
 176               		.loc 1 72 1 view .LVU39
 177 0086 0F90      		pop __tmp_reg__
 178 0088 0F90      		pop __tmp_reg__
 179               		.cfi_def_cfa_offset 2
 180               	/* epilogue start */
 181 008a 0895      		ret
 182               		.cfi_endproc
 183               	.LFE14:
 185               	.global	sd_init
 187               	sd_init:
 188               	.LFB20:
 117:sd/sd.c       **** 
 118:sd/sd.c       **** /**
 119:sd/sd.c       ****  * @brief Try to execute an SD command
 120:sd/sd.c       ****  *
 121:sd/sd.c       ****  * @param cmd Command number
 122:sd/sd.c       ****  * @param arg Address parameter
 123:sd/sd.c       ****  * @param out Output byte
 124:sd/sd.c       ****  * @return Status response
 125:sd/sd.c       ****  */
 126:sd/sd.c       **** static Status _sd_command_try(u8 cmd, u32 arg, u8 *out)
 127:sd/sd.c       **** {
 128:sd/sd.c       **** 	u8 i, response;
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 134:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 135:sd/sd.c       **** 	switch(cmd)
 136:sd/sd.c       **** 	{
 137:sd/sd.c       **** 	case CMD_GO_IDLE_STATE:
 138:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0x95));
 139:sd/sd.c       **** 		break;
 140:sd/sd.c       **** 
 141:sd/sd.c       **** 	case CMD_SEND_IF_COND:
 142:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0x87));
 143:sd/sd.c       **** 		break;
 144:sd/sd.c       **** 
 145:sd/sd.c       **** 	default:
 146:sd/sd.c       **** 		RETURN_IF(spi_tx_try(0xFF));
 147:sd/sd.c       **** 		break;
 148:sd/sd.c       **** 	}
 149:sd/sd.c       **** 
 150:sd/sd.c       **** 	for(i = 0; ; ++i)
 151:sd/sd.c       **** 	{
 152:sd/sd.c       **** 		RETURN_IF(spi_rx_try(&response));
 153:sd/sd.c       **** 		if(response != 0xFF)
 154:sd/sd.c       **** 		{
 155:sd/sd.c       **** 			break;
 156:sd/sd.c       **** 		}
 157:sd/sd.c       **** 
 158:sd/sd.c       **** 		if(i >= 10)
 159:sd/sd.c       **** 		{
 160:sd/sd.c       **** 			return STATUS_TIMEOUT;
 161:sd/sd.c       **** 		}
 162:sd/sd.c       **** 	}
 163:sd/sd.c       **** 
 164:sd/sd.c       **** 	*out = response;
 165:sd/sd.c       **** 	return STATUS_OK;
 166:sd/sd.c       **** }
 167:sd/sd.c       **** 
 168:sd/sd.c       **** /**
 169:sd/sd.c       ****  * @brief Convert block number to internal SD address
 170:sd/sd.c       ****  *        since SD uses byte address but SDHC uses block number
 171:sd/sd.c       ****  *
 172:sd/sd.c       ****  * @param block Block number
 173:sd/sd.c       ****  * @return Internal Address
 174:sd/sd.c       ****  */
 175:sd/sd.c       **** static u32 _sd_block_addr(u32 block)
 176:sd/sd.c       **** {
 177:sd/sd.c       **** 	return _card_type & SD_HC ? block : (block << BLOCK_SIZE_POT);
 178:sd/sd.c       **** }
 179:sd/sd.c       **** 
 180:sd/sd.c       **** /**
 181:sd/sd.c       ****  * @brief Print SD card info to serial port
 182:sd/sd.c       ****  */
 183:sd/sd.c       **** static void _sd_info_print(void)
 184:sd/sd.c       **** {
 185:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Card Type        : %S"),
 186:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 187:sd/sd.c       **** 
 188:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Block Size       : %d"),
 189:sd/sd.c       **** 		BLOCK_SIZE);
 190:sd/sd.c       **** 
 191:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Manufacturer ID  : %02X"),
 192:sd/sd.c       **** 		_manufacturer);
 193:sd/sd.c       **** 
 194:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("OEM              : %s"),
 195:sd/sd.c       **** 		_oem);
 196:sd/sd.c       **** 
 197:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Product Name     : %s"),
 198:sd/sd.c       **** 		_product);
 199:sd/sd.c       **** 
 200:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Revision         : %c.%c"),
 201:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 202:sd/sd.c       **** 
 203:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Serial Number    : 0x%08"PRIx32),
 204:sd/sd.c       **** 		_serial);
 205:sd/sd.c       **** 
 206:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Manufacture Date : %02d-%d"),
 207:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 208:sd/sd.c       **** 
 209:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Capacity         : %"PRIu32" blocks"),
 210:sd/sd.c       **** 		_capacity);
 211:sd/sd.c       **** 
 212:sd/sd.c       **** 	log_boot_P(LOG_OFFSET, PSTR("                   (%"PRIu32" bytes)"),
 213:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 214:sd/sd.c       **** 
 215:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Format           : 0x%02X"),
 216:sd/sd.c       **** 		_format);
 217:sd/sd.c       **** 
 218:sd/sd.c       **** 	log_boot_P(LOG_DEBUG, PSTR("Flags            : %S%S"),
 219:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 220:sd/sd.c       **** 		_flag_write_protect_temp ? PSTR("Temporarily Write Protected") :
 221:sd/sd.c       **** 			(_flag_write_protect ? PSTR("Write Protected") :
 222:sd/sd.c       **** 			PSTR("Rewritable")));
 223:sd/sd.c       **** }
 224:sd/sd.c       **** 
 225:sd/sd.c       **** /* --- PUBLIC --- */
 226:sd/sd.c       **** void sd_init(void)
 227:sd/sd.c       **** {
 189               		.loc 1 227 1 is_stmt 1 view -0
 190               		.cfi_startproc
 191 008c AF92      		push r10
 192               		.cfi_def_cfa_offset 3
 193               		.cfi_offset 10, -2
 194 008e BF92      		push r11
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 11, -3
 197 0090 CF92      		push r12
 198               		.cfi_def_cfa_offset 5
 199               		.cfi_offset 12, -4
 200 0092 DF92      		push r13
 201               		.cfi_def_cfa_offset 6
 202               		.cfi_offset 13, -5
 203 0094 EF92      		push r14
 204               		.cfi_def_cfa_offset 7
 205               		.cfi_offset 14, -6
 206 0096 FF92      		push r15
 207               		.cfi_def_cfa_offset 8
 208               		.cfi_offset 15, -7
 209 0098 0F93      		push r16
 210               		.cfi_def_cfa_offset 9
 211               		.cfi_offset 16, -8
 212 009a 1F93      		push r17
 213               		.cfi_def_cfa_offset 10
 214               		.cfi_offset 17, -9
 215 009c CF93      		push r28
 216               		.cfi_def_cfa_offset 11
 217               		.cfi_offset 28, -10
 218 009e DF93      		push r29
 219               		.cfi_def_cfa_offset 12
 220               		.cfi_offset 29, -11
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 10 */
 224               	.L__stack_usage = 10
 228:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("SD driver starting"));
 225               		.loc 1 228 2 view .LVU41
 226               	.LBB58:
 227               		.loc 1 228 23 view .LVU42
 228               		.loc 1 228 23 view .LVU43
 229               	.LBE58:
 230               		.loc 1 228 2 is_stmt 0 view .LVU44
 231 00a0 80E0      		ldi r24,lo8(__c.23)
 232 00a2 90E0      		ldi r25,hi8(__c.23)
 233 00a4 9F93      		push r25
 234               		.cfi_def_cfa_offset 13
 235 00a6 8F93      		push r24
 236               		.cfi_def_cfa_offset 14
 237 00a8 1F92      		push __zero_reg__
 238               		.cfi_def_cfa_offset 15
 239 00aa 0E94 0000 		call log_boot_P
 240               	.LVL16:
 241               	.LBB59:
 229:sd/sd.c       **** 
 230:sd/sd.c       **** 	{
 231:sd/sd.c       **** 		u8 response;
 242               		.loc 1 231 3 is_stmt 1 view .LVU45
 232:sd/sd.c       **** 		u16 i;
 243               		.loc 1 232 3 view .LVU46
 233:sd/sd.c       **** 		u32 arg;
 244               		.loc 1 233 3 view .LVU47
 234:sd/sd.c       **** 
 235:sd/sd.c       **** 		SD_DESELECT;
 245               		.loc 1 235 3 view .LVU48
 246 00ae 5C9A      		sbi 0xb,4
 236:sd/sd.c       **** 		_spi_configure_slow();
 247               		.loc 1 236 3 view .LVU49
 248               	.LBB60:
 249               	.LBI60:
  59:sd/sd.c       **** {
 250               		.loc 1 59 13 view .LVU50
 251               	.LBB61:
  61:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 252               		.loc 1 61 2 view .LVU51
 253 00b0 8CB5      		in r24,0x2c
  61:sd/sd.c       **** 	SPSR &= ~(1 << SPI2X);
 254               		.loc 1 61 7 is_stmt 0 view .LVU52
 255 00b2 8360      		ori r24,lo8(3)
 256 00b4 8CBD      		out 0x2c,r24
  62:sd/sd.c       **** }
 257               		.loc 1 62 2 is_stmt 1 view .LVU53
  62:sd/sd.c       **** }
 258               		.loc 1 62 7 is_stmt 0 view .LVU54
 259 00b6 8DB5      		in r24,0x2d
 260 00b8 8E7F      		andi r24,lo8(-2)
 261 00ba 8DBD      		out 0x2d,r24
 262               	.LBE61:
 263               	.LBE60:
 237:sd/sd.c       **** 		_card_type = 0;
 264               		.loc 1 237 3 is_stmt 1 view .LVU55
 265               		.loc 1 237 14 is_stmt 0 view .LVU56
 266 00bc 1092 0000 		sts _card_type,__zero_reg__
 238:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 267               		.loc 1 238 3 is_stmt 1 view .LVU57
 268               	.LVL17:
 269               		.loc 1 238 16 view .LVU58
 237:sd/sd.c       **** 		_card_type = 0;
 270               		.loc 1 237 14 is_stmt 0 view .LVU59
 271 00c0 0F90      		pop __tmp_reg__
 272 00c2 0F90      		pop __tmp_reg__
 273 00c4 0F90      		pop __tmp_reg__
 274               		.cfi_def_cfa_offset 12
 275 00c6 0AE0      		ldi r16,lo8(10)
 276 00c8 10E0      		ldi r17,0
 277               	.LVL18:
 278               	.L17:
 239:sd/sd.c       **** 		{
 240:sd/sd.c       **** 			spi_xchg(0xFF);
 279               		.loc 1 240 4 is_stmt 1 discriminator 3 view .LVU60
 280 00ca 8FEF      		ldi r24,lo8(-1)
 281 00cc 0E94 0000 		call spi_xchg
 282               	.LVL19:
 238:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 283               		.loc 1 238 22 discriminator 3 view .LVU61
 238:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 284               		.loc 1 238 16 discriminator 3 view .LVU62
 285 00d0 0150      		subi r16,1
 286 00d2 1109      		sbc r17,__zero_reg__
 287               	.LVL20:
 238:sd/sd.c       **** 		for(i = 0; i < 10; ++i)
 288               		.loc 1 238 16 is_stmt 0 discriminator 3 view .LVU63
 289 00d4 0115      		cp r16,__zero_reg__
 290 00d6 1105      		cpc r17,__zero_reg__
 291 00d8 01F4      		brne .L17
 241:sd/sd.c       **** 		}
 242:sd/sd.c       **** 
 243:sd/sd.c       **** 		SD_SELECT;
 292               		.loc 1 243 3 is_stmt 1 view .LVU64
 293 00da 5C98      		cbi 0xb,4
 244:sd/sd.c       **** 		for(i = 0; ; ++i)
 294               		.loc 1 244 3 view .LVU65
 295               	.LVL21:
 296               		.loc 1 244 9 is_stmt 0 view .LVU66
 297 00dc C0E0      		ldi r28,0
 298 00de D0E0      		ldi r29,0
 299               	.LVL22:
 300               	.L20:
 245:sd/sd.c       **** 		{
 246:sd/sd.c       **** 			if(_sd_command(CMD_GO_IDLE_STATE, 0) == IDLE_STATE)
 301               		.loc 1 246 4 is_stmt 1 view .LVU67
 302               		.loc 1 246 7 is_stmt 0 view .LVU68
 303 00e0 40E0      		ldi r20,0
 304 00e2 50E0      		ldi r21,0
 305 00e4 BA01      		movw r22,r20
 306 00e6 80E0      		ldi r24,0
 307 00e8 0E94 0000 		call _sd_command
 308               	.LVL23:
 309               		.loc 1 246 6 view .LVU69
 310 00ec 8130      		cpi r24,lo8(1)
 311 00ee 01F0      		breq .L18
 247:sd/sd.c       **** 			{
 248:sd/sd.c       **** 				break;
 249:sd/sd.c       **** 			}
 250:sd/sd.c       **** 
 251:sd/sd.c       **** 			if(i == 0x1FF)
 312               		.loc 1 251 4 is_stmt 1 view .LVU70
 313               		.loc 1 251 6 is_stmt 0 view .LVU71
 314 00f0 CF3F      		cpi r28,-1
 315 00f2 21E0      		ldi r18,1
 316 00f4 D207      		cpc r29,r18
 317 00f6 01F4      		brne .L19
 252:sd/sd.c       **** 			{
 253:sd/sd.c       **** 				_sd_timeout();
 318               		.loc 1 253 5 is_stmt 1 view .LVU72
 319 00f8 0E94 0000 		call _sd_timeout
 320               	.LVL24:
 321               	.L19:
 244:sd/sd.c       **** 		{
 322               		.loc 1 244 16 view .LVU73
 323 00fc 2196      		adiw r28,1
 324               	.LVL25:
 244:sd/sd.c       **** 		{
 325               		.loc 1 244 3 view .LVU74
 246:sd/sd.c       **** 			{
 326               		.loc 1 246 6 is_stmt 0 view .LVU75
 327 00fe 00C0      		rjmp .L20
 328               	.L18:
 254:sd/sd.c       **** 			}
 255:sd/sd.c       **** 		}
 256:sd/sd.c       **** 
 257:sd/sd.c       **** 		if((_sd_command(CMD_SEND_IF_COND, 0x1AA) & ILLEGAL_CMD) == 0)
 329               		.loc 1 257 3 is_stmt 1 view .LVU76
 330               		.loc 1 257 7 is_stmt 0 view .LVU77
 331 0100 4AEA      		ldi r20,lo8(-86)
 332 0102 51E0      		ldi r21,lo8(1)
 333 0104 60E0      		ldi r22,0
 334 0106 70E0      		ldi r23,0
 335 0108 88E0      		ldi r24,lo8(8)
 336 010a 0E94 0000 		call _sd_command
 337               	.LVL26:
 338               		.loc 1 257 5 view .LVU78
 339 010e 82FD      		sbrc r24,2
 340 0110 00C0      		rjmp .L21
 258:sd/sd.c       **** 		{
 259:sd/sd.c       **** 			spi_xchg(0xFF);
 341               		.loc 1 259 4 is_stmt 1 view .LVU79
 342 0112 8FEF      		ldi r24,lo8(-1)
 343 0114 0E94 0000 		call spi_xchg
 344               	.LVL27:
 260:sd/sd.c       **** 			spi_xchg(0xFF);
 345               		.loc 1 260 4 view .LVU80
 346 0118 8FEF      		ldi r24,lo8(-1)
 347 011a 0E94 0000 		call spi_xchg
 348               	.LVL28:
 261:sd/sd.c       **** 			if(((spi_xchg(0xFF) & 0x01) == 0) ||
 349               		.loc 1 261 4 view .LVU81
 350               		.loc 1 261 9 is_stmt 0 view .LVU82
 351 011e 8FEF      		ldi r24,lo8(-1)
 352 0120 0E94 0000 		call spi_xchg
 353               	.LVL29:
 354               		.loc 1 261 6 view .LVU83
 355 0124 80FD      		sbrc r24,0
 356 0126 00C0      		rjmp .L22
 357               	.L24:
 262:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 263:sd/sd.c       **** 			{
 264:sd/sd.c       **** 				_sd_error();
 358               		.loc 1 264 5 is_stmt 1 view .LVU84
 359 0128 0E94 0000 		call _sd_error
 360               	.LVL30:
 361               	.L23:
 265:sd/sd.c       **** 			}
 266:sd/sd.c       **** 
 267:sd/sd.c       **** 			_card_type |= SD_2;
 362               		.loc 1 267 4 view .LVU85
 363               		.loc 1 267 15 is_stmt 0 view .LVU86
 364 012c 8091 0000 		lds r24,_card_type
 365 0130 8260      		ori r24,lo8(2)
 366               	.L106:
 268:sd/sd.c       **** 		}
 269:sd/sd.c       **** 		else
 270:sd/sd.c       **** 		{
 271:sd/sd.c       **** 			_sd_command(CMD_APP, 0);
 272:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 273:sd/sd.c       **** 			{
 274:sd/sd.c       **** 				_card_type |= SD_1;
 367               		.loc 1 274 16 view .LVU87
 368 0132 8093 0000 		sts _card_type,r24
 369               	.LVL31:
 370               	.L30:
 275:sd/sd.c       **** 			}
 276:sd/sd.c       **** 		}
 277:sd/sd.c       **** 
 278:sd/sd.c       **** 		for(i = 0; ; ++i)
 279:sd/sd.c       **** 		{
 280:sd/sd.c       **** 			if(_card_type & (SD_1 | SD_2))
 371               		.loc 1 280 4 is_stmt 1 view .LVU88
 372               		.loc 1 280 18 is_stmt 0 view .LVU89
 373 0136 C091 0000 		lds r28,_card_type
 374               		.loc 1 280 6 view .LVU90
 375 013a 8C2F      		mov r24,r28
 376 013c 8370      		andi r24,lo8(3)
 281:sd/sd.c       **** 			{
 282:sd/sd.c       **** 				arg = 0;
 283:sd/sd.c       **** 				if(_card_type & SD_2)
 284:sd/sd.c       **** 				{
 285:sd/sd.c       **** 					arg = 0x40000000;
 286:sd/sd.c       **** 				}
 287:sd/sd.c       **** 
 288:sd/sd.c       **** 				_sd_command(CMD_APP, 0);
 377               		.loc 1 288 5 view .LVU91
 378 013e 40E0      		ldi r20,0
 379 0140 50E0      		ldi r21,0
 380 0142 BA01      		movw r22,r20
 280:sd/sd.c       **** 			{
 381               		.loc 1 280 6 view .LVU92
 382 0144 8823      		tst r24
 383 0146 01F0      		breq .L26
 282:sd/sd.c       **** 				if(_card_type & SD_2)
 384               		.loc 1 282 5 is_stmt 1 view .LVU93
 385               	.LVL32:
 283:sd/sd.c       **** 				{
 386               		.loc 1 283 5 view .LVU94
 387               		.loc 1 288 5 view .LVU95
 388 0148 87E3      		ldi r24,lo8(55)
 389 014a 0E94 0000 		call _sd_command
 390               	.LVL33:
 289:sd/sd.c       **** 				response = _sd_command(CMD_SD_SEND_OP_COND, arg);
 391               		.loc 1 289 5 view .LVU96
 283:sd/sd.c       **** 				{
 392               		.loc 1 283 7 is_stmt 0 view .LVU97
 393 014e C695      		lsr r28
 394 0150 C170      		andi r28,1
 395               	.LVL34:
 283:sd/sd.c       **** 				{
 396               		.loc 1 283 7 view .LVU98
 397 0152 4C2F      		mov r20,r28
 398 0154 50E0      		ldi r21,0
 399 0156 60E0      		ldi r22,0
 400 0158 70E0      		ldi r23,0
 401 015a BEE1      		ldi r27,30
 402               		1:
 403 015c 440F      		lsl r20
 404 015e 551F      		rol r21
 405 0160 661F      		rol r22
 406 0162 771F      		rol r23
 407 0164 BA95      		dec r27
 408 0166 01F4      		brne 1b
 409               		.loc 1 289 16 view .LVU99
 410 0168 89E2      		ldi r24,lo8(41)
 411               	.LVL35:
 412               	.L107:
 290:sd/sd.c       **** 			}
 291:sd/sd.c       **** 			else
 292:sd/sd.c       **** 			{
 293:sd/sd.c       **** 				response = _sd_command(CMD_SEND_OP_COND, 0);
 413               		.loc 1 293 16 view .LVU100
 414 016a 0E94 0000 		call _sd_command
 415               	.LVL36:
 294:sd/sd.c       **** 			}
 295:sd/sd.c       **** 
 296:sd/sd.c       **** 			if((response & IDLE_STATE) == 0)
 416               		.loc 1 296 4 is_stmt 1 view .LVU101
 417 016e C82F      		mov r28,r24
 418 0170 C170      		andi r28,lo8(1)
 419               		.loc 1 296 6 is_stmt 0 view .LVU102
 420 0172 CC23      		tst r28
 421 0174 01F0      		breq .L28
 297:sd/sd.c       **** 			{
 298:sd/sd.c       **** 				break;
 299:sd/sd.c       **** 			}
 300:sd/sd.c       **** 
 301:sd/sd.c       **** 			if(i == 0x7FFF)
 422               		.loc 1 301 4 is_stmt 1 view .LVU103
 423               		.loc 1 301 6 is_stmt 0 view .LVU104
 424 0176 0F3F      		cpi r16,-1
 425 0178 3FE7      		ldi r19,127
 426 017a 1307      		cpc r17,r19
 427 017c 01F4      		brne .L29
 302:sd/sd.c       **** 			{
 303:sd/sd.c       **** 				_sd_timeout();
 428               		.loc 1 303 5 is_stmt 1 view .LVU105
 429 017e 0E94 0000 		call _sd_timeout
 430               	.LVL37:
 431               	.L29:
 278:sd/sd.c       **** 		{
 432               		.loc 1 278 16 view .LVU106
 433 0182 0F5F      		subi r16,-1
 434 0184 1F4F      		sbci r17,-1
 435               	.LVL38:
 278:sd/sd.c       **** 		{
 436               		.loc 1 278 3 view .LVU107
 280:sd/sd.c       **** 			{
 437               		.loc 1 280 6 is_stmt 0 view .LVU108
 438 0186 00C0      		rjmp .L30
 439               	.LVL39:
 440               	.L22:
 262:sd/sd.c       **** 			{
 441               		.loc 1 262 6 discriminator 1 view .LVU109
 442 0188 8FEF      		ldi r24,lo8(-1)
 443 018a 0E94 0000 		call spi_xchg
 444               	.LVL40:
 261:sd/sd.c       **** 				(spi_xchg(0xFF) != 0xAA))
 445               		.loc 1 261 38 discriminator 1 view .LVU110
 446 018e 8A3A      		cpi r24,lo8(-86)
 447 0190 01F4      		brne .L24
 448 0192 00C0      		rjmp .L23
 449               	.L21:
 271:sd/sd.c       **** 			if((_sd_command(CMD_SD_SEND_OP_COND, 0) & ILLEGAL_CMD) == 0)
 450               		.loc 1 271 4 is_stmt 1 view .LVU111
 451 0194 40E0      		ldi r20,0
 452 0196 50E0      		ldi r21,0
 453 0198 BA01      		movw r22,r20
 454 019a 87E3      		ldi r24,lo8(55)
 455 019c 0E94 0000 		call _sd_command
 456               	.LVL41:
 272:sd/sd.c       **** 			{
 457               		.loc 1 272 4 view .LVU112
 272:sd/sd.c       **** 			{
 458               		.loc 1 272 8 is_stmt 0 view .LVU113
 459 01a0 40E0      		ldi r20,0
 460 01a2 50E0      		ldi r21,0
 461 01a4 BA01      		movw r22,r20
 462 01a6 89E2      		ldi r24,lo8(41)
 463 01a8 0E94 0000 		call _sd_command
 464               	.LVL42:
 272:sd/sd.c       **** 			{
 465               		.loc 1 272 6 view .LVU114
 466 01ac 82FD      		sbrc r24,2
 467 01ae 00C0      		rjmp .L30
 274:sd/sd.c       **** 			}
 468               		.loc 1 274 5 is_stmt 1 view .LVU115
 274:sd/sd.c       **** 			}
 469               		.loc 1 274 16 is_stmt 0 view .LVU116
 470 01b0 8091 0000 		lds r24,_card_type
 471 01b4 8160      		ori r24,lo8(1)
 472 01b6 00C0      		rjmp .L106
 473               	.LVL43:
 474               	.L26:
 293:sd/sd.c       **** 			}
 475               		.loc 1 293 5 is_stmt 1 view .LVU117
 293:sd/sd.c       **** 			}
 476               		.loc 1 293 16 is_stmt 0 view .LVU118
 477 01b8 81E0      		ldi r24,lo8(1)
 478 01ba 00C0      		rjmp .L107
 479               	.LVL44:
 480               	.L28:
 304:sd/sd.c       **** 			}
 305:sd/sd.c       **** 		}
 306:sd/sd.c       **** 
 307:sd/sd.c       **** 		if(_card_type & SD_2)
 481               		.loc 1 307 3 is_stmt 1 view .LVU119
 482               		.loc 1 307 5 is_stmt 0 view .LVU120
 483 01bc 8091 0000 		lds r24,_card_type
 484               	.LVL45:
 485               		.loc 1 307 5 view .LVU121
 486 01c0 81FF      		sbrs r24,1
 487 01c2 00C0      		rjmp .L31
 308:sd/sd.c       **** 		{
 309:sd/sd.c       **** 			if(_sd_command(CMD_READ_OCR, 0))
 488               		.loc 1 309 4 is_stmt 1 view .LVU122
 489               		.loc 1 309 7 is_stmt 0 view .LVU123
 490 01c4 40E0      		ldi r20,0
 491 01c6 50E0      		ldi r21,0
 492 01c8 BA01      		movw r22,r20
 493 01ca 8AE3      		ldi r24,lo8(58)
 494 01cc 0E94 0000 		call _sd_command
 495               	.LVL46:
 496               		.loc 1 309 6 view .LVU124
 497 01d0 8111      		cpse r24,__zero_reg__
 310:sd/sd.c       **** 			{
 311:sd/sd.c       **** 				_sd_error();
 498               		.loc 1 311 5 is_stmt 1 view .LVU125
 499 01d2 0E94 0000 		call _sd_error
 500               	.LVL47:
 501               	.L32:
 312:sd/sd.c       **** 			}
 313:sd/sd.c       **** 
 314:sd/sd.c       **** 			if(spi_xchg(0xFF) & 0x40)
 502               		.loc 1 314 4 view .LVU126
 503               		.loc 1 314 7 is_stmt 0 view .LVU127
 504 01d6 8FEF      		ldi r24,lo8(-1)
 505 01d8 0E94 0000 		call spi_xchg
 506               	.LVL48:
 507               		.loc 1 314 6 view .LVU128
 508 01dc 86FF      		sbrs r24,6
 509 01de 00C0      		rjmp .L33
 315:sd/sd.c       **** 			{
 316:sd/sd.c       **** 				_card_type |= SD_HC;
 510               		.loc 1 316 5 is_stmt 1 view .LVU129
 511               		.loc 1 316 16 is_stmt 0 view .LVU130
 512 01e0 8091 0000 		lds r24,_card_type
 513 01e4 8460      		ori r24,lo8(4)
 514 01e6 8093 0000 		sts _card_type,r24
 515               	.L33:
 317:sd/sd.c       **** 			}
 318:sd/sd.c       **** 
 319:sd/sd.c       **** 			spi_xchg(0xFF);
 516               		.loc 1 319 4 is_stmt 1 view .LVU131
 517 01ea 8FEF      		ldi r24,lo8(-1)
 518 01ec 0E94 0000 		call spi_xchg
 519               	.LVL49:
 320:sd/sd.c       **** 			spi_xchg(0xFF);
 520               		.loc 1 320 4 view .LVU132
 521 01f0 8FEF      		ldi r24,lo8(-1)
 522 01f2 0E94 0000 		call spi_xchg
 523               	.LVL50:
 321:sd/sd.c       **** 			spi_xchg(0xFF);
 524               		.loc 1 321 4 view .LVU133
 525 01f6 8FEF      		ldi r24,lo8(-1)
 526 01f8 0E94 0000 		call spi_xchg
 527               	.LVL51:
 528               	.L31:
 322:sd/sd.c       **** 		}
 323:sd/sd.c       **** 
 324:sd/sd.c       **** 		if(_sd_command(CMD_SET_BLOCKLEN, 512))
 529               		.loc 1 324 3 view .LVU134
 530               		.loc 1 324 6 is_stmt 0 view .LVU135
 531 01fc 40E0      		ldi r20,0
 532 01fe 52E0      		ldi r21,lo8(2)
 533 0200 60E0      		ldi r22,0
 534 0202 70E0      		ldi r23,0
 535 0204 80E1      		ldi r24,lo8(16)
 536 0206 0E94 0000 		call _sd_command
 537               	.LVL52:
 538               		.loc 1 324 5 view .LVU136
 539 020a 8111      		cpse r24,__zero_reg__
 325:sd/sd.c       **** 		{
 326:sd/sd.c       **** 			_sd_error();
 540               		.loc 1 326 4 is_stmt 1 view .LVU137
 541 020c 0E94 0000 		call _sd_error
 542               	.LVL53:
 543               	.L34:
 327:sd/sd.c       **** 		}
 328:sd/sd.c       **** 
 329:sd/sd.c       **** 		SD_DESELECT;
 544               		.loc 1 329 3 view .LVU138
 545 0210 5C9A      		sbi 0xb,4
 330:sd/sd.c       **** 		spi_fast();
 546               		.loc 1 330 3 view .LVU139
 547 0212 0E94 0000 		call spi_fast
 548               	.LVL54:
 331:sd/sd.c       **** 		_delay_ms(20);
 549               		.loc 1 331 3 view .LVU140
 550               	.LBB62:
 551               	.LBI62:
 552               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 553               		.loc 2 166 1 view .LVU141
 554               	.LBB63:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 555               		.loc 2 168 2 view .LVU142
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 556               		.loc 2 190 2 view .LVU143
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 557               		.loc 2 191 2 view .LVU144
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 558               		.loc 2 192 2 view .LVU145
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 559               		.loc 2 194 7 view .LVU146
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 560               		.loc 2 198 9 view .LVU147
 561               	.LBE63:
 562               	.LBE62:
 330:sd/sd.c       **** 		_delay_ms(20);
 563               		.loc 1 330 3 is_stmt 0 view .LVU148
 564 0216 08EC      		ldi r16,lo8(-56)
 565 0218 10E0      		ldi r17,0
 566               	.LVL55:
 567               	.LBB69:
 568               	.LBB68:
 569               	.LBB64:
 570               	.LBB65:
 571               		.file 3 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 572               		.loc 3 105 2 view .LVU149
 573 021a 20E9      		ldi r18,lo8(-112)
 574 021c 31E0      		ldi r19,lo8(1)
 575               	.LVL56:
 576               	.L35:
 577               		.loc 3 105 2 view .LVU150
 578               	.LBE65:
 579               	.LBE64:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 580               		.loc 2 201 4 is_stmt 1 view .LVU151
 581               	.LBB67:
 582               	.LBI64:
 103:/usr/avr/include/util/delay_basic.h **** {
 583               		.loc 3 103 1 view .LVU152
 584               	.LBB66:
 585               		.loc 3 105 2 view .LVU153
 586 021e C901      		movw r24,r18
 587               	/* #APP */
 588               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 589 0220 0197      		1: sbiw r24,1
 590 0222 01F4      		brne 1b
 591               	 ;  0 "" 2
 592               	.LVL57:
 593               		.loc 3 105 2 is_stmt 0 view .LVU154
 594               	/* #NOAPP */
 595               	.LBE66:
 596               	.LBE67:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 597               		.loc 2 202 4 is_stmt 1 view .LVU155
 198:/usr/avr/include/util/delay.h **** 		{
 598               		.loc 2 198 9 view .LVU156
 599 0224 0150      		subi r16,1
 600 0226 1109      		sbc r17,__zero_reg__
 601               	.LVL58:
 198:/usr/avr/include/util/delay.h **** 		{
 602               		.loc 2 198 9 is_stmt 0 view .LVU157
 603 0228 0115      		cp r16,__zero_reg__
 604 022a 1105      		cpc r17,__zero_reg__
 605 022c 01F4      		brne .L35
 606               	.LVL59:
 198:/usr/avr/include/util/delay.h **** 		{
 607               		.loc 2 198 9 view .LVU158
 608               	.LBE68:
 609               	.LBE69:
 610               	.LBE59:
 332:sd/sd.c       **** 	}
 333:sd/sd.c       **** 
 334:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("SD card initialized"));
 611               		.loc 1 334 2 is_stmt 1 view .LVU159
 612               	.LBB70:
 613               		.loc 1 334 23 view .LVU160
 614               		.loc 1 334 23 view .LVU161
 615               	.LBE70:
 616               		.loc 1 334 2 is_stmt 0 view .LVU162
 617 022e 80E0      		ldi r24,lo8(__c.22)
 618 0230 90E0      		ldi r25,hi8(__c.22)
 619 0232 9F93      		push r25
 620               		.cfi_def_cfa_offset 13
 621 0234 8F93      		push r24
 622               		.cfi_def_cfa_offset 14
 623 0236 1F92      		push __zero_reg__
 624               		.cfi_def_cfa_offset 15
 625 0238 0E94 0000 		call log_boot_P
 626               	.LVL60:
 335:sd/sd.c       **** 	log_boot_P(LOG_INIT, PSTR("Reading SD card parameters"));
 627               		.loc 1 335 2 is_stmt 1 view .LVU163
 628               	.LBB71:
 629               		.loc 1 335 23 view .LVU164
 630               		.loc 1 335 23 view .LVU165
 631               	.LBE71:
 632               		.loc 1 335 2 is_stmt 0 view .LVU166
 633 023c 80E0      		ldi r24,lo8(__c.21)
 634 023e 90E0      		ldi r25,hi8(__c.21)
 635 0240 9F93      		push r25
 636               		.cfi_def_cfa_offset 16
 637 0242 8F93      		push r24
 638               		.cfi_def_cfa_offset 17
 639 0244 1F92      		push __zero_reg__
 640               		.cfi_def_cfa_offset 18
 641 0246 0E94 0000 		call log_boot_P
 642               	.LVL61:
 643               	.LBB72:
 336:sd/sd.c       **** 
 337:sd/sd.c       **** 	{
 338:sd/sd.c       **** 		u8 i, b, csd_read_bl_len, csd_c_size_mult, csd_structure;
 644               		.loc 1 338 3 is_stmt 1 view .LVU167
 339:sd/sd.c       **** 		u16 j, csd_c_size;
 645               		.loc 1 339 3 view .LVU168
 340:sd/sd.c       **** 
 341:sd/sd.c       **** 		spi_fast();
 646               		.loc 1 341 3 view .LVU169
 647 024a 0E94 0000 		call spi_fast
 648               	.LVL62:
 342:sd/sd.c       **** 		SD_SELECT;
 649               		.loc 1 342 3 view .LVU170
 650 024e 5C98      		cbi 0xb,4
 343:sd/sd.c       **** 
 344:sd/sd.c       **** 		/* Read CID register */
 345:sd/sd.c       **** 		_sd_command(CMD_SEND_CID, 0);
 651               		.loc 1 345 3 view .LVU171
 652 0250 40E0      		ldi r20,0
 653 0252 50E0      		ldi r21,0
 654 0254 BA01      		movw r22,r20
 655 0256 8AE0      		ldi r24,lo8(10)
 656 0258 0E94 0000 		call _sd_command
 657               	.LVL63:
 346:sd/sd.c       **** 		j = 0;
 658               		.loc 1 346 3 view .LVU172
 347:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 659               		.loc 1 347 3 view .LVU173
 660               		.loc 1 347 8 is_stmt 0 view .LVU174
 661 025c 0F90      		pop __tmp_reg__
 662 025e 0F90      		pop __tmp_reg__
 663 0260 0F90      		pop __tmp_reg__
 664 0262 0F90      		pop __tmp_reg__
 665 0264 0F90      		pop __tmp_reg__
 666 0266 0F90      		pop __tmp_reg__
 667               		.cfi_def_cfa_offset 12
 346:sd/sd.c       **** 		j = 0;
 668               		.loc 1 346 5 view .LVU175
 669 0268 E12C      		mov r14,__zero_reg__
 670 026a F12C      		mov r15,__zero_reg__
 671               	.LVL64:
 672               	.L36:
 673               		.loc 1 347 24 is_stmt 1 view .LVU176
 674               		.loc 1 347 9 is_stmt 0 view .LVU177
 675 026c 8FEF      		ldi r24,lo8(-1)
 676 026e 0E94 0000 		call spi_xchg
 677               	.LVL65:
 678               		.loc 1 347 24 view .LVU178
 679 0272 8E3F      		cpi r24,lo8(-2)
 680 0274 01F4      		brne .L38
 681 0276 E0E0      		ldi r30,lo8(_oem-1)
 682 0278 AE2E      		mov r10,r30
 683 027a E0E0      		ldi r30,hi8(_oem-1)
 684 027c BE2E      		mov r11,r30
 685 027e F0E0      		ldi r31,lo8(_product-3)
 686 0280 CF2E      		mov r12,r31
 687 0282 F0E0      		ldi r31,hi8(_product-3)
 688 0284 DF2E      		mov r13,r31
 348:sd/sd.c       **** 		{
 349:sd/sd.c       **** 			if(++j > 0x7FFF)
 350:sd/sd.c       **** 			{
 351:sd/sd.c       **** 				_sd_timeout();
 352:sd/sd.c       **** 			}
 353:sd/sd.c       **** 		}
 354:sd/sd.c       **** 
 355:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 689               		.loc 1 355 9 view .LVU179
 690 0286 D0E0      		ldi r29,0
 347:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 691               		.loc 1 347 24 view .LVU180
 692 0288 A0E6      		ldi r26,lo8(96)
 693 028a EA2E      		mov r14,r26
 694 028c F12C      		mov r15,__zero_reg__
 695               	.LVL66:
 696               	.L50:
 356:sd/sd.c       **** 		{
 357:sd/sd.c       **** 			b = spi_xchg(0xFF);
 697               		.loc 1 357 4 is_stmt 1 view .LVU181
 698               		.loc 1 357 8 is_stmt 0 view .LVU182
 699 028e 8FEF      		ldi r24,lo8(-1)
 700 0290 0E94 0000 		call spi_xchg
 701               	.LVL67:
 358:sd/sd.c       **** 			switch(i)
 702               		.loc 1 358 4 is_stmt 1 view .LVU183
 703 0294 DF30      		cpi r29,lo8(15)
 704 0296 00F0      		brlo .+2
 705 0298 00C0      		rjmp .L39
 706 029a ED2F      		mov r30,r29
 707 029c F0E0      		ldi r31,0
 708 029e E050      		subi r30,lo8(-(gs(.L41)))
 709 02a0 F040      		sbci r31,hi8(-(gs(.L41)))
 710 02a2 B501      		movw r22,r10
 711 02a4 6F5F      		subi r22,-1
 712 02a6 7F4F      		sbci r23,-1
 713 02a8 A601      		movw r20,r12
 714 02aa 4F5F      		subi r20,-1
 715 02ac 5F4F      		sbci r21,-1
 716 02ae 9701      		movw r18,r14
 717 02b0 2850      		subi r18,8
 718 02b2 3109      		sbc r19,__zero_reg__
 719 02b4 0C94 0000 		jmp __tablejump2__
 720               		.section	.jumptables.gcc.sd_init,"a",@progbits
 721               		.p2align	1
 722               	.L41:
 723 0000 0000      		.word gs(.L47)
 724 0002 0000      		.word gs(.L77)
 725 0004 0000      		.word gs(.L77)
 726 0006 0000      		.word gs(.L45)
 727 0008 0000      		.word gs(.L45)
 728 000a 0000      		.word gs(.L45)
 729 000c 0000      		.word gs(.L45)
 730 000e 0000      		.word gs(.L45)
 731 0010 0000      		.word gs(.L44)
 732 0012 0000      		.word gs(.L43)
 733 0014 0000      		.word gs(.L43)
 734 0016 0000      		.word gs(.L43)
 735 0018 0000      		.word gs(.L43)
 736 001a 0000      		.word gs(.L42)
 737 001c 0000      		.word gs(.L40)
 738               		.text
 739               	.LVL68:
 740               	.L38:
 349:sd/sd.c       **** 			{
 741               		.loc 1 349 4 view .LVU184
 349:sd/sd.c       **** 			{
 742               		.loc 1 349 6 is_stmt 0 view .LVU185
 743 02b8 4FEF      		ldi r20,-1
 744 02ba E41A      		sub r14,r20
 745 02bc F40A      		sbc r15,r20
 746               	.LVL69:
 349:sd/sd.c       **** 			{
 747               		.loc 1 349 6 view .LVU186
 748 02be F7FE      		sbrs r15,7
 749 02c0 00C0      		rjmp .L36
 351:sd/sd.c       **** 			}
 750               		.loc 1 351 5 is_stmt 1 view .LVU187
 751 02c2 0E94 0000 		call _sd_timeout
 752               	.LVL70:
 753 02c6 00C0      		rjmp .L36
 754               	.LVL71:
 755               	.L47:
 359:sd/sd.c       **** 			{
 360:sd/sd.c       **** 				case 0:
 361:sd/sd.c       **** 					_manufacturer = b;
 756               		.loc 1 361 6 view .LVU188
 757               		.loc 1 361 20 is_stmt 0 view .LVU189
 758 02c8 8093 0000 		sts _manufacturer,r24
 362:sd/sd.c       **** 					break;
 759               		.loc 1 362 6 is_stmt 1 view .LVU190
 355:sd/sd.c       **** 		{
 760               		.loc 1 355 22 view .LVU191
 761               	.LVL72:
 355:sd/sd.c       **** 		{
 762               		.loc 1 355 16 view .LVU192
 763 02cc 5B01      		movw r10,r22
 764 02ce 6A01      		movw r12,r20
 765 02d0 7901      		movw r14,r18
 357:sd/sd.c       **** 			switch(i)
 766               		.loc 1 357 4 view .LVU193
 357:sd/sd.c       **** 			switch(i)
 767               		.loc 1 357 8 is_stmt 0 view .LVU194
 768 02d2 8FEF      		ldi r24,lo8(-1)
 769               	.LVL73:
 357:sd/sd.c       **** 			switch(i)
 770               		.loc 1 357 8 view .LVU195
 771 02d4 0E94 0000 		call spi_xchg
 772               	.LVL74:
 358:sd/sd.c       **** 			{
 773               		.loc 1 358 4 is_stmt 1 view .LVU196
 355:sd/sd.c       **** 		{
 774               		.loc 1 355 22 is_stmt 0 view .LVU197
 775 02d8 D1E0      		ldi r29,lo8(1)
 776               	.LVL75:
 777               	.L46:
 363:sd/sd.c       **** 
 364:sd/sd.c       **** 				case 1:
 365:sd/sd.c       **** 				case 2:
 366:sd/sd.c       **** 					_oem[i - 1] = b;
 778               		.loc 1 366 6 is_stmt 1 view .LVU198
 779               		.loc 1 366 18 is_stmt 0 view .LVU199
 780 02da F501      		movw r30,r10
 781 02dc 8193      		st Z+,r24
 782 02de 5F01      		movw r10,r30
 367:sd/sd.c       **** 					break;
 783               		.loc 1 367 6 is_stmt 1 view .LVU200
 355:sd/sd.c       **** 		{
 784               		.loc 1 355 22 view .LVU201
 785 02e0 DF5F      		subi r29,lo8(-(1))
 786               	.LVL76:
 355:sd/sd.c       **** 		{
 787               		.loc 1 355 16 view .LVU202
 788 02e2 FFEF      		ldi r31,-1
 789 02e4 CF1A      		sub r12,r31
 790 02e6 DF0A      		sbc r13,r31
 791 02e8 28E0      		ldi r18,8
 792 02ea E21A      		sub r14,r18
 793 02ec F108      		sbc r15,__zero_reg__
 794 02ee 00C0      		rjmp .L50
 795               	.L77:
 358:sd/sd.c       **** 			{
 796               		.loc 1 358 4 is_stmt 0 view .LVU203
 797 02f0 D2E0      		ldi r29,lo8(2)
 798               	.LVL77:
 358:sd/sd.c       **** 			{
 799               		.loc 1 358 4 view .LVU204
 800 02f2 00C0      		rjmp .L46
 801               	.LVL78:
 802               	.L45:
 368:sd/sd.c       **** 
 369:sd/sd.c       **** 				case 3:
 370:sd/sd.c       **** 				case 4:
 371:sd/sd.c       **** 				case 5:
 372:sd/sd.c       **** 				case 6:
 373:sd/sd.c       **** 				case 7:
 374:sd/sd.c       **** 					_product[i - 3] = b;
 803               		.loc 1 374 6 is_stmt 1 view .LVU205
 804               		.loc 1 374 22 is_stmt 0 view .LVU206
 805 02f4 F601      		movw r30,r12
 806 02f6 8083      		st Z,r24
 375:sd/sd.c       **** 					break;
 807               		.loc 1 375 6 is_stmt 1 view .LVU207
 355:sd/sd.c       **** 		{
 808               		.loc 1 355 22 view .LVU208
 809 02f8 DF5F      		subi r29,lo8(-(1))
 810               	.LVL79:
 355:sd/sd.c       **** 		{
 811               		.loc 1 355 16 view .LVU209
 812 02fa 5B01      		movw r10,r22
 813 02fc 6A01      		movw r12,r20
 814 02fe 7901      		movw r14,r18
 815 0300 00C0      		rjmp .L50
 816               	.L44:
 376:sd/sd.c       **** 
 377:sd/sd.c       **** 				case 8:
 378:sd/sd.c       **** 					_revision = b;
 817               		.loc 1 378 6 view .LVU210
 818               		.loc 1 378 16 is_stmt 0 view .LVU211
 819 0302 8093 0000 		sts _revision,r24
 379:sd/sd.c       **** 					break;
 820               		.loc 1 379 6 is_stmt 1 view .LVU212
 355:sd/sd.c       **** 		{
 821               		.loc 1 355 22 view .LVU213
 822               	.LVL80:
 355:sd/sd.c       **** 		{
 823               		.loc 1 355 16 view .LVU214
 824 0306 5B01      		movw r10,r22
 825 0308 6A01      		movw r12,r20
 826 030a 7901      		movw r14,r18
 357:sd/sd.c       **** 			switch(i)
 827               		.loc 1 357 4 view .LVU215
 357:sd/sd.c       **** 			switch(i)
 828               		.loc 1 357 8 is_stmt 0 view .LVU216
 829 030c 8FEF      		ldi r24,lo8(-1)
 830               	.LVL81:
 357:sd/sd.c       **** 			switch(i)
 831               		.loc 1 357 8 view .LVU217
 832 030e 0E94 0000 		call spi_xchg
 833               	.LVL82:
 358:sd/sd.c       **** 			{
 834               		.loc 1 358 4 is_stmt 1 view .LVU218
 355:sd/sd.c       **** 		{
 835               		.loc 1 355 22 is_stmt 0 view .LVU219
 836 0312 D9E0      		ldi r29,lo8(9)
 837               	.LVL83:
 838               	.L43:
 380:sd/sd.c       **** 
 381:sd/sd.c       **** 				case 9:
 382:sd/sd.c       **** 				case 10:
 383:sd/sd.c       **** 				case 11:
 384:sd/sd.c       **** 				case 12:
 385:sd/sd.c       **** 					_serial |= (u32)b << ((12 - i) * 8);
 839               		.loc 1 385 6 is_stmt 1 view .LVU220
 840               		.loc 1 385 17 is_stmt 0 view .LVU221
 841 0314 90E0      		ldi r25,0
 842 0316 A0E0      		ldi r26,0
 843 0318 B0E0      		ldi r27,0
 844               		.loc 1 385 24 view .LVU222
 845 031a 0E2C      		mov r0,r14
 846 031c 00C0      		rjmp 2f
 847               		1:
 848 031e 880F      		lsl r24
 849 0320 991F      		rol r25
 850 0322 AA1F      		rol r26
 851 0324 BB1F      		rol r27
 852               		2:
 853 0326 0A94      		dec r0
 854 0328 02F4      		brpl 1b
 855               	.LVL84:
 856               		.loc 1 385 14 view .LVU223
 857 032a 4091 0000 		lds r20,_serial
 858 032e 5091 0000 		lds r21,_serial+1
 859 0332 6091 0000 		lds r22,_serial+2
 860 0336 7091 0000 		lds r23,_serial+3
 861 033a 842B      		or r24,r20
 862 033c 952B      		or r25,r21
 863 033e A62B      		or r26,r22
 864 0340 B72B      		or r27,r23
 865 0342 8093 0000 		sts _serial,r24
 866 0346 9093 0000 		sts _serial+1,r25
 867 034a A093 0000 		sts _serial+2,r26
 868 034e B093 0000 		sts _serial+3,r27
 386:sd/sd.c       **** 					break;
 869               		.loc 1 386 6 is_stmt 1 view .LVU224
 355:sd/sd.c       **** 		{
 870               		.loc 1 355 22 view .LVU225
 871 0352 DF5F      		subi r29,lo8(-(1))
 872               	.LVL85:
 355:sd/sd.c       **** 		{
 873               		.loc 1 355 16 view .LVU226
 874 0354 FFEF      		ldi r31,-1
 875 0356 AF1A      		sub r10,r31
 876 0358 BF0A      		sbc r11,r31
 877 035a 2FEF      		ldi r18,-1
 878 035c C21A      		sub r12,r18
 879 035e D20A      		sbc r13,r18
 880 0360 38E0      		ldi r19,8
 881 0362 E31A      		sub r14,r19
 882 0364 F108      		sbc r15,__zero_reg__
 883 0366 00C0      		rjmp .L50
 884               	.LVL86:
 885               	.L42:
 387:sd/sd.c       **** 
 388:sd/sd.c       **** 				case 13:
 389:sd/sd.c       **** 					_manufacturing_year = b << 4;
 886               		.loc 1 389 6 view .LVU227
 887               		.loc 1 389 30 is_stmt 0 view .LVU228
 888 0368 8295      		swap r24
 889               	.LVL87:
 890               		.loc 1 389 30 view .LVU229
 891 036a 807F      		andi r24,lo8(-16)
 892               		.loc 1 389 26 view .LVU230
 893 036c 8093 0000 		sts _manufacturing_year,r24
 390:sd/sd.c       **** 					break;
 894               		.loc 1 390 6 is_stmt 1 view .LVU231
 355:sd/sd.c       **** 		{
 895               		.loc 1 355 22 view .LVU232
 896               	.LVL88:
 355:sd/sd.c       **** 		{
 897               		.loc 1 355 16 view .LVU233
 898 0370 5B01      		movw r10,r22
 899 0372 6A01      		movw r12,r20
 900 0374 7901      		movw r14,r18
 357:sd/sd.c       **** 			switch(i)
 901               		.loc 1 357 4 view .LVU234
 357:sd/sd.c       **** 			switch(i)
 902               		.loc 1 357 8 is_stmt 0 view .LVU235
 903 0376 8FEF      		ldi r24,lo8(-1)
 904 0378 0E94 0000 		call spi_xchg
 905               	.LVL89:
 358:sd/sd.c       **** 			{
 906               		.loc 1 358 4 is_stmt 1 view .LVU236
 907               	.L40:
 391:sd/sd.c       **** 
 392:sd/sd.c       **** 				case 14:
 393:sd/sd.c       **** 					_manufacturing_year |= b >> 4;
 908               		.loc 1 393 6 view .LVU237
 909               		.loc 1 393 26 is_stmt 0 view .LVU238
 910 037c 282F      		mov r18,r24
 911 037e 2295      		swap r18
 912 0380 2F70      		andi r18,lo8(15)
 913 0382 9091 0000 		lds r25,_manufacturing_year
 914 0386 922B      		or r25,r18
 915 0388 9093 0000 		sts _manufacturing_year,r25
 394:sd/sd.c       **** 					_manufacturing_month = b & 0x0f;
 916               		.loc 1 394 6 is_stmt 1 view .LVU239
 917               		.loc 1 394 31 is_stmt 0 view .LVU240
 918 038c 8F70      		andi r24,lo8(15)
 919               	.LVL90:
 920               		.loc 1 394 27 view .LVU241
 921 038e 8093 0000 		sts _manufacturing_month,r24
 395:sd/sd.c       **** 					break;
 922               		.loc 1 395 6 is_stmt 1 view .LVU242
 355:sd/sd.c       **** 		{
 923               		.loc 1 355 22 view .LVU243
 924               	.LVL91:
 355:sd/sd.c       **** 		{
 925               		.loc 1 355 16 view .LVU244
 926 0392 4FEF      		ldi r20,-1
 927 0394 A41A      		sub r10,r20
 928 0396 B40A      		sbc r11,r20
 929 0398 5FEF      		ldi r21,-1
 930 039a C51A      		sub r12,r21
 931 039c D50A      		sbc r13,r21
 932 039e 88E0      		ldi r24,8
 933 03a0 E81A      		sub r14,r24
 934 03a2 F108      		sbc r15,__zero_reg__
 355:sd/sd.c       **** 		{
 935               		.loc 1 355 22 is_stmt 0 view .LVU245
 936 03a4 DFE0      		ldi r29,lo8(15)
 937 03a6 00C0      		rjmp .L50
 938               	.LVL92:
 939               	.L39:
 355:sd/sd.c       **** 		{
 940               		.loc 1 355 22 is_stmt 1 discriminator 2 view .LVU246
 941 03a8 DF5F      		subi r29,lo8(-(1))
 942               	.LVL93:
 355:sd/sd.c       **** 		{
 943               		.loc 1 355 16 discriminator 2 view .LVU247
 944 03aa D231      		cpi r29,lo8(18)
 945 03ac 01F0      		breq .L49
 355:sd/sd.c       **** 		{
 946               		.loc 1 355 16 is_stmt 0 view .LVU248
 947 03ae 9FEF      		ldi r25,-1
 948 03b0 A91A      		sub r10,r25
 949 03b2 B90A      		sbc r11,r25
 950 03b4 EFEF      		ldi r30,-1
 951 03b6 CE1A      		sub r12,r30
 952 03b8 DE0A      		sbc r13,r30
 953 03ba F8E0      		ldi r31,8
 954 03bc EF1A      		sub r14,r31
 955 03be F108      		sbc r15,__zero_reg__
 956 03c0 00C0      		rjmp .L50
 957               	.L49:
 396:sd/sd.c       **** 			}
 397:sd/sd.c       **** 		}
 398:sd/sd.c       **** 
 399:sd/sd.c       **** 		/* Read CSD register */
 400:sd/sd.c       **** 		csd_read_bl_len = 0;
 958               		.loc 1 400 3 is_stmt 1 view .LVU249
 959               	.LVL94:
 401:sd/sd.c       **** 		csd_c_size_mult = 0;
 960               		.loc 1 401 3 view .LVU250
 402:sd/sd.c       **** 		csd_structure = 0;
 961               		.loc 1 402 3 view .LVU251
 403:sd/sd.c       **** 		csd_c_size = 0;
 962               		.loc 1 403 3 view .LVU252
 404:sd/sd.c       **** 
 405:sd/sd.c       **** 		_sd_command(CMD_SEND_CSD, 0);
 963               		.loc 1 405 3 view .LVU253
 964 03c2 40E0      		ldi r20,0
 965 03c4 50E0      		ldi r21,0
 966 03c6 BA01      		movw r22,r20
 967 03c8 89E0      		ldi r24,lo8(9)
 968               	.LVL95:
 969               		.loc 1 405 3 is_stmt 0 view .LVU254
 970 03ca 0E94 0000 		call _sd_command
 971               	.LVL96:
 406:sd/sd.c       **** 		j = 0;
 972               		.loc 1 406 3 is_stmt 1 view .LVU255
 407:sd/sd.c       **** 		while(spi_xchg(0xFF) != 0xFE)
 973               		.loc 1 407 3 view .LVU256
 406:sd/sd.c       **** 		j = 0;
 974               		.loc 1 406 5 is_stmt 0 view .LVU257
 975 03ce E12C      		mov r14,__zero_reg__
 976 03d0 F12C      		mov r15,__zero_reg__
 977               	.LVL97:
 978               	.L51:
 979               		.loc 1 407 24 is_stmt 1 view .LVU258
 980               		.loc 1 407 9 is_stmt 0 view .LVU259
 981 03d2 8FEF      		ldi r24,lo8(-1)
 982 03d4 0E94 0000 		call spi_xchg
 983               	.LVL98:
 984               		.loc 1 407 24 view .LVU260
 985 03d8 8E3F      		cpi r24,lo8(-2)
 986 03da 01F4      		brne .L53
 402:sd/sd.c       **** 		csd_c_size = 0;
 987               		.loc 1 402 17 view .LVU261
 988 03dc D0E0      		ldi r29,0
 989               	.LVL99:
 401:sd/sd.c       **** 		csd_structure = 0;
 990               		.loc 1 401 19 view .LVU262
 991 03de D12C      		mov r13,__zero_reg__
 400:sd/sd.c       **** 		csd_c_size_mult = 0;
 992               		.loc 1 400 19 view .LVU263
 993 03e0 E12C      		mov r14,__zero_reg__
 994               	.LVL100:
 408:sd/sd.c       **** 		{
 409:sd/sd.c       **** 			if(++j > 0x7FFF)
 410:sd/sd.c       **** 			{
 411:sd/sd.c       **** 				_sd_timeout();
 412:sd/sd.c       **** 			}
 413:sd/sd.c       **** 		}
 414:sd/sd.c       **** 
 415:sd/sd.c       **** 		for(i = 0; i < 18; ++i)
 416:sd/sd.c       **** 		{
 417:sd/sd.c       **** 			b = spi_xchg(0xFF);
 418:sd/sd.c       **** 			if(i == 0)
 419:sd/sd.c       **** 			{
 420:sd/sd.c       **** 				csd_structure = b >> 6;
 421:sd/sd.c       **** 			}
 422:sd/sd.c       **** 			else if(i == 14)
 423:sd/sd.c       **** 			{
 424:sd/sd.c       **** 				if(b & 0x40)
 425:sd/sd.c       **** 				{
 426:sd/sd.c       **** 					_flag_copy = 1;
 427:sd/sd.c       **** 				}
 428:sd/sd.c       **** 
 429:sd/sd.c       **** 				if(b & 0x20)
 430:sd/sd.c       **** 				{
 431:sd/sd.c       **** 					_flag_write_protect = 1;
 432:sd/sd.c       **** 				}
 433:sd/sd.c       **** 
 434:sd/sd.c       **** 				if(b & 0x10)
 435:sd/sd.c       **** 				{
 436:sd/sd.c       **** 					_flag_write_protect_temp = 1;
 995               		.loc 1 436 31 view .LVU264
 996 03e2 FF24      		clr r15
 997 03e4 F394      		inc r15
 998               	.LVL101:
 999               	.L73:
 417:sd/sd.c       **** 			if(i == 0)
 1000               		.loc 1 417 4 is_stmt 1 view .LVU265
 417:sd/sd.c       **** 			if(i == 0)
 1001               		.loc 1 417 8 is_stmt 0 view .LVU266
 1002 03e6 8FEF      		ldi r24,lo8(-1)
 1003 03e8 0E94 0000 		call spi_xchg
 1004               	.LVL102:
 418:sd/sd.c       **** 			{
 1005               		.loc 1 418 4 is_stmt 1 view .LVU267
 418:sd/sd.c       **** 			{
 1006               		.loc 1 418 6 is_stmt 0 view .LVU268
 1007 03ec C111      		cpse r28,__zero_reg__
 1008 03ee 00C0      		rjmp .L54
 1009               	.LVL103:
 420:sd/sd.c       **** 			}
 1010               		.loc 1 420 5 is_stmt 1 view .LVU269
 420:sd/sd.c       **** 			}
 1011               		.loc 1 420 19 is_stmt 0 view .LVU270
 1012 03f0 D82F      		mov r29,r24
 1013 03f2 D295      		swap r29
 1014 03f4 D695      		lsr r29
 1015 03f6 D695      		lsr r29
 1016 03f8 D370      		andi r29,lo8(3)
 415:sd/sd.c       **** 		{
 1017               		.loc 1 415 22 is_stmt 1 view .LVU271
 1018               	.LVL104:
 415:sd/sd.c       **** 		{
 1019               		.loc 1 415 16 view .LVU272
 415:sd/sd.c       **** 		{
 1020               		.loc 1 415 22 is_stmt 0 view .LVU273
 1021 03fa C1E0      		ldi r28,lo8(1)
 1022 03fc 00C0      		rjmp .L73
 1023               	.LVL105:
 1024               	.L53:
 409:sd/sd.c       **** 			{
 1025               		.loc 1 409 4 is_stmt 1 view .LVU274
 409:sd/sd.c       **** 			{
 1026               		.loc 1 409 6 is_stmt 0 view .LVU275
 1027 03fe 2FEF      		ldi r18,-1
 1028 0400 E21A      		sub r14,r18
 1029 0402 F20A      		sbc r15,r18
 1030               	.LVL106:
 409:sd/sd.c       **** 			{
 1031               		.loc 1 409 6 view .LVU276
 1032 0404 F7FE      		sbrs r15,7
 1033 0406 00C0      		rjmp .L51
 411:sd/sd.c       **** 			}
 1034               		.loc 1 411 5 is_stmt 1 view .LVU277
 1035 0408 0E94 0000 		call _sd_timeout
 1036               	.LVL107:
 1037 040c 00C0      		rjmp .L51
 1038               	.LVL108:
 1039               	.L54:
 422:sd/sd.c       **** 			{
 1040               		.loc 1 422 9 view .LVU278
 422:sd/sd.c       **** 			{
 1041               		.loc 1 422 11 is_stmt 0 view .LVU279
 1042 040e CE30      		cpi r28,lo8(14)
 1043 0410 01F4      		brne .L56
 424:sd/sd.c       **** 				{
 1044               		.loc 1 424 5 is_stmt 1 view .LVU280
 424:sd/sd.c       **** 				{
 1045               		.loc 1 424 10 is_stmt 0 view .LVU281
 1046 0412 282F      		mov r18,r24
 1047 0414 30E0      		ldi r19,0
 424:sd/sd.c       **** 				{
 1048               		.loc 1 424 7 view .LVU282
 1049 0416 86FD      		sbrc r24,6
 1050               	.LVL109:
 426:sd/sd.c       **** 				}
 1051               		.loc 1 426 6 is_stmt 1 view .LVU283
 426:sd/sd.c       **** 				}
 1052               		.loc 1 426 17 is_stmt 0 view .LVU284
 1053 0418 F092 0000 		sts _flag_copy,r15
 1054               	.L57:
 429:sd/sd.c       **** 				{
 1055               		.loc 1 429 5 is_stmt 1 view .LVU285
 429:sd/sd.c       **** 				{
 1056               		.loc 1 429 7 is_stmt 0 view .LVU286
 1057 041c 85FD      		sbrc r24,5
 431:sd/sd.c       **** 				}
 1058               		.loc 1 431 6 is_stmt 1 view .LVU287
 431:sd/sd.c       **** 				}
 1059               		.loc 1 431 26 is_stmt 0 view .LVU288
 1060 041e F092 0000 		sts _flag_write_protect,r15
 1061               	.L58:
 434:sd/sd.c       **** 				{
 1062               		.loc 1 434 5 is_stmt 1 view .LVU289
 434:sd/sd.c       **** 				{
 1063               		.loc 1 434 7 is_stmt 0 view .LVU290
 1064 0422 84FD      		sbrc r24,4
 1065               		.loc 1 436 6 is_stmt 1 view .LVU291
 1066               		.loc 1 436 31 is_stmt 0 view .LVU292
 1067 0424 F092 0000 		sts _flag_write_protect_temp,r15
 1068               	.L59:
 437:sd/sd.c       **** 				}
 438:sd/sd.c       **** 
 439:sd/sd.c       **** 				_format = (b & 0x0C) >> 2;
 1069               		.loc 1 439 5 is_stmt 1 view .LVU293
 1070               		.loc 1 439 26 is_stmt 0 view .LVU294
 1071 0428 C901      		movw r24,r18
 1072 042a 9595      		asr r25
 1073 042c 8795      		ror r24
 1074 042e 9595      		asr r25
 1075 0430 8795      		ror r24
 1076 0432 8370      		andi r24,lo8(3)
 1077               		.loc 1 439 13 view .LVU295
 1078 0434 8093 0000 		sts _format,r24
 415:sd/sd.c       **** 		{
 1079               		.loc 1 415 22 is_stmt 1 view .LVU296
 1080               	.LVL110:
 415:sd/sd.c       **** 		{
 1081               		.loc 1 415 16 view .LVU297
 415:sd/sd.c       **** 		{
 1082               		.loc 1 415 22 is_stmt 0 view .LVU298
 1083 0438 CFE0      		ldi r28,lo8(15)
 1084 043a 00C0      		rjmp .L73
 1085               	.LVL111:
 1086               	.L56:
 440:sd/sd.c       **** 			}
 441:sd/sd.c       **** 			else
 442:sd/sd.c       **** 			{
 443:sd/sd.c       **** 				if(csd_structure == 0x01)
 1087               		.loc 1 443 5 is_stmt 1 view .LVU299
 1088               		.loc 1 443 7 is_stmt 0 view .LVU300
 1089 043c D130      		cpi r29,lo8(1)
 1090 043e 01F0      		breq .+2
 1091 0440 00C0      		rjmp .L60
 444:sd/sd.c       **** 				{
 445:sd/sd.c       **** 					switch(i)
 1092               		.loc 1 445 6 is_stmt 1 view .LVU301
 1093 0442 C730      		cpi r28,lo8(7)
 1094 0444 01F4      		brne .+2
 1095 0446 00C0      		rjmp .L61
 1096 0448 98EF      		ldi r25,lo8(-8)
 1097 044a 9C0F      		add r25,r28
 1098 044c 9230      		cpi r25,lo8(2)
 1099 044e 00F4      		brsh .+2
 1100 0450 00C0      		rjmp .L63
 1101               	.LVL112:
 1102               	.L62:
 415:sd/sd.c       **** 		{
 1103               		.loc 1 415 22 discriminator 2 view .LVU302
 1104 0452 CF5F      		subi r28,lo8(-(1))
 1105               	.LVL113:
 415:sd/sd.c       **** 		{
 1106               		.loc 1 415 16 discriminator 2 view .LVU303
 1107 0454 C231      		cpi r28,lo8(18)
 1108 0456 01F4      		brne .L73
 446:sd/sd.c       **** 					{
 447:sd/sd.c       **** 						case 7:
 448:sd/sd.c       **** 							b &= 0x3f;
 449:sd/sd.c       **** 
 450:sd/sd.c       **** 						case 8:
 451:sd/sd.c       **** 						case 9:
 452:sd/sd.c       **** 							csd_c_size <<= 8;
 453:sd/sd.c       **** 							csd_c_size |= b;
 454:sd/sd.c       **** 							++csd_c_size;
 455:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 456:sd/sd.c       **** 					}
 457:sd/sd.c       **** 				}
 458:sd/sd.c       **** 				else if(csd_structure == 0x00)
 459:sd/sd.c       **** 				{
 460:sd/sd.c       **** 					switch(i)
 461:sd/sd.c       **** 					{
 462:sd/sd.c       **** 						case 5:
 463:sd/sd.c       **** 							csd_read_bl_len = b & 0x0F;
 464:sd/sd.c       **** 							break;
 465:sd/sd.c       **** 
 466:sd/sd.c       **** 						case 6:
 467:sd/sd.c       **** 							csd_c_size = b & 0x03;
 468:sd/sd.c       **** 							csd_c_size <<= 8;
 469:sd/sd.c       **** 							break;
 470:sd/sd.c       **** 
 471:sd/sd.c       **** 						case 7:
 472:sd/sd.c       **** 							csd_c_size |= b;
 473:sd/sd.c       **** 							csd_c_size <<= 2;
 474:sd/sd.c       **** 							break;
 475:sd/sd.c       **** 
 476:sd/sd.c       **** 						case 8:
 477:sd/sd.c       **** 							csd_c_size |= b >> 6;
 478:sd/sd.c       **** 							++csd_c_size;
 479:sd/sd.c       **** 							break;
 480:sd/sd.c       **** 
 481:sd/sd.c       **** 						case 9:
 482:sd/sd.c       **** 							csd_c_size_mult = b & 0x03;
 483:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 484:sd/sd.c       **** 							break;
 485:sd/sd.c       **** 
 486:sd/sd.c       **** 						case 10:
 487:sd/sd.c       **** 							csd_c_size_mult |= b >> 7;
 488:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 489:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 490:sd/sd.c       **** 							break;
 491:sd/sd.c       **** 					}
 492:sd/sd.c       **** 				}
 493:sd/sd.c       **** 			}
 494:sd/sd.c       **** 		}
 495:sd/sd.c       **** 
 496:sd/sd.c       **** 		SD_DESELECT;
 1109               		.loc 1 496 3 view .LVU304
 1110 0458 5C9A      		sbi 0xb,4
 1111               	.LBE72:
 497:sd/sd.c       **** 	}
 498:sd/sd.c       **** 
 499:sd/sd.c       **** 	/* Print disk info */
 500:sd/sd.c       **** 	_sd_info_print();
 1112               		.loc 1 500 2 view .LVU305
 1113               	.LBB73:
 1114               	.LBI73:
 183:sd/sd.c       **** {
 1115               		.loc 1 183 13 view .LVU306
 1116               	.LBB74:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1117               		.loc 1 185 2 view .LVU307
 1118 045a 8091 0000 		lds r24,_card_type
 1119 045e 82FF      		sbrs r24,2
 1120 0460 00C0      		rjmp .L78
 1121 0462 80E0      		ldi r24,lo8(__c.18)
 1122 0464 90E0      		ldi r25,hi8(__c.18)
 1123               	.L74:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1124               		.loc 1 185 2 is_stmt 0 view .LVU308
 1125               	.LBE74:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1126               		.loc 1 185 24 is_stmt 1 view .LVU309
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1127               		.loc 1 185 24 view .LVU310
 1128               	.LBB75:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1129               		.loc 1 185 2 is_stmt 0 view .LVU311
 1130 0466 9F93      		push r25
 1131               		.cfi_def_cfa_offset 13
 1132 0468 8F93      		push r24
 1133               		.cfi_def_cfa_offset 14
 1134 046a 80E0      		ldi r24,lo8(__c.16)
 1135 046c 90E0      		ldi r25,hi8(__c.16)
 1136 046e 9F93      		push r25
 1137               		.cfi_def_cfa_offset 15
 1138 0470 8F93      		push r24
 1139               		.cfi_def_cfa_offset 16
 1140 0472 C1E0      		ldi r28,lo8(1)
 1141               	.LVL114:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1142               		.loc 1 185 2 view .LVU312
 1143 0474 CF93      		push r28
 1144               		.cfi_def_cfa_offset 17
 1145 0476 0E94 0000 		call log_boot_P
 1146               	.LVL115:
 188:sd/sd.c       **** 		BLOCK_SIZE);
 1147               		.loc 1 188 2 is_stmt 1 view .LVU313
 1148               	.LBE75:
 188:sd/sd.c       **** 		BLOCK_SIZE);
 1149               		.loc 1 188 24 view .LVU314
 188:sd/sd.c       **** 		BLOCK_SIZE);
 1150               		.loc 1 188 24 view .LVU315
 1151               	.LBB76:
 188:sd/sd.c       **** 		BLOCK_SIZE);
 1152               		.loc 1 188 2 is_stmt 0 view .LVU316
 1153 047a 82E0      		ldi r24,lo8(2)
 1154 047c 8F93      		push r24
 1155               		.cfi_def_cfa_offset 18
 1156 047e 1F92      		push __zero_reg__
 1157               		.cfi_def_cfa_offset 19
 1158 0480 80E0      		ldi r24,lo8(__c.15)
 1159 0482 90E0      		ldi r25,hi8(__c.15)
 1160 0484 9F93      		push r25
 1161               		.cfi_def_cfa_offset 20
 1162 0486 8F93      		push r24
 1163               		.cfi_def_cfa_offset 21
 1164 0488 CF93      		push r28
 1165               		.cfi_def_cfa_offset 22
 1166 048a 0E94 0000 		call log_boot_P
 1167               	.LVL116:
 191:sd/sd.c       **** 		_manufacturer);
 1168               		.loc 1 191 2 is_stmt 1 view .LVU317
 1169               	.LBE76:
 191:sd/sd.c       **** 		_manufacturer);
 1170               		.loc 1 191 24 view .LVU318
 191:sd/sd.c       **** 		_manufacturer);
 1171               		.loc 1 191 24 view .LVU319
 1172               	.LBB77:
 191:sd/sd.c       **** 		_manufacturer);
 1173               		.loc 1 191 2 is_stmt 0 view .LVU320
 1174 048e 8091 0000 		lds r24,_manufacturer
 1175 0492 1F92      		push __zero_reg__
 1176               		.cfi_def_cfa_offset 23
 1177 0494 8F93      		push r24
 1178               		.cfi_def_cfa_offset 24
 1179 0496 80E0      		ldi r24,lo8(__c.14)
 1180 0498 90E0      		ldi r25,hi8(__c.14)
 1181 049a 9F93      		push r25
 1182               		.cfi_def_cfa_offset 25
 1183 049c 8F93      		push r24
 1184               		.cfi_def_cfa_offset 26
 1185 049e CF93      		push r28
 1186               		.cfi_def_cfa_offset 27
 1187 04a0 0E94 0000 		call log_boot_P
 1188               	.LVL117:
 194:sd/sd.c       **** 		_oem);
 1189               		.loc 1 194 2 is_stmt 1 view .LVU321
 1190               	.LBE77:
 194:sd/sd.c       **** 		_oem);
 1191               		.loc 1 194 24 view .LVU322
 194:sd/sd.c       **** 		_oem);
 1192               		.loc 1 194 24 view .LVU323
 1193               	.LBB78:
 194:sd/sd.c       **** 		_oem);
 1194               		.loc 1 194 2 is_stmt 0 view .LVU324
 1195 04a4 80E0      		ldi r24,lo8(_oem)
 1196 04a6 90E0      		ldi r25,hi8(_oem)
 1197 04a8 9F93      		push r25
 1198               		.cfi_def_cfa_offset 28
 1199 04aa 8F93      		push r24
 1200               		.cfi_def_cfa_offset 29
 1201 04ac 80E0      		ldi r24,lo8(__c.13)
 1202 04ae 90E0      		ldi r25,hi8(__c.13)
 1203 04b0 9F93      		push r25
 1204               		.cfi_def_cfa_offset 30
 1205 04b2 8F93      		push r24
 1206               		.cfi_def_cfa_offset 31
 1207 04b4 CF93      		push r28
 1208               		.cfi_def_cfa_offset 32
 1209 04b6 0E94 0000 		call log_boot_P
 1210               	.LVL118:
 197:sd/sd.c       **** 		_product);
 1211               		.loc 1 197 2 is_stmt 1 view .LVU325
 1212               	.LBE78:
 197:sd/sd.c       **** 		_product);
 1213               		.loc 1 197 24 view .LVU326
 197:sd/sd.c       **** 		_product);
 1214               		.loc 1 197 24 view .LVU327
 1215               	.LBB79:
 197:sd/sd.c       **** 		_product);
 1216               		.loc 1 197 2 is_stmt 0 view .LVU328
 1217 04ba 80E0      		ldi r24,lo8(_product)
 1218 04bc 90E0      		ldi r25,hi8(_product)
 1219 04be 9F93      		push r25
 1220               		.cfi_def_cfa_offset 33
 1221 04c0 8F93      		push r24
 1222               		.cfi_def_cfa_offset 34
 1223 04c2 80E0      		ldi r24,lo8(__c.12)
 1224 04c4 90E0      		ldi r25,hi8(__c.12)
 1225 04c6 9F93      		push r25
 1226               		.cfi_def_cfa_offset 35
 1227 04c8 8F93      		push r24
 1228               		.cfi_def_cfa_offset 36
 1229 04ca CF93      		push r28
 1230               		.cfi_def_cfa_offset 37
 1231 04cc 0E94 0000 		call log_boot_P
 1232               	.LVL119:
 200:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1233               		.loc 1 200 2 is_stmt 1 view .LVU329
 201:sd/sd.c       **** 
 1234               		.loc 1 201 38 is_stmt 0 view .LVU330
 1235 04d0 8091 0000 		lds r24,_revision
 1236               	.LBE79:
 200:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1237               		.loc 1 200 24 is_stmt 1 view .LVU331
 200:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1238               		.loc 1 200 24 view .LVU332
 1239               	.LBB80:
 200:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1240               		.loc 1 200 2 is_stmt 0 view .LVU333
 1241 04d4 982F      		mov r25,r24
 1242 04d6 9F70      		andi r25,lo8(15)
 1243 04d8 905D      		subi r25,lo8(-(48))
 1244 04da 1F92      		push __zero_reg__
 1245               		.cfi_def_cfa_offset 38
 1246 04dc 9F93      		push r25
 1247               		.cfi_def_cfa_offset 39
 201:sd/sd.c       **** 
 1248               		.loc 1 201 14 view .LVU334
 1249 04de 8295      		swap r24
 1250 04e0 8F70      		andi r24,lo8(15)
 200:sd/sd.c       **** 		(_revision >> 4) + '0', (_revision & 0x0F) + '0');
 1251               		.loc 1 200 2 view .LVU335
 1252 04e2 805D      		subi r24,lo8(-(48))
 1253 04e4 1F92      		push __zero_reg__
 1254               		.cfi_def_cfa_offset 40
 1255 04e6 8F93      		push r24
 1256               		.cfi_def_cfa_offset 41
 1257 04e8 80E0      		ldi r24,lo8(__c.11)
 1258 04ea 90E0      		ldi r25,hi8(__c.11)
 1259 04ec 9F93      		push r25
 1260               		.cfi_def_cfa_offset 42
 1261 04ee 8F93      		push r24
 1262               		.cfi_def_cfa_offset 43
 1263 04f0 CF93      		push r28
 1264               		.cfi_def_cfa_offset 44
 1265 04f2 0E94 0000 		call log_boot_P
 1266               	.LVL120:
 203:sd/sd.c       **** 		_serial);
 1267               		.loc 1 203 2 is_stmt 1 view .LVU336
 1268               	.LBE80:
 203:sd/sd.c       **** 		_serial);
 1269               		.loc 1 203 24 view .LVU337
 203:sd/sd.c       **** 		_serial);
 1270               		.loc 1 203 24 view .LVU338
 1271               	.LBB81:
 203:sd/sd.c       **** 		_serial);
 1272               		.loc 1 203 2 is_stmt 0 view .LVU339
 1273 04f6 2DB7      		in r18,__SP_L__
 1274 04f8 3EB7      		in r19,__SP_H__
 1275 04fa 205E      		subi r18,-32
 1276 04fc 3F4F      		sbci r19,-1
 1277 04fe 0FB6      		in __tmp_reg__,__SREG__
 1278 0500 F894      		cli
 1279 0502 3EBF      		out __SP_H__,r19
 1280 0504 0FBE      		out __SREG__,__tmp_reg__
 1281 0506 2DBF      		out __SP_L__,r18
 1282               		.cfi_def_cfa_offset 12
 1283 0508 8091 0000 		lds r24,_serial+3
 1284 050c 8F93      		push r24
 1285               		.cfi_def_cfa_offset 13
 1286 050e 8091 0000 		lds r24,_serial+2
 1287 0512 8F93      		push r24
 1288               		.cfi_def_cfa_offset 14
 1289 0514 8091 0000 		lds r24,_serial+1
 1290 0518 8F93      		push r24
 1291               		.cfi_def_cfa_offset 15
 1292 051a 8091 0000 		lds r24,_serial
 1293 051e 8F93      		push r24
 1294               		.cfi_def_cfa_offset 16
 1295 0520 80E0      		ldi r24,lo8(__c.10)
 1296 0522 90E0      		ldi r25,hi8(__c.10)
 1297 0524 9F93      		push r25
 1298               		.cfi_def_cfa_offset 17
 1299 0526 8F93      		push r24
 1300               		.cfi_def_cfa_offset 18
 1301 0528 CF93      		push r28
 1302               		.cfi_def_cfa_offset 19
 1303 052a 0E94 0000 		call log_boot_P
 1304               	.LVL121:
 206:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1305               		.loc 1 206 2 is_stmt 1 view .LVU340
 1306               	.LBE81:
 206:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1307               		.loc 1 206 24 view .LVU341
 206:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1308               		.loc 1 206 24 view .LVU342
 1309               	.LBB82:
 206:sd/sd.c       **** 		_manufacturing_month, 2000 + _manufacturing_year);
 1310               		.loc 1 206 2 is_stmt 0 view .LVU343
 1311 052e 8091 0000 		lds r24,_manufacturing_year
 1312 0532 90E0      		ldi r25,0
 1313 0534 8053      		subi r24,48
 1314 0536 984F      		sbci r25,-8
 1315 0538 9F93      		push r25
 1316               		.cfi_def_cfa_offset 20
 1317 053a 8F93      		push r24
 1318               		.cfi_def_cfa_offset 21
 1319 053c 8091 0000 		lds r24,_manufacturing_month
 1320 0540 1F92      		push __zero_reg__
 1321               		.cfi_def_cfa_offset 22
 1322 0542 8F93      		push r24
 1323               		.cfi_def_cfa_offset 23
 1324 0544 80E0      		ldi r24,lo8(__c.9)
 1325 0546 90E0      		ldi r25,hi8(__c.9)
 1326 0548 9F93      		push r25
 1327               		.cfi_def_cfa_offset 24
 1328 054a 8F93      		push r24
 1329               		.cfi_def_cfa_offset 25
 1330 054c CF93      		push r28
 1331               		.cfi_def_cfa_offset 26
 1332 054e 0E94 0000 		call log_boot_P
 1333               	.LVL122:
 209:sd/sd.c       **** 		_capacity);
 1334               		.loc 1 209 2 is_stmt 1 view .LVU344
 1335               	.LBE82:
 209:sd/sd.c       **** 		_capacity);
 1336               		.loc 1 209 24 view .LVU345
 209:sd/sd.c       **** 		_capacity);
 1337               		.loc 1 209 24 view .LVU346
 1338               	.LBB83:
 209:sd/sd.c       **** 		_capacity);
 1339               		.loc 1 209 2 is_stmt 0 view .LVU347
 1340 0552 8091 0000 		lds r24,_capacity+3
 1341 0556 8F93      		push r24
 1342               		.cfi_def_cfa_offset 27
 1343 0558 8091 0000 		lds r24,_capacity+2
 1344 055c 8F93      		push r24
 1345               		.cfi_def_cfa_offset 28
 1346 055e 8091 0000 		lds r24,_capacity+1
 1347 0562 8F93      		push r24
 1348               		.cfi_def_cfa_offset 29
 1349 0564 8091 0000 		lds r24,_capacity
 1350 0568 8F93      		push r24
 1351               		.cfi_def_cfa_offset 30
 1352 056a 80E0      		ldi r24,lo8(__c.8)
 1353 056c 90E0      		ldi r25,hi8(__c.8)
 1354 056e 9F93      		push r25
 1355               		.cfi_def_cfa_offset 31
 1356 0570 8F93      		push r24
 1357               		.cfi_def_cfa_offset 32
 1358 0572 CF93      		push r28
 1359               		.cfi_def_cfa_offset 33
 1360 0574 0E94 0000 		call log_boot_P
 1361               	.LVL123:
 212:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 1362               		.loc 1 212 2 is_stmt 1 view .LVU348
 1363               	.LBE83:
 212:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 1364               		.loc 1 212 25 view .LVU349
 212:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 1365               		.loc 1 212 25 view .LVU350
 1366               	.LBB84:
 212:sd/sd.c       **** 		_capacity * BLOCK_SIZE);
 1367               		.loc 1 212 2 is_stmt 0 view .LVU351
 1368 0578 8091 0000 		lds r24,_capacity
 1369 057c 9091 0000 		lds r25,_capacity+1
 1370 0580 A091 0000 		lds r26,_capacity+2
 1371 0584 B091 0000 		lds r27,_capacity+3
 1372 0588 29E0      		ldi r18,9
 1373               		1:
 1374 058a 880F      		lsl r24
 1375 058c 991F      		rol r25
 1376 058e AA1F      		rol r26
 1377 0590 BB1F      		rol r27
 1378 0592 2A95      		dec r18
 1379 0594 01F4      		brne 1b
 1380 0596 BF93      		push r27
 1381               		.cfi_def_cfa_offset 34
 1382 0598 AF93      		push r26
 1383               		.cfi_def_cfa_offset 35
 1384 059a 9F93      		push r25
 1385               		.cfi_def_cfa_offset 36
 1386 059c 8F93      		push r24
 1387               		.cfi_def_cfa_offset 37
 1388 059e 80E0      		ldi r24,lo8(__c.7)
 1389 05a0 90E0      		ldi r25,hi8(__c.7)
 1390 05a2 9F93      		push r25
 1391               		.cfi_def_cfa_offset 38
 1392 05a4 8F93      		push r24
 1393               		.cfi_def_cfa_offset 39
 1394 05a6 85E0      		ldi r24,lo8(5)
 1395 05a8 8F93      		push r24
 1396               		.cfi_def_cfa_offset 40
 1397 05aa 0E94 0000 		call log_boot_P
 1398               	.LVL124:
 215:sd/sd.c       **** 		_format);
 1399               		.loc 1 215 2 is_stmt 1 view .LVU352
 1400               	.LBE84:
 215:sd/sd.c       **** 		_format);
 1401               		.loc 1 215 24 view .LVU353
 215:sd/sd.c       **** 		_format);
 1402               		.loc 1 215 24 view .LVU354
 1403               	.LBB85:
 215:sd/sd.c       **** 		_format);
 1404               		.loc 1 215 2 is_stmt 0 view .LVU355
 1405 05ae 8091 0000 		lds r24,_format
 1406 05b2 1F92      		push __zero_reg__
 1407               		.cfi_def_cfa_offset 41
 1408 05b4 8F93      		push r24
 1409               		.cfi_def_cfa_offset 42
 1410 05b6 80E0      		ldi r24,lo8(__c.6)
 1411 05b8 90E0      		ldi r25,hi8(__c.6)
 1412 05ba 9F93      		push r25
 1413               		.cfi_def_cfa_offset 43
 1414 05bc 8F93      		push r24
 1415               		.cfi_def_cfa_offset 44
 1416 05be CF93      		push r28
 1417               		.cfi_def_cfa_offset 45
 1418 05c0 0E94 0000 		call log_boot_P
 1419               	.LVL125:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1420               		.loc 1 218 2 is_stmt 1 view .LVU356
 1421 05c4 4DB7      		in r20,__SP_L__
 1422 05c6 5EB7      		in r21,__SP_H__
 1423 05c8 4F5D      		subi r20,-33
 1424 05ca 5F4F      		sbci r21,-1
 1425 05cc 0FB6      		in __tmp_reg__,__SREG__
 1426 05ce F894      		cli
 1427 05d0 5EBF      		out __SP_H__,r21
 1428 05d2 0FBE      		out __SREG__,__tmp_reg__
 1429 05d4 4DBF      		out __SP_L__,r20
 1430               		.cfi_def_cfa_offset 12
 1431 05d6 8091 0000 		lds r24,_flag_write_protect_temp
 1432 05da 8111      		cpse r24,__zero_reg__
 1433 05dc 00C0      		rjmp .L79
 221:sd/sd.c       **** 			PSTR("Rewritable")));
 1434               		.loc 1 221 51 is_stmt 0 view .LVU357
 1435 05de 8091 0000 		lds r24,_flag_write_protect
 1436 05e2 8823      		tst r24
 1437 05e4 01F4      		brne .+2
 1438 05e6 00C0      		rjmp .L80
 1439 05e8 80E0      		ldi r24,lo8(__c.4)
 1440 05ea 90E0      		ldi r25,hi8(__c.4)
 1441               	.L75:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1442               		.loc 1 218 2 view .LVU358
 1443 05ec 2091 0000 		lds r18,_flag_copy
 1444 05f0 2223      		tst r18
 1445 05f2 01F4      		brne .+2
 1446 05f4 00C0      		rjmp .L81
 1447 05f6 20E0      		ldi r18,lo8(__c.2)
 1448 05f8 30E0      		ldi r19,hi8(__c.2)
 1449               	.L76:
 1450               	.LBE85:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1451               		.loc 1 218 24 is_stmt 1 view .LVU359
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1452               		.loc 1 218 24 view .LVU360
 1453               	.LBB86:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1454               		.loc 1 218 2 is_stmt 0 view .LVU361
 1455 05fa 9F93      		push r25
 1456               		.cfi_def_cfa_offset 13
 1457 05fc 8F93      		push r24
 1458               		.cfi_def_cfa_offset 14
 1459 05fe 3F93      		push r19
 1460               		.cfi_def_cfa_offset 15
 1461 0600 2F93      		push r18
 1462               		.cfi_def_cfa_offset 16
 1463 0602 80E0      		ldi r24,lo8(__c.0)
 1464 0604 90E0      		ldi r25,hi8(__c.0)
 1465 0606 9F93      		push r25
 1466               		.cfi_def_cfa_offset 17
 1467 0608 8F93      		push r24
 1468               		.cfi_def_cfa_offset 18
 1469 060a 81E0      		ldi r24,lo8(1)
 1470 060c 8F93      		push r24
 1471               		.cfi_def_cfa_offset 19
 1472 060e 0E94 0000 		call log_boot_P
 1473               	.LVL126:
 1474               	.LBE86:
 1475               	.LBE73:
 501:sd/sd.c       **** }
 1476               		.loc 1 501 1 view .LVU362
 1477 0612 8DB7      		in r24,__SP_L__
 1478 0614 9EB7      		in r25,__SP_H__
 1479 0616 0796      		adiw r24,7
 1480 0618 0FB6      		in __tmp_reg__,__SREG__
 1481 061a F894      		cli
 1482 061c 9EBF      		out __SP_H__,r25
 1483 061e 0FBE      		out __SREG__,__tmp_reg__
 1484 0620 8DBF      		out __SP_L__,r24
 1485               		.cfi_def_cfa_offset 12
 1486               	/* epilogue start */
 1487 0622 DF91      		pop r29
 1488 0624 CF91      		pop r28
 1489 0626 1F91      		pop r17
 1490 0628 0F91      		pop r16
 1491               	.LVL127:
 1492               		.loc 1 501 1 view .LVU363
 1493 062a FF90      		pop r15
 1494 062c EF90      		pop r14
 1495               	.LVL128:
 1496               		.loc 1 501 1 view .LVU364
 1497 062e DF90      		pop r13
 1498               	.LVL129:
 1499               		.loc 1 501 1 view .LVU365
 1500 0630 CF90      		pop r12
 1501 0632 BF90      		pop r11
 1502 0634 AF90      		pop r10
 1503 0636 0895      		ret
 1504               	.LVL130:
 1505               	.L61:
 1506               	.LBB88:
 448:sd/sd.c       **** 
 1507               		.loc 1 448 8 is_stmt 1 view .LVU366
 448:sd/sd.c       **** 
 1508               		.loc 1 448 10 is_stmt 0 view .LVU367
 1509 0638 8F73      		andi r24,lo8(63)
 1510               	.LVL131:
 1511               	.L63:
 452:sd/sd.c       **** 							csd_c_size |= b;
 1512               		.loc 1 452 8 is_stmt 1 view .LVU368
 453:sd/sd.c       **** 							++csd_c_size;
 1513               		.loc 1 453 8 view .LVU369
 453:sd/sd.c       **** 							++csd_c_size;
 1514               		.loc 1 453 19 is_stmt 0 view .LVU370
 1515 063a 482F      		mov r20,r24
 1516 063c 502F      		mov r21,r16
 1517 063e 8A01      		movw r16,r20
 1518               	.LVL132:
 454:sd/sd.c       **** 							_capacity = (u32)csd_c_size << 10;
 1519               		.loc 1 454 8 is_stmt 1 view .LVU371
 1520 0640 0F5F      		subi r16,-1
 1521 0642 1F4F      		sbci r17,-1
 1522               	.LVL133:
 455:sd/sd.c       **** 					}
 1523               		.loc 1 455 8 view .LVU372
 455:sd/sd.c       **** 					}
 1524               		.loc 1 455 20 is_stmt 0 view .LVU373
 1525 0644 C801      		movw r24,r16
 1526               	.LVL134:
 455:sd/sd.c       **** 					}
 1527               		.loc 1 455 20 view .LVU374
 1528 0646 A0E0      		ldi r26,0
 1529 0648 B0E0      		ldi r27,0
 455:sd/sd.c       **** 					}
 1530               		.loc 1 455 36 view .LVU375
 1531 064a 6AE0      		ldi r22,10
 1532               		1:
 1533 064c 880F      		lsl r24
 1534 064e 991F      		rol r25
 1535 0650 AA1F      		rol r26
 1536 0652 BB1F      		rol r27
 1537 0654 6A95      		dec r22
 1538 0656 01F4      		brne 1b
 455:sd/sd.c       **** 					}
 1539               		.loc 1 455 18 view .LVU376
 1540 0658 8093 0000 		sts _capacity,r24
 1541 065c 9093 0000 		sts _capacity+1,r25
 1542 0660 A093 0000 		sts _capacity+2,r26
 1543 0664 B093 0000 		sts _capacity+3,r27
 1544 0668 00C0      		rjmp .L62
 1545               	.LVL135:
 1546               	.L60:
 458:sd/sd.c       **** 				{
 1547               		.loc 1 458 10 is_stmt 1 view .LVU377
 458:sd/sd.c       **** 				{
 1548               		.loc 1 458 12 is_stmt 0 view .LVU378
 1549 066a D111      		cpse r29,__zero_reg__
 1550 066c 00C0      		rjmp .L62
 460:sd/sd.c       **** 					{
 1551               		.loc 1 460 6 is_stmt 1 view .LVU379
 1552 066e C830      		cpi r28,lo8(8)
 1553 0670 01F4      		brne .+2
 1554 0672 00C0      		rjmp .L64
 1555 0674 00F4      		brsh .L65
 1556 0676 C630      		cpi r28,lo8(6)
 1557 0678 01F0      		breq .L66
 1558 067a C730      		cpi r28,lo8(7)
 1559 067c 01F0      		breq .L67
 1560 067e C530      		cpi r28,lo8(5)
 1561 0680 01F0      		breq .L68
 1562               	.LVL136:
 415:sd/sd.c       **** 		{
 1563               		.loc 1 415 22 view .LVU380
 1564 0682 CF5F      		subi r28,lo8(-(1))
 1565               	.LVL137:
 415:sd/sd.c       **** 		{
 1566               		.loc 1 415 16 view .LVU381
 1567 0684 00C0      		rjmp .L73
 1568               	.LVL138:
 1569               	.L65:
 460:sd/sd.c       **** 					{
 1570               		.loc 1 460 6 is_stmt 0 view .LVU382
 1571 0686 C930      		cpi r28,lo8(9)
 1572 0688 01F4      		brne .+2
 1573 068a 00C0      		rjmp .L70
 1574 068c CA30      		cpi r28,lo8(10)
 1575 068e 01F0      		breq .+2
 1576 0690 00C0      		rjmp .L62
 487:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1577               		.loc 1 487 8 is_stmt 1 view .LVU383
 487:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1578               		.loc 1 487 24 is_stmt 0 view .LVU384
 1579 0692 881F      		rol r24
 1580 0694 8827      		clr r24
 1581 0696 881F      		rol r24
 1582               	.LVL139:
 487:sd/sd.c       **** 							_capacity = ((u32)csd_c_size <<
 1583               		.loc 1 487 24 view .LVU385
 1584 0698 D82A      		or r13,r24
 1585               	.LVL140:
 488:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1586               		.loc 1 488 8 is_stmt 1 view .LVU386
 488:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1587               		.loc 1 488 21 is_stmt 0 view .LVU387
 1588 069a C801      		movw r24,r16
 1589 069c A0E0      		ldi r26,0
 1590 069e B0E0      		ldi r27,0
 489:sd/sd.c       **** 							break;
 1591               		.loc 1 489 26 view .LVU388
 1592 06a0 ED2D      		mov r30,r13
 1593 06a2 EE0D      		add r30,r14
 1594 06a4 FF27      		clr r31
 1595 06a6 FF1F      		rol r31
 1596 06a8 9F01      		movw r18,r30
 489:sd/sd.c       **** 							break;
 1597               		.loc 1 489 44 view .LVU389
 1598 06aa 2E5F      		subi r18,-2
 1599 06ac 3F4F      		sbci r19,-1
 488:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1600               		.loc 1 488 37 view .LVU390
 1601 06ae 00C0      		rjmp 2f
 1602               		1:
 1603 06b0 880F      		lsl r24
 1604 06b2 991F      		rol r25
 1605 06b4 AA1F      		rol r26
 1606 06b6 BB1F      		rol r27
 1607               		2:
 1608 06b8 2A95      		dec r18
 1609 06ba 02F4      		brpl 1b
 489:sd/sd.c       **** 							break;
 1610               		.loc 1 489 50 view .LVU391
 1611 06bc 39E0      		ldi r19,9
 1612               		1:
 1613 06be B695      		lsr r27
 1614 06c0 A795      		ror r26
 1615 06c2 9795      		ror r25
 1616 06c4 8795      		ror r24
 1617 06c6 3A95      		dec r19
 1618 06c8 01F4      		brne 1b
 488:sd/sd.c       **** 								(csd_c_size_mult + csd_read_bl_len + 2)) >> 9;
 1619               		.loc 1 488 18 view .LVU392
 1620 06ca 8093 0000 		sts _capacity,r24
 1621 06ce 9093 0000 		sts _capacity+1,r25
 1622 06d2 A093 0000 		sts _capacity+2,r26
 1623 06d6 B093 0000 		sts _capacity+3,r27
 490:sd/sd.c       **** 					}
 1624               		.loc 1 490 8 is_stmt 1 view .LVU393
 1625               	.LVL141:
 415:sd/sd.c       **** 		{
 1626               		.loc 1 415 22 view .LVU394
 415:sd/sd.c       **** 		{
 1627               		.loc 1 415 16 view .LVU395
 415:sd/sd.c       **** 		{
 1628               		.loc 1 415 22 is_stmt 0 view .LVU396
 1629 06da CBE0      		ldi r28,lo8(11)
 1630 06dc 00C0      		rjmp .L73
 1631               	.LVL142:
 1632               	.L68:
 463:sd/sd.c       **** 							break;
 1633               		.loc 1 463 8 is_stmt 1 view .LVU397
 463:sd/sd.c       **** 							break;
 1634               		.loc 1 463 24 is_stmt 0 view .LVU398
 1635 06de 8F70      		andi r24,lo8(15)
 1636               	.LVL143:
 463:sd/sd.c       **** 							break;
 1637               		.loc 1 463 24 view .LVU399
 1638 06e0 E82E      		mov r14,r24
 1639               	.LVL144:
 464:sd/sd.c       **** 
 1640               		.loc 1 464 8 is_stmt 1 view .LVU400
 415:sd/sd.c       **** 		{
 1641               		.loc 1 415 22 view .LVU401
 415:sd/sd.c       **** 		{
 1642               		.loc 1 415 16 view .LVU402
 415:sd/sd.c       **** 		{
 1643               		.loc 1 415 22 is_stmt 0 view .LVU403
 1644 06e2 C6E0      		ldi r28,lo8(6)
 1645 06e4 00C0      		rjmp .L73
 1646               	.LVL145:
 1647               	.L66:
 467:sd/sd.c       **** 							csd_c_size <<= 8;
 1648               		.loc 1 467 8 is_stmt 1 view .LVU404
 467:sd/sd.c       **** 							csd_c_size <<= 8;
 1649               		.loc 1 467 19 is_stmt 0 view .LVU405
 1650 06e6 8370      		andi r24,lo8(3)
 1651               	.LVL146:
 467:sd/sd.c       **** 							csd_c_size <<= 8;
 1652               		.loc 1 467 19 view .LVU406
 1653 06e8 082F      		mov r16,r24
 1654               	.LVL147:
 467:sd/sd.c       **** 							csd_c_size <<= 8;
 1655               		.loc 1 467 19 view .LVU407
 1656 06ea 10E0      		ldi r17,0
 1657               	.LVL148:
 468:sd/sd.c       **** 							break;
 1658               		.loc 1 468 8 is_stmt 1 view .LVU408
 468:sd/sd.c       **** 							break;
 1659               		.loc 1 468 19 is_stmt 0 view .LVU409
 1660 06ec 102F      		mov r17,r16
 1661 06ee 0027      		clr r16
 1662               	.LVL149:
 469:sd/sd.c       **** 
 1663               		.loc 1 469 8 is_stmt 1 view .LVU410
 415:sd/sd.c       **** 		{
 1664               		.loc 1 415 22 view .LVU411
 415:sd/sd.c       **** 		{
 1665               		.loc 1 415 16 view .LVU412
 415:sd/sd.c       **** 		{
 1666               		.loc 1 415 22 is_stmt 0 view .LVU413
 1667 06f0 C7E0      		ldi r28,lo8(7)
 1668 06f2 00C0      		rjmp .L73
 1669               	.LVL150:
 1670               	.L67:
 472:sd/sd.c       **** 							csd_c_size <<= 2;
 1671               		.loc 1 472 8 is_stmt 1 view .LVU414
 472:sd/sd.c       **** 							csd_c_size <<= 2;
 1672               		.loc 1 472 19 is_stmt 0 view .LVU415
 1673 06f4 082B      		or r16,r24
 1674               	.LVL151:
 473:sd/sd.c       **** 							break;
 1675               		.loc 1 473 8 is_stmt 1 view .LVU416
 473:sd/sd.c       **** 							break;
 1676               		.loc 1 473 19 is_stmt 0 view .LVU417
 1677 06f6 000F      		lsl r16
 1678 06f8 111F      		rol r17
 1679 06fa 000F      		lsl r16
 1680 06fc 111F      		rol r17
 1681               	.LVL152:
 474:sd/sd.c       **** 
 1682               		.loc 1 474 8 is_stmt 1 view .LVU418
 415:sd/sd.c       **** 		{
 1683               		.loc 1 415 22 view .LVU419
 415:sd/sd.c       **** 		{
 1684               		.loc 1 415 16 view .LVU420
 415:sd/sd.c       **** 		{
 1685               		.loc 1 415 22 is_stmt 0 view .LVU421
 1686 06fe C8E0      		ldi r28,lo8(8)
 1687 0700 00C0      		rjmp .L73
 1688               	.LVL153:
 1689               	.L64:
 477:sd/sd.c       **** 							++csd_c_size;
 1690               		.loc 1 477 8 is_stmt 1 view .LVU422
 477:sd/sd.c       **** 							++csd_c_size;
 1691               		.loc 1 477 24 is_stmt 0 view .LVU423
 1692 0702 8295      		swap r24
 1693               	.LVL154:
 477:sd/sd.c       **** 							++csd_c_size;
 1694               		.loc 1 477 24 view .LVU424
 1695 0704 8695      		lsr r24
 1696 0706 8695      		lsr r24
 1697 0708 8370      		andi r24,lo8(3)
 477:sd/sd.c       **** 							++csd_c_size;
 1698               		.loc 1 477 19 view .LVU425
 1699 070a 082B      		or r16,r24
 1700               	.LVL155:
 478:sd/sd.c       **** 							break;
 1701               		.loc 1 478 8 is_stmt 1 view .LVU426
 1702 070c 0F5F      		subi r16,-1
 1703 070e 1F4F      		sbci r17,-1
 1704               	.LVL156:
 479:sd/sd.c       **** 
 1705               		.loc 1 479 8 view .LVU427
 415:sd/sd.c       **** 		{
 1706               		.loc 1 415 22 view .LVU428
 415:sd/sd.c       **** 		{
 1707               		.loc 1 415 16 view .LVU429
 415:sd/sd.c       **** 		{
 1708               		.loc 1 415 22 is_stmt 0 view .LVU430
 1709 0710 C9E0      		ldi r28,lo8(9)
 1710 0712 00C0      		rjmp .L73
 1711               	.LVL157:
 1712               	.L70:
 482:sd/sd.c       **** 							csd_c_size_mult <<= 1;
 1713               		.loc 1 482 8 is_stmt 1 view .LVU431
 483:sd/sd.c       **** 							break;
 1714               		.loc 1 483 8 view .LVU432
 483:sd/sd.c       **** 							break;
 1715               		.loc 1 483 24 is_stmt 0 view .LVU433
 1716 0714 880F      		lsl r24
 1717               	.LVL158:
 483:sd/sd.c       **** 							break;
 1718               		.loc 1 483 24 view .LVU434
 1719 0716 8670      		andi r24,lo8(6)
 1720 0718 D82E      		mov r13,r24
 1721               	.LVL159:
 484:sd/sd.c       **** 
 1722               		.loc 1 484 8 is_stmt 1 view .LVU435
 415:sd/sd.c       **** 		{
 1723               		.loc 1 415 22 view .LVU436
 415:sd/sd.c       **** 		{
 1724               		.loc 1 415 16 view .LVU437
 415:sd/sd.c       **** 		{
 1725               		.loc 1 415 22 is_stmt 0 view .LVU438
 1726 071a CAE0      		ldi r28,lo8(10)
 1727 071c 00C0      		rjmp .L73
 1728               	.LVL160:
 1729               	.L78:
 415:sd/sd.c       **** 		{
 1730               		.loc 1 415 22 view .LVU439
 1731               	.LBE88:
 1732               	.LBB89:
 1733               	.LBB87:
 185:sd/sd.c       **** 		_card_type & SD_HC ? PSTR("SDHC") : PSTR("SD"));
 1734               		.loc 1 185 2 view .LVU440
 1735 071e 80E0      		ldi r24,lo8(__c.17)
 1736 0720 90E0      		ldi r25,hi8(__c.17)
 1737 0722 00C0      		rjmp .L74
 1738               	.LVL161:
 1739               	.L79:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1740               		.loc 1 218 2 view .LVU441
 1741 0724 80E0      		ldi r24,lo8(__c.5)
 1742 0726 90E0      		ldi r25,hi8(__c.5)
 1743 0728 00C0      		rjmp .L75
 1744               	.L80:
 221:sd/sd.c       **** 			PSTR("Rewritable")));
 1745               		.loc 1 221 51 view .LVU442
 1746 072a 80E0      		ldi r24,lo8(__c.3)
 1747 072c 90E0      		ldi r25,hi8(__c.3)
 1748 072e 00C0      		rjmp .L75
 1749               	.L81:
 218:sd/sd.c       **** 		_flag_copy ? PSTR("Copy, ") : PSTR("Original, "),
 1750               		.loc 1 218 2 view .LVU443
 1751 0730 20E0      		ldi r18,lo8(__c.1)
 1752 0732 30E0      		ldi r19,hi8(__c.1)
 1753 0734 00C0      		rjmp .L76
 1754               	.LBE87:
 1755               	.LBE89:
 1756               		.cfi_endproc
 1757               	.LFE20:
 1759               	.global	sd_size
 1761               	sd_size:
 1762               	.LFB21:
 502:sd/sd.c       **** 
 503:sd/sd.c       **** u32 sd_size(void)
 504:sd/sd.c       **** {
 1763               		.loc 1 504 1 is_stmt 1 view -0
 1764               		.cfi_startproc
 1765 0736 CF93      		push r28
 1766               		.cfi_def_cfa_offset 3
 1767               		.cfi_offset 28, -2
 1768 0738 DF93      		push r29
 1769               		.cfi_def_cfa_offset 4
 1770               		.cfi_offset 29, -3
 1771 073a 00D0      		rcall .
 1772 073c 00D0      		rcall .
 1773               		.cfi_def_cfa_offset 8
 1774 073e CDB7      		in r28,__SP_L__
 1775 0740 DEB7      		in r29,__SP_H__
 1776               		.cfi_def_cfa_register 28
 1777               	/* prologue: function */
 1778               	/* frame size = 4 */
 1779               	/* stack size = 6 */
 1780               	.L__stack_usage = 6
 505:sd/sd.c       **** 	return _capacity;
 1781               		.loc 1 505 2 view .LVU445
 1782               		.loc 1 505 9 is_stmt 0 view .LVU446
 1783 0742 8091 0000 		lds r24,_capacity
 1784 0746 9091 0000 		lds r25,_capacity+1
 1785 074a A091 0000 		lds r26,_capacity+2
 1786 074e B091 0000 		lds r27,_capacity+3
 506:sd/sd.c       **** }
 1787               		.loc 1 506 1 view .LVU447
 1788 0752 BC01      		movw r22,r24
 1789 0754 CD01      		movw r24,r26
 1790               	/* epilogue start */
 1791 0756 0F90      		pop __tmp_reg__
 1792 0758 0F90      		pop __tmp_reg__
 1793 075a 0F90      		pop __tmp_reg__
 1794 075c 0F90      		pop __tmp_reg__
 1795 075e DF91      		pop r29
 1796 0760 CF91      		pop r28
 1797 0762 0895      		ret
 1798               		.cfi_endproc
 1799               	.LFE21:
 1801               	.global	sd_read
 1803               	sd_read:
 1804               	.LVL162:
 1805               	.LFB22:
 507:sd/sd.c       **** 
 508:sd/sd.c       **** Status sd_read(u32 block, void *data)
 509:sd/sd.c       **** {
 1806               		.loc 1 509 1 is_stmt 1 view -0
 1807               		.cfi_startproc
 1808               		.loc 1 509 1 is_stmt 0 view .LVU449
 1809 0764 CF92      		push r12
 1810               		.cfi_def_cfa_offset 3
 1811               		.cfi_offset 12, -2
 1812 0766 DF92      		push r13
 1813               		.cfi_def_cfa_offset 4
 1814               		.cfi_offset 13, -3
 1815 0768 EF92      		push r14
 1816               		.cfi_def_cfa_offset 5
 1817               		.cfi_offset 14, -4
 1818 076a FF92      		push r15
 1819               		.cfi_def_cfa_offset 6
 1820               		.cfi_offset 15, -5
 1821 076c 0F93      		push r16
 1822               		.cfi_def_cfa_offset 7
 1823               		.cfi_offset 16, -6
 1824 076e 1F93      		push r17
 1825               		.cfi_def_cfa_offset 8
 1826               		.cfi_offset 17, -7
 1827 0770 CF93      		push r28
 1828               		.cfi_def_cfa_offset 9
 1829               		.cfi_offset 28, -8
 1830 0772 DF93      		push r29
 1831               		.cfi_def_cfa_offset 10
 1832               		.cfi_offset 29, -9
 1833 0774 00D0      		rcall .
 1834               		.cfi_def_cfa_offset 12
 1835 0776 CDB7      		in r28,__SP_L__
 1836 0778 DEB7      		in r29,__SP_H__
 1837               		.cfi_def_cfa_register 28
 1838               	/* prologue: function */
 1839               	/* frame size = 2 */
 1840               	/* stack size = 10 */
 1841               	.L__stack_usage = 10
 1842 077a 6B01      		movw r12,r22
 1843 077c 7C01      		movw r14,r24
 1844 077e 8A01      		movw r16,r20
 510:sd/sd.c       **** 	u16 i;
 1845               		.loc 1 510 2 is_stmt 1 view .LVU450
 511:sd/sd.c       **** 	u8 *data8, response;
 1846               		.loc 1 511 2 view .LVU451
 512:sd/sd.c       **** 
 513:sd/sd.c       **** 	data8 = data;
 1847               		.loc 1 513 2 view .LVU452
 1848               	.LVL163:
 514:sd/sd.c       **** 
 515:sd/sd.c       **** 	SD_SELECT;
 1849               		.loc 1 515 2 view .LVU453
 1850 0780 5C98      		cbi 0xb,4
 516:sd/sd.c       **** 
 517:sd/sd.c       **** 	/* Start read */
 518:sd/sd.c       **** 	RETURN_IF(_sd_command_try(CMD_READ_SINGLE_BLOCK,
 1851               		.loc 1 518 2 view .LVU454
 1852               	.LBB119:
 1853               		.loc 1 518 2 view .LVU455
 1854               	.LVL164:
 1855               	.LBB120:
 1856               	.LBI120:
 175:sd/sd.c       **** {
 1857               		.loc 1 175 12 view .LVU456
 1858               	.LBB121:
 177:sd/sd.c       **** }
 1859               		.loc 1 177 2 view .LVU457
 177:sd/sd.c       **** }
 1860               		.loc 1 177 36 is_stmt 0 view .LVU458
 1861 0782 8091 0000 		lds r24,_card_type
 1862 0786 82FD      		sbrc r24,2
 1863 0788 00C0      		rjmp .L110
 1864 078a 99E0      		ldi r25,9
 1865               		1:
 1866 078c CC0C      		lsl r12
 1867 078e DD1C      		rol r13
 1868 0790 EE1C      		rol r14
 1869 0792 FF1C      		rol r15
 1870 0794 9A95      		dec r25
 1871 0796 01F4      		brne 1b
 1872               	.LVL165:
 1873               	.L110:
 177:sd/sd.c       **** }
 1874               		.loc 1 177 36 view .LVU459
 1875               	.LBE121:
 1876               	.LBE120:
 1877               	.LBB122:
 1878               	.LBI122:
 126:sd/sd.c       **** {
 1879               		.loc 1 126 15 is_stmt 1 view .LVU460
 1880               	.LBB123:
 128:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 1881               		.loc 1 128 2 view .LVU461
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1882               		.loc 1 129 2 view .LVU462
 1883               	.LBB124:
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1884               		.loc 1 129 2 view .LVU463
 1885 0798 8FEF      		ldi r24,lo8(-1)
 1886 079a 0E94 0000 		call spi_tx_try
 1887               	.LVL166:
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1888               		.loc 1 129 2 view .LVU464
 1889 079e 8111      		cpse r24,__zero_reg__
 1890 07a0 00C0      		rjmp .L109
 1891               	.LBE124:
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1892               		.loc 1 129 2 view .LVU465
 129:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0x40 | cmd));
 1893               		.loc 1 129 29 view .LVU466
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1894               		.loc 1 130 2 view .LVU467
 1895               	.LBB125:
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1896               		.loc 1 130 2 view .LVU468
 1897 07a2 81E5      		ldi r24,lo8(81)
 1898               	.LVL167:
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1899               		.loc 1 130 2 is_stmt 0 view .LVU469
 1900 07a4 0E94 0000 		call spi_tx_try
 1901               	.LVL168:
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1902               		.loc 1 130 2 is_stmt 1 view .LVU470
 1903 07a8 8111      		cpse r24,__zero_reg__
 1904 07aa 00C0      		rjmp .L109
 1905               	.LBE125:
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1906               		.loc 1 130 2 view .LVU471
 130:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 24));
 1907               		.loc 1 130 35 view .LVU472
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1908               		.loc 1 131 2 view .LVU473
 1909               	.LBB126:
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1910               		.loc 1 131 2 view .LVU474
 1911 07ac 8F2D      		mov r24,r15
 1912               	.LVL169:
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1913               		.loc 1 131 2 is_stmt 0 view .LVU475
 1914 07ae 0E94 0000 		call spi_tx_try
 1915               	.LVL170:
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1916               		.loc 1 131 2 is_stmt 1 view .LVU476
 1917 07b2 8111      		cpse r24,__zero_reg__
 1918 07b4 00C0      		rjmp .L109
 1919               	.LBE126:
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1920               		.loc 1 131 2 view .LVU477
 131:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 16));
 1921               		.loc 1 131 34 view .LVU478
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1922               		.loc 1 132 2 view .LVU479
 1923               	.LBB127:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1924               		.loc 1 132 2 view .LVU480
 1925 07b6 8E2D      		mov r24,r14
 1926               	.LVL171:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1927               		.loc 1 132 2 is_stmt 0 view .LVU481
 1928 07b8 0E94 0000 		call spi_tx_try
 1929               	.LVL172:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1930               		.loc 1 132 2 is_stmt 1 view .LVU482
 1931 07bc 8111      		cpse r24,__zero_reg__
 1932 07be 00C0      		rjmp .L109
 1933               	.LBE127:
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1934               		.loc 1 132 2 view .LVU483
 132:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg >> 8));
 1935               		.loc 1 132 34 view .LVU484
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1936               		.loc 1 133 2 view .LVU485
 1937               	.LBB128:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1938               		.loc 1 133 2 view .LVU486
 1939 07c0 8D2D      		mov r24,r13
 1940               	.LVL173:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1941               		.loc 1 133 2 is_stmt 0 view .LVU487
 1942 07c2 0E94 0000 		call spi_tx_try
 1943               	.LVL174:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1944               		.loc 1 133 2 is_stmt 1 view .LVU488
 1945 07c6 8111      		cpse r24,__zero_reg__
 1946 07c8 00C0      		rjmp .L109
 1947               	.LBE128:
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1948               		.loc 1 133 2 view .LVU489
 133:sd/sd.c       **** 	RETURN_IF(spi_tx_try(arg));
 1949               		.loc 1 133 33 view .LVU490
 134:sd/sd.c       **** 	switch(cmd)
 1950               		.loc 1 134 2 view .LVU491
 1951               	.LBB129:
 134:sd/sd.c       **** 	switch(cmd)
 1952               		.loc 1 134 2 view .LVU492
 1953 07ca 8C2D      		mov r24,r12
 1954               	.LVL175:
 134:sd/sd.c       **** 	switch(cmd)
 1955               		.loc 1 134 2 is_stmt 0 view .LVU493
 1956 07cc 0E94 0000 		call spi_tx_try
 1957               	.LVL176:
 134:sd/sd.c       **** 	switch(cmd)
 1958               		.loc 1 134 2 is_stmt 1 view .LVU494
 1959 07d0 8111      		cpse r24,__zero_reg__
 1960 07d2 00C0      		rjmp .L109
 1961               	.LBE129:
 134:sd/sd.c       **** 	switch(cmd)
 1962               		.loc 1 134 2 view .LVU495
 134:sd/sd.c       **** 	switch(cmd)
 1963               		.loc 1 134 28 view .LVU496
 135:sd/sd.c       **** 	{
 1964               		.loc 1 135 2 view .LVU497
 146:sd/sd.c       **** 		break;
 1965               		.loc 1 146 3 view .LVU498
 1966               	.LBB130:
 146:sd/sd.c       **** 		break;
 1967               		.loc 1 146 3 view .LVU499
 1968 07d4 8FEF      		ldi r24,lo8(-1)
 1969               	.LVL177:
 146:sd/sd.c       **** 		break;
 1970               		.loc 1 146 3 is_stmt 0 view .LVU500
 1971 07d6 0E94 0000 		call spi_tx_try
 1972               	.LVL178:
 146:sd/sd.c       **** 		break;
 1973               		.loc 1 146 3 is_stmt 1 view .LVU501
 1974 07da 8111      		cpse r24,__zero_reg__
 1975 07dc 00C0      		rjmp .L109
 1976 07de 8BE0      		ldi r24,lo8(11)
 1977 07e0 F82E      		mov r15,r24
 1978               	.LVL179:
 1979               	.L118:
 146:sd/sd.c       **** 		break;
 1980               		.loc 1 146 3 is_stmt 0 view .LVU502
 1981               	.LBE130:
 152:sd/sd.c       **** 		if(response != 0xFF)
 1982               		.loc 1 152 3 is_stmt 1 view .LVU503
 1983               	.LBB131:
 152:sd/sd.c       **** 		if(response != 0xFF)
 1984               		.loc 1 152 3 view .LVU504
 1985 07e2 CE01      		movw r24,r28
 1986 07e4 0196      		adiw r24,1
 1987 07e6 0E94 0000 		call spi_rx_try
 1988               	.LVL180:
 152:sd/sd.c       **** 		if(response != 0xFF)
 1989               		.loc 1 152 3 view .LVU505
 1990 07ea 8111      		cpse r24,__zero_reg__
 1991 07ec 00C0      		rjmp .L109
 1992               	.LBE131:
 152:sd/sd.c       **** 		if(response != 0xFF)
 1993               		.loc 1 152 3 view .LVU506
 152:sd/sd.c       **** 		if(response != 0xFF)
 1994               		.loc 1 152 35 view .LVU507
 153:sd/sd.c       **** 		{
 1995               		.loc 1 153 3 view .LVU508
 153:sd/sd.c       **** 		{
 1996               		.loc 1 153 15 is_stmt 0 view .LVU509
 1997 07ee 8981      		ldd r24,Y+1
 1998               	.LVL181:
 153:sd/sd.c       **** 		{
 1999               		.loc 1 153 5 view .LVU510
 2000 07f0 8F3F      		cpi r24,lo8(-1)
 2001 07f2 01F4      		brne .L120
 158:sd/sd.c       **** 		{
 2002               		.loc 1 158 3 is_stmt 1 view .LVU511
 158:sd/sd.c       **** 		{
 2003               		.loc 1 158 5 is_stmt 0 view .LVU512
 2004 07f4 FA94      		dec r15
 2005               	.LVL182:
 158:sd/sd.c       **** 		{
 2006               		.loc 1 158 5 view .LVU513
 2007 07f6 F110      		cpse r15,__zero_reg__
 2008 07f8 00C0      		rjmp .L118
 2009               	.LVL183:
 2010               	.L125:
 158:sd/sd.c       **** 		{
 2011               		.loc 1 158 5 view .LVU514
 2012               	.LBE123:
 2013               	.LBE122:
 2014               	.LBE119:
 519:sd/sd.c       **** 		_sd_block_addr(block), &response));
 520:sd/sd.c       **** 	if(response)
 521:sd/sd.c       **** 	{
 522:sd/sd.c       **** 		SD_DESELECT;
 523:sd/sd.c       **** 		return STATUS_FAIL;
 524:sd/sd.c       **** 	}
 525:sd/sd.c       **** 
 526:sd/sd.c       **** 	/* Wait for ready */
 527:sd/sd.c       **** 	for(i = 0; ; ++i)
 528:sd/sd.c       **** 	{
 529:sd/sd.c       **** 		RETURN_IF(spi_xchg_try(0xFF, &response));
 530:sd/sd.c       **** 		if(response == 0xFE)
 531:sd/sd.c       **** 		{
 532:sd/sd.c       **** 			break;
 533:sd/sd.c       **** 		}
 534:sd/sd.c       **** 
 535:sd/sd.c       **** 		if(i == 0xFFFF)
 536:sd/sd.c       **** 		{
 537:sd/sd.c       **** 			SD_DESELECT;
 538:sd/sd.c       **** 			return STATUS_TIMEOUT;
 2015               		.loc 1 538 11 view .LVU515
 2016 07fa 82E0      		ldi r24,lo8(2)
 2017 07fc 00C0      		rjmp .L109
 2018               	.LVL184:
 2019               	.L120:
 2020               	.LBB134:
 2021               	.LBB133:
 2022               	.LBB132:
 164:sd/sd.c       **** 	return STATUS_OK;
 2023               		.loc 1 164 2 is_stmt 1 view .LVU516
 164:sd/sd.c       **** 	return STATUS_OK;
 2024               		.loc 1 164 7 is_stmt 0 view .LVU517
 2025 07fe 8A83      		std Y+2,r24
 165:sd/sd.c       **** }
 2026               		.loc 1 165 2 is_stmt 1 view .LVU518
 2027               	.LVL185:
 165:sd/sd.c       **** }
 2028               		.loc 1 165 2 is_stmt 0 view .LVU519
 2029               	.LBE132:
 2030               	.LBE133:
 518:sd/sd.c       **** 		_sd_block_addr(block), &response));
 2031               		.loc 1 518 2 is_stmt 1 view .LVU520
 2032               	.LBE134:
 518:sd/sd.c       **** 		_sd_block_addr(block), &response));
 2033               		.loc 1 518 2 view .LVU521
 519:sd/sd.c       **** 	if(response)
 2034               		.loc 1 519 37 view .LVU522
 520:sd/sd.c       **** 	{
 2035               		.loc 1 520 2 view .LVU523
 527:sd/sd.c       **** 	{
 2036               		.loc 1 527 8 is_stmt 0 view .LVU524
 2037 0800 E12C      		mov r14,__zero_reg__
 2038 0802 F12C      		mov r15,__zero_reg__
 520:sd/sd.c       **** 	{
 2039               		.loc 1 520 4 view .LVU525
 2040 0804 8823      		tst r24
 2041 0806 01F0      		breq .L122
 522:sd/sd.c       **** 		return STATUS_FAIL;
 2042               		.loc 1 522 3 is_stmt 1 view .LVU526
 2043 0808 5C9A      		sbi 0xb,4
 523:sd/sd.c       **** 	}
 2044               		.loc 1 523 3 view .LVU527
 523:sd/sd.c       **** 	}
 2045               		.loc 1 523 10 is_stmt 0 view .LVU528
 2046 080a 81E0      		ldi r24,lo8(1)
 2047               	.LVL186:
 2048               	.L109:
 2049               	/* epilogue start */
 539:sd/sd.c       **** 		}
 540:sd/sd.c       **** 	}
 541:sd/sd.c       **** 
 542:sd/sd.c       **** 	/* Read data */
 543:sd/sd.c       **** 	for(i = 0; i < BLOCK_SIZE; ++i)
 544:sd/sd.c       **** 	{
 545:sd/sd.c       **** 		if(spi_rx_try(&data8[i]))
 546:sd/sd.c       **** 		{
 547:sd/sd.c       **** 			return STATUS_TIMEOUT;
 548:sd/sd.c       **** 		}
 549:sd/sd.c       **** 	}
 550:sd/sd.c       **** 
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 553:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 554:sd/sd.c       **** 	SD_DESELECT;
 555:sd/sd.c       **** 	return STATUS_OK;
 556:sd/sd.c       **** }
 2050               		.loc 1 556 1 view .LVU529
 2051 080c 0F90      		pop __tmp_reg__
 2052 080e 0F90      		pop __tmp_reg__
 2053 0810 DF91      		pop r29
 2054 0812 CF91      		pop r28
 2055 0814 1F91      		pop r17
 2056 0816 0F91      		pop r16
 2057               	.LVL187:
 2058               		.loc 1 556 1 view .LVU530
 2059 0818 FF90      		pop r15
 2060 081a EF90      		pop r14
 2061 081c DF90      		pop r13
 2062 081e CF90      		pop r12
 2063 0820 0895      		ret
 2064               	.LVL188:
 2065               	.L124:
 527:sd/sd.c       **** 	{
 2066               		.loc 1 527 15 is_stmt 1 view .LVU531
 2067 0822 8FEF      		ldi r24,-1
 2068 0824 E81A      		sub r14,r24
 2069 0826 F80A      		sbc r15,r24
 2070               	.LVL189:
 527:sd/sd.c       **** 	{
 2071               		.loc 1 527 2 view .LVU532
 2072               	.L122:
 529:sd/sd.c       **** 		if(response == 0xFE)
 2073               		.loc 1 529 3 view .LVU533
 2074               	.LBB135:
 529:sd/sd.c       **** 		if(response == 0xFE)
 2075               		.loc 1 529 3 view .LVU534
 2076 0828 BE01      		movw r22,r28
 2077 082a 6E5F      		subi r22,-2
 2078 082c 7F4F      		sbci r23,-1
 2079 082e 8FEF      		ldi r24,lo8(-1)
 2080 0830 0E94 0000 		call spi_xchg_try
 2081               	.LVL190:
 529:sd/sd.c       **** 		if(response == 0xFE)
 2082               		.loc 1 529 3 view .LVU535
 2083 0834 8111      		cpse r24,__zero_reg__
 2084 0836 00C0      		rjmp .L109
 2085               	.LBE135:
 529:sd/sd.c       **** 		if(response == 0xFE)
 2086               		.loc 1 529 3 discriminator 2 view .LVU536
 529:sd/sd.c       **** 		if(response == 0xFE)
 2087               		.loc 1 529 43 discriminator 2 view .LVU537
 530:sd/sd.c       **** 		{
 2088               		.loc 1 530 3 discriminator 2 view .LVU538
 530:sd/sd.c       **** 		{
 2089               		.loc 1 530 5 is_stmt 0 discriminator 2 view .LVU539
 2090 0838 8A81      		ldd r24,Y+2
 2091               	.LVL191:
 530:sd/sd.c       **** 		{
 2092               		.loc 1 530 5 discriminator 2 view .LVU540
 2093 083a 8E3F      		cpi r24,lo8(-2)
 2094 083c 01F0      		breq .L130
 535:sd/sd.c       **** 		{
 2095               		.loc 1 535 3 is_stmt 1 view .LVU541
 535:sd/sd.c       **** 		{
 2096               		.loc 1 535 5 is_stmt 0 view .LVU542
 2097 083e 8FEF      		ldi r24,-1
 2098 0840 E816      		cp r14,r24
 2099 0842 F806      		cpc r15,r24
 2100 0844 01F4      		brne .L124
 537:sd/sd.c       **** 			return STATUS_TIMEOUT;
 2101               		.loc 1 537 4 is_stmt 1 view .LVU543
 2102 0846 5C9A      		sbi 0xb,4
 538:sd/sd.c       **** 		}
 2103               		.loc 1 538 4 view .LVU544
 538:sd/sd.c       **** 		}
 2104               		.loc 1 538 11 is_stmt 0 view .LVU545
 2105 0848 00C0      		rjmp .L125
 2106               	.L130:
 543:sd/sd.c       **** 	{
 2107               		.loc 1 543 8 view .LVU546
 2108 084a E12C      		mov r14,__zero_reg__
 2109 084c F12C      		mov r15,__zero_reg__
 2110               	.LVL192:
 2111               	.L123:
 545:sd/sd.c       **** 		{
 2112               		.loc 1 545 3 is_stmt 1 view .LVU547
 545:sd/sd.c       **** 		{
 2113               		.loc 1 545 6 is_stmt 0 view .LVU548
 2114 084e C801      		movw r24,r16
 2115 0850 8E0D      		add r24,r14
 2116 0852 9F1D      		adc r25,r15
 2117 0854 0E94 0000 		call spi_rx_try
 2118               	.LVL193:
 545:sd/sd.c       **** 		{
 2119               		.loc 1 545 5 view .LVU549
 2120 0858 8111      		cpse r24,__zero_reg__
 2121 085a 00C0      		rjmp .L125
 543:sd/sd.c       **** 	{
 2122               		.loc 1 543 29 is_stmt 1 discriminator 2 view .LVU550
 2123 085c 8FEF      		ldi r24,-1
 2124 085e E81A      		sub r14,r24
 2125 0860 F80A      		sbc r15,r24
 2126               	.LVL194:
 543:sd/sd.c       **** 	{
 2127               		.loc 1 543 15 discriminator 2 view .LVU551
 2128 0862 E114      		cp r14,__zero_reg__
 2129 0864 82E0      		ldi r24,2
 2130 0866 F806      		cpc r15,r24
 2131 0868 01F4      		brne .L123
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2132               		.loc 1 551 2 view .LVU552
 2133               	.LBB136:
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2134               		.loc 1 551 2 view .LVU553
 2135 086a 8FEF      		ldi r24,lo8(-1)
 2136 086c 0E94 0000 		call spi_tx_try
 2137               	.LVL195:
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2138               		.loc 1 551 2 view .LVU554
 2139 0870 8111      		cpse r24,__zero_reg__
 2140 0872 00C0      		rjmp .L109
 2141               	.LBE136:
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2142               		.loc 1 551 2 discriminator 2 view .LVU555
 551:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2143               		.loc 1 551 29 discriminator 2 view .LVU556
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2144               		.loc 1 552 2 discriminator 2 view .LVU557
 2145               	.LBB137:
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2146               		.loc 1 552 2 discriminator 2 view .LVU558
 2147 0874 8FEF      		ldi r24,lo8(-1)
 2148               	.LVL196:
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2149               		.loc 1 552 2 is_stmt 0 discriminator 2 view .LVU559
 2150 0876 0E94 0000 		call spi_tx_try
 2151               	.LVL197:
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2152               		.loc 1 552 2 is_stmt 1 discriminator 2 view .LVU560
 2153 087a 8111      		cpse r24,__zero_reg__
 2154 087c 00C0      		rjmp .L109
 2155               	.LBE137:
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2156               		.loc 1 552 2 discriminator 2 view .LVU561
 552:sd/sd.c       **** 	RETURN_IF(spi_tx_try(0xFF));
 2157               		.loc 1 552 29 discriminator 2 view .LVU562
 553:sd/sd.c       **** 	SD_DESELECT;
 2158               		.loc 1 553 2 discriminator 2 view .LVU563
 2159               	.LBB138:
 553:sd/sd.c       **** 	SD_DESELECT;
 2160               		.loc 1 553 2 discriminator 2 view .LVU564
 2161 087e 8FEF      		ldi r24,lo8(-1)
 2162               	.LVL198:
 553:sd/sd.c       **** 	SD_DESELECT;
 2163               		.loc 1 553 2 is_stmt 0 discriminator 2 view .LVU565
 2164 0880 0E94 0000 		call spi_tx_try
 2165               	.LVL199:
 553:sd/sd.c       **** 	SD_DESELECT;
 2166               		.loc 1 553 2 is_stmt 1 discriminator 2 view .LVU566
 2167 0884 8111      		cpse r24,__zero_reg__
 2168 0886 00C0      		rjmp .L109
 2169               	.LBE138:
 553:sd/sd.c       **** 	SD_DESELECT;
 2170               		.loc 1 553 2 discriminator 2 view .LVU567
 553:sd/sd.c       **** 	SD_DESELECT;
 2171               		.loc 1 553 29 discriminator 2 view .LVU568
 554:sd/sd.c       **** 	return STATUS_OK;
 2172               		.loc 1 554 2 discriminator 2 view .LVU569
 2173 0888 5C9A      		sbi 0xb,4
 555:sd/sd.c       **** }
 2174               		.loc 1 555 2 discriminator 2 view .LVU570
 555:sd/sd.c       **** }
 2175               		.loc 1 555 9 is_stmt 0 discriminator 2 view .LVU571
 2176 088a 00C0      		rjmp .L109
 2177               		.cfi_endproc
 2178               	.LFE22:
 2180               		.section	.progmem.data,"a",@progbits
 2183               	__c.0:
 2184 0000 466C 6167 		.string	"Flags            : %S%S"
 2184      7320 2020 
 2184      2020 2020 
 2184      2020 2020 
 2184      203A 2025 
 2187               	__c.1:
 2188 0018 4F72 6967 		.string	"Original, "
 2188      696E 616C 
 2188      2C20 00
 2191               	__c.2:
 2192 0023 436F 7079 		.string	"Copy, "
 2192      2C20 00
 2195               	__c.3:
 2196 002a 5265 7772 		.string	"Rewritable"
 2196      6974 6162 
 2196      6C65 00
 2199               	__c.4:
 2200 0035 5772 6974 		.string	"Write Protected"
 2200      6520 5072 
 2200      6F74 6563 
 2200      7465 6400 
 2203               	__c.5:
 2204 0045 5465 6D70 		.string	"Temporarily Write Protected"
 2204      6F72 6172 
 2204      696C 7920 
 2204      5772 6974 
 2204      6520 5072 
 2207               	__c.6:
 2208 0061 466F 726D 		.string	"Format           : 0x%02X"
 2208      6174 2020 
 2208      2020 2020 
 2208      2020 2020 
 2208      203A 2030 
 2211               	__c.7:
 2212 007b 2020 2020 		.string	"                   (%lu bytes)"
 2212      2020 2020 
 2212      2020 2020 
 2212      2020 2020 
 2212      2020 2028 
 2215               	__c.8:
 2216 009a 4361 7061 		.string	"Capacity         : %lu blocks"
 2216      6369 7479 
 2216      2020 2020 
 2216      2020 2020 
 2216      203A 2025 
 2219               	__c.9:
 2220 00b8 4D61 6E75 		.string	"Manufacture Date : %02d-%d"
 2220      6661 6374 
 2220      7572 6520 
 2220      4461 7465 
 2220      203A 2025 
 2223               	__c.10:
 2224 00d3 5365 7269 		.string	"Serial Number    : 0x%08lx"
 2224      616C 204E 
 2224      756D 6265 
 2224      7220 2020 
 2224      203A 2030 
 2227               	__c.11:
 2228 00ee 5265 7669 		.string	"Revision         : %c.%c"
 2228      7369 6F6E 
 2228      2020 2020 
 2228      2020 2020 
 2228      203A 2025 
 2231               	__c.12:
 2232 0107 5072 6F64 		.string	"Product Name     : %s"
 2232      7563 7420 
 2232      4E61 6D65 
 2232      2020 2020 
 2232      203A 2025 
 2235               	__c.13:
 2236 011d 4F45 4D20 		.string	"OEM              : %s"
 2236      2020 2020 
 2236      2020 2020 
 2236      2020 2020 
 2236      203A 2025 
 2239               	__c.14:
 2240 0133 4D61 6E75 		.string	"Manufacturer ID  : %02X"
 2240      6661 6374 
 2240      7572 6572 
 2240      2049 4420 
 2240      203A 2025 
 2243               	__c.15:
 2244 014b 426C 6F63 		.string	"Block Size       : %d"
 2244      6B20 5369 
 2244      7A65 2020 
 2244      2020 2020 
 2244      203A 2025 
 2247               	__c.16:
 2248 0161 4361 7264 		.string	"Card Type        : %S"
 2248      2054 7970 
 2248      6520 2020 
 2248      2020 2020 
 2248      203A 2025 
 2251               	__c.17:
 2252 0177 5344 00   		.string	"SD"
 2255               	__c.18:
 2256 017a 5344 4843 		.string	"SDHC"
 2256      00
 2259               	__c.19:
 2260 017f 5344 2074 		.string	"SD timeout"
 2260      696D 656F 
 2260      7574 00
 2263               	__c.20:
 2264 018a 5344 2065 		.string	"SD error"
 2264      7272 6F72 
 2264      00
 2267               	__c.21:
 2268 0193 5265 6164 		.string	"Reading SD card parameters"
 2268      696E 6720 
 2268      5344 2063 
 2268      6172 6420 
 2268      7061 7261 
 2271               	__c.22:
 2272 01ae 5344 2063 		.string	"SD card initialized"
 2272      6172 6420 
 2272      696E 6974 
 2272      6961 6C69 
 2272      7A65 6400 
 2275               	__c.23:
 2276 01c2 5344 2064 		.string	"SD driver starting"
 2276      7269 7665 
 2276      7220 7374 
 2276      6172 7469 
 2276      6E67 00
 2277               		.local	_format
 2278               		.comm	_format,1,1
 2279               		.local	_flag_write_protect_temp
 2280               		.comm	_flag_write_protect_temp,1,1
 2281               		.local	_flag_write_protect
 2282               		.comm	_flag_write_protect,1,1
 2283               		.local	_flag_copy
 2284               		.comm	_flag_copy,1,1
 2285               		.local	_manufacturing_month
 2286               		.comm	_manufacturing_month,1,1
 2287               		.local	_manufacturing_year
 2288               		.comm	_manufacturing_year,1,1
 2289               		.local	_revision
 2290               		.comm	_revision,1,1
 2291               		.local	_manufacturer
 2292               		.comm	_manufacturer,1,1
 2293               		.local	_card_type
 2294               		.comm	_card_type,1,1
 2295               		.local	_product
 2296               		.comm	_product,6,1
 2297               		.local	_oem
 2298               		.comm	_oem,3,1
 2299               		.local	_capacity
 2300               		.comm	_capacity,4,1
 2301               		.local	_serial
 2302               		.comm	_serial,4,1
 2303               		.text
 2304               	.Letext0:
 2305               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 2306               		.file 5 "../../types/types.h"
 2307               		.file 6 "../../status/status.h"
 2308               		.file 7 "logger/logger.h"
 2309               		.file 8 "spi/spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sd.c
     /tmp/cc3VP32y.s:2      *ABS*:0000003e __SP_H__
     /tmp/cc3VP32y.s:3      *ABS*:0000003d __SP_L__
     /tmp/cc3VP32y.s:4      *ABS*:0000003f __SREG__
     /tmp/cc3VP32y.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc3VP32y.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc3VP32y.s:12     .text:00000000 _sd_command
     /tmp/cc3VP32y.s:16     .text:00000000 .Loc.0
     /tmp/cc3VP32y.s:17     .text:00000000 L0
     /tmp/cc3VP32y.s:18     .text:00000000 .Loc.1
     /tmp/cc3VP32y.s:39     .text:00000010 .Loc.2
     /tmp/cc3VP32y.s:40     .text:00000010 .Loc.3
     /tmp/cc3VP32y.s:43     .text:00000012 .Loc.4
     /tmp/cc3VP32y.s:46     .text:00000016 .Loc.5
     /tmp/cc3VP32y.s:51     .text:0000001e .Loc.6
     /tmp/cc3VP32y.s:55     .text:00000024 .Loc.7
     /tmp/cc3VP32y.s:59     .text:0000002a .Loc.8
     /tmp/cc3VP32y.s:63     .text:00000030 .Loc.9
     /tmp/cc3VP32y.s:67     .text:00000036 .Loc.10
     /tmp/cc3VP32y.s:68     .text:00000036 .Loc.11
     /tmp/cc3VP32y.s:70     .text:00000038 .Loc.12
     /tmp/cc3VP32y.s:73     .text:0000003c .Loc.13
     /tmp/cc3VP32y.s:75     .text:0000003e .Loc.14
     /tmp/cc3VP32y.s:78     .text:00000042 .Loc.15
     /tmp/cc3VP32y.s:81     .text:00000044 .Loc.16
     /tmp/cc3VP32y.s:84     .text:00000048 .Loc.17
     /tmp/cc3VP32y.s:85     .text:00000048 .Loc.18
     /tmp/cc3VP32y.s:86     .text:00000048 .Loc.19
     /tmp/cc3VP32y.s:90     .text:0000004a .Loc.20
     /tmp/cc3VP32y.s:94     .text:00000050 .Loc.21
     /tmp/cc3VP32y.s:97     .text:00000054 .Loc.22
     /tmp/cc3VP32y.s:99     .text:00000054 .Loc.23
     /tmp/cc3VP32y.s:102    .text:00000056 .Loc.24
     /tmp/cc3VP32y.s:108    .text:0000005a .Loc.25
     /tmp/cc3VP32y.s:114    .text:00000064 L0
     /tmp/cc3VP32y.s:118    .text:00000064 _sd_error
     /tmp/cc3VP32y.s:120    .text:00000064 .Loc.26
     /tmp/cc3VP32y.s:121    .text:00000064 L0
     /tmp/cc3VP32y.s:126    .text:00000064 .Loc.27
     /tmp/cc3VP32y.s:128    .text:00000066 .Loc.28
     /tmp/cc3VP32y.s:130    .text:00000066 .Loc.29
     /tmp/cc3VP32y.s:131    .text:00000066 .Loc.30
     /tmp/cc3VP32y.s:133    .text:00000066 .Loc.31
     /tmp/cc3VP32y.s:2263   .progmem.data:0000018a __c.20
     /tmp/cc3VP32y.s:142    .text:00000072 .Loc.32
     /tmp/cc3VP32y.s:148    .text:00000078 L0
     /tmp/cc3VP32y.s:152    .text:00000078 _sd_timeout
     /tmp/cc3VP32y.s:154    .text:00000078 .Loc.33
     /tmp/cc3VP32y.s:155    .text:00000078 L0
     /tmp/cc3VP32y.s:160    .text:00000078 .Loc.34
     /tmp/cc3VP32y.s:162    .text:0000007a .Loc.35
     /tmp/cc3VP32y.s:164    .text:0000007a .Loc.36
     /tmp/cc3VP32y.s:165    .text:0000007a .Loc.37
     /tmp/cc3VP32y.s:167    .text:0000007a .Loc.38
     /tmp/cc3VP32y.s:2259   .progmem.data:0000017f __c.19
     /tmp/cc3VP32y.s:176    .text:00000086 .Loc.39
     /tmp/cc3VP32y.s:182    .text:0000008c L0
     /tmp/cc3VP32y.s:187    .text:0000008c sd_init
     /tmp/cc3VP32y.s:189    .text:0000008c .Loc.40
     /tmp/cc3VP32y.s:190    .text:0000008c L0
     /tmp/cc3VP32y.s:225    .text:000000a0 .Loc.41
     /tmp/cc3VP32y.s:227    .text:000000a0 .Loc.42
     /tmp/cc3VP32y.s:228    .text:000000a0 .Loc.43
     /tmp/cc3VP32y.s:230    .text:000000a0 .Loc.44
     /tmp/cc3VP32y.s:2275   .progmem.data:000001c2 __c.23
     /tmp/cc3VP32y.s:242    .text:000000ae .Loc.45
     /tmp/cc3VP32y.s:243    .text:000000ae .Loc.46
     /tmp/cc3VP32y.s:244    .text:000000ae .Loc.47
     /tmp/cc3VP32y.s:245    .text:000000ae .Loc.48
     /tmp/cc3VP32y.s:247    .text:000000b0 .Loc.49
     /tmp/cc3VP32y.s:250    .text:000000b0 .Loc.50
     /tmp/cc3VP32y.s:252    .text:000000b0 .Loc.51
     /tmp/cc3VP32y.s:254    .text:000000b2 .Loc.52
     /tmp/cc3VP32y.s:257    .text:000000b6 .Loc.53
     /tmp/cc3VP32y.s:258    .text:000000b6 .Loc.54
     /tmp/cc3VP32y.s:264    .text:000000bc .Loc.55
     /tmp/cc3VP32y.s:265    .text:000000bc .Loc.56
     /tmp/cc3VP32y.s:2292   .bss:00000008 _card_type
     /tmp/cc3VP32y.s:267    .text:000000c0 .Loc.57
     /tmp/cc3VP32y.s:269    .text:000000c0 .Loc.58
     /tmp/cc3VP32y.s:270    .text:000000c0 .Loc.59
     /tmp/cc3VP32y.s:279    .text:000000ca .Loc.60
     /tmp/cc3VP32y.s:283    .text:000000d0 .Loc.61
     /tmp/cc3VP32y.s:284    .text:000000d0 .Loc.62
     /tmp/cc3VP32y.s:288    .text:000000d4 .Loc.63
     /tmp/cc3VP32y.s:292    .text:000000da .Loc.64
     /tmp/cc3VP32y.s:294    .text:000000dc .Loc.65
     /tmp/cc3VP32y.s:296    .text:000000dc .Loc.66
     /tmp/cc3VP32y.s:301    .text:000000e0 .Loc.67
     /tmp/cc3VP32y.s:302    .text:000000e0 .Loc.68
     /tmp/cc3VP32y.s:309    .text:000000ec .Loc.69
     /tmp/cc3VP32y.s:312    .text:000000f0 .Loc.70
     /tmp/cc3VP32y.s:313    .text:000000f0 .Loc.71
     /tmp/cc3VP32y.s:318    .text:000000f8 .Loc.72
     /tmp/cc3VP32y.s:322    .text:000000fc .Loc.73
     /tmp/cc3VP32y.s:325    .text:000000fe .Loc.74
     /tmp/cc3VP32y.s:326    .text:000000fe .Loc.75
     /tmp/cc3VP32y.s:329    .text:00000100 .Loc.76
     /tmp/cc3VP32y.s:330    .text:00000100 .Loc.77
     /tmp/cc3VP32y.s:338    .text:0000010e .Loc.78
     /tmp/cc3VP32y.s:341    .text:00000112 .Loc.79
     /tmp/cc3VP32y.s:345    .text:00000118 .Loc.80
     /tmp/cc3VP32y.s:349    .text:0000011e .Loc.81
     /tmp/cc3VP32y.s:350    .text:0000011e .Loc.82
     /tmp/cc3VP32y.s:354    .text:00000124 .Loc.83
     /tmp/cc3VP32y.s:358    .text:00000128 .Loc.84
     /tmp/cc3VP32y.s:362    .text:0000012c .Loc.85
     /tmp/cc3VP32y.s:363    .text:0000012c .Loc.86
     /tmp/cc3VP32y.s:367    .text:00000132 .Loc.87
     /tmp/cc3VP32y.s:371    .text:00000136 .Loc.88
     /tmp/cc3VP32y.s:372    .text:00000136 .Loc.89
     /tmp/cc3VP32y.s:374    .text:0000013a .Loc.90
     /tmp/cc3VP32y.s:377    .text:0000013e .Loc.91
     /tmp/cc3VP32y.s:381    .text:00000144 .Loc.92
     /tmp/cc3VP32y.s:384    .text:00000148 .Loc.93
     /tmp/cc3VP32y.s:386    .text:00000148 .Loc.94
     /tmp/cc3VP32y.s:387    .text:00000148 .Loc.95
     /tmp/cc3VP32y.s:391    .text:0000014e .Loc.96
     /tmp/cc3VP32y.s:392    .text:0000014e .Loc.97
     /tmp/cc3VP32y.s:396    .text:00000152 .Loc.98
     /tmp/cc3VP32y.s:409    .text:00000168 .Loc.99
     /tmp/cc3VP32y.s:413    .text:0000016a .Loc.100
     /tmp/cc3VP32y.s:416    .text:0000016e .Loc.101
     /tmp/cc3VP32y.s:419    .text:00000172 .Loc.102
     /tmp/cc3VP32y.s:422    .text:00000176 .Loc.103
     /tmp/cc3VP32y.s:423    .text:00000176 .Loc.104
     /tmp/cc3VP32y.s:428    .text:0000017e .Loc.105
     /tmp/cc3VP32y.s:432    .text:00000182 .Loc.106
     /tmp/cc3VP32y.s:436    .text:00000186 .Loc.107
     /tmp/cc3VP32y.s:437    .text:00000186 .Loc.108
     /tmp/cc3VP32y.s:441    .text:00000188 .Loc.109
     /tmp/cc3VP32y.s:445    .text:0000018e .Loc.110
     /tmp/cc3VP32y.s:450    .text:00000194 .Loc.111
     /tmp/cc3VP32y.s:457    .text:000001a0 .Loc.112
     /tmp/cc3VP32y.s:458    .text:000001a0 .Loc.113
     /tmp/cc3VP32y.s:465    .text:000001ac .Loc.114
     /tmp/cc3VP32y.s:468    .text:000001b0 .Loc.115
     /tmp/cc3VP32y.s:469    .text:000001b0 .Loc.116
     /tmp/cc3VP32y.s:475    .text:000001b8 .Loc.117
     /tmp/cc3VP32y.s:476    .text:000001b8 .Loc.118
     /tmp/cc3VP32y.s:481    .text:000001bc .Loc.119
     /tmp/cc3VP32y.s:482    .text:000001bc .Loc.120
     /tmp/cc3VP32y.s:485    .text:000001c0 .Loc.121
     /tmp/cc3VP32y.s:488    .text:000001c4 .Loc.122
     /tmp/cc3VP32y.s:489    .text:000001c4 .Loc.123
     /tmp/cc3VP32y.s:496    .text:000001d0 .Loc.124
     /tmp/cc3VP32y.s:498    .text:000001d2 .Loc.125
     /tmp/cc3VP32y.s:502    .text:000001d6 .Loc.126
     /tmp/cc3VP32y.s:503    .text:000001d6 .Loc.127
     /tmp/cc3VP32y.s:507    .text:000001dc .Loc.128
     /tmp/cc3VP32y.s:510    .text:000001e0 .Loc.129
     /tmp/cc3VP32y.s:511    .text:000001e0 .Loc.130
     /tmp/cc3VP32y.s:516    .text:000001ea .Loc.131
     /tmp/cc3VP32y.s:520    .text:000001f0 .Loc.132
     /tmp/cc3VP32y.s:524    .text:000001f6 .Loc.133
     /tmp/cc3VP32y.s:529    .text:000001fc .Loc.134
     /tmp/cc3VP32y.s:530    .text:000001fc .Loc.135
     /tmp/cc3VP32y.s:538    .text:0000020a .Loc.136
     /tmp/cc3VP32y.s:540    .text:0000020c .Loc.137
     /tmp/cc3VP32y.s:544    .text:00000210 .Loc.138
     /tmp/cc3VP32y.s:546    .text:00000212 .Loc.139
     /tmp/cc3VP32y.s:549    .text:00000216 .Loc.140
     /tmp/cc3VP32y.s:553    .text:00000216 .Loc.141
     /tmp/cc3VP32y.s:555    .text:00000216 .Loc.142
     /tmp/cc3VP32y.s:556    .text:00000216 .Loc.143
     /tmp/cc3VP32y.s:557    .text:00000216 .Loc.144
     /tmp/cc3VP32y.s:558    .text:00000216 .Loc.145
     /tmp/cc3VP32y.s:559    .text:00000216 .Loc.146
     /tmp/cc3VP32y.s:560    .text:00000216 .Loc.147
     /tmp/cc3VP32y.s:563    .text:00000216 .Loc.148
     /tmp/cc3VP32y.s:572    .text:0000021a .Loc.149
     /tmp/cc3VP32y.s:577    .text:0000021e .Loc.150
     /tmp/cc3VP32y.s:580    .text:0000021e .Loc.151
     /tmp/cc3VP32y.s:583    .text:0000021e .Loc.152
     /tmp/cc3VP32y.s:585    .text:0000021e .Loc.153
     /tmp/cc3VP32y.s:593    .text:00000224 .Loc.154
     /tmp/cc3VP32y.s:597    .text:00000224 .Loc.155
     /tmp/cc3VP32y.s:598    .text:00000224 .Loc.156
     /tmp/cc3VP32y.s:602    .text:00000228 .Loc.157
     /tmp/cc3VP32y.s:607    .text:0000022e .Loc.158
     /tmp/cc3VP32y.s:611    .text:0000022e .Loc.159
     /tmp/cc3VP32y.s:613    .text:0000022e .Loc.160
     /tmp/cc3VP32y.s:614    .text:0000022e .Loc.161
     /tmp/cc3VP32y.s:616    .text:0000022e .Loc.162
     /tmp/cc3VP32y.s:2271   .progmem.data:000001ae __c.22
     /tmp/cc3VP32y.s:627    .text:0000023c .Loc.163
     /tmp/cc3VP32y.s:629    .text:0000023c .Loc.164
     /tmp/cc3VP32y.s:630    .text:0000023c .Loc.165
     /tmp/cc3VP32y.s:632    .text:0000023c .Loc.166
     /tmp/cc3VP32y.s:2267   .progmem.data:00000193 __c.21
     /tmp/cc3VP32y.s:644    .text:0000024a .Loc.167
     /tmp/cc3VP32y.s:645    .text:0000024a .Loc.168
     /tmp/cc3VP32y.s:646    .text:0000024a .Loc.169
     /tmp/cc3VP32y.s:649    .text:0000024e .Loc.170
     /tmp/cc3VP32y.s:651    .text:00000250 .Loc.171
     /tmp/cc3VP32y.s:658    .text:0000025c .Loc.172
     /tmp/cc3VP32y.s:659    .text:0000025c .Loc.173
     /tmp/cc3VP32y.s:660    .text:0000025c .Loc.174
     /tmp/cc3VP32y.s:668    .text:00000268 .Loc.175
     /tmp/cc3VP32y.s:673    .text:0000026c .Loc.176
     /tmp/cc3VP32y.s:674    .text:0000026c .Loc.177
     /tmp/cc3VP32y.s:678    .text:00000272 .Loc.178
     /tmp/cc3VP32y.s:2296   .bss:0000000f _oem
     /tmp/cc3VP32y.s:2294   .bss:00000009 _product
     /tmp/cc3VP32y.s:689    .text:00000286 .Loc.179
     /tmp/cc3VP32y.s:691    .text:00000288 .Loc.180
     /tmp/cc3VP32y.s:697    .text:0000028e .Loc.181
     /tmp/cc3VP32y.s:698    .text:0000028e .Loc.182
     /tmp/cc3VP32y.s:702    .text:00000294 .Loc.183
     /tmp/cc3VP32y.s:704    .text:00000298 L0
     /tmp/cc3VP32y.s:741    .text:000002b8 .Loc.184
     /tmp/cc3VP32y.s:742    .text:000002b8 .Loc.185
     /tmp/cc3VP32y.s:747    .text:000002be .Loc.186
     /tmp/cc3VP32y.s:750    .text:000002c2 .Loc.187
     /tmp/cc3VP32y.s:756    .text:000002c8 .Loc.188
     /tmp/cc3VP32y.s:757    .text:000002c8 .Loc.189
     /tmp/cc3VP32y.s:2290   .bss:00000007 _manufacturer
     /tmp/cc3VP32y.s:759    .text:000002cc .Loc.190
     /tmp/cc3VP32y.s:760    .text:000002cc .Loc.191
     /tmp/cc3VP32y.s:762    .text:000002cc .Loc.192
     /tmp/cc3VP32y.s:766    .text:000002d2 .Loc.193
     /tmp/cc3VP32y.s:767    .text:000002d2 .Loc.194
     /tmp/cc3VP32y.s:770    .text:000002d4 .Loc.195
     /tmp/cc3VP32y.s:773    .text:000002d8 .Loc.196
     /tmp/cc3VP32y.s:774    .text:000002d8 .Loc.197
     /tmp/cc3VP32y.s:778    .text:000002da .Loc.198
     /tmp/cc3VP32y.s:779    .text:000002da .Loc.199
     /tmp/cc3VP32y.s:783    .text:000002e0 .Loc.200
     /tmp/cc3VP32y.s:784    .text:000002e0 .Loc.201
     /tmp/cc3VP32y.s:787    .text:000002e2 .Loc.202
     /tmp/cc3VP32y.s:796    .text:000002f0 .Loc.203
     /tmp/cc3VP32y.s:799    .text:000002f2 .Loc.204
     /tmp/cc3VP32y.s:803    .text:000002f4 .Loc.205
     /tmp/cc3VP32y.s:804    .text:000002f4 .Loc.206
     /tmp/cc3VP32y.s:807    .text:000002f8 .Loc.207
     /tmp/cc3VP32y.s:808    .text:000002f8 .Loc.208
     /tmp/cc3VP32y.s:811    .text:000002fa .Loc.209
     /tmp/cc3VP32y.s:817    .text:00000302 .Loc.210
     /tmp/cc3VP32y.s:818    .text:00000302 .Loc.211
     /tmp/cc3VP32y.s:2288   .bss:00000006 _revision
     /tmp/cc3VP32y.s:820    .text:00000306 .Loc.212
     /tmp/cc3VP32y.s:821    .text:00000306 .Loc.213
     /tmp/cc3VP32y.s:823    .text:00000306 .Loc.214
     /tmp/cc3VP32y.s:827    .text:0000030c .Loc.215
     /tmp/cc3VP32y.s:828    .text:0000030c .Loc.216
     /tmp/cc3VP32y.s:831    .text:0000030e .Loc.217
     /tmp/cc3VP32y.s:834    .text:00000312 .Loc.218
     /tmp/cc3VP32y.s:835    .text:00000312 .Loc.219
     /tmp/cc3VP32y.s:839    .text:00000314 .Loc.220
     /tmp/cc3VP32y.s:840    .text:00000314 .Loc.221
     /tmp/cc3VP32y.s:844    .text:0000031a .Loc.222
     /tmp/cc3VP32y.s:856    .text:0000032a .Loc.223
     /tmp/cc3VP32y.s:2300   .bss:00000016 _serial
     /tmp/cc3VP32y.s:869    .text:00000352 .Loc.224
     /tmp/cc3VP32y.s:870    .text:00000352 .Loc.225
     /tmp/cc3VP32y.s:873    .text:00000354 .Loc.226
     /tmp/cc3VP32y.s:886    .text:00000368 .Loc.227
     /tmp/cc3VP32y.s:887    .text:00000368 .Loc.228
     /tmp/cc3VP32y.s:890    .text:0000036a .Loc.229
     /tmp/cc3VP32y.s:892    .text:0000036c .Loc.230
     /tmp/cc3VP32y.s:2286   .bss:00000005 _manufacturing_year
     /tmp/cc3VP32y.s:894    .text:00000370 .Loc.231
     /tmp/cc3VP32y.s:895    .text:00000370 .Loc.232
     /tmp/cc3VP32y.s:897    .text:00000370 .Loc.233
     /tmp/cc3VP32y.s:901    .text:00000376 .Loc.234
     /tmp/cc3VP32y.s:902    .text:00000376 .Loc.235
     /tmp/cc3VP32y.s:906    .text:0000037c .Loc.236
     /tmp/cc3VP32y.s:908    .text:0000037c .Loc.237
     /tmp/cc3VP32y.s:909    .text:0000037c .Loc.238
     /tmp/cc3VP32y.s:916    .text:0000038c .Loc.239
     /tmp/cc3VP32y.s:917    .text:0000038c .Loc.240
     /tmp/cc3VP32y.s:920    .text:0000038e .Loc.241
     /tmp/cc3VP32y.s:2284   .bss:00000004 _manufacturing_month
     /tmp/cc3VP32y.s:922    .text:00000392 .Loc.242
     /tmp/cc3VP32y.s:923    .text:00000392 .Loc.243
     /tmp/cc3VP32y.s:925    .text:00000392 .Loc.244
     /tmp/cc3VP32y.s:935    .text:000003a4 .Loc.245
     /tmp/cc3VP32y.s:940    .text:000003a8 .Loc.246
     /tmp/cc3VP32y.s:943    .text:000003aa .Loc.247
     /tmp/cc3VP32y.s:946    .text:000003ae .Loc.248
     /tmp/cc3VP32y.s:958    .text:000003c2 .Loc.249
     /tmp/cc3VP32y.s:960    .text:000003c2 .Loc.250
     /tmp/cc3VP32y.s:961    .text:000003c2 .Loc.251
     /tmp/cc3VP32y.s:962    .text:000003c2 .Loc.252
     /tmp/cc3VP32y.s:963    .text:000003c2 .Loc.253
     /tmp/cc3VP32y.s:969    .text:000003ca .Loc.254
     /tmp/cc3VP32y.s:972    .text:000003ce .Loc.255
     /tmp/cc3VP32y.s:973    .text:000003ce .Loc.256
     /tmp/cc3VP32y.s:974    .text:000003ce .Loc.257
     /tmp/cc3VP32y.s:979    .text:000003d2 .Loc.258
     /tmp/cc3VP32y.s:980    .text:000003d2 .Loc.259
     /tmp/cc3VP32y.s:984    .text:000003d8 .Loc.260
     /tmp/cc3VP32y.s:987    .text:000003dc .Loc.261
     /tmp/cc3VP32y.s:990    .text:000003de .Loc.262
     /tmp/cc3VP32y.s:992    .text:000003e0 .Loc.263
     /tmp/cc3VP32y.s:995    .text:000003e2 .Loc.264
     /tmp/cc3VP32y.s:1000   .text:000003e6 .Loc.265
     /tmp/cc3VP32y.s:1001   .text:000003e6 .Loc.266
     /tmp/cc3VP32y.s:1005   .text:000003ec .Loc.267
     /tmp/cc3VP32y.s:1006   .text:000003ec .Loc.268
     /tmp/cc3VP32y.s:1010   .text:000003f0 .Loc.269
     /tmp/cc3VP32y.s:1011   .text:000003f0 .Loc.270
     /tmp/cc3VP32y.s:1017   .text:000003fa .Loc.271
     /tmp/cc3VP32y.s:1019   .text:000003fa .Loc.272
     /tmp/cc3VP32y.s:1020   .text:000003fa .Loc.273
     /tmp/cc3VP32y.s:1025   .text:000003fe .Loc.274
     /tmp/cc3VP32y.s:1026   .text:000003fe .Loc.275
     /tmp/cc3VP32y.s:1031   .text:00000404 .Loc.276
     /tmp/cc3VP32y.s:1034   .text:00000408 .Loc.277
     /tmp/cc3VP32y.s:1040   .text:0000040e .Loc.278
     /tmp/cc3VP32y.s:1041   .text:0000040e .Loc.279
     /tmp/cc3VP32y.s:1044   .text:00000412 .Loc.280
     /tmp/cc3VP32y.s:1045   .text:00000412 .Loc.281
     /tmp/cc3VP32y.s:1048   .text:00000416 .Loc.282
     /tmp/cc3VP32y.s:1051   .text:00000418 .Loc.283
     /tmp/cc3VP32y.s:1052   .text:00000418 .Loc.284
     /tmp/cc3VP32y.s:2282   .bss:00000003 _flag_copy
     /tmp/cc3VP32y.s:1055   .text:0000041c .Loc.285
     /tmp/cc3VP32y.s:1056   .text:0000041c .Loc.286
     /tmp/cc3VP32y.s:1058   .text:0000041e .Loc.287
     /tmp/cc3VP32y.s:1059   .text:0000041e .Loc.288
     /tmp/cc3VP32y.s:2280   .bss:00000002 _flag_write_protect
     /tmp/cc3VP32y.s:1062   .text:00000422 .Loc.289
     /tmp/cc3VP32y.s:1063   .text:00000422 .Loc.290
     /tmp/cc3VP32y.s:1065   .text:00000424 .Loc.291
     /tmp/cc3VP32y.s:1066   .text:00000424 .Loc.292
     /tmp/cc3VP32y.s:2278   .bss:00000001 _flag_write_protect_temp
     /tmp/cc3VP32y.s:1069   .text:00000428 .Loc.293
     /tmp/cc3VP32y.s:1070   .text:00000428 .Loc.294
     /tmp/cc3VP32y.s:1077   .text:00000434 .Loc.295
                             .bss:00000000 _format
     /tmp/cc3VP32y.s:1079   .text:00000438 .Loc.296
     /tmp/cc3VP32y.s:1081   .text:00000438 .Loc.297
     /tmp/cc3VP32y.s:1082   .text:00000438 .Loc.298
     /tmp/cc3VP32y.s:1087   .text:0000043c .Loc.299
     /tmp/cc3VP32y.s:1088   .text:0000043c .Loc.300
     /tmp/cc3VP32y.s:1090   .text:00000440 L0
     /tmp/cc3VP32y.s:1092   .text:00000442 .Loc.301
     /tmp/cc3VP32y.s:1094   .text:00000446 L0
     /tmp/cc3VP32y.s:1099   .text:00000450 L0
     /tmp/cc3VP32y.s:1103   .text:00000452 .Loc.302
     /tmp/cc3VP32y.s:1106   .text:00000454 .Loc.303
     /tmp/cc3VP32y.s:1109   .text:00000458 .Loc.304
     /tmp/cc3VP32y.s:1112   .text:0000045a .Loc.305
     /tmp/cc3VP32y.s:1115   .text:0000045a .Loc.306
     /tmp/cc3VP32y.s:1117   .text:0000045a .Loc.307
     /tmp/cc3VP32y.s:2255   .progmem.data:0000017a __c.18
     /tmp/cc3VP32y.s:1124   .text:00000466 .Loc.308
     /tmp/cc3VP32y.s:1126   .text:00000466 .Loc.309
     /tmp/cc3VP32y.s:1127   .text:00000466 .Loc.310
     /tmp/cc3VP32y.s:1129   .text:00000466 .Loc.311
     /tmp/cc3VP32y.s:2247   .progmem.data:00000161 __c.16
     /tmp/cc3VP32y.s:1142   .text:00000474 .Loc.312
     /tmp/cc3VP32y.s:1147   .text:0000047a .Loc.313
     /tmp/cc3VP32y.s:1149   .text:0000047a .Loc.314
     /tmp/cc3VP32y.s:1150   .text:0000047a .Loc.315
     /tmp/cc3VP32y.s:1152   .text:0000047a .Loc.316
     /tmp/cc3VP32y.s:2243   .progmem.data:0000014b __c.15
     /tmp/cc3VP32y.s:1168   .text:0000048e .Loc.317
     /tmp/cc3VP32y.s:1170   .text:0000048e .Loc.318
     /tmp/cc3VP32y.s:1171   .text:0000048e .Loc.319
     /tmp/cc3VP32y.s:1173   .text:0000048e .Loc.320
     /tmp/cc3VP32y.s:2239   .progmem.data:00000133 __c.14
     /tmp/cc3VP32y.s:1189   .text:000004a4 .Loc.321
     /tmp/cc3VP32y.s:1191   .text:000004a4 .Loc.322
     /tmp/cc3VP32y.s:1192   .text:000004a4 .Loc.323
     /tmp/cc3VP32y.s:1194   .text:000004a4 .Loc.324
     /tmp/cc3VP32y.s:2235   .progmem.data:0000011d __c.13
     /tmp/cc3VP32y.s:1211   .text:000004ba .Loc.325
     /tmp/cc3VP32y.s:1213   .text:000004ba .Loc.326
     /tmp/cc3VP32y.s:1214   .text:000004ba .Loc.327
     /tmp/cc3VP32y.s:1216   .text:000004ba .Loc.328
     /tmp/cc3VP32y.s:2231   .progmem.data:00000107 __c.12
     /tmp/cc3VP32y.s:1233   .text:000004d0 .Loc.329
     /tmp/cc3VP32y.s:1234   .text:000004d0 .Loc.330
     /tmp/cc3VP32y.s:1237   .text:000004d4 .Loc.331
     /tmp/cc3VP32y.s:1238   .text:000004d4 .Loc.332
     /tmp/cc3VP32y.s:1240   .text:000004d4 .Loc.333
     /tmp/cc3VP32y.s:1248   .text:000004de .Loc.334
     /tmp/cc3VP32y.s:1251   .text:000004e2 .Loc.335
     /tmp/cc3VP32y.s:2227   .progmem.data:000000ee __c.11
     /tmp/cc3VP32y.s:1267   .text:000004f6 .Loc.336
     /tmp/cc3VP32y.s:1269   .text:000004f6 .Loc.337
     /tmp/cc3VP32y.s:1270   .text:000004f6 .Loc.338
     /tmp/cc3VP32y.s:1272   .text:000004f6 .Loc.339
     /tmp/cc3VP32y.s:2223   .progmem.data:000000d3 __c.10
     /tmp/cc3VP32y.s:1305   .text:0000052e .Loc.340
     /tmp/cc3VP32y.s:1307   .text:0000052e .Loc.341
     /tmp/cc3VP32y.s:1308   .text:0000052e .Loc.342
     /tmp/cc3VP32y.s:1310   .text:0000052e .Loc.343
     /tmp/cc3VP32y.s:2219   .progmem.data:000000b8 __c.9
     /tmp/cc3VP32y.s:1334   .text:00000552 .Loc.344
     /tmp/cc3VP32y.s:1336   .text:00000552 .Loc.345
     /tmp/cc3VP32y.s:1337   .text:00000552 .Loc.346
     /tmp/cc3VP32y.s:1339   .text:00000552 .Loc.347
     /tmp/cc3VP32y.s:2298   .bss:00000012 _capacity
     /tmp/cc3VP32y.s:2215   .progmem.data:0000009a __c.8
     /tmp/cc3VP32y.s:1362   .text:00000578 .Loc.348
     /tmp/cc3VP32y.s:1364   .text:00000578 .Loc.349
     /tmp/cc3VP32y.s:1365   .text:00000578 .Loc.350
     /tmp/cc3VP32y.s:1367   .text:00000578 .Loc.351
     /tmp/cc3VP32y.s:2211   .progmem.data:0000007b __c.7
     /tmp/cc3VP32y.s:1399   .text:000005ae .Loc.352
     /tmp/cc3VP32y.s:1401   .text:000005ae .Loc.353
     /tmp/cc3VP32y.s:1402   .text:000005ae .Loc.354
     /tmp/cc3VP32y.s:1404   .text:000005ae .Loc.355
     /tmp/cc3VP32y.s:2207   .progmem.data:00000061 __c.6
     /tmp/cc3VP32y.s:1420   .text:000005c4 .Loc.356
     /tmp/cc3VP32y.s:1434   .text:000005de .Loc.357
     /tmp/cc3VP32y.s:1437   .text:000005e6 L0
     /tmp/cc3VP32y.s:2199   .progmem.data:00000035 __c.4
     /tmp/cc3VP32y.s:1442   .text:000005ec .Loc.358
     /tmp/cc3VP32y.s:1445   .text:000005f4 L0
     /tmp/cc3VP32y.s:2191   .progmem.data:00000023 __c.2
     /tmp/cc3VP32y.s:1451   .text:000005fa .Loc.359
     /tmp/cc3VP32y.s:1452   .text:000005fa .Loc.360
     /tmp/cc3VP32y.s:1454   .text:000005fa .Loc.361
     /tmp/cc3VP32y.s:2183   .progmem.data:00000000 __c.0
     /tmp/cc3VP32y.s:1476   .text:00000612 .Loc.362
     /tmp/cc3VP32y.s:1492   .text:0000062a .Loc.363
     /tmp/cc3VP32y.s:1496   .text:0000062e .Loc.364
     /tmp/cc3VP32y.s:1499   .text:00000630 .Loc.365
     /tmp/cc3VP32y.s:1507   .text:00000638 .Loc.366
     /tmp/cc3VP32y.s:1508   .text:00000638 .Loc.367
     /tmp/cc3VP32y.s:1512   .text:0000063a .Loc.368
     /tmp/cc3VP32y.s:1513   .text:0000063a .Loc.369
     /tmp/cc3VP32y.s:1514   .text:0000063a .Loc.370
     /tmp/cc3VP32y.s:1519   .text:00000640 .Loc.371
     /tmp/cc3VP32y.s:1523   .text:00000644 .Loc.372
     /tmp/cc3VP32y.s:1524   .text:00000644 .Loc.373
     /tmp/cc3VP32y.s:1527   .text:00000646 .Loc.374
     /tmp/cc3VP32y.s:1530   .text:0000064a .Loc.375
     /tmp/cc3VP32y.s:1539   .text:00000658 .Loc.376
     /tmp/cc3VP32y.s:1547   .text:0000066a .Loc.377
     /tmp/cc3VP32y.s:1548   .text:0000066a .Loc.378
     /tmp/cc3VP32y.s:1551   .text:0000066e .Loc.379
     /tmp/cc3VP32y.s:1553   .text:00000672 L0
     /tmp/cc3VP32y.s:1563   .text:00000682 .Loc.380
     /tmp/cc3VP32y.s:1566   .text:00000684 .Loc.381
     /tmp/cc3VP32y.s:1570   .text:00000686 .Loc.382
     /tmp/cc3VP32y.s:1572   .text:0000068a L0
     /tmp/cc3VP32y.s:1575   .text:00000690 L0
     /tmp/cc3VP32y.s:1577   .text:00000692 .Loc.383
     /tmp/cc3VP32y.s:1578   .text:00000692 .Loc.384
     /tmp/cc3VP32y.s:1583   .text:00000698 .Loc.385
     /tmp/cc3VP32y.s:1586   .text:0000069a .Loc.386
     /tmp/cc3VP32y.s:1587   .text:0000069a .Loc.387
     /tmp/cc3VP32y.s:1591   .text:000006a0 .Loc.388
     /tmp/cc3VP32y.s:1597   .text:000006aa .Loc.389
     /tmp/cc3VP32y.s:1600   .text:000006ae .Loc.390
     /tmp/cc3VP32y.s:1610   .text:000006bc .Loc.391
     /tmp/cc3VP32y.s:1619   .text:000006ca .Loc.392
     /tmp/cc3VP32y.s:1624   .text:000006da .Loc.393
     /tmp/cc3VP32y.s:1626   .text:000006da .Loc.394
     /tmp/cc3VP32y.s:1627   .text:000006da .Loc.395
     /tmp/cc3VP32y.s:1628   .text:000006da .Loc.396
     /tmp/cc3VP32y.s:1633   .text:000006de .Loc.397
     /tmp/cc3VP32y.s:1634   .text:000006de .Loc.398
     /tmp/cc3VP32y.s:1637   .text:000006e0 .Loc.399
     /tmp/cc3VP32y.s:1640   .text:000006e2 .Loc.400
     /tmp/cc3VP32y.s:1641   .text:000006e2 .Loc.401
     /tmp/cc3VP32y.s:1642   .text:000006e2 .Loc.402
     /tmp/cc3VP32y.s:1643   .text:000006e2 .Loc.403
     /tmp/cc3VP32y.s:1648   .text:000006e6 .Loc.404
     /tmp/cc3VP32y.s:1649   .text:000006e6 .Loc.405
     /tmp/cc3VP32y.s:1652   .text:000006e8 .Loc.406
     /tmp/cc3VP32y.s:1655   .text:000006ea .Loc.407
     /tmp/cc3VP32y.s:1658   .text:000006ec .Loc.408
     /tmp/cc3VP32y.s:1659   .text:000006ec .Loc.409
     /tmp/cc3VP32y.s:1663   .text:000006f0 .Loc.410
     /tmp/cc3VP32y.s:1664   .text:000006f0 .Loc.411
     /tmp/cc3VP32y.s:1665   .text:000006f0 .Loc.412
     /tmp/cc3VP32y.s:1666   .text:000006f0 .Loc.413
     /tmp/cc3VP32y.s:1671   .text:000006f4 .Loc.414
     /tmp/cc3VP32y.s:1672   .text:000006f4 .Loc.415
     /tmp/cc3VP32y.s:1675   .text:000006f6 .Loc.416
     /tmp/cc3VP32y.s:1676   .text:000006f6 .Loc.417
     /tmp/cc3VP32y.s:1682   .text:000006fe .Loc.418
     /tmp/cc3VP32y.s:1683   .text:000006fe .Loc.419
     /tmp/cc3VP32y.s:1684   .text:000006fe .Loc.420
     /tmp/cc3VP32y.s:1685   .text:000006fe .Loc.421
     /tmp/cc3VP32y.s:1690   .text:00000702 .Loc.422
     /tmp/cc3VP32y.s:1691   .text:00000702 .Loc.423
     /tmp/cc3VP32y.s:1694   .text:00000704 .Loc.424
     /tmp/cc3VP32y.s:1698   .text:0000070a .Loc.425
     /tmp/cc3VP32y.s:1701   .text:0000070c .Loc.426
     /tmp/cc3VP32y.s:1705   .text:00000710 .Loc.427
     /tmp/cc3VP32y.s:1706   .text:00000710 .Loc.428
     /tmp/cc3VP32y.s:1707   .text:00000710 .Loc.429
     /tmp/cc3VP32y.s:1708   .text:00000710 .Loc.430
     /tmp/cc3VP32y.s:1713   .text:00000714 .Loc.431
     /tmp/cc3VP32y.s:1714   .text:00000714 .Loc.432
     /tmp/cc3VP32y.s:1715   .text:00000714 .Loc.433
     /tmp/cc3VP32y.s:1718   .text:00000716 .Loc.434
     /tmp/cc3VP32y.s:1722   .text:0000071a .Loc.435
     /tmp/cc3VP32y.s:1723   .text:0000071a .Loc.436
     /tmp/cc3VP32y.s:1724   .text:0000071a .Loc.437
     /tmp/cc3VP32y.s:1725   .text:0000071a .Loc.438
     /tmp/cc3VP32y.s:1730   .text:0000071e .Loc.439
     /tmp/cc3VP32y.s:1734   .text:0000071e .Loc.440
     /tmp/cc3VP32y.s:2251   .progmem.data:00000177 __c.17
     /tmp/cc3VP32y.s:1740   .text:00000724 .Loc.441
     /tmp/cc3VP32y.s:2203   .progmem.data:00000045 __c.5
     /tmp/cc3VP32y.s:1745   .text:0000072a .Loc.442
     /tmp/cc3VP32y.s:2195   .progmem.data:0000002a __c.3
     /tmp/cc3VP32y.s:1750   .text:00000730 .Loc.443
     /tmp/cc3VP32y.s:2187   .progmem.data:00000018 __c.1
     /tmp/cc3VP32y.s:1756   .text:00000736 L0
     /tmp/cc3VP32y.s:1761   .text:00000736 sd_size
     /tmp/cc3VP32y.s:1763   .text:00000736 .Loc.444
     /tmp/cc3VP32y.s:1764   .text:00000736 L0
     /tmp/cc3VP32y.s:1771   .text:0000073c L0
     /tmp/cc3VP32y.s:1772   .text:0000073e L0
     /tmp/cc3VP32y.s:1781   .text:00000742 .Loc.445
     /tmp/cc3VP32y.s:1782   .text:00000742 .Loc.446
     /tmp/cc3VP32y.s:1787   .text:00000752 .Loc.447
     /tmp/cc3VP32y.s:1798   .text:00000764 L0
     /tmp/cc3VP32y.s:1803   .text:00000764 sd_read
     /tmp/cc3VP32y.s:1806   .text:00000764 .Loc.448
     /tmp/cc3VP32y.s:1807   .text:00000764 L0
     /tmp/cc3VP32y.s:1808   .text:00000764 .Loc.449
     /tmp/cc3VP32y.s:1833   .text:00000776 L0
     /tmp/cc3VP32y.s:1845   .text:00000780 .Loc.450
     /tmp/cc3VP32y.s:1846   .text:00000780 .Loc.451
     /tmp/cc3VP32y.s:1847   .text:00000780 .Loc.452
     /tmp/cc3VP32y.s:1849   .text:00000780 .Loc.453
     /tmp/cc3VP32y.s:1851   .text:00000782 .Loc.454
     /tmp/cc3VP32y.s:1853   .text:00000782 .Loc.455
     /tmp/cc3VP32y.s:1857   .text:00000782 .Loc.456
     /tmp/cc3VP32y.s:1859   .text:00000782 .Loc.457
     /tmp/cc3VP32y.s:1860   .text:00000782 .Loc.458
     /tmp/cc3VP32y.s:1874   .text:00000798 .Loc.459
     /tmp/cc3VP32y.s:1879   .text:00000798 .Loc.460
     /tmp/cc3VP32y.s:1881   .text:00000798 .Loc.461
     /tmp/cc3VP32y.s:1882   .text:00000798 .Loc.462
     /tmp/cc3VP32y.s:1884   .text:00000798 .Loc.463
     /tmp/cc3VP32y.s:1888   .text:0000079e .Loc.464
     /tmp/cc3VP32y.s:1892   .text:000007a2 .Loc.465
     /tmp/cc3VP32y.s:1893   .text:000007a2 .Loc.466
     /tmp/cc3VP32y.s:1894   .text:000007a2 .Loc.467
     /tmp/cc3VP32y.s:1896   .text:000007a2 .Loc.468
     /tmp/cc3VP32y.s:1899   .text:000007a4 .Loc.469
     /tmp/cc3VP32y.s:1902   .text:000007a8 .Loc.470
     /tmp/cc3VP32y.s:1906   .text:000007ac .Loc.471
     /tmp/cc3VP32y.s:1907   .text:000007ac .Loc.472
     /tmp/cc3VP32y.s:1908   .text:000007ac .Loc.473
     /tmp/cc3VP32y.s:1910   .text:000007ac .Loc.474
     /tmp/cc3VP32y.s:1913   .text:000007ae .Loc.475
     /tmp/cc3VP32y.s:1916   .text:000007b2 .Loc.476
     /tmp/cc3VP32y.s:1920   .text:000007b6 .Loc.477
     /tmp/cc3VP32y.s:1921   .text:000007b6 .Loc.478
     /tmp/cc3VP32y.s:1922   .text:000007b6 .Loc.479
     /tmp/cc3VP32y.s:1924   .text:000007b6 .Loc.480
     /tmp/cc3VP32y.s:1927   .text:000007b8 .Loc.481
     /tmp/cc3VP32y.s:1930   .text:000007bc .Loc.482
     /tmp/cc3VP32y.s:1934   .text:000007c0 .Loc.483
     /tmp/cc3VP32y.s:1935   .text:000007c0 .Loc.484
     /tmp/cc3VP32y.s:1936   .text:000007c0 .Loc.485
     /tmp/cc3VP32y.s:1938   .text:000007c0 .Loc.486
     /tmp/cc3VP32y.s:1941   .text:000007c2 .Loc.487
     /tmp/cc3VP32y.s:1944   .text:000007c6 .Loc.488
     /tmp/cc3VP32y.s:1948   .text:000007ca .Loc.489
     /tmp/cc3VP32y.s:1949   .text:000007ca .Loc.490
     /tmp/cc3VP32y.s:1950   .text:000007ca .Loc.491
     /tmp/cc3VP32y.s:1952   .text:000007ca .Loc.492
     /tmp/cc3VP32y.s:1955   .text:000007cc .Loc.493
     /tmp/cc3VP32y.s:1958   .text:000007d0 .Loc.494
     /tmp/cc3VP32y.s:1962   .text:000007d4 .Loc.495
     /tmp/cc3VP32y.s:1963   .text:000007d4 .Loc.496
     /tmp/cc3VP32y.s:1964   .text:000007d4 .Loc.497
     /tmp/cc3VP32y.s:1965   .text:000007d4 .Loc.498
     /tmp/cc3VP32y.s:1967   .text:000007d4 .Loc.499
     /tmp/cc3VP32y.s:1970   .text:000007d6 .Loc.500
     /tmp/cc3VP32y.s:1973   .text:000007da .Loc.501
     /tmp/cc3VP32y.s:1980   .text:000007e2 .Loc.502
     /tmp/cc3VP32y.s:1982   .text:000007e2 .Loc.503
     /tmp/cc3VP32y.s:1984   .text:000007e2 .Loc.504
     /tmp/cc3VP32y.s:1989   .text:000007ea .Loc.505
     /tmp/cc3VP32y.s:1993   .text:000007ee .Loc.506
     /tmp/cc3VP32y.s:1994   .text:000007ee .Loc.507
     /tmp/cc3VP32y.s:1995   .text:000007ee .Loc.508
     /tmp/cc3VP32y.s:1996   .text:000007ee .Loc.509
     /tmp/cc3VP32y.s:1999   .text:000007f0 .Loc.510
     /tmp/cc3VP32y.s:2002   .text:000007f4 .Loc.511
     /tmp/cc3VP32y.s:2003   .text:000007f4 .Loc.512
     /tmp/cc3VP32y.s:2006   .text:000007f6 .Loc.513
     /tmp/cc3VP32y.s:2011   .text:000007fa .Loc.514
     /tmp/cc3VP32y.s:2015   .text:000007fa .Loc.515
     /tmp/cc3VP32y.s:2023   .text:000007fe .Loc.516
     /tmp/cc3VP32y.s:2024   .text:000007fe .Loc.517
     /tmp/cc3VP32y.s:2026   .text:00000800 .Loc.518
     /tmp/cc3VP32y.s:2028   .text:00000800 .Loc.519
     /tmp/cc3VP32y.s:2031   .text:00000800 .Loc.520
     /tmp/cc3VP32y.s:2033   .text:00000800 .Loc.521
     /tmp/cc3VP32y.s:2034   .text:00000800 .Loc.522
     /tmp/cc3VP32y.s:2035   .text:00000800 .Loc.523
     /tmp/cc3VP32y.s:2036   .text:00000800 .Loc.524
     /tmp/cc3VP32y.s:2039   .text:00000804 .Loc.525
     /tmp/cc3VP32y.s:2042   .text:00000808 .Loc.526
     /tmp/cc3VP32y.s:2044   .text:0000080a .Loc.527
     /tmp/cc3VP32y.s:2045   .text:0000080a .Loc.528
     /tmp/cc3VP32y.s:2050   .text:0000080c .Loc.529
     /tmp/cc3VP32y.s:2058   .text:00000818 .Loc.530
     /tmp/cc3VP32y.s:2066   .text:00000822 .Loc.531
     /tmp/cc3VP32y.s:2071   .text:00000828 .Loc.532
     /tmp/cc3VP32y.s:2073   .text:00000828 .Loc.533
     /tmp/cc3VP32y.s:2075   .text:00000828 .Loc.534
     /tmp/cc3VP32y.s:2082   .text:00000834 .Loc.535
     /tmp/cc3VP32y.s:2086   .text:00000838 .Loc.536
     /tmp/cc3VP32y.s:2087   .text:00000838 .Loc.537
     /tmp/cc3VP32y.s:2088   .text:00000838 .Loc.538
     /tmp/cc3VP32y.s:2089   .text:00000838 .Loc.539
     /tmp/cc3VP32y.s:2092   .text:0000083a .Loc.540
     /tmp/cc3VP32y.s:2095   .text:0000083e .Loc.541
     /tmp/cc3VP32y.s:2096   .text:0000083e .Loc.542
     /tmp/cc3VP32y.s:2101   .text:00000846 .Loc.543
     /tmp/cc3VP32y.s:2103   .text:00000848 .Loc.544
     /tmp/cc3VP32y.s:2104   .text:00000848 .Loc.545
     /tmp/cc3VP32y.s:2107   .text:0000084a .Loc.546
     /tmp/cc3VP32y.s:2112   .text:0000084e .Loc.547
     /tmp/cc3VP32y.s:2113   .text:0000084e .Loc.548
     /tmp/cc3VP32y.s:2119   .text:00000858 .Loc.549
     /tmp/cc3VP32y.s:2122   .text:0000085c .Loc.550
     /tmp/cc3VP32y.s:2127   .text:00000862 .Loc.551
     /tmp/cc3VP32y.s:2132   .text:0000086a .Loc.552
     /tmp/cc3VP32y.s:2134   .text:0000086a .Loc.553
     /tmp/cc3VP32y.s:2138   .text:00000870 .Loc.554
     /tmp/cc3VP32y.s:2142   .text:00000874 .Loc.555
     /tmp/cc3VP32y.s:2143   .text:00000874 .Loc.556
     /tmp/cc3VP32y.s:2144   .text:00000874 .Loc.557
     /tmp/cc3VP32y.s:2146   .text:00000874 .Loc.558
     /tmp/cc3VP32y.s:2149   .text:00000876 .Loc.559
     /tmp/cc3VP32y.s:2152   .text:0000087a .Loc.560
     /tmp/cc3VP32y.s:2156   .text:0000087e .Loc.561
     /tmp/cc3VP32y.s:2157   .text:0000087e .Loc.562
     /tmp/cc3VP32y.s:2158   .text:0000087e .Loc.563
     /tmp/cc3VP32y.s:2160   .text:0000087e .Loc.564
     /tmp/cc3VP32y.s:2163   .text:00000880 .Loc.565
     /tmp/cc3VP32y.s:2166   .text:00000884 .Loc.566
     /tmp/cc3VP32y.s:2170   .text:00000888 .Loc.567
     /tmp/cc3VP32y.s:2171   .text:00000888 .Loc.568
     /tmp/cc3VP32y.s:2172   .text:00000888 .Loc.569
     /tmp/cc3VP32y.s:2174   .text:0000088a .Loc.570
     /tmp/cc3VP32y.s:2175   .text:0000088a .Loc.571
     /tmp/cc3VP32y.s:2177   .text:0000088c L0
     /tmp/cc3VP32y.s:2310   .text:0000088c L0
                     .debug_frame:00000000 L0
     /tmp/cc3VP32y.s:80     .text:00000044 .L13
     /tmp/cc3VP32y.s:106    .text:0000005a .L1
     /tmp/cc3VP32y.s:89     .text:0000004a .L6
     /tmp/cc3VP32y.s:278    .text:000000ca .L17
     /tmp/cc3VP32y.s:328    .text:00000100 .L18
     /tmp/cc3VP32y.s:321    .text:000000fc .L19
     /tmp/cc3VP32y.s:300    .text:000000e0 .L20
     /tmp/cc3VP32y.s:449    .text:00000194 .L21
     /tmp/cc3VP32y.s:440    .text:00000188 .L22
     /tmp/cc3VP32y.s:474    .text:000001b8 .L26
     /tmp/cc3VP32y.s:402    .text:0000015c .L11
     /tmp/cc3VP32y.s:480    .text:000001bc .L28
     /tmp/cc3VP32y.s:431    .text:00000182 .L29
     /tmp/cc3VP32y.s:370    .text:00000136 .L30
     /tmp/cc3VP32y.s:357    .text:00000128 .L24
     /tmp/cc3VP32y.s:361    .text:0000012c .L23
     /tmp/cc3VP32y.s:366    .text:00000132 .L106
     /tmp/cc3VP32y.s:412    .text:0000016a .L107
     /tmp/cc3VP32y.s:528    .text:000001fc .L31
     /tmp/cc3VP32y.s:515    .text:000001ea .L33
     /tmp/cc3VP32y.s:589    .text:00000220 .L12
     /tmp/cc3VP32y.s:576    .text:0000021e .L35
     /tmp/cc3VP32y.s:740    .text:000002b8 .L38
     /tmp/cc3VP32y.s:939    .text:000003a8 .L39
     /tmp/cc3VP32y.s:722    .jumptables.gcc.sd_init:00000000 .L41
     /tmp/cc3VP32y.s:672    .text:0000026c .L36
     /tmp/cc3VP32y.s:696    .text:0000028e .L50
     /tmp/cc3VP32y.s:777    .text:000002da .L46
     /tmp/cc3VP32y.s:852    .text:00000326 .L21
     /tmp/cc3VP32y.s:847    .text:0000031e .L13
     /tmp/cc3VP32y.s:957    .text:000003c2 .L49
     /tmp/cc3VP32y.s:1024   .text:000003fe .L53
     /tmp/cc3VP32y.s:1039   .text:0000040e .L54
     /tmp/cc3VP32y.s:999    .text:000003e6 .L73
     /tmp/cc3VP32y.s:978    .text:000003d2 .L51
     /tmp/cc3VP32y.s:1086   .text:0000043c .L56
     /tmp/cc3VP32y.s:1546   .text:0000066a .L60
     /tmp/cc3VP32y.s:1505   .text:00000638 .L61
     /tmp/cc3VP32y.s:1511   .text:0000063a .L63
     /tmp/cc3VP32y.s:1729   .text:0000071e .L78
     /tmp/cc3VP32y.s:1373   .text:0000058a .L14
     /tmp/cc3VP32y.s:1739   .text:00000724 .L79
     /tmp/cc3VP32y.s:1744   .text:0000072a .L80
     /tmp/cc3VP32y.s:1749   .text:00000730 .L81
     /tmp/cc3VP32y.s:1532   .text:0000064c .L15
     /tmp/cc3VP32y.s:1102   .text:00000452 .L62
     /tmp/cc3VP32y.s:1689   .text:00000702 .L64
     /tmp/cc3VP32y.s:1569   .text:00000686 .L65
     /tmp/cc3VP32y.s:1647   .text:000006e6 .L66
     /tmp/cc3VP32y.s:1670   .text:000006f4 .L67
     /tmp/cc3VP32y.s:1632   .text:000006de .L68
     /tmp/cc3VP32y.s:1712   .text:00000714 .L70
     /tmp/cc3VP32y.s:1607   .text:000006b8 .L22
     /tmp/cc3VP32y.s:1602   .text:000006b0 .L16
     /tmp/cc3VP32y.s:1612   .text:000006be .L17
     /tmp/cc3VP32y.s:1123   .text:00000466 .L74
     /tmp/cc3VP32y.s:1441   .text:000005ec .L75
     /tmp/cc3VP32y.s:1449   .text:000005fa .L76
     /tmp/cc3VP32y.s:1873   .text:00000798 .L110
     /tmp/cc3VP32y.s:1865   .text:0000078c .L18
     /tmp/cc3VP32y.s:2048   .text:0000080c .L109
     /tmp/cc3VP32y.s:2019   .text:000007fe .L120
     /tmp/cc3VP32y.s:1979   .text:000007e2 .L118
     /tmp/cc3VP32y.s:2072   .text:00000828 .L122
     /tmp/cc3VP32y.s:2106   .text:0000084a .L130
     /tmp/cc3VP32y.s:2065   .text:00000822 .L124
     /tmp/cc3VP32y.s:2010   .text:000007fa .L125
     /tmp/cc3VP32y.s:2111   .text:0000084e .L123
     /tmp/cc3VP32y.s:755    .text:000002c8 .L47
     /tmp/cc3VP32y.s:795    .text:000002f0 .L77
     /tmp/cc3VP32y.s:802    .text:000002f4 .L45
     /tmp/cc3VP32y.s:816    .text:00000302 .L44
     /tmp/cc3VP32y.s:838    .text:00000314 .L43
     /tmp/cc3VP32y.s:885    .text:00000368 .L42
     /tmp/cc3VP32y.s:907    .text:0000037c .L40
     /tmp/cc3VP32y.s:4412   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/cc3VP32y.s:8      .text:00000000 .Ltext0
     /tmp/cc3VP32y.s:2304   .text:0000088c .Letext0
     /tmp/cc3VP32y.s:6887   .debug_line:00000000 .Ldebug_line0
     /tmp/cc3VP32y.s:1805   .text:00000764 .LFB22
     /tmp/cc3VP32y.s:2178   .text:0000088c .LFE22
     /tmp/cc3VP32y.s:5362   .debug_loclists:00000010 .LLST22
     /tmp/cc3VP32y.s:5357   .debug_loclists:0000000c .LVUS22
     /tmp/cc3VP32y.s:5397   .debug_loclists:00000035 .LLST23
     /tmp/cc3VP32y.s:5388   .debug_loclists:0000002d .LVUS23
     /tmp/cc3VP32y.s:5440   .debug_loclists:00000066 .LLST24
     /tmp/cc3VP32y.s:5437   .debug_loclists:00000064 .LVUS24
     /tmp/cc3VP32y.s:5461   .debug_loclists:0000007b .LLST25
     /tmp/cc3VP32y.s:5452   .debug_loclists:00000073 .LVUS25
     /tmp/cc3VP32y.s:6869   .debug_rnglists:00000038 .LLRL26
     /tmp/cc3VP32y.s:5506   .debug_loclists:000000ae .LLST27
     /tmp/cc3VP32y.s:5501   .debug_loclists:000000aa .LVUS27
     /tmp/cc3VP32y.s:1856   .text:00000782 .LBI120
     /tmp/cc3VP32y.s:1855   .text:00000782 .LBB120
     /tmp/cc3VP32y.s:1876   .text:00000798 .LBE120
     /tmp/cc3VP32y.s:5523   .debug_loclists:000000c1 .LLST28
     /tmp/cc3VP32y.s:5520   .debug_loclists:000000bf .LVUS28
     /tmp/cc3VP32y.s:1878   .text:00000798 .LBI122
     /tmp/cc3VP32y.s:6877   .debug_rnglists:00000043 .LLRL29
     /tmp/cc3VP32y.s:5546   .debug_loclists:000000d8 .LLST30
     /tmp/cc3VP32y.s:5541   .debug_loclists:000000d4 .LVUS30
     /tmp/cc3VP32y.s:5565   .debug_loclists:000000ed .LLST31
     /tmp/cc3VP32y.s:5560   .debug_loclists:000000e9 .LVUS31
     /tmp/cc3VP32y.s:5606   .debug_loclists:00000118 .LLST32
     /tmp/cc3VP32y.s:5599   .debug_loclists:00000112 .LVUS32
     /tmp/cc3VP32y.s:1883   .text:00000798 .LBB124
     /tmp/cc3VP32y.s:1891   .text:000007a2 .LBE124
     /tmp/cc3VP32y.s:5638   .debug_loclists:0000013c .LLST33
     /tmp/cc3VP32y.s:5635   .debug_loclists:0000013a .LVUS33
     /tmp/cc3VP32y.s:1887   .text:0000079e .LVL166
     /tmp/cc3VP32y.s:1895   .text:000007a2 .LBB125
     /tmp/cc3VP32y.s:1905   .text:000007ac .LBE125
     /tmp/cc3VP32y.s:5648   .debug_loclists:00000146 .LLST34
     /tmp/cc3VP32y.s:5645   .debug_loclists:00000144 .LVUS34
     /tmp/cc3VP32y.s:1901   .text:000007a8 .LVL168
     /tmp/cc3VP32y.s:1909   .text:000007ac .LBB126
     /tmp/cc3VP32y.s:1919   .text:000007b6 .LBE126
     /tmp/cc3VP32y.s:5658   .debug_loclists:00000150 .LLST35
     /tmp/cc3VP32y.s:5655   .debug_loclists:0000014e .LVUS35
     /tmp/cc3VP32y.s:1915   .text:000007b2 .LVL170
     /tmp/cc3VP32y.s:1923   .text:000007b6 .LBB127
     /tmp/cc3VP32y.s:1933   .text:000007c0 .LBE127
     /tmp/cc3VP32y.s:5668   .debug_loclists:0000015a .LLST36
     /tmp/cc3VP32y.s:5665   .debug_loclists:00000158 .LVUS36
     /tmp/cc3VP32y.s:1929   .text:000007bc .LVL172
     /tmp/cc3VP32y.s:1937   .text:000007c0 .LBB128
     /tmp/cc3VP32y.s:1947   .text:000007ca .LBE128
     /tmp/cc3VP32y.s:5678   .debug_loclists:00000164 .LLST37
     /tmp/cc3VP32y.s:5675   .debug_loclists:00000162 .LVUS37
     /tmp/cc3VP32y.s:1943   .text:000007c6 .LVL174
     /tmp/cc3VP32y.s:1951   .text:000007ca .LBB129
     /tmp/cc3VP32y.s:1961   .text:000007d4 .LBE129
     /tmp/cc3VP32y.s:5688   .debug_loclists:0000016e .LLST38
     /tmp/cc3VP32y.s:5685   .debug_loclists:0000016c .LVUS38
     /tmp/cc3VP32y.s:1957   .text:000007d0 .LVL176
     /tmp/cc3VP32y.s:1966   .text:000007d4 .LBB130
     /tmp/cc3VP32y.s:1981   .text:000007e2 .LBE130
     /tmp/cc3VP32y.s:5698   .debug_loclists:00000178 .LLST39
     /tmp/cc3VP32y.s:5695   .debug_loclists:00000176 .LVUS39
     /tmp/cc3VP32y.s:1972   .text:000007da .LVL178
     /tmp/cc3VP32y.s:1983   .text:000007e2 .LBB131
     /tmp/cc3VP32y.s:1992   .text:000007ee .LBE131
     /tmp/cc3VP32y.s:5708   .debug_loclists:00000182 .LLST40
     /tmp/cc3VP32y.s:5705   .debug_loclists:00000180 .LVUS40
     /tmp/cc3VP32y.s:1988   .text:000007ea .LVL180
     /tmp/cc3VP32y.s:2074   .text:00000828 .LBB135
     /tmp/cc3VP32y.s:2085   .text:00000838 .LBE135
     /tmp/cc3VP32y.s:5718   .debug_loclists:0000018c .LLST41
     /tmp/cc3VP32y.s:5715   .debug_loclists:0000018a .LVUS41
     /tmp/cc3VP32y.s:2081   .text:00000834 .LVL190
     /tmp/cc3VP32y.s:2133   .text:0000086a .LBB136
     /tmp/cc3VP32y.s:2141   .text:00000874 .LBE136
     /tmp/cc3VP32y.s:5728   .debug_loclists:00000196 .LLST42
     /tmp/cc3VP32y.s:5725   .debug_loclists:00000194 .LVUS42
     /tmp/cc3VP32y.s:2137   .text:00000870 .LVL195
     /tmp/cc3VP32y.s:2145   .text:00000874 .LBB137
     /tmp/cc3VP32y.s:2155   .text:0000087e .LBE137
     /tmp/cc3VP32y.s:5738   .debug_loclists:000001a0 .LLST43
     /tmp/cc3VP32y.s:5735   .debug_loclists:0000019e .LVUS43
     /tmp/cc3VP32y.s:2151   .text:0000087a .LVL197
     /tmp/cc3VP32y.s:2159   .text:0000087e .LBB138
     /tmp/cc3VP32y.s:2169   .text:00000888 .LBE138
     /tmp/cc3VP32y.s:5748   .debug_loclists:000001aa .LLST44
     /tmp/cc3VP32y.s:5745   .debug_loclists:000001a8 .LVUS44
     /tmp/cc3VP32y.s:2165   .text:00000884 .LVL199
     /tmp/cc3VP32y.s:2118   .text:00000858 .LVL193
     /tmp/cc3VP32y.s:1762   .text:00000736 .LFB21
     /tmp/cc3VP32y.s:1799   .text:00000764 .LFE21
     /tmp/cc3VP32y.s:188    .text:0000008c .LFB20
     /tmp/cc3VP32y.s:1757   .text:00000736 .LFE20
     /tmp/cc3VP32y.s:226    .text:000000a0 .LBB58
     /tmp/cc3VP32y.s:229    .text:000000a0 .LBE58
     /tmp/cc3VP32y.s:241    .text:000000ae .LBB59
     /tmp/cc3VP32y.s:610    .text:0000022e .LBE59
     /tmp/cc3VP32y.s:5760   .debug_loclists:000001b6 .LLST4
     /tmp/cc3VP32y.s:5755   .debug_loclists:000001b2 .LVUS4
     /tmp/cc3VP32y.s:5791   .debug_loclists:000001d7 .LLST5
     /tmp/cc3VP32y.s:5772   .debug_loclists:000001c5 .LVUS5
     /tmp/cc3VP32y.s:5877   .debug_loclists:0000023d .LLST6
     /tmp/cc3VP32y.s:5872   .debug_loclists:00000239 .LVUS6
     /tmp/cc3VP32y.s:249    .text:000000b0 .LBI60
     /tmp/cc3VP32y.s:248    .text:000000b0 .LBB60
     /tmp/cc3VP32y.s:263    .text:000000bc .LBE60
     /tmp/cc3VP32y.s:551    .text:00000216 .LBI62
     /tmp/cc3VP32y.s:6837   .debug_rnglists:0000000c .LLRL7
     /tmp/cc3VP32y.s:5906   .debug_loclists:0000025c .LLST8
     /tmp/cc3VP32y.s:5903   .debug_loclists:0000025a .LVUS8
     /tmp/cc3VP32y.s:5918   .debug_loclists:0000026b .LLST9
     /tmp/cc3VP32y.s:5915   .debug_loclists:00000269 .LVUS9
     /tmp/cc3VP32y.s:5936   .debug_loclists:00000280 .LLST10
     /tmp/cc3VP32y.s:5927   .debug_loclists:00000278 .LVUS10
     /tmp/cc3VP32y.s:582    .text:0000021e .LBI64
     /tmp/cc3VP32y.s:6845   .debug_rnglists:00000017 .LLRL11
     /tmp/cc3VP32y.s:5975   .debug_loclists:000002ad .LLST12
     /tmp/cc3VP32y.s:5972   .debug_loclists:000002ab .LVUS12
     /tmp/cc3VP32y.s:282    .text:000000d0 .LVL19
     /tmp/cc3VP32y.s:308    .text:000000ec .LVL23
     /tmp/cc3VP32y.s:320    .text:000000fc .LVL24
     /tmp/cc3VP32y.s:337    .text:0000010e .LVL26
     /tmp/cc3VP32y.s:344    .text:00000118 .LVL27
     /tmp/cc3VP32y.s:348    .text:0000011e .LVL28
     /tmp/cc3VP32y.s:353    .text:00000124 .LVL29
     /tmp/cc3VP32y.s:360    .text:0000012c .LVL30
     /tmp/cc3VP32y.s:390    .text:0000014e .LVL33
     /tmp/cc3VP32y.s:415    .text:0000016e .LVL36
     /tmp/cc3VP32y.s:430    .text:00000182 .LVL37
     /tmp/cc3VP32y.s:444    .text:0000018e .LVL40
     /tmp/cc3VP32y.s:456    .text:000001a0 .LVL41
     /tmp/cc3VP32y.s:464    .text:000001ac .LVL42
     /tmp/cc3VP32y.s:495    .text:000001d0 .LVL46
     /tmp/cc3VP32y.s:500    .text:000001d6 .LVL47
     /tmp/cc3VP32y.s:506    .text:000001dc .LVL48
     /tmp/cc3VP32y.s:519    .text:000001f0 .LVL49
     /tmp/cc3VP32y.s:523    .text:000001f6 .LVL50
     /tmp/cc3VP32y.s:527    .text:000001fc .LVL51
     /tmp/cc3VP32y.s:537    .text:0000020a .LVL52
     /tmp/cc3VP32y.s:542    .text:00000210 .LVL53
     /tmp/cc3VP32y.s:548    .text:00000216 .LVL54
     /tmp/cc3VP32y.s:612    .text:0000022e .LBB70
     /tmp/cc3VP32y.s:615    .text:0000022e .LBE70
     /tmp/cc3VP32y.s:628    .text:0000023c .LBB71
     /tmp/cc3VP32y.s:631    .text:0000023c .LBE71
     /tmp/cc3VP32y.s:6853   .debug_rnglists:00000022 .LLRL13
     /tmp/cc3VP32y.s:6045   .debug_loclists:000002f4 .LLST14
     /tmp/cc3VP32y.s:5984   .debug_loclists:000002b8 .LVUS14
     /tmp/cc3VP32y.s:6252   .debug_loclists:000003fd .LLST15
     /tmp/cc3VP32y.s:6211   .debug_loclists:000003d5 .LVUS15
     /tmp/cc3VP32y.s:6367   .debug_loclists:0000049c .LLST16
     /tmp/cc3VP32y.s:6356   .debug_loclists:00000492 .LVUS16
     /tmp/cc3VP32y.s:6411   .debug_loclists:000004d0 .LLST17
     /tmp/cc3VP32y.s:6396   .debug_loclists:000004c2 .LVUS17
     /tmp/cc3VP32y.s:6475   .debug_loclists:0000051c .LLST18
     /tmp/cc3VP32y.s:6454   .debug_loclists:00000508 .LVUS18
     /tmp/cc3VP32y.s:6553   .debug_loclists:0000057c .LLST19
     /tmp/cc3VP32y.s:6540   .debug_loclists:00000570 .LVUS19
     /tmp/cc3VP32y.s:6622   .debug_loclists:000005cb .LLST20
     /tmp/cc3VP32y.s:6607   .debug_loclists:000005bd .LVUS20
     /tmp/cc3VP32y.s:648    .text:0000024e .LVL62
     /tmp/cc3VP32y.s:657    .text:0000025c .LVL63
     /tmp/cc3VP32y.s:677    .text:00000272 .LVL65
     /tmp/cc3VP32y.s:701    .text:00000294 .LVL67
     /tmp/cc3VP32y.s:752    .text:000002c6 .LVL70
     /tmp/cc3VP32y.s:772    .text:000002d8 .LVL74
     /tmp/cc3VP32y.s:833    .text:00000312 .LVL82
     /tmp/cc3VP32y.s:905    .text:0000037c .LVL89
     /tmp/cc3VP32y.s:971    .text:000003ce .LVL96
     /tmp/cc3VP32y.s:983    .text:000003d8 .LVL98
     /tmp/cc3VP32y.s:1004   .text:000003ec .LVL102
     /tmp/cc3VP32y.s:1036   .text:0000040c .LVL107
     /tmp/cc3VP32y.s:1114   .text:0000045a .LBI73
     /tmp/cc3VP32y.s:6861   .debug_rnglists:0000002d .LLRL21
     /tmp/cc3VP32y.s:1146   .text:0000047a .LVL115
     /tmp/cc3VP32y.s:1167   .text:0000048e .LVL116
     /tmp/cc3VP32y.s:1188   .text:000004a4 .LVL117
     /tmp/cc3VP32y.s:1210   .text:000004ba .LVL118
     /tmp/cc3VP32y.s:1232   .text:000004d0 .LVL119
     /tmp/cc3VP32y.s:1266   .text:000004f6 .LVL120
     /tmp/cc3VP32y.s:1304   .text:0000052e .LVL121
     /tmp/cc3VP32y.s:1333   .text:00000552 .LVL122
     /tmp/cc3VP32y.s:1361   .text:00000578 .LVL123
     /tmp/cc3VP32y.s:1398   .text:000005ae .LVL124
     /tmp/cc3VP32y.s:1419   .text:000005c4 .LVL125
     /tmp/cc3VP32y.s:1473   .text:00000612 .LVL126
     /tmp/cc3VP32y.s:240    .text:000000ae .LVL16
     /tmp/cc3VP32y.s:626    .text:0000023c .LVL60
     /tmp/cc3VP32y.s:642    .text:0000024a .LVL61
     /tmp/cc3VP32y.s:14     .text:00000000 .LFB16
     /tmp/cc3VP32y.s:115    .text:00000064 .LFE16
     /tmp/cc3VP32y.s:6693   .debug_loclists:0000061e .LLST0
     /tmp/cc3VP32y.s:6686   .debug_loclists:00000618 .LVUS0
     /tmp/cc3VP32y.s:6718   .debug_loclists:00000635 .LLST1
     /tmp/cc3VP32y.s:6713   .debug_loclists:00000631 .LVUS1
     /tmp/cc3VP32y.s:6753   .debug_loclists:00000656 .LLST2
     /tmp/cc3VP32y.s:6744   .debug_loclists:0000064e .LVUS2
     /tmp/cc3VP32y.s:6795   .debug_loclists:0000067e .LLST3
     /tmp/cc3VP32y.s:6788   .debug_loclists:00000678 .LVUS3
     /tmp/cc3VP32y.s:45     .text:00000016 .LVL2
     /tmp/cc3VP32y.s:50     .text:0000001e .LVL3
     /tmp/cc3VP32y.s:54     .text:00000024 .LVL4
     /tmp/cc3VP32y.s:58     .text:0000002a .LVL5
     /tmp/cc3VP32y.s:62     .text:00000030 .LVL6
     /tmp/cc3VP32y.s:66     .text:00000036 .LVL7
     /tmp/cc3VP32y.s:83     .text:00000048 .LVL8
     /tmp/cc3VP32y.s:93     .text:00000050 .LVL10
     /tmp/cc3VP32y.s:119    .text:00000064 .LFB15
     /tmp/cc3VP32y.s:149    .text:00000078 .LFE15
     /tmp/cc3VP32y.s:129    .text:00000066 .LBB24
     /tmp/cc3VP32y.s:132    .text:00000066 .LBE24
     /tmp/cc3VP32y.s:141    .text:00000072 .LVL14
     /tmp/cc3VP32y.s:153    .text:00000078 .LFB14
     /tmp/cc3VP32y.s:183    .text:0000008c .LFE14
     /tmp/cc3VP32y.s:163    .text:0000007a .LBB25
     /tmp/cc3VP32y.s:166    .text:0000007a .LBE25
     /tmp/cc3VP32y.s:175    .text:00000086 .LVL15
     /tmp/cc3VP32y.s:2311   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
spi_xchg
panic
log_boot_P
spi_fast
__tablejump2__
spi_tx_try
spi_rx_try
spi_xchg_try
__do_clear_bss
