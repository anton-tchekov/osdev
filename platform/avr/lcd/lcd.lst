   1               		.file	"lcd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "lcd/lcd.c"
  12               	_lcd_write_data:
  13               	.LVL0:
  14               	.LFB15:
  15               		.file 1 "lcd/lcd.c"
   1:lcd/lcd.c     **** /**
   2:lcd/lcd.c     ****  * @file    lcd.c
   3:lcd/lcd.c     ****  * @author  Anton Tchekov
   4:lcd/lcd.c     ****  * @version 0.2
   5:lcd/lcd.c     ****  * @date    17.05.2023
   6:lcd/lcd.c     ****  */
   7:lcd/lcd.c     **** 
   8:lcd/lcd.c     **** #include <lcd.h>
   9:lcd/lcd.c     **** #include <logger.h>
  10:lcd/lcd.c     **** #include <spi.h>
  11:lcd/lcd.c     **** #include <gpio.h>
  12:lcd/lcd.c     **** #include <avr/pgmspace.h>
  13:lcd/lcd.c     **** #include <util/delay.h>
  14:lcd/lcd.c     **** 
  15:lcd/lcd.c     **** enum
  16:lcd/lcd.c     **** {
  17:lcd/lcd.c     **** 	L2R_U2D,
  18:lcd/lcd.c     **** 	L2R_D2U,
  19:lcd/lcd.c     **** 	R2L_U2D,
  20:lcd/lcd.c     **** 	R2L_D2U,
  21:lcd/lcd.c     **** 	U2D_L2R,
  22:lcd/lcd.c     **** 	U2D_R2L,
  23:lcd/lcd.c     **** 	D2U_L2R,
  24:lcd/lcd.c     **** 	D2U_R2L
  25:lcd/lcd.c     **** };
  26:lcd/lcd.c     **** 
  27:lcd/lcd.c     **** #define SCAN_DIR       L2R_U2D
  28:lcd/lcd.c     **** 
  29:lcd/lcd.c     **** /* --- PRIVATE --- */
  30:lcd/lcd.c     **** static void _lcd_reset(void)
  31:lcd/lcd.c     **** {
  32:lcd/lcd.c     **** 	LCD_RST_1;
  33:lcd/lcd.c     **** 	_delay_ms(500);
  34:lcd/lcd.c     **** 	LCD_RST_0;
  35:lcd/lcd.c     **** 	_delay_ms(500);
  36:lcd/lcd.c     **** 	LCD_RST_1;
  37:lcd/lcd.c     **** 	_delay_ms(500);
  38:lcd/lcd.c     **** }
  39:lcd/lcd.c     **** 
  40:lcd/lcd.c     **** static void _lcd_write_reg(u8 reg)
  41:lcd/lcd.c     **** {
  42:lcd/lcd.c     **** 	LCD_DC_0;
  43:lcd/lcd.c     **** 	LCD_CS_0;
  44:lcd/lcd.c     **** 	spi_xchg(reg);
  45:lcd/lcd.c     **** 	LCD_CS_1;
  46:lcd/lcd.c     **** }
  47:lcd/lcd.c     **** 
  48:lcd/lcd.c     **** static void _lcd_write_data(u8 data)
  49:lcd/lcd.c     **** {
  16               		.loc 1 49 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 49 1 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 1 */
  25               	.L__stack_usage = 1
  26 0002 C82F      		mov r28,r24
  50:lcd/lcd.c     **** 	LCD_DC_1;
  27               		.loc 1 50 2 is_stmt 1 view .LVU2
  28 0004 419A      		sbi 0x8,1
  51:lcd/lcd.c     **** 	LCD_CS_0;
  29               		.loc 1 51 2 view .LVU3
  30 0006 4098      		cbi 0x8,0
  52:lcd/lcd.c     **** 	spi_xchg(0);
  31               		.loc 1 52 2 view .LVU4
  32 0008 80E0      		ldi r24,0
  33               	.LVL1:
  34               		.loc 1 52 2 is_stmt 0 view .LVU5
  35 000a 0E94 0000 		call spi_xchg
  36               	.LVL2:
  53:lcd/lcd.c     **** 	spi_xchg(data);
  37               		.loc 1 53 2 is_stmt 1 view .LVU6
  38 000e 8C2F      		mov r24,r28
  39 0010 0E94 0000 		call spi_xchg
  40               	.LVL3:
  54:lcd/lcd.c     **** 	LCD_CS_1;
  41               		.loc 1 54 2 view .LVU7
  42 0014 409A      		sbi 0x8,0
  43               	/* epilogue start */
  55:lcd/lcd.c     **** }
  44               		.loc 1 55 1 is_stmt 0 view .LVU8
  45 0016 CF91      		pop r28
  46               	.LVL4:
  47               		.loc 1 55 1 view .LVU9
  48 0018 0895      		ret
  49               		.cfi_endproc
  50               	.LFE15:
  53               	_lcd_write_reg:
  54               	.LVL5:
  55               	.LFB14:
  41:lcd/lcd.c     **** 	LCD_DC_0;
  56               		.loc 1 41 1 is_stmt 1 view -0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  42:lcd/lcd.c     **** 	LCD_CS_0;
  62               		.loc 1 42 2 view .LVU11
  63 001a 4198      		cbi 0x8,1
  43:lcd/lcd.c     **** 	spi_xchg(reg);
  64               		.loc 1 43 2 view .LVU12
  65 001c 4098      		cbi 0x8,0
  44:lcd/lcd.c     **** 	LCD_CS_1;
  66               		.loc 1 44 2 view .LVU13
  67 001e 0E94 0000 		call spi_xchg
  68               	.LVL6:
  45:lcd/lcd.c     **** }
  69               		.loc 1 45 2 view .LVU14
  70 0022 409A      		sbi 0x8,0
  71               	/* epilogue start */
  46:lcd/lcd.c     **** 
  72               		.loc 1 46 1 is_stmt 0 view .LVU15
  73 0024 0895      		ret
  74               		.cfi_endproc
  75               	.LFE14:
  77               	.global	lcd_backlight
  79               	lcd_backlight:
  80               	.LVL7:
  81               	.LFB21:
  56:lcd/lcd.c     **** 
  57:lcd/lcd.c     **** static void _lcd_window_start(u16 x, u16 y, u16 w, u16 h)
  58:lcd/lcd.c     **** {
  59:lcd/lcd.c     **** 	u16 x_end, y_end;
  60:lcd/lcd.c     **** 
  61:lcd/lcd.c     **** 	x_end = x + w - 1;
  62:lcd/lcd.c     **** 	y_end = y + h - 1;
  63:lcd/lcd.c     **** 
  64:lcd/lcd.c     **** 	_lcd_write_reg(0x2A);
  65:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
  66:lcd/lcd.c     **** 	_lcd_write_data(x);
  67:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
  68:lcd/lcd.c     **** 	_lcd_write_data(x_end);
  69:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
  70:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
  71:lcd/lcd.c     **** 	_lcd_write_data(y);
  72:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
  73:lcd/lcd.c     **** 	_lcd_write_data(y_end);
  74:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
  75:lcd/lcd.c     **** 	LCD_DC_1;
  76:lcd/lcd.c     **** 	LCD_CS_0;
  77:lcd/lcd.c     **** }
  78:lcd/lcd.c     **** 
  79:lcd/lcd.c     **** static inline void _lcd_pixel(u16 data)
  80:lcd/lcd.c     **** {
  81:lcd/lcd.c     **** 	spi_xchg(data >> 8);
  82:lcd/lcd.c     **** 	spi_xchg(data);
  83:lcd/lcd.c     **** }
  84:lcd/lcd.c     **** 
  85:lcd/lcd.c     **** static inline void _lcd_window_end(void)
  86:lcd/lcd.c     **** {
  87:lcd/lcd.c     **** 	LCD_CS_1;
  88:lcd/lcd.c     **** }
  89:lcd/lcd.c     **** 
  90:lcd/lcd.c     **** static void _lcd_init_reg(void)
  91:lcd/lcd.c     **** {
  92:lcd/lcd.c     **** 	_lcd_write_reg(0xF9);
  93:lcd/lcd.c     **** 	_lcd_write_data(0x00);
  94:lcd/lcd.c     **** 	_lcd_write_data(0x08);
  95:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
  96:lcd/lcd.c     **** 	_lcd_write_data(0x19);
  97:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
  98:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
  99:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 100:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 101:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 102:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 103:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 104:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 105:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 106:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 107:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 108:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 109:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 110:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 111:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 112:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 113:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 114:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 115:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 116:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 117:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 118:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 119:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 120:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 121:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 122:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 123:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 124:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 125:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 126:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 127:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 128:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 129:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 130:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 131:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 132:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 133:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 134:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 135:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 136:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 137:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 138:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 139:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 140:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 141:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 142:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 143:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 144:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 145:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 146:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 147:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 148:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 149:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 150:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 151:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 152:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 153:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 154:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 155:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 156:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 157:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 158:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 159:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 160:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 161:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 162:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 163:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 164:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 165:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 166:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 167:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 168:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 169:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 170:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 171:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 172:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 173:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 174:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 175:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 176:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 177:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 178:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 179:lcd/lcd.c     **** }
 180:lcd/lcd.c     **** 
 181:lcd/lcd.c     **** static void _lcd_set_gram_scan_dir(u8 scan_dir)
 182:lcd/lcd.c     **** {
 183:lcd/lcd.c     **** 	u16 a, b;
 184:lcd/lcd.c     **** 	switch(scan_dir)
 185:lcd/lcd.c     **** 	{
 186:lcd/lcd.c     **** 	case L2R_U2D:
 187:lcd/lcd.c     **** 		a = 0x08;
 188:lcd/lcd.c     **** 		b = 0x22;
 189:lcd/lcd.c     **** 		break;
 190:lcd/lcd.c     **** 
 191:lcd/lcd.c     **** 	case L2R_D2U:
 192:lcd/lcd.c     **** 		a = 0x08;
 193:lcd/lcd.c     **** 		b = 0x62;
 194:lcd/lcd.c     **** 		break;
 195:lcd/lcd.c     **** 
 196:lcd/lcd.c     **** 	case R2L_U2D:
 197:lcd/lcd.c     **** 		a = 0x08;
 198:lcd/lcd.c     **** 		b = 0x02;
 199:lcd/lcd.c     **** 		break;
 200:lcd/lcd.c     **** 
 201:lcd/lcd.c     **** 	case R2L_D2U:
 202:lcd/lcd.c     **** 		a = 0x08;
 203:lcd/lcd.c     **** 		b = 0x42;
 204:lcd/lcd.c     **** 		break;
 205:lcd/lcd.c     **** 
 206:lcd/lcd.c     **** 	case U2D_L2R:
 207:lcd/lcd.c     **** 		a = 0x28;
 208:lcd/lcd.c     **** 		b = 0x22;
 209:lcd/lcd.c     **** 		break;
 210:lcd/lcd.c     **** 
 211:lcd/lcd.c     **** 	case U2D_R2L:
 212:lcd/lcd.c     **** 		a = 0x28;
 213:lcd/lcd.c     **** 		b = 0x02;
 214:lcd/lcd.c     **** 		break;
 215:lcd/lcd.c     **** 
 216:lcd/lcd.c     **** 	case D2U_L2R:
 217:lcd/lcd.c     **** 		a = 0x28;
 218:lcd/lcd.c     **** 		b = 0x62;
 219:lcd/lcd.c     **** 		break;
 220:lcd/lcd.c     **** 
 221:lcd/lcd.c     **** 	case D2U_R2L:
 222:lcd/lcd.c     **** 		a = 0x28;
 223:lcd/lcd.c     **** 		b = 0x42;
 224:lcd/lcd.c     **** 		break;
 225:lcd/lcd.c     **** 	}
 226:lcd/lcd.c     **** 
 227:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 228:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 229:lcd/lcd.c     **** 	_lcd_write_data(b);
 230:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 231:lcd/lcd.c     **** 	_lcd_write_data(a);
 232:lcd/lcd.c     **** }
 233:lcd/lcd.c     **** 
 234:lcd/lcd.c     **** /* --- PUBLIC --- */
 235:lcd/lcd.c     **** void lcd_backlight(u8 value)
 236:lcd/lcd.c     **** {
  82               		.loc 1 236 1 is_stmt 1 view -0
  83               		.cfi_startproc
  84               	/* prologue: function */
  85               	/* frame size = 0 */
  86               	/* stack size = 0 */
  87               	.L__stack_usage = 0
 237:lcd/lcd.c     **** 	/* TODO: Write PWM Value */
 238:lcd/lcd.c     **** 	(void)value;
  88               		.loc 1 238 2 view .LVU17
  89               	/* epilogue start */
 239:lcd/lcd.c     **** }
  90               		.loc 1 239 1 is_stmt 0 view .LVU18
  91 0026 0895      		ret
  92               		.cfi_endproc
  93               	.LFE21:
  95               	.global	lcd_rect
  97               	lcd_rect:
  98               	.LVL8:
  99               	.LFB23:
 240:lcd/lcd.c     **** 
 241:lcd/lcd.c     **** void lcd_init(u8 backlight, RGB565 bg)
 242:lcd/lcd.c     **** {
 243:lcd/lcd.c     **** 	/* Initialize LCD */
 244:lcd/lcd.c     **** 	log_boot_P(PSTR("LCD driver starting"));
 245:lcd/lcd.c     **** 	spi_fast();
 246:lcd/lcd.c     **** 	_lcd_reset();
 247:lcd/lcd.c     **** 	lcd_backlight(backlight);
 248:lcd/lcd.c     **** 	_lcd_init_reg();
 249:lcd/lcd.c     **** 	_lcd_set_gram_scan_dir(SCAN_DIR);
 250:lcd/lcd.c     **** 	_delay_ms(200);
 251:lcd/lcd.c     **** 	_lcd_write_reg(0x11);
 252:lcd/lcd.c     **** 	_delay_ms(120);
 253:lcd/lcd.c     **** 	_lcd_write_reg(0x29);
 254:lcd/lcd.c     **** 
 255:lcd/lcd.c     **** 	lcd_rect(0, 0, LCD_WIDTH, LCD_HEIGHT, bg);
 256:lcd/lcd.c     **** 
 257:lcd/lcd.c     **** 	log_boot_P(PSTR("LCD driver initialized"));
 258:lcd/lcd.c     **** }
 259:lcd/lcd.c     **** 
 260:lcd/lcd.c     **** void lcd_rect(u16 x, u16 y, u16 w, u16 h, RGB565 color)
 261:lcd/lcd.c     **** {
 100               		.loc 1 261 1 is_stmt 1 view -0
 101               		.cfi_startproc
 102               		.loc 1 261 1 is_stmt 0 view .LVU20
 103 0028 6F92      		push r6
 104               		.cfi_def_cfa_offset 3
 105               		.cfi_offset 6, -2
 106 002a 7F92      		push r7
 107               		.cfi_def_cfa_offset 4
 108               		.cfi_offset 7, -3
 109 002c 8F92      		push r8
 110               		.cfi_def_cfa_offset 5
 111               		.cfi_offset 8, -4
 112 002e 9F92      		push r9
 113               		.cfi_def_cfa_offset 6
 114               		.cfi_offset 9, -5
 115 0030 AF92      		push r10
 116               		.cfi_def_cfa_offset 7
 117               		.cfi_offset 10, -6
 118 0032 BF92      		push r11
 119               		.cfi_def_cfa_offset 8
 120               		.cfi_offset 11, -7
 121 0034 CF92      		push r12
 122               		.cfi_def_cfa_offset 9
 123               		.cfi_offset 12, -8
 124 0036 DF92      		push r13
 125               		.cfi_def_cfa_offset 10
 126               		.cfi_offset 13, -9
 127 0038 EF92      		push r14
 128               		.cfi_def_cfa_offset 11
 129               		.cfi_offset 14, -10
 130 003a FF92      		push r15
 131               		.cfi_def_cfa_offset 12
 132               		.cfi_offset 15, -11
 133 003c 0F93      		push r16
 134               		.cfi_def_cfa_offset 13
 135               		.cfi_offset 16, -12
 136 003e 1F93      		push r17
 137               		.cfi_def_cfa_offset 14
 138               		.cfi_offset 17, -13
 139 0040 CF93      		push r28
 140               		.cfi_def_cfa_offset 15
 141               		.cfi_offset 28, -14
 142 0042 DF93      		push r29
 143               		.cfi_def_cfa_offset 16
 144               		.cfi_offset 29, -15
 145               	/* prologue: function */
 146               	/* frame size = 0 */
 147               	/* stack size = 14 */
 148               	.L__stack_usage = 14
 149 0044 7C01      		movw r14,r24
 150 0046 EB01      		movw r28,r22
 151 0048 5A01      		movw r10,r20
 152 004a 6901      		movw r12,r18
 262:lcd/lcd.c     **** 	u16 w0, h0;
 153               		.loc 1 262 2 is_stmt 1 view .LVU21
 263:lcd/lcd.c     **** 
 264:lcd/lcd.c     **** 	spi_fast();
 154               		.loc 1 264 2 view .LVU22
 155 004c 0E94 0000 		call spi_fast
 156               	.LVL9:
 265:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 157               		.loc 1 265 2 view .LVU23
 158               	.LBB60:
 159               	.LBI60:
  57:lcd/lcd.c     **** {
 160               		.loc 1 57 13 view .LVU24
 161               	.LBB61:
  59:lcd/lcd.c     **** 
 162               		.loc 1 59 2 view .LVU25
  61:lcd/lcd.c     **** 	y_end = y + h - 1;
 163               		.loc 1 61 2 view .LVU26
  61:lcd/lcd.c     **** 	y_end = y + h - 1;
 164               		.loc 1 61 8 is_stmt 0 view .LVU27
 165 0050 3501      		movw r6,r10
 166 0052 81E0      		ldi r24,1
 167 0054 681A      		sub r6,r24
 168 0056 7108      		sbc r7,__zero_reg__
 169 0058 6E0C      		add r6,r14
 170 005a 7F1C      		adc r7,r15
 171               	.LVL10:
  62:lcd/lcd.c     **** 
 172               		.loc 1 62 2 is_stmt 1 view .LVU28
  62:lcd/lcd.c     **** 
 173               		.loc 1 62 8 is_stmt 0 view .LVU29
 174 005c 4601      		movw r8,r12
 175 005e 81E0      		ldi r24,1
 176 0060 881A      		sub r8,r24
 177 0062 9108      		sbc r9,__zero_reg__
 178 0064 8C0E      		add r8,r28
 179 0066 9D1E      		adc r9,r29
 180               	.LVL11:
  64:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
 181               		.loc 1 64 2 is_stmt 1 view .LVU30
 182 0068 8AE2      		ldi r24,lo8(42)
 183 006a 0E94 0000 		call _lcd_write_reg
 184               	.LVL12:
  65:lcd/lcd.c     **** 	_lcd_write_data(x);
 185               		.loc 1 65 2 view .LVU31
 186 006e 8F2D      		mov r24,r15
 187 0070 0E94 0000 		call _lcd_write_data
 188               	.LVL13:
  66:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
 189               		.loc 1 66 2 view .LVU32
 190 0074 8E2D      		mov r24,r14
 191 0076 0E94 0000 		call _lcd_write_data
 192               	.LVL14:
  67:lcd/lcd.c     **** 	_lcd_write_data(x_end);
 193               		.loc 1 67 2 view .LVU33
 194 007a 872D      		mov r24,r7
 195 007c 0E94 0000 		call _lcd_write_data
 196               	.LVL15:
  68:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
 197               		.loc 1 68 2 view .LVU34
 198 0080 862D      		mov r24,r6
 199 0082 0E94 0000 		call _lcd_write_data
 200               	.LVL16:
  69:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
 201               		.loc 1 69 2 view .LVU35
 202 0086 8BE2      		ldi r24,lo8(43)
 203 0088 0E94 0000 		call _lcd_write_reg
 204               	.LVL17:
  70:lcd/lcd.c     **** 	_lcd_write_data(y);
 205               		.loc 1 70 2 view .LVU36
 206 008c 8D2F      		mov r24,r29
 207 008e 0E94 0000 		call _lcd_write_data
 208               	.LVL18:
  71:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
 209               		.loc 1 71 2 view .LVU37
 210 0092 8C2F      		mov r24,r28
 211 0094 0E94 0000 		call _lcd_write_data
 212               	.LVL19:
  72:lcd/lcd.c     **** 	_lcd_write_data(y_end);
 213               		.loc 1 72 2 view .LVU38
 214 0098 892D      		mov r24,r9
 215 009a 0E94 0000 		call _lcd_write_data
 216               	.LVL20:
  73:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
 217               		.loc 1 73 2 view .LVU39
 218 009e 882D      		mov r24,r8
 219 00a0 0E94 0000 		call _lcd_write_data
 220               	.LVL21:
  74:lcd/lcd.c     **** 	LCD_DC_1;
 221               		.loc 1 74 2 view .LVU40
 222 00a4 8CE2      		ldi r24,lo8(44)
 223 00a6 0E94 0000 		call _lcd_write_reg
 224               	.LVL22:
  75:lcd/lcd.c     **** 	LCD_CS_0;
 225               		.loc 1 75 2 view .LVU41
 226 00aa 419A      		sbi 0x8,1
  76:lcd/lcd.c     **** }
 227               		.loc 1 76 2 view .LVU42
 228 00ac 4098      		cbi 0x8,0
 229               	.LBE61:
 230               	.LBE60:
 266:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 231               		.loc 1 266 9 is_stmt 0 view .LVU43
 232 00ae C0E0      		ldi r28,0
 233 00b0 D0E0      		ldi r29,0
 234               	.LVL23:
 235               	.L5:
 236               		.loc 1 266 17 is_stmt 1 discriminator 1 view .LVU44
 237 00b2 CC15      		cp r28,r12
 238 00b4 DD05      		cpc r29,r13
 239 00b6 01F4      		brne .L8
 267:lcd/lcd.c     **** 	{
 268:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 269:lcd/lcd.c     **** 		{
 270:lcd/lcd.c     **** 			_lcd_pixel(color);
 271:lcd/lcd.c     **** 		}
 272:lcd/lcd.c     **** 	}
 273:lcd/lcd.c     **** 
 274:lcd/lcd.c     **** 	_lcd_window_end();
 240               		.loc 1 274 2 view .LVU45
 241               	.LBB62:
 242               	.LBI62:
  85:lcd/lcd.c     **** {
 243               		.loc 1 85 20 view .LVU46
 244               	.LBB63:
  87:lcd/lcd.c     **** }
 245               		.loc 1 87 2 view .LVU47
 246 00b8 409A      		sbi 0x8,0
 247               	/* epilogue start */
 248               	.LBE63:
 249               	.LBE62:
 275:lcd/lcd.c     **** }
 250               		.loc 1 275 1 is_stmt 0 view .LVU48
 251 00ba DF91      		pop r29
 252 00bc CF91      		pop r28
 253               	.LVL24:
 254               		.loc 1 275 1 view .LVU49
 255 00be 1F91      		pop r17
 256 00c0 0F91      		pop r16
 257               	.LVL25:
 258               		.loc 1 275 1 view .LVU50
 259 00c2 FF90      		pop r15
 260 00c4 EF90      		pop r14
 261 00c6 DF90      		pop r13
 262 00c8 CF90      		pop r12
 263               	.LVL26:
 264               		.loc 1 275 1 view .LVU51
 265 00ca BF90      		pop r11
 266 00cc AF90      		pop r10
 267               	.LVL27:
 268               		.loc 1 275 1 view .LVU52
 269 00ce 9F90      		pop r9
 270 00d0 8F90      		pop r8
 271 00d2 7F90      		pop r7
 272 00d4 6F90      		pop r6
 273 00d6 0895      		ret
 274               	.LVL28:
 275               	.L6:
 270:lcd/lcd.c     **** 		}
 276               		.loc 1 270 4 is_stmt 1 view .LVU53
 277               	.LBB64:
 278               	.LBI64:
  79:lcd/lcd.c     **** {
 279               		.loc 1 79 20 view .LVU54
 280               	.LBB65:
  81:lcd/lcd.c     **** 	spi_xchg(data);
 281               		.loc 1 81 2 view .LVU55
 282 00d8 812F      		mov r24,r17
 283 00da 0E94 0000 		call spi_xchg
 284               	.LVL29:
  82:lcd/lcd.c     **** }
 285               		.loc 1 82 2 view .LVU56
 286 00de 802F      		mov r24,r16
 287 00e0 0E94 0000 		call spi_xchg
 288               	.LVL30:
  82:lcd/lcd.c     **** }
 289               		.loc 1 82 2 is_stmt 0 view .LVU57
 290               	.LBE65:
 291               	.LBE64:
 268:lcd/lcd.c     **** 		{
 292               		.loc 1 268 23 is_stmt 1 view .LVU58
 293 00e4 8FEF      		ldi r24,-1
 294 00e6 E81A      		sub r14,r24
 295 00e8 F80A      		sbc r15,r24
 296               	.LVL31:
 297               	.L7:
 268:lcd/lcd.c     **** 		{
 298               		.loc 1 268 18 discriminator 1 view .LVU59
 299 00ea EA14      		cp r14,r10
 300 00ec FB04      		cpc r15,r11
 301 00ee 01F4      		brne .L6
 266:lcd/lcd.c     **** 	{
 302               		.loc 1 266 22 discriminator 2 view .LVU60
 303 00f0 2196      		adiw r28,1
 304               	.LVL32:
 266:lcd/lcd.c     **** 	{
 305               		.loc 1 266 22 is_stmt 0 discriminator 2 view .LVU61
 306 00f2 00C0      		rjmp .L5
 307               	.LVL33:
 308               	.L8:
 268:lcd/lcd.c     **** 		{
 309               		.loc 1 268 10 view .LVU62
 310 00f4 E12C      		mov r14,__zero_reg__
 311 00f6 F12C      		mov r15,__zero_reg__
 312 00f8 00C0      		rjmp .L7
 313               		.cfi_endproc
 314               	.LFE23:
 316               	.global	lcd_init
 318               	lcd_init:
 319               	.LVL34:
 320               	.LFB22:
 242:lcd/lcd.c     **** 	/* Initialize LCD */
 321               		.loc 1 242 1 is_stmt 1 view -0
 322               		.cfi_startproc
 242:lcd/lcd.c     **** 	/* Initialize LCD */
 323               		.loc 1 242 1 is_stmt 0 view .LVU64
 324 00fa 0F93      		push r16
 325               		.cfi_def_cfa_offset 3
 326               		.cfi_offset 16, -2
 327 00fc 1F93      		push r17
 328               		.cfi_def_cfa_offset 4
 329               		.cfi_offset 17, -3
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 2 */
 333               	.L__stack_usage = 2
 334 00fe 8B01      		movw r16,r22
 244:lcd/lcd.c     **** 	spi_fast();
 335               		.loc 1 244 2 is_stmt 1 view .LVU65
 336               	.LBB94:
 244:lcd/lcd.c     **** 	spi_fast();
 337               		.loc 1 244 13 view .LVU66
 244:lcd/lcd.c     **** 	spi_fast();
 338               		.loc 1 244 13 view .LVU67
 339               	.LBE94:
 244:lcd/lcd.c     **** 	spi_fast();
 340               		.loc 1 244 2 is_stmt 0 view .LVU68
 341 0100 80E0      		ldi r24,lo8(__c.1)
 342 0102 90E0      		ldi r25,hi8(__c.1)
 343               	.LVL35:
 244:lcd/lcd.c     **** 	spi_fast();
 344               		.loc 1 244 2 view .LVU69
 345 0104 9F93      		push r25
 346               		.cfi_def_cfa_offset 5
 347 0106 8F93      		push r24
 348               		.cfi_def_cfa_offset 6
 349 0108 0E94 0000 		call log_boot_P
 350               	.LVL36:
 245:lcd/lcd.c     **** 	_lcd_reset();
 351               		.loc 1 245 2 is_stmt 1 view .LVU70
 352 010c 0E94 0000 		call spi_fast
 353               	.LVL37:
 246:lcd/lcd.c     **** 	lcd_backlight(backlight);
 354               		.loc 1 246 2 view .LVU71
 355               	.LBB95:
 356               	.LBI95:
  30:lcd/lcd.c     **** {
 357               		.loc 1 30 13 view .LVU72
 358               	.LBB96:
  32:lcd/lcd.c     **** 	_delay_ms(500);
 359               		.loc 1 32 2 view .LVU73
 360 0110 5F9A      		sbi 0xb,7
  33:lcd/lcd.c     **** 	LCD_RST_0;
 361               		.loc 1 33 2 view .LVU74
 362               	.LVL38:
 363               	.LBB97:
 364               	.LBI97:
 365               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 366               		.loc 2 166 1 view .LVU75
 367               	.LBB98:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 368               		.loc 2 168 2 view .LVU76
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 369               		.loc 2 190 2 view .LVU77
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 370               		.loc 2 191 2 view .LVU78
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 371               		.loc 2 192 2 view .LVU79
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 372               		.loc 2 194 7 view .LVU80
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 373               		.loc 2 198 9 view .LVU81
 374               	.LBE98:
 375               	.LBE97:
  32:lcd/lcd.c     **** 	_delay_ms(500);
 376               		.loc 1 32 2 is_stmt 0 view .LVU82
 377 0112 0F90      		pop __tmp_reg__
 378 0114 0F90      		pop __tmp_reg__
 379               		.cfi_def_cfa_offset 4
 380 0116 88E8      		ldi r24,lo8(-120)
 381 0118 93E1      		ldi r25,lo8(19)
 382               	.LBB104:
 383               	.LBB103:
 384               	.LBB99:
 385               	.LBB100:
 386               		.file 3 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 387               		.loc 3 105 2 view .LVU83
 388 011a 20E9      		ldi r18,lo8(-112)
 389 011c 31E0      		ldi r19,lo8(1)
 390               	.LVL39:
 391               	.L10:
 392               		.loc 3 105 2 view .LVU84
 393               	.LBE100:
 394               	.LBE99:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 395               		.loc 2 201 4 is_stmt 1 view .LVU85
 396               	.LBB102:
 397               	.LBI99:
 103:/usr/avr/include/util/delay_basic.h **** {
 398               		.loc 3 103 1 view .LVU86
 399               	.LBB101:
 400               		.loc 3 105 2 view .LVU87
 401 011e F901      		movw r30,r18
 402               	/* #APP */
 403               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 404 0120 3197      		1: sbiw r30,1
 405 0122 01F4      		brne 1b
 406               	 ;  0 "" 2
 407               	.LVL40:
 408               		.loc 3 105 2 is_stmt 0 view .LVU88
 409               	/* #NOAPP */
 410               	.LBE101:
 411               	.LBE102:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 412               		.loc 2 202 4 is_stmt 1 view .LVU89
 198:/usr/avr/include/util/delay.h **** 		{
 413               		.loc 2 198 9 view .LVU90
 414 0124 0197      		sbiw r24,1
 415               	.LVL41:
 198:/usr/avr/include/util/delay.h **** 		{
 416               		.loc 2 198 9 is_stmt 0 view .LVU91
 417 0126 0097      		sbiw r24,0
 418 0128 01F4      		brne .L10
 419               	.LVL42:
 198:/usr/avr/include/util/delay.h **** 		{
 420               		.loc 2 198 9 view .LVU92
 421               	.LBE103:
 422               	.LBE104:
  34:lcd/lcd.c     **** 	_delay_ms(500);
 423               		.loc 1 34 2 is_stmt 1 view .LVU93
 424 012a 5F98      		cbi 0xb,7
  35:lcd/lcd.c     **** 	LCD_RST_1;
 425               		.loc 1 35 2 view .LVU94
 426               	.LVL43:
 427               	.LBB105:
 428               	.LBI105:
 166:/usr/avr/include/util/delay.h **** {
 429               		.loc 2 166 1 view .LVU95
 430               	.LBB106:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 431               		.loc 2 168 2 view .LVU96
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 432               		.loc 2 190 2 view .LVU97
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 433               		.loc 2 191 2 view .LVU98
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 434               		.loc 2 192 2 view .LVU99
 194:/usr/avr/include/util/delay.h **** 	{
 435               		.loc 2 194 7 view .LVU100
 198:/usr/avr/include/util/delay.h **** 		{
 436               		.loc 2 198 9 view .LVU101
 437               	.LBE106:
 438               	.LBE105:
  34:lcd/lcd.c     **** 	_delay_ms(500);
 439               		.loc 1 34 2 is_stmt 0 view .LVU102
 440 012c 88E8      		ldi r24,lo8(-120)
 441 012e 93E1      		ldi r25,lo8(19)
 442               	.LBB112:
 443               	.LBB111:
 444               	.LBB107:
 445               	.LBB108:
 446               		.loc 3 105 2 view .LVU103
 447 0130 20E9      		ldi r18,lo8(-112)
 448 0132 31E0      		ldi r19,lo8(1)
 449               	.LVL44:
 450               	.L11:
 451               		.loc 3 105 2 view .LVU104
 452               	.LBE108:
 453               	.LBE107:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 454               		.loc 2 201 4 is_stmt 1 view .LVU105
 455               	.LBB110:
 456               	.LBI107:
 103:/usr/avr/include/util/delay_basic.h **** {
 457               		.loc 3 103 1 view .LVU106
 458               	.LBB109:
 459               		.loc 3 105 2 view .LVU107
 460 0134 F901      		movw r30,r18
 461               	/* #APP */
 462               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 463 0136 3197      		1: sbiw r30,1
 464 0138 01F4      		brne 1b
 465               	 ;  0 "" 2
 466               	.LVL45:
 467               		.loc 3 105 2 is_stmt 0 view .LVU108
 468               	/* #NOAPP */
 469               	.LBE109:
 470               	.LBE110:
 471               		.loc 2 202 4 is_stmt 1 view .LVU109
 198:/usr/avr/include/util/delay.h **** 		{
 472               		.loc 2 198 9 view .LVU110
 473 013a 0197      		sbiw r24,1
 474               	.LVL46:
 198:/usr/avr/include/util/delay.h **** 		{
 475               		.loc 2 198 9 is_stmt 0 view .LVU111
 476 013c 0097      		sbiw r24,0
 477 013e 01F4      		brne .L11
 478               	.LVL47:
 198:/usr/avr/include/util/delay.h **** 		{
 479               		.loc 2 198 9 view .LVU112
 480               	.LBE111:
 481               	.LBE112:
  36:lcd/lcd.c     **** 	_delay_ms(500);
 482               		.loc 1 36 2 is_stmt 1 view .LVU113
 483 0140 5F9A      		sbi 0xb,7
  37:lcd/lcd.c     **** }
 484               		.loc 1 37 2 view .LVU114
 485               	.LVL48:
 486               	.LBB113:
 487               	.LBI113:
 166:/usr/avr/include/util/delay.h **** {
 488               		.loc 2 166 1 view .LVU115
 489               	.LBB114:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 490               		.loc 2 168 2 view .LVU116
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 491               		.loc 2 190 2 view .LVU117
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 492               		.loc 2 191 2 view .LVU118
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 493               		.loc 2 192 2 view .LVU119
 194:/usr/avr/include/util/delay.h **** 	{
 494               		.loc 2 194 7 view .LVU120
 198:/usr/avr/include/util/delay.h **** 		{
 495               		.loc 2 198 9 view .LVU121
 496               	.LBE114:
 497               	.LBE113:
  36:lcd/lcd.c     **** 	_delay_ms(500);
 498               		.loc 1 36 2 is_stmt 0 view .LVU122
 499 0142 88E8      		ldi r24,lo8(-120)
 500 0144 93E1      		ldi r25,lo8(19)
 501               	.LBB120:
 502               	.LBB119:
 503               	.LBB115:
 504               	.LBB116:
 505               		.loc 3 105 2 view .LVU123
 506 0146 20E9      		ldi r18,lo8(-112)
 507 0148 31E0      		ldi r19,lo8(1)
 508               	.LVL49:
 509               	.L12:
 510               		.loc 3 105 2 view .LVU124
 511               	.LBE116:
 512               	.LBE115:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 513               		.loc 2 201 4 is_stmt 1 view .LVU125
 514               	.LBB118:
 515               	.LBI115:
 103:/usr/avr/include/util/delay_basic.h **** {
 516               		.loc 3 103 1 view .LVU126
 517               	.LBB117:
 518               		.loc 3 105 2 view .LVU127
 519 014a F901      		movw r30,r18
 520               	/* #APP */
 521               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 522 014c 3197      		1: sbiw r30,1
 523 014e 01F4      		brne 1b
 524               	 ;  0 "" 2
 525               	.LVL50:
 526               		.loc 3 105 2 is_stmt 0 view .LVU128
 527               	/* #NOAPP */
 528               	.LBE117:
 529               	.LBE118:
 530               		.loc 2 202 4 is_stmt 1 view .LVU129
 198:/usr/avr/include/util/delay.h **** 		{
 531               		.loc 2 198 9 view .LVU130
 532 0150 0197      		sbiw r24,1
 533               	.LVL51:
 198:/usr/avr/include/util/delay.h **** 		{
 534               		.loc 2 198 9 is_stmt 0 view .LVU131
 535 0152 0097      		sbiw r24,0
 536 0154 01F4      		brne .L12
 537               	.LVL52:
 198:/usr/avr/include/util/delay.h **** 		{
 538               		.loc 2 198 9 view .LVU132
 539               	.LBE119:
 540               	.LBE120:
 541               	.LBE96:
 542               	.LBE95:
 247:lcd/lcd.c     **** 	_lcd_init_reg();
 543               		.loc 1 247 2 is_stmt 1 view .LVU133
 248:lcd/lcd.c     **** 	_lcd_set_gram_scan_dir(SCAN_DIR);
 544               		.loc 1 248 2 view .LVU134
 545               	.LBB121:
 546               	.LBI121:
  90:lcd/lcd.c     **** {
 547               		.loc 1 90 13 view .LVU135
 548               	.LBB122:
  92:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 549               		.loc 1 92 2 view .LVU136
 550 0156 89EF      		ldi r24,lo8(-7)
 551 0158 0E94 0000 		call _lcd_write_reg
 552               	.LVL53:
  93:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 553               		.loc 1 93 2 view .LVU137
 554 015c 80E0      		ldi r24,0
 555 015e 0E94 0000 		call _lcd_write_data
 556               	.LVL54:
  94:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
 557               		.loc 1 94 2 view .LVU138
 558 0162 88E0      		ldi r24,lo8(8)
 559 0164 0E94 0000 		call _lcd_write_data
 560               	.LVL55:
  95:lcd/lcd.c     **** 	_lcd_write_data(0x19);
 561               		.loc 1 95 2 view .LVU139
 562 0168 80EC      		ldi r24,lo8(-64)
 563 016a 0E94 0000 		call _lcd_write_reg
 564               	.LVL56:
  96:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
 565               		.loc 1 96 2 view .LVU140
 566 016e 89E1      		ldi r24,lo8(25)
 567 0170 0E94 0000 		call _lcd_write_data
 568               	.LVL57:
  97:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
 569               		.loc 1 97 2 view .LVU141
 570 0174 8AE1      		ldi r24,lo8(26)
 571 0176 0E94 0000 		call _lcd_write_data
 572               	.LVL58:
  98:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 573               		.loc 1 98 2 view .LVU142
 574 017a 81EC      		ldi r24,lo8(-63)
 575 017c 0E94 0000 		call _lcd_write_reg
 576               	.LVL59:
  99:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 577               		.loc 1 99 2 view .LVU143
 578 0180 85E4      		ldi r24,lo8(69)
 579 0182 0E94 0000 		call _lcd_write_data
 580               	.LVL60:
 100:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 581               		.loc 1 100 2 view .LVU144
 582 0186 80E0      		ldi r24,0
 583 0188 0E94 0000 		call _lcd_write_data
 584               	.LVL61:
 101:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 585               		.loc 1 101 2 view .LVU145
 586 018c 82EC      		ldi r24,lo8(-62)
 587 018e 0E94 0000 		call _lcd_write_reg
 588               	.LVL62:
 102:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 589               		.loc 1 102 2 view .LVU146
 590 0192 83E3      		ldi r24,lo8(51)
 591 0194 0E94 0000 		call _lcd_write_data
 592               	.LVL63:
 103:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 593               		.loc 1 103 2 view .LVU147
 594 0198 85EC      		ldi r24,lo8(-59)
 595 019a 0E94 0000 		call _lcd_write_reg
 596               	.LVL64:
 104:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 597               		.loc 1 104 2 view .LVU148
 598 019e 80E0      		ldi r24,0
 599 01a0 0E94 0000 		call _lcd_write_data
 600               	.LVL65:
 105:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 601               		.loc 1 105 2 view .LVU149
 602 01a4 88E2      		ldi r24,lo8(40)
 603 01a6 0E94 0000 		call _lcd_write_data
 604               	.LVL66:
 106:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 605               		.loc 1 106 2 view .LVU150
 606 01aa 81EB      		ldi r24,lo8(-79)
 607 01ac 0E94 0000 		call _lcd_write_reg
 608               	.LVL67:
 107:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 609               		.loc 1 107 2 view .LVU151
 610 01b0 80EA      		ldi r24,lo8(-96)
 611 01b2 0E94 0000 		call _lcd_write_data
 612               	.LVL68:
 108:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 613               		.loc 1 108 2 view .LVU152
 614 01b6 81E1      		ldi r24,lo8(17)
 615 01b8 0E94 0000 		call _lcd_write_data
 616               	.LVL69:
 109:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 617               		.loc 1 109 2 view .LVU153
 618 01bc 84EB      		ldi r24,lo8(-76)
 619 01be 0E94 0000 		call _lcd_write_reg
 620               	.LVL70:
 110:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 621               		.loc 1 110 2 view .LVU154
 622 01c2 82E0      		ldi r24,lo8(2)
 623 01c4 0E94 0000 		call _lcd_write_data
 624               	.LVL71:
 111:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 625               		.loc 1 111 2 view .LVU155
 626 01c8 86EB      		ldi r24,lo8(-74)
 627 01ca 0E94 0000 		call _lcd_write_reg
 628               	.LVL72:
 112:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 629               		.loc 1 112 2 view .LVU156
 630 01ce 80E0      		ldi r24,0
 631 01d0 0E94 0000 		call _lcd_write_data
 632               	.LVL73:
 113:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 633               		.loc 1 113 2 view .LVU157
 634 01d4 82E4      		ldi r24,lo8(66)
 635 01d6 0E94 0000 		call _lcd_write_data
 636               	.LVL74:
 114:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 637               		.loc 1 114 2 view .LVU158
 638 01da 8BE3      		ldi r24,lo8(59)
 639 01dc 0E94 0000 		call _lcd_write_data
 640               	.LVL75:
 115:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 641               		.loc 1 115 2 view .LVU159
 642 01e0 87EB      		ldi r24,lo8(-73)
 643 01e2 0E94 0000 		call _lcd_write_reg
 644               	.LVL76:
 116:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 645               		.loc 1 116 2 view .LVU160
 646 01e6 87E0      		ldi r24,lo8(7)
 647 01e8 0E94 0000 		call _lcd_write_data
 648               	.LVL77:
 117:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 649               		.loc 1 117 2 view .LVU161
 650 01ec 80EE      		ldi r24,lo8(-32)
 651 01ee 0E94 0000 		call _lcd_write_reg
 652               	.LVL78:
 118:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 653               		.loc 1 118 2 view .LVU162
 654 01f2 8FE1      		ldi r24,lo8(31)
 655 01f4 0E94 0000 		call _lcd_write_data
 656               	.LVL79:
 119:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 657               		.loc 1 119 2 view .LVU163
 658 01f8 85E2      		ldi r24,lo8(37)
 659 01fa 0E94 0000 		call _lcd_write_data
 660               	.LVL80:
 120:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 661               		.loc 1 120 2 view .LVU164
 662 01fe 82E2      		ldi r24,lo8(34)
 663 0200 0E94 0000 		call _lcd_write_data
 664               	.LVL81:
 121:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 665               		.loc 1 121 2 view .LVU165
 666 0204 8BE0      		ldi r24,lo8(11)
 667 0206 0E94 0000 		call _lcd_write_data
 668               	.LVL82:
 122:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 669               		.loc 1 122 2 view .LVU166
 670 020a 86E0      		ldi r24,lo8(6)
 671 020c 0E94 0000 		call _lcd_write_data
 672               	.LVL83:
 123:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 673               		.loc 1 123 2 view .LVU167
 674 0210 8AE0      		ldi r24,lo8(10)
 675 0212 0E94 0000 		call _lcd_write_data
 676               	.LVL84:
 124:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 677               		.loc 1 124 2 view .LVU168
 678 0216 8EE4      		ldi r24,lo8(78)
 679 0218 0E94 0000 		call _lcd_write_data
 680               	.LVL85:
 125:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 681               		.loc 1 125 2 view .LVU169
 682 021c 86EC      		ldi r24,lo8(-58)
 683 021e 0E94 0000 		call _lcd_write_data
 684               	.LVL86:
 126:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 685               		.loc 1 126 2 view .LVU170
 686 0222 89E3      		ldi r24,lo8(57)
 687 0224 0E94 0000 		call _lcd_write_data
 688               	.LVL87:
 127:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 689               		.loc 1 127 2 view .LVU171
 690 0228 80E0      		ldi r24,0
 691 022a 0E94 0000 		call _lcd_write_data
 692               	.LVL88:
 128:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 693               		.loc 1 128 2 view .LVU172
 694 022e 80E0      		ldi r24,0
 695 0230 0E94 0000 		call _lcd_write_data
 696               	.LVL89:
 129:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 697               		.loc 1 129 2 view .LVU173
 698 0234 80E0      		ldi r24,0
 699 0236 0E94 0000 		call _lcd_write_data
 700               	.LVL90:
 130:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 701               		.loc 1 130 2 view .LVU174
 702 023a 80E0      		ldi r24,0
 703 023c 0E94 0000 		call _lcd_write_data
 704               	.LVL91:
 131:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 705               		.loc 1 131 2 view .LVU175
 706 0240 80E0      		ldi r24,0
 707 0242 0E94 0000 		call _lcd_write_data
 708               	.LVL92:
 132:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 709               		.loc 1 132 2 view .LVU176
 710 0246 80E0      		ldi r24,0
 711 0248 0E94 0000 		call _lcd_write_data
 712               	.LVL93:
 133:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 713               		.loc 1 133 2 view .LVU177
 714 024c 81EE      		ldi r24,lo8(-31)
 715 024e 0E94 0000 		call _lcd_write_reg
 716               	.LVL94:
 134:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 717               		.loc 1 134 2 view .LVU178
 718 0252 8FE1      		ldi r24,lo8(31)
 719 0254 0E94 0000 		call _lcd_write_data
 720               	.LVL95:
 135:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 721               		.loc 1 135 2 view .LVU179
 722 0258 8FE3      		ldi r24,lo8(63)
 723 025a 0E94 0000 		call _lcd_write_data
 724               	.LVL96:
 136:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 725               		.loc 1 136 2 view .LVU180
 726 025e 8FE3      		ldi r24,lo8(63)
 727 0260 0E94 0000 		call _lcd_write_data
 728               	.LVL97:
 137:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 729               		.loc 1 137 2 view .LVU181
 730 0264 8FE0      		ldi r24,lo8(15)
 731 0266 0E94 0000 		call _lcd_write_data
 732               	.LVL98:
 138:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 733               		.loc 1 138 2 view .LVU182
 734 026a 8FE1      		ldi r24,lo8(31)
 735 026c 0E94 0000 		call _lcd_write_data
 736               	.LVL99:
 139:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 737               		.loc 1 139 2 view .LVU183
 738 0270 8FE0      		ldi r24,lo8(15)
 739 0272 0E94 0000 		call _lcd_write_data
 740               	.LVL100:
 140:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 741               		.loc 1 140 2 view .LVU184
 742 0276 86E4      		ldi r24,lo8(70)
 743 0278 0E94 0000 		call _lcd_write_data
 744               	.LVL101:
 141:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 745               		.loc 1 141 2 view .LVU185
 746 027c 89E4      		ldi r24,lo8(73)
 747 027e 0E94 0000 		call _lcd_write_data
 748               	.LVL102:
 142:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 749               		.loc 1 142 2 view .LVU186
 750 0282 81E3      		ldi r24,lo8(49)
 751 0284 0E94 0000 		call _lcd_write_data
 752               	.LVL103:
 143:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 753               		.loc 1 143 2 view .LVU187
 754 0288 85E0      		ldi r24,lo8(5)
 755 028a 0E94 0000 		call _lcd_write_data
 756               	.LVL104:
 144:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 757               		.loc 1 144 2 view .LVU188
 758 028e 89E0      		ldi r24,lo8(9)
 759 0290 0E94 0000 		call _lcd_write_data
 760               	.LVL105:
 145:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 761               		.loc 1 145 2 view .LVU189
 762 0294 83E0      		ldi r24,lo8(3)
 763 0296 0E94 0000 		call _lcd_write_data
 764               	.LVL106:
 146:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 765               		.loc 1 146 2 view .LVU190
 766 029a 8CE1      		ldi r24,lo8(28)
 767 029c 0E94 0000 		call _lcd_write_data
 768               	.LVL107:
 147:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 769               		.loc 1 147 2 view .LVU191
 770 02a0 8AE1      		ldi r24,lo8(26)
 771 02a2 0E94 0000 		call _lcd_write_data
 772               	.LVL108:
 148:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 773               		.loc 1 148 2 view .LVU192
 774 02a6 80E0      		ldi r24,0
 775 02a8 0E94 0000 		call _lcd_write_data
 776               	.LVL109:
 149:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 777               		.loc 1 149 2 view .LVU193
 778 02ac 81EF      		ldi r24,lo8(-15)
 779 02ae 0E94 0000 		call _lcd_write_reg
 780               	.LVL110:
 150:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 781               		.loc 1 150 2 view .LVU194
 782 02b2 86E3      		ldi r24,lo8(54)
 783 02b4 0E94 0000 		call _lcd_write_data
 784               	.LVL111:
 151:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 785               		.loc 1 151 2 view .LVU195
 786 02b8 84E0      		ldi r24,lo8(4)
 787 02ba 0E94 0000 		call _lcd_write_data
 788               	.LVL112:
 152:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 789               		.loc 1 152 2 view .LVU196
 790 02be 80E0      		ldi r24,0
 791 02c0 0E94 0000 		call _lcd_write_data
 792               	.LVL113:
 153:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 793               		.loc 1 153 2 view .LVU197
 794 02c4 8CE3      		ldi r24,lo8(60)
 795 02c6 0E94 0000 		call _lcd_write_data
 796               	.LVL114:
 154:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 797               		.loc 1 154 2 view .LVU198
 798 02ca 8FE0      		ldi r24,lo8(15)
 799 02cc 0E94 0000 		call _lcd_write_data
 800               	.LVL115:
 155:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 801               		.loc 1 155 2 view .LVU199
 802 02d0 8FE0      		ldi r24,lo8(15)
 803 02d2 0E94 0000 		call _lcd_write_data
 804               	.LVL116:
 156:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 805               		.loc 1 156 2 view .LVU200
 806 02d6 84EA      		ldi r24,lo8(-92)
 807 02d8 0E94 0000 		call _lcd_write_data
 808               	.LVL117:
 157:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 809               		.loc 1 157 2 view .LVU201
 810 02dc 82E0      		ldi r24,lo8(2)
 811 02de 0E94 0000 		call _lcd_write_data
 812               	.LVL118:
 158:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 813               		.loc 1 158 2 view .LVU202
 814 02e2 82EF      		ldi r24,lo8(-14)
 815 02e4 0E94 0000 		call _lcd_write_reg
 816               	.LVL119:
 159:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 817               		.loc 1 159 2 view .LVU203
 818 02e8 88E1      		ldi r24,lo8(24)
 819 02ea 0E94 0000 		call _lcd_write_data
 820               	.LVL120:
 160:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 821               		.loc 1 160 2 view .LVU204
 822 02ee 83EA      		ldi r24,lo8(-93)
 823 02f0 0E94 0000 		call _lcd_write_data
 824               	.LVL121:
 161:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 825               		.loc 1 161 2 view .LVU205
 826 02f4 82E1      		ldi r24,lo8(18)
 827 02f6 0E94 0000 		call _lcd_write_data
 828               	.LVL122:
 162:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 829               		.loc 1 162 2 view .LVU206
 830 02fa 82E0      		ldi r24,lo8(2)
 831 02fc 0E94 0000 		call _lcd_write_data
 832               	.LVL123:
 163:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 833               		.loc 1 163 2 view .LVU207
 834 0300 82E3      		ldi r24,lo8(50)
 835 0302 0E94 0000 		call _lcd_write_data
 836               	.LVL124:
 164:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 837               		.loc 1 164 2 view .LVU208
 838 0306 82E1      		ldi r24,lo8(18)
 839 0308 0E94 0000 		call _lcd_write_data
 840               	.LVL125:
 165:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 841               		.loc 1 165 2 view .LVU209
 842 030c 8FEF      		ldi r24,lo8(-1)
 843 030e 0E94 0000 		call _lcd_write_data
 844               	.LVL126:
 166:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 845               		.loc 1 166 2 view .LVU210
 846 0312 82E3      		ldi r24,lo8(50)
 847 0314 0E94 0000 		call _lcd_write_data
 848               	.LVL127:
 167:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 849               		.loc 1 167 2 view .LVU211
 850 0318 80E0      		ldi r24,0
 851 031a 0E94 0000 		call _lcd_write_data
 852               	.LVL128:
 168:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 853               		.loc 1 168 2 view .LVU212
 854 031e 84EF      		ldi r24,lo8(-12)
 855 0320 0E94 0000 		call _lcd_write_reg
 856               	.LVL129:
 169:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 857               		.loc 1 169 2 view .LVU213
 858 0324 80E4      		ldi r24,lo8(64)
 859 0326 0E94 0000 		call _lcd_write_data
 860               	.LVL130:
 170:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 861               		.loc 1 170 2 view .LVU214
 862 032a 80E0      		ldi r24,0
 863 032c 0E94 0000 		call _lcd_write_data
 864               	.LVL131:
 171:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 865               		.loc 1 171 2 view .LVU215
 866 0330 88E0      		ldi r24,lo8(8)
 867 0332 0E94 0000 		call _lcd_write_data
 868               	.LVL132:
 172:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 869               		.loc 1 172 2 view .LVU216
 870 0336 81E9      		ldi r24,lo8(-111)
 871 0338 0E94 0000 		call _lcd_write_data
 872               	.LVL133:
 173:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 873               		.loc 1 173 2 view .LVU217
 874 033c 84E0      		ldi r24,lo8(4)
 875 033e 0E94 0000 		call _lcd_write_data
 876               	.LVL134:
 174:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 877               		.loc 1 174 2 view .LVU218
 878 0342 88EF      		ldi r24,lo8(-8)
 879 0344 0E94 0000 		call _lcd_write_reg
 880               	.LVL135:
 175:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 881               		.loc 1 175 2 view .LVU219
 882 0348 81E2      		ldi r24,lo8(33)
 883 034a 0E94 0000 		call _lcd_write_data
 884               	.LVL136:
 176:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 885               		.loc 1 176 2 view .LVU220
 886 034e 84E0      		ldi r24,lo8(4)
 887 0350 0E94 0000 		call _lcd_write_data
 888               	.LVL137:
 177:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 889               		.loc 1 177 2 view .LVU221
 890 0354 8AE3      		ldi r24,lo8(58)
 891 0356 0E94 0000 		call _lcd_write_reg
 892               	.LVL138:
 178:lcd/lcd.c     **** }
 893               		.loc 1 178 2 view .LVU222
 894 035a 85E5      		ldi r24,lo8(85)
 895 035c 0E94 0000 		call _lcd_write_data
 896               	.LVL139:
 897               	.LBE122:
 898               	.LBE121:
 249:lcd/lcd.c     **** 	_delay_ms(200);
 899               		.loc 1 249 2 view .LVU223
 900               	.LBB123:
 901               	.LBI123:
 181:lcd/lcd.c     **** {
 902               		.loc 1 181 13 view .LVU224
 903               	.LBB124:
 183:lcd/lcd.c     **** 	switch(scan_dir)
 904               		.loc 1 183 2 view .LVU225
 184:lcd/lcd.c     **** 	{
 905               		.loc 1 184 2 view .LVU226
 227:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 906               		.loc 1 227 2 view .LVU227
 907 0360 86EB      		ldi r24,lo8(-74)
 908 0362 0E94 0000 		call _lcd_write_reg
 909               	.LVL140:
 228:lcd/lcd.c     **** 	_lcd_write_data(b);
 910               		.loc 1 228 2 view .LVU228
 911 0366 80E0      		ldi r24,0
 912 0368 0E94 0000 		call _lcd_write_data
 913               	.LVL141:
 229:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 914               		.loc 1 229 2 view .LVU229
 915 036c 82E2      		ldi r24,lo8(34)
 916 036e 0E94 0000 		call _lcd_write_data
 917               	.LVL142:
 230:lcd/lcd.c     **** 	_lcd_write_data(a);
 918               		.loc 1 230 2 view .LVU230
 919 0372 86E3      		ldi r24,lo8(54)
 920 0374 0E94 0000 		call _lcd_write_reg
 921               	.LVL143:
 231:lcd/lcd.c     **** }
 922               		.loc 1 231 2 view .LVU231
 923 0378 88E0      		ldi r24,lo8(8)
 924 037a 0E94 0000 		call _lcd_write_data
 925               	.LVL144:
 231:lcd/lcd.c     **** }
 926               		.loc 1 231 2 is_stmt 0 view .LVU232
 927               	.LBE124:
 928               	.LBE123:
 929               	.LBB126:
 930               	.LBB127:
 198:/usr/avr/include/util/delay.h **** 		{
 931               		.loc 2 198 9 is_stmt 1 view .LVU233
 932               	.LBE127:
 933               	.LBE126:
 934               	.LBB133:
 935               	.LBB125:
 231:lcd/lcd.c     **** }
 936               		.loc 1 231 2 is_stmt 0 view .LVU234
 937 037e 80ED      		ldi r24,lo8(-48)
 938 0380 97E0      		ldi r25,lo8(7)
 939               	.LBE125:
 940               	.LBE133:
 941               	.LBB134:
 942               	.LBB132:
 943               	.LBB128:
 944               	.LBB129:
 945               		.loc 3 105 2 view .LVU235
 946 0382 20E9      		ldi r18,lo8(-112)
 947 0384 31E0      		ldi r19,lo8(1)
 948               	.LVL145:
 949               	.L13:
 950               		.loc 3 105 2 view .LVU236
 951               	.LBE129:
 952               	.LBE128:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 953               		.loc 2 201 4 is_stmt 1 view .LVU237
 954               	.LBB131:
 955               	.LBI128:
 103:/usr/avr/include/util/delay_basic.h **** {
 956               		.loc 3 103 1 view .LVU238
 957               	.LBB130:
 958               		.loc 3 105 2 view .LVU239
 959 0386 F901      		movw r30,r18
 960               	/* #APP */
 961               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 962 0388 3197      		1: sbiw r30,1
 963 038a 01F4      		brne 1b
 964               	 ;  0 "" 2
 965               	.LVL146:
 966               		.loc 3 105 2 is_stmt 0 view .LVU240
 967               	/* #NOAPP */
 968               	.LBE130:
 969               	.LBE131:
 970               		.loc 2 202 4 is_stmt 1 view .LVU241
 198:/usr/avr/include/util/delay.h **** 		{
 971               		.loc 2 198 9 view .LVU242
 972 038c 0197      		sbiw r24,1
 973               	.LVL147:
 198:/usr/avr/include/util/delay.h **** 		{
 974               		.loc 2 198 9 is_stmt 0 view .LVU243
 975 038e 0097      		sbiw r24,0
 976 0390 01F4      		brne .L13
 977               	.LVL148:
 198:/usr/avr/include/util/delay.h **** 		{
 978               		.loc 2 198 9 view .LVU244
 979               	.LBE132:
 980               	.LBE134:
 251:lcd/lcd.c     **** 	_delay_ms(120);
 981               		.loc 1 251 2 is_stmt 1 view .LVU245
 982 0392 81E1      		ldi r24,lo8(17)
 983 0394 0E94 0000 		call _lcd_write_reg
 984               	.LVL149:
 252:lcd/lcd.c     **** 	_lcd_write_reg(0x29);
 985               		.loc 1 252 2 view .LVU246
 986               	.LBB135:
 987               	.LBI135:
 166:/usr/avr/include/util/delay.h **** {
 988               		.loc 2 166 1 view .LVU247
 989               	.LBB136:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 990               		.loc 2 168 2 view .LVU248
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 991               		.loc 2 190 2 view .LVU249
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 992               		.loc 2 191 2 view .LVU250
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 993               		.loc 2 192 2 view .LVU251
 194:/usr/avr/include/util/delay.h **** 	{
 994               		.loc 2 194 7 view .LVU252
 198:/usr/avr/include/util/delay.h **** 		{
 995               		.loc 2 198 9 view .LVU253
 996               	.LBE136:
 997               	.LBE135:
 251:lcd/lcd.c     **** 	_delay_ms(120);
 998               		.loc 1 251 2 is_stmt 0 view .LVU254
 999 0398 80EB      		ldi r24,lo8(-80)
 1000 039a 94E0      		ldi r25,lo8(4)
 1001               	.LBB142:
 1002               	.LBB141:
 1003               	.LBB137:
 1004               	.LBB138:
 1005               		.loc 3 105 2 view .LVU255
 1006 039c 20E9      		ldi r18,lo8(-112)
 1007 039e 31E0      		ldi r19,lo8(1)
 1008               	.LVL150:
 1009               	.L14:
 1010               		.loc 3 105 2 view .LVU256
 1011               	.LBE138:
 1012               	.LBE137:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 1013               		.loc 2 201 4 is_stmt 1 view .LVU257
 1014               	.LBB140:
 1015               	.LBI137:
 103:/usr/avr/include/util/delay_basic.h **** {
 1016               		.loc 3 103 1 view .LVU258
 1017               	.LBB139:
 1018               		.loc 3 105 2 view .LVU259
 1019 03a0 F901      		movw r30,r18
 1020               	/* #APP */
 1021               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1022 03a2 3197      		1: sbiw r30,1
 1023 03a4 01F4      		brne 1b
 1024               	 ;  0 "" 2
 1025               	.LVL151:
 1026               		.loc 3 105 2 is_stmt 0 view .LVU260
 1027               	/* #NOAPP */
 1028               	.LBE139:
 1029               	.LBE140:
 1030               		.loc 2 202 4 is_stmt 1 view .LVU261
 198:/usr/avr/include/util/delay.h **** 		{
 1031               		.loc 2 198 9 view .LVU262
 1032 03a6 0197      		sbiw r24,1
 1033               	.LVL152:
 198:/usr/avr/include/util/delay.h **** 		{
 1034               		.loc 2 198 9 is_stmt 0 view .LVU263
 1035 03a8 0097      		sbiw r24,0
 1036 03aa 01F4      		brne .L14
 1037               	.LVL153:
 198:/usr/avr/include/util/delay.h **** 		{
 1038               		.loc 2 198 9 view .LVU264
 1039               	.LBE141:
 1040               	.LBE142:
 253:lcd/lcd.c     **** 
 1041               		.loc 1 253 2 is_stmt 1 view .LVU265
 1042 03ac 89E2      		ldi r24,lo8(41)
 1043 03ae 0E94 0000 		call _lcd_write_reg
 1044               	.LVL154:
 255:lcd/lcd.c     **** 
 1045               		.loc 1 255 2 view .LVU266
 1046 03b2 20EE      		ldi r18,lo8(-32)
 1047 03b4 31E0      		ldi r19,lo8(1)
 1048 03b6 40E4      		ldi r20,lo8(64)
 1049 03b8 51E0      		ldi r21,lo8(1)
 1050 03ba 60E0      		ldi r22,0
 1051 03bc 70E0      		ldi r23,0
 1052 03be 80E0      		ldi r24,0
 1053 03c0 90E0      		ldi r25,0
 1054 03c2 0E94 0000 		call lcd_rect
 1055               	.LVL155:
 257:lcd/lcd.c     **** }
 1056               		.loc 1 257 2 view .LVU267
 1057               	.LBB143:
 257:lcd/lcd.c     **** }
 1058               		.loc 1 257 13 view .LVU268
 257:lcd/lcd.c     **** }
 1059               		.loc 1 257 13 view .LVU269
 1060               	.LBE143:
 257:lcd/lcd.c     **** }
 1061               		.loc 1 257 2 is_stmt 0 view .LVU270
 1062 03c6 80E0      		ldi r24,lo8(__c.0)
 1063 03c8 90E0      		ldi r25,hi8(__c.0)
 1064 03ca 9F93      		push r25
 1065               		.cfi_def_cfa_offset 5
 1066 03cc 8F93      		push r24
 1067               		.cfi_def_cfa_offset 6
 1068 03ce 0E94 0000 		call log_boot_P
 1069               	.LVL156:
 258:lcd/lcd.c     **** 
 1070               		.loc 1 258 1 view .LVU271
 1071 03d2 0F90      		pop __tmp_reg__
 1072 03d4 0F90      		pop __tmp_reg__
 1073               		.cfi_def_cfa_offset 4
 1074               	/* epilogue start */
 1075 03d6 1F91      		pop r17
 1076 03d8 0F91      		pop r16
 1077               	.LVL157:
 258:lcd/lcd.c     **** 
 1078               		.loc 1 258 1 view .LVU272
 1079 03da 0895      		ret
 1080               		.cfi_endproc
 1081               	.LFE22:
 1083               		.section	.progmem.data,"a",@progbits
 1086               	__c.0:
 1087 0000 4C43 4420 		.string	"LCD driver initialized"
 1087      6472 6976 
 1087      6572 2069 
 1087      6E69 7469 
 1087      616C 697A 
 1090               	__c.1:
 1091 0017 4C43 4420 		.string	"LCD driver starting"
 1091      6472 6976 
 1091      6572 2073 
 1091      7461 7274 
 1091      696E 6700 
 1092               		.text
 1093               	.Letext0:
 1094               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 1095               		.file 5 "../../types/types.h"
 1096               		.file 6 "lcd/lcd.h"
 1097               		.file 7 "logger/logger.h"
 1098               		.file 8 "spi/spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
     /tmp/ccV1lX2G.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccV1lX2G.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccV1lX2G.s:4      *ABS*:0000003f __SREG__
     /tmp/ccV1lX2G.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccV1lX2G.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccV1lX2G.s:12     .text:00000000 _lcd_write_data
     /tmp/ccV1lX2G.s:16     .text:00000000 .Loc.0
     /tmp/ccV1lX2G.s:17     .text:00000000 L0
     /tmp/ccV1lX2G.s:18     .text:00000000 .Loc.1
     /tmp/ccV1lX2G.s:27     .text:00000004 .Loc.2
     /tmp/ccV1lX2G.s:29     .text:00000006 .Loc.3
     /tmp/ccV1lX2G.s:31     .text:00000008 .Loc.4
     /tmp/ccV1lX2G.s:34     .text:0000000a .Loc.5
     /tmp/ccV1lX2G.s:37     .text:0000000e .Loc.6
     /tmp/ccV1lX2G.s:41     .text:00000014 .Loc.7
     /tmp/ccV1lX2G.s:44     .text:00000016 .Loc.8
     /tmp/ccV1lX2G.s:47     .text:00000018 .Loc.9
     /tmp/ccV1lX2G.s:49     .text:0000001a L0
     /tmp/ccV1lX2G.s:53     .text:0000001a _lcd_write_reg
     /tmp/ccV1lX2G.s:56     .text:0000001a .Loc.10
     /tmp/ccV1lX2G.s:57     .text:0000001a L0
     /tmp/ccV1lX2G.s:62     .text:0000001a .Loc.11
     /tmp/ccV1lX2G.s:64     .text:0000001c .Loc.12
     /tmp/ccV1lX2G.s:66     .text:0000001e .Loc.13
     /tmp/ccV1lX2G.s:69     .text:00000022 .Loc.14
     /tmp/ccV1lX2G.s:72     .text:00000024 .Loc.15
     /tmp/ccV1lX2G.s:74     .text:00000026 L0
     /tmp/ccV1lX2G.s:79     .text:00000026 lcd_backlight
     /tmp/ccV1lX2G.s:82     .text:00000026 .Loc.16
     /tmp/ccV1lX2G.s:83     .text:00000026 L0
     /tmp/ccV1lX2G.s:88     .text:00000026 .Loc.17
     /tmp/ccV1lX2G.s:90     .text:00000026 .Loc.18
     /tmp/ccV1lX2G.s:92     .text:00000028 L0
     /tmp/ccV1lX2G.s:97     .text:00000028 lcd_rect
     /tmp/ccV1lX2G.s:100    .text:00000028 .Loc.19
     /tmp/ccV1lX2G.s:101    .text:00000028 L0
     /tmp/ccV1lX2G.s:102    .text:00000028 .Loc.20
     /tmp/ccV1lX2G.s:153    .text:0000004c .Loc.21
     /tmp/ccV1lX2G.s:154    .text:0000004c .Loc.22
     /tmp/ccV1lX2G.s:157    .text:00000050 .Loc.23
     /tmp/ccV1lX2G.s:160    .text:00000050 .Loc.24
     /tmp/ccV1lX2G.s:162    .text:00000050 .Loc.25
     /tmp/ccV1lX2G.s:163    .text:00000050 .Loc.26
     /tmp/ccV1lX2G.s:164    .text:00000050 .Loc.27
     /tmp/ccV1lX2G.s:172    .text:0000005c .Loc.28
     /tmp/ccV1lX2G.s:173    .text:0000005c .Loc.29
     /tmp/ccV1lX2G.s:181    .text:00000068 .Loc.30
     /tmp/ccV1lX2G.s:185    .text:0000006e .Loc.31
     /tmp/ccV1lX2G.s:189    .text:00000074 .Loc.32
     /tmp/ccV1lX2G.s:193    .text:0000007a .Loc.33
     /tmp/ccV1lX2G.s:197    .text:00000080 .Loc.34
     /tmp/ccV1lX2G.s:201    .text:00000086 .Loc.35
     /tmp/ccV1lX2G.s:205    .text:0000008c .Loc.36
     /tmp/ccV1lX2G.s:209    .text:00000092 .Loc.37
     /tmp/ccV1lX2G.s:213    .text:00000098 .Loc.38
     /tmp/ccV1lX2G.s:217    .text:0000009e .Loc.39
     /tmp/ccV1lX2G.s:221    .text:000000a4 .Loc.40
     /tmp/ccV1lX2G.s:225    .text:000000aa .Loc.41
     /tmp/ccV1lX2G.s:227    .text:000000ac .Loc.42
     /tmp/ccV1lX2G.s:231    .text:000000ae .Loc.43
     /tmp/ccV1lX2G.s:236    .text:000000b2 .Loc.44
     /tmp/ccV1lX2G.s:240    .text:000000b8 .Loc.45
     /tmp/ccV1lX2G.s:243    .text:000000b8 .Loc.46
     /tmp/ccV1lX2G.s:245    .text:000000b8 .Loc.47
     /tmp/ccV1lX2G.s:250    .text:000000ba .Loc.48
     /tmp/ccV1lX2G.s:254    .text:000000be .Loc.49
     /tmp/ccV1lX2G.s:258    .text:000000c2 .Loc.50
     /tmp/ccV1lX2G.s:264    .text:000000ca .Loc.51
     /tmp/ccV1lX2G.s:268    .text:000000ce .Loc.52
     /tmp/ccV1lX2G.s:276    .text:000000d8 .Loc.53
     /tmp/ccV1lX2G.s:279    .text:000000d8 .Loc.54
     /tmp/ccV1lX2G.s:281    .text:000000d8 .Loc.55
     /tmp/ccV1lX2G.s:285    .text:000000de .Loc.56
     /tmp/ccV1lX2G.s:289    .text:000000e4 .Loc.57
     /tmp/ccV1lX2G.s:292    .text:000000e4 .Loc.58
     /tmp/ccV1lX2G.s:298    .text:000000ea .Loc.59
     /tmp/ccV1lX2G.s:302    .text:000000f0 .Loc.60
     /tmp/ccV1lX2G.s:305    .text:000000f2 .Loc.61
     /tmp/ccV1lX2G.s:309    .text:000000f4 .Loc.62
     /tmp/ccV1lX2G.s:313    .text:000000fa L0
     /tmp/ccV1lX2G.s:318    .text:000000fa lcd_init
     /tmp/ccV1lX2G.s:321    .text:000000fa .Loc.63
     /tmp/ccV1lX2G.s:322    .text:000000fa L0
     /tmp/ccV1lX2G.s:323    .text:000000fa .Loc.64
     /tmp/ccV1lX2G.s:335    .text:00000100 .Loc.65
     /tmp/ccV1lX2G.s:337    .text:00000100 .Loc.66
     /tmp/ccV1lX2G.s:338    .text:00000100 .Loc.67
     /tmp/ccV1lX2G.s:340    .text:00000100 .Loc.68
     /tmp/ccV1lX2G.s:1090   .progmem.data:00000017 __c.1
     /tmp/ccV1lX2G.s:344    .text:00000104 .Loc.69
     /tmp/ccV1lX2G.s:351    .text:0000010c .Loc.70
     /tmp/ccV1lX2G.s:354    .text:00000110 .Loc.71
     /tmp/ccV1lX2G.s:357    .text:00000110 .Loc.72
     /tmp/ccV1lX2G.s:359    .text:00000110 .Loc.73
     /tmp/ccV1lX2G.s:361    .text:00000112 .Loc.74
     /tmp/ccV1lX2G.s:366    .text:00000112 .Loc.75
     /tmp/ccV1lX2G.s:368    .text:00000112 .Loc.76
     /tmp/ccV1lX2G.s:369    .text:00000112 .Loc.77
     /tmp/ccV1lX2G.s:370    .text:00000112 .Loc.78
     /tmp/ccV1lX2G.s:371    .text:00000112 .Loc.79
     /tmp/ccV1lX2G.s:372    .text:00000112 .Loc.80
     /tmp/ccV1lX2G.s:373    .text:00000112 .Loc.81
     /tmp/ccV1lX2G.s:376    .text:00000112 .Loc.82
     /tmp/ccV1lX2G.s:387    .text:0000011a .Loc.83
     /tmp/ccV1lX2G.s:392    .text:0000011e .Loc.84
     /tmp/ccV1lX2G.s:395    .text:0000011e .Loc.85
     /tmp/ccV1lX2G.s:398    .text:0000011e .Loc.86
     /tmp/ccV1lX2G.s:400    .text:0000011e .Loc.87
     /tmp/ccV1lX2G.s:408    .text:00000124 .Loc.88
     /tmp/ccV1lX2G.s:412    .text:00000124 .Loc.89
     /tmp/ccV1lX2G.s:413    .text:00000124 .Loc.90
     /tmp/ccV1lX2G.s:416    .text:00000126 .Loc.91
     /tmp/ccV1lX2G.s:420    .text:0000012a .Loc.92
     /tmp/ccV1lX2G.s:423    .text:0000012a .Loc.93
     /tmp/ccV1lX2G.s:425    .text:0000012c .Loc.94
     /tmp/ccV1lX2G.s:429    .text:0000012c .Loc.95
     /tmp/ccV1lX2G.s:431    .text:0000012c .Loc.96
     /tmp/ccV1lX2G.s:432    .text:0000012c .Loc.97
     /tmp/ccV1lX2G.s:433    .text:0000012c .Loc.98
     /tmp/ccV1lX2G.s:434    .text:0000012c .Loc.99
     /tmp/ccV1lX2G.s:435    .text:0000012c .Loc.100
     /tmp/ccV1lX2G.s:436    .text:0000012c .Loc.101
     /tmp/ccV1lX2G.s:439    .text:0000012c .Loc.102
     /tmp/ccV1lX2G.s:446    .text:00000130 .Loc.103
     /tmp/ccV1lX2G.s:451    .text:00000134 .Loc.104
     /tmp/ccV1lX2G.s:454    .text:00000134 .Loc.105
     /tmp/ccV1lX2G.s:457    .text:00000134 .Loc.106
     /tmp/ccV1lX2G.s:459    .text:00000134 .Loc.107
     /tmp/ccV1lX2G.s:467    .text:0000013a .Loc.108
     /tmp/ccV1lX2G.s:471    .text:0000013a .Loc.109
     /tmp/ccV1lX2G.s:472    .text:0000013a .Loc.110
     /tmp/ccV1lX2G.s:475    .text:0000013c .Loc.111
     /tmp/ccV1lX2G.s:479    .text:00000140 .Loc.112
     /tmp/ccV1lX2G.s:482    .text:00000140 .Loc.113
     /tmp/ccV1lX2G.s:484    .text:00000142 .Loc.114
     /tmp/ccV1lX2G.s:488    .text:00000142 .Loc.115
     /tmp/ccV1lX2G.s:490    .text:00000142 .Loc.116
     /tmp/ccV1lX2G.s:491    .text:00000142 .Loc.117
     /tmp/ccV1lX2G.s:492    .text:00000142 .Loc.118
     /tmp/ccV1lX2G.s:493    .text:00000142 .Loc.119
     /tmp/ccV1lX2G.s:494    .text:00000142 .Loc.120
     /tmp/ccV1lX2G.s:495    .text:00000142 .Loc.121
     /tmp/ccV1lX2G.s:498    .text:00000142 .Loc.122
     /tmp/ccV1lX2G.s:505    .text:00000146 .Loc.123
     /tmp/ccV1lX2G.s:510    .text:0000014a .Loc.124
     /tmp/ccV1lX2G.s:513    .text:0000014a .Loc.125
     /tmp/ccV1lX2G.s:516    .text:0000014a .Loc.126
     /tmp/ccV1lX2G.s:518    .text:0000014a .Loc.127
     /tmp/ccV1lX2G.s:526    .text:00000150 .Loc.128
     /tmp/ccV1lX2G.s:530    .text:00000150 .Loc.129
     /tmp/ccV1lX2G.s:531    .text:00000150 .Loc.130
     /tmp/ccV1lX2G.s:534    .text:00000152 .Loc.131
     /tmp/ccV1lX2G.s:538    .text:00000156 .Loc.132
     /tmp/ccV1lX2G.s:543    .text:00000156 .Loc.133
     /tmp/ccV1lX2G.s:544    .text:00000156 .Loc.134
     /tmp/ccV1lX2G.s:547    .text:00000156 .Loc.135
     /tmp/ccV1lX2G.s:549    .text:00000156 .Loc.136
     /tmp/ccV1lX2G.s:553    .text:0000015c .Loc.137
     /tmp/ccV1lX2G.s:557    .text:00000162 .Loc.138
     /tmp/ccV1lX2G.s:561    .text:00000168 .Loc.139
     /tmp/ccV1lX2G.s:565    .text:0000016e .Loc.140
     /tmp/ccV1lX2G.s:569    .text:00000174 .Loc.141
     /tmp/ccV1lX2G.s:573    .text:0000017a .Loc.142
     /tmp/ccV1lX2G.s:577    .text:00000180 .Loc.143
     /tmp/ccV1lX2G.s:581    .text:00000186 .Loc.144
     /tmp/ccV1lX2G.s:585    .text:0000018c .Loc.145
     /tmp/ccV1lX2G.s:589    .text:00000192 .Loc.146
     /tmp/ccV1lX2G.s:593    .text:00000198 .Loc.147
     /tmp/ccV1lX2G.s:597    .text:0000019e .Loc.148
     /tmp/ccV1lX2G.s:601    .text:000001a4 .Loc.149
     /tmp/ccV1lX2G.s:605    .text:000001aa .Loc.150
     /tmp/ccV1lX2G.s:609    .text:000001b0 .Loc.151
     /tmp/ccV1lX2G.s:613    .text:000001b6 .Loc.152
     /tmp/ccV1lX2G.s:617    .text:000001bc .Loc.153
     /tmp/ccV1lX2G.s:621    .text:000001c2 .Loc.154
     /tmp/ccV1lX2G.s:625    .text:000001c8 .Loc.155
     /tmp/ccV1lX2G.s:629    .text:000001ce .Loc.156
     /tmp/ccV1lX2G.s:633    .text:000001d4 .Loc.157
     /tmp/ccV1lX2G.s:637    .text:000001da .Loc.158
     /tmp/ccV1lX2G.s:641    .text:000001e0 .Loc.159
     /tmp/ccV1lX2G.s:645    .text:000001e6 .Loc.160
     /tmp/ccV1lX2G.s:649    .text:000001ec .Loc.161
     /tmp/ccV1lX2G.s:653    .text:000001f2 .Loc.162
     /tmp/ccV1lX2G.s:657    .text:000001f8 .Loc.163
     /tmp/ccV1lX2G.s:661    .text:000001fe .Loc.164
     /tmp/ccV1lX2G.s:665    .text:00000204 .Loc.165
     /tmp/ccV1lX2G.s:669    .text:0000020a .Loc.166
     /tmp/ccV1lX2G.s:673    .text:00000210 .Loc.167
     /tmp/ccV1lX2G.s:677    .text:00000216 .Loc.168
     /tmp/ccV1lX2G.s:681    .text:0000021c .Loc.169
     /tmp/ccV1lX2G.s:685    .text:00000222 .Loc.170
     /tmp/ccV1lX2G.s:689    .text:00000228 .Loc.171
     /tmp/ccV1lX2G.s:693    .text:0000022e .Loc.172
     /tmp/ccV1lX2G.s:697    .text:00000234 .Loc.173
     /tmp/ccV1lX2G.s:701    .text:0000023a .Loc.174
     /tmp/ccV1lX2G.s:705    .text:00000240 .Loc.175
     /tmp/ccV1lX2G.s:709    .text:00000246 .Loc.176
     /tmp/ccV1lX2G.s:713    .text:0000024c .Loc.177
     /tmp/ccV1lX2G.s:717    .text:00000252 .Loc.178
     /tmp/ccV1lX2G.s:721    .text:00000258 .Loc.179
     /tmp/ccV1lX2G.s:725    .text:0000025e .Loc.180
     /tmp/ccV1lX2G.s:729    .text:00000264 .Loc.181
     /tmp/ccV1lX2G.s:733    .text:0000026a .Loc.182
     /tmp/ccV1lX2G.s:737    .text:00000270 .Loc.183
     /tmp/ccV1lX2G.s:741    .text:00000276 .Loc.184
     /tmp/ccV1lX2G.s:745    .text:0000027c .Loc.185
     /tmp/ccV1lX2G.s:749    .text:00000282 .Loc.186
     /tmp/ccV1lX2G.s:753    .text:00000288 .Loc.187
     /tmp/ccV1lX2G.s:757    .text:0000028e .Loc.188
     /tmp/ccV1lX2G.s:761    .text:00000294 .Loc.189
     /tmp/ccV1lX2G.s:765    .text:0000029a .Loc.190
     /tmp/ccV1lX2G.s:769    .text:000002a0 .Loc.191
     /tmp/ccV1lX2G.s:773    .text:000002a6 .Loc.192
     /tmp/ccV1lX2G.s:777    .text:000002ac .Loc.193
     /tmp/ccV1lX2G.s:781    .text:000002b2 .Loc.194
     /tmp/ccV1lX2G.s:785    .text:000002b8 .Loc.195
     /tmp/ccV1lX2G.s:789    .text:000002be .Loc.196
     /tmp/ccV1lX2G.s:793    .text:000002c4 .Loc.197
     /tmp/ccV1lX2G.s:797    .text:000002ca .Loc.198
     /tmp/ccV1lX2G.s:801    .text:000002d0 .Loc.199
     /tmp/ccV1lX2G.s:805    .text:000002d6 .Loc.200
     /tmp/ccV1lX2G.s:809    .text:000002dc .Loc.201
     /tmp/ccV1lX2G.s:813    .text:000002e2 .Loc.202
     /tmp/ccV1lX2G.s:817    .text:000002e8 .Loc.203
     /tmp/ccV1lX2G.s:821    .text:000002ee .Loc.204
     /tmp/ccV1lX2G.s:825    .text:000002f4 .Loc.205
     /tmp/ccV1lX2G.s:829    .text:000002fa .Loc.206
     /tmp/ccV1lX2G.s:833    .text:00000300 .Loc.207
     /tmp/ccV1lX2G.s:837    .text:00000306 .Loc.208
     /tmp/ccV1lX2G.s:841    .text:0000030c .Loc.209
     /tmp/ccV1lX2G.s:845    .text:00000312 .Loc.210
     /tmp/ccV1lX2G.s:849    .text:00000318 .Loc.211
     /tmp/ccV1lX2G.s:853    .text:0000031e .Loc.212
     /tmp/ccV1lX2G.s:857    .text:00000324 .Loc.213
     /tmp/ccV1lX2G.s:861    .text:0000032a .Loc.214
     /tmp/ccV1lX2G.s:865    .text:00000330 .Loc.215
     /tmp/ccV1lX2G.s:869    .text:00000336 .Loc.216
     /tmp/ccV1lX2G.s:873    .text:0000033c .Loc.217
     /tmp/ccV1lX2G.s:877    .text:00000342 .Loc.218
     /tmp/ccV1lX2G.s:881    .text:00000348 .Loc.219
     /tmp/ccV1lX2G.s:885    .text:0000034e .Loc.220
     /tmp/ccV1lX2G.s:889    .text:00000354 .Loc.221
     /tmp/ccV1lX2G.s:893    .text:0000035a .Loc.222
     /tmp/ccV1lX2G.s:899    .text:00000360 .Loc.223
     /tmp/ccV1lX2G.s:902    .text:00000360 .Loc.224
     /tmp/ccV1lX2G.s:904    .text:00000360 .Loc.225
     /tmp/ccV1lX2G.s:905    .text:00000360 .Loc.226
     /tmp/ccV1lX2G.s:906    .text:00000360 .Loc.227
     /tmp/ccV1lX2G.s:910    .text:00000366 .Loc.228
     /tmp/ccV1lX2G.s:914    .text:0000036c .Loc.229
     /tmp/ccV1lX2G.s:918    .text:00000372 .Loc.230
     /tmp/ccV1lX2G.s:922    .text:00000378 .Loc.231
     /tmp/ccV1lX2G.s:926    .text:0000037e .Loc.232
     /tmp/ccV1lX2G.s:931    .text:0000037e .Loc.233
     /tmp/ccV1lX2G.s:936    .text:0000037e .Loc.234
     /tmp/ccV1lX2G.s:945    .text:00000382 .Loc.235
     /tmp/ccV1lX2G.s:950    .text:00000386 .Loc.236
     /tmp/ccV1lX2G.s:953    .text:00000386 .Loc.237
     /tmp/ccV1lX2G.s:956    .text:00000386 .Loc.238
     /tmp/ccV1lX2G.s:958    .text:00000386 .Loc.239
     /tmp/ccV1lX2G.s:966    .text:0000038c .Loc.240
     /tmp/ccV1lX2G.s:970    .text:0000038c .Loc.241
     /tmp/ccV1lX2G.s:971    .text:0000038c .Loc.242
     /tmp/ccV1lX2G.s:974    .text:0000038e .Loc.243
     /tmp/ccV1lX2G.s:978    .text:00000392 .Loc.244
     /tmp/ccV1lX2G.s:981    .text:00000392 .Loc.245
     /tmp/ccV1lX2G.s:985    .text:00000398 .Loc.246
     /tmp/ccV1lX2G.s:988    .text:00000398 .Loc.247
     /tmp/ccV1lX2G.s:990    .text:00000398 .Loc.248
     /tmp/ccV1lX2G.s:991    .text:00000398 .Loc.249
     /tmp/ccV1lX2G.s:992    .text:00000398 .Loc.250
     /tmp/ccV1lX2G.s:993    .text:00000398 .Loc.251
     /tmp/ccV1lX2G.s:994    .text:00000398 .Loc.252
     /tmp/ccV1lX2G.s:995    .text:00000398 .Loc.253
     /tmp/ccV1lX2G.s:998    .text:00000398 .Loc.254
     /tmp/ccV1lX2G.s:1005   .text:0000039c .Loc.255
     /tmp/ccV1lX2G.s:1010   .text:000003a0 .Loc.256
     /tmp/ccV1lX2G.s:1013   .text:000003a0 .Loc.257
     /tmp/ccV1lX2G.s:1016   .text:000003a0 .Loc.258
     /tmp/ccV1lX2G.s:1018   .text:000003a0 .Loc.259
     /tmp/ccV1lX2G.s:1026   .text:000003a6 .Loc.260
     /tmp/ccV1lX2G.s:1030   .text:000003a6 .Loc.261
     /tmp/ccV1lX2G.s:1031   .text:000003a6 .Loc.262
     /tmp/ccV1lX2G.s:1034   .text:000003a8 .Loc.263
     /tmp/ccV1lX2G.s:1038   .text:000003ac .Loc.264
     /tmp/ccV1lX2G.s:1041   .text:000003ac .Loc.265
     /tmp/ccV1lX2G.s:1045   .text:000003b2 .Loc.266
     /tmp/ccV1lX2G.s:1056   .text:000003c6 .Loc.267
     /tmp/ccV1lX2G.s:1058   .text:000003c6 .Loc.268
     /tmp/ccV1lX2G.s:1059   .text:000003c6 .Loc.269
     /tmp/ccV1lX2G.s:1061   .text:000003c6 .Loc.270
     /tmp/ccV1lX2G.s:1086   .progmem.data:00000000 __c.0
     /tmp/ccV1lX2G.s:1070   .text:000003d2 .Loc.271
     /tmp/ccV1lX2G.s:1078   .text:000003da .Loc.272
     /tmp/ccV1lX2G.s:1080   .text:000003dc L0
     /tmp/ccV1lX2G.s:1099   .text:000003dc L0
                     .debug_frame:00000000 L0
     /tmp/ccV1lX2G.s:308    .text:000000f4 .L8
     /tmp/ccV1lX2G.s:275    .text:000000d8 .L6
     /tmp/ccV1lX2G.s:235    .text:000000b2 .L5
     /tmp/ccV1lX2G.s:297    .text:000000ea .L7
     /tmp/ccV1lX2G.s:404    .text:00000120 .L11
     /tmp/ccV1lX2G.s:391    .text:0000011e .L10
     /tmp/ccV1lX2G.s:463    .text:00000136 .L12
     /tmp/ccV1lX2G.s:450    .text:00000134 .L11
     /tmp/ccV1lX2G.s:522    .text:0000014c .L13
     /tmp/ccV1lX2G.s:509    .text:0000014a .L12
     /tmp/ccV1lX2G.s:962    .text:00000388 .L14
     /tmp/ccV1lX2G.s:949    .text:00000386 .L13
     /tmp/ccV1lX2G.s:1022   .text:000003a2 .L15
     /tmp/ccV1lX2G.s:1009   .text:000003a0 .L14
     /tmp/ccV1lX2G.s:3054   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccV1lX2G.s:8      .text:00000000 .Ltext0
     /tmp/ccV1lX2G.s:1093   .text:000003dc .Letext0
     /tmp/ccV1lX2G.s:4841   .debug_line:00000000 .Ldebug_line0
     /tmp/ccV1lX2G.s:99     .text:00000028 .LFB23
     /tmp/ccV1lX2G.s:314    .text:000000fa .LFE23
     /tmp/ccV1lX2G.s:3862   .debug_loclists:00000012 .LLST2
     /tmp/ccV1lX2G.s:3855   .debug_loclists:0000000c .LVUS2
     /tmp/ccV1lX2G.s:3899   .debug_loclists:00000038 .LLST3
     /tmp/ccV1lX2G.s:3892   .debug_loclists:00000032 .LVUS3
     /tmp/ccV1lX2G.s:3938   .debug_loclists:00000060 .LLST4
     /tmp/ccV1lX2G.s:3929   .debug_loclists:00000058 .LVUS4
     /tmp/ccV1lX2G.s:3987   .debug_loclists:00000094 .LLST5
     /tmp/ccV1lX2G.s:3978   .debug_loclists:0000008c .LVUS5
     /tmp/ccV1lX2G.s:4034   .debug_loclists:000000c6 .LLST6
     /tmp/ccV1lX2G.s:4027   .debug_loclists:000000c0 .LVUS6
     /tmp/ccV1lX2G.s:4067   .debug_loclists:000000ea .LLST7
     /tmp/ccV1lX2G.s:4064   .debug_loclists:000000e8 .LVUS7
     /tmp/ccV1lX2G.s:4084   .debug_loclists:000000fb .LLST8
     /tmp/ccV1lX2G.s:4079   .debug_loclists:000000f7 .LVUS8
     /tmp/ccV1lX2G.s:159    .text:00000050 .LBI60
     /tmp/ccV1lX2G.s:158    .text:00000050 .LBB60
     /tmp/ccV1lX2G.s:230    .text:000000ae .LBE60
     /tmp/ccV1lX2G.s:4109   .debug_loclists:00000116 .LLST9
     /tmp/ccV1lX2G.s:4106   .debug_loclists:00000114 .LVUS9
     /tmp/ccV1lX2G.s:4124   .debug_loclists:00000124 .LLST10
     /tmp/ccV1lX2G.s:4121   .debug_loclists:00000122 .LVUS10
     /tmp/ccV1lX2G.s:4139   .debug_loclists:00000132 .LLST11
     /tmp/ccV1lX2G.s:4136   .debug_loclists:00000130 .LVUS11
     /tmp/ccV1lX2G.s:4154   .debug_loclists:00000140 .LLST12
     /tmp/ccV1lX2G.s:4151   .debug_loclists:0000013e .LVUS12
     /tmp/ccV1lX2G.s:4169   .debug_loclists:0000014e .LLST13
     /tmp/ccV1lX2G.s:4166   .debug_loclists:0000014c .LVUS13
     /tmp/ccV1lX2G.s:4184   .debug_loclists:0000015c .LLST14
     /tmp/ccV1lX2G.s:4181   .debug_loclists:0000015a .LVUS14
     /tmp/ccV1lX2G.s:184    .text:0000006e .LVL12
     /tmp/ccV1lX2G.s:188    .text:00000074 .LVL13
     /tmp/ccV1lX2G.s:192    .text:0000007a .LVL14
     /tmp/ccV1lX2G.s:196    .text:00000080 .LVL15
     /tmp/ccV1lX2G.s:200    .text:00000086 .LVL16
     /tmp/ccV1lX2G.s:204    .text:0000008c .LVL17
     /tmp/ccV1lX2G.s:208    .text:00000092 .LVL18
     /tmp/ccV1lX2G.s:212    .text:00000098 .LVL19
     /tmp/ccV1lX2G.s:216    .text:0000009e .LVL20
     /tmp/ccV1lX2G.s:220    .text:000000a4 .LVL21
     /tmp/ccV1lX2G.s:224    .text:000000aa .LVL22
     /tmp/ccV1lX2G.s:242    .text:000000b8 .LBI62
     /tmp/ccV1lX2G.s:241    .text:000000b8 .LBB62
     /tmp/ccV1lX2G.s:249    .text:000000ba .LBE62
     /tmp/ccV1lX2G.s:278    .text:000000d8 .LBI64
     /tmp/ccV1lX2G.s:277    .text:000000d8 .LBB64
     /tmp/ccV1lX2G.s:291    .text:000000e4 .LBE64
     /tmp/ccV1lX2G.s:4199   .debug_loclists:0000016a .LLST15
     /tmp/ccV1lX2G.s:4196   .debug_loclists:00000168 .LVUS15
     /tmp/ccV1lX2G.s:284    .text:000000de .LVL29
     /tmp/ccV1lX2G.s:288    .text:000000e4 .LVL30
     /tmp/ccV1lX2G.s:156    .text:00000050 .LVL9
     /tmp/ccV1lX2G.s:320    .text:000000fa .LFB22
     /tmp/ccV1lX2G.s:1081   .text:000003dc .LFE22
     /tmp/ccV1lX2G.s:4216   .debug_loclists:0000017b .LLST16
     /tmp/ccV1lX2G.s:4211   .debug_loclists:00000177 .LVUS16
     /tmp/ccV1lX2G.s:4238   .debug_loclists:00000193 .LLST17
     /tmp/ccV1lX2G.s:4231   .debug_loclists:0000018d .LVUS17
     /tmp/ccV1lX2G.s:336    .text:00000100 .LBB94
     /tmp/ccV1lX2G.s:339    .text:00000100 .LBE94
     /tmp/ccV1lX2G.s:1057   .text:000003c6 .LBB143
     /tmp/ccV1lX2G.s:1060   .text:000003c6 .LBE143
     /tmp/ccV1lX2G.s:356    .text:00000110 .LBI95
     /tmp/ccV1lX2G.s:355    .text:00000110 .LBB95
     /tmp/ccV1lX2G.s:542    .text:00000156 .LBE95
     /tmp/ccV1lX2G.s:364    .text:00000112 .LBI97
     /tmp/ccV1lX2G.s:4751   .debug_rnglists:0000000c .LLRL18
     /tmp/ccV1lX2G.s:4271   .debug_loclists:000001b8 .LLST19
     /tmp/ccV1lX2G.s:4268   .debug_loclists:000001b6 .LVUS19
     /tmp/ccV1lX2G.s:4283   .debug_loclists:000001c7 .LLST20
     /tmp/ccV1lX2G.s:4280   .debug_loclists:000001c5 .LVUS20
     /tmp/ccV1lX2G.s:4301   .debug_loclists:000001dc .LLST21
     /tmp/ccV1lX2G.s:4292   .debug_loclists:000001d4 .LVUS21
     /tmp/ccV1lX2G.s:397    .text:0000011e .LBI99
     /tmp/ccV1lX2G.s:4759   .debug_rnglists:00000017 .LLRL22
     /tmp/ccV1lX2G.s:4340   .debug_loclists:0000020a .LLST23
     /tmp/ccV1lX2G.s:4337   .debug_loclists:00000208 .LVUS23
     /tmp/ccV1lX2G.s:428    .text:0000012c .LBI105
     /tmp/ccV1lX2G.s:4767   .debug_rnglists:00000022 .LLRL24
     /tmp/ccV1lX2G.s:4352   .debug_loclists:00000217 .LLST25
     /tmp/ccV1lX2G.s:4349   .debug_loclists:00000215 .LVUS25
     /tmp/ccV1lX2G.s:4364   .debug_loclists:00000226 .LLST26
     /tmp/ccV1lX2G.s:4361   .debug_loclists:00000224 .LVUS26
     /tmp/ccV1lX2G.s:4382   .debug_loclists:0000023b .LLST27
     /tmp/ccV1lX2G.s:4373   .debug_loclists:00000233 .LVUS27
     /tmp/ccV1lX2G.s:456    .text:00000134 .LBI107
     /tmp/ccV1lX2G.s:4775   .debug_rnglists:0000002d .LLRL28
     /tmp/ccV1lX2G.s:4421   .debug_loclists:00000269 .LLST29
     /tmp/ccV1lX2G.s:4418   .debug_loclists:00000267 .LVUS29
     /tmp/ccV1lX2G.s:487    .text:00000142 .LBI113
     /tmp/ccV1lX2G.s:4783   .debug_rnglists:00000038 .LLRL30
     /tmp/ccV1lX2G.s:4433   .debug_loclists:00000276 .LLST31
     /tmp/ccV1lX2G.s:4430   .debug_loclists:00000274 .LVUS31
     /tmp/ccV1lX2G.s:4445   .debug_loclists:00000285 .LLST32
     /tmp/ccV1lX2G.s:4442   .debug_loclists:00000283 .LVUS32
     /tmp/ccV1lX2G.s:4463   .debug_loclists:0000029a .LLST33
     /tmp/ccV1lX2G.s:4454   .debug_loclists:00000292 .LVUS33
     /tmp/ccV1lX2G.s:515    .text:0000014a .LBI115
     /tmp/ccV1lX2G.s:4791   .debug_rnglists:00000043 .LLRL34
     /tmp/ccV1lX2G.s:4502   .debug_loclists:000002c8 .LLST35
     /tmp/ccV1lX2G.s:4499   .debug_loclists:000002c6 .LVUS35
     /tmp/ccV1lX2G.s:546    .text:00000156 .LBI121
     /tmp/ccV1lX2G.s:545    .text:00000156 .LBB121
     /tmp/ccV1lX2G.s:898    .text:00000360 .LBE121
     /tmp/ccV1lX2G.s:552    .text:0000015c .LVL53
     /tmp/ccV1lX2G.s:556    .text:00000162 .LVL54
     /tmp/ccV1lX2G.s:560    .text:00000168 .LVL55
     /tmp/ccV1lX2G.s:564    .text:0000016e .LVL56
     /tmp/ccV1lX2G.s:568    .text:00000174 .LVL57
     /tmp/ccV1lX2G.s:572    .text:0000017a .LVL58
     /tmp/ccV1lX2G.s:576    .text:00000180 .LVL59
     /tmp/ccV1lX2G.s:580    .text:00000186 .LVL60
     /tmp/ccV1lX2G.s:584    .text:0000018c .LVL61
     /tmp/ccV1lX2G.s:588    .text:00000192 .LVL62
     /tmp/ccV1lX2G.s:592    .text:00000198 .LVL63
     /tmp/ccV1lX2G.s:596    .text:0000019e .LVL64
     /tmp/ccV1lX2G.s:600    .text:000001a4 .LVL65
     /tmp/ccV1lX2G.s:604    .text:000001aa .LVL66
     /tmp/ccV1lX2G.s:608    .text:000001b0 .LVL67
     /tmp/ccV1lX2G.s:612    .text:000001b6 .LVL68
     /tmp/ccV1lX2G.s:616    .text:000001bc .LVL69
     /tmp/ccV1lX2G.s:620    .text:000001c2 .LVL70
     /tmp/ccV1lX2G.s:624    .text:000001c8 .LVL71
     /tmp/ccV1lX2G.s:628    .text:000001ce .LVL72
     /tmp/ccV1lX2G.s:632    .text:000001d4 .LVL73
     /tmp/ccV1lX2G.s:636    .text:000001da .LVL74
     /tmp/ccV1lX2G.s:640    .text:000001e0 .LVL75
     /tmp/ccV1lX2G.s:644    .text:000001e6 .LVL76
     /tmp/ccV1lX2G.s:648    .text:000001ec .LVL77
     /tmp/ccV1lX2G.s:652    .text:000001f2 .LVL78
     /tmp/ccV1lX2G.s:656    .text:000001f8 .LVL79
     /tmp/ccV1lX2G.s:660    .text:000001fe .LVL80
     /tmp/ccV1lX2G.s:664    .text:00000204 .LVL81
     /tmp/ccV1lX2G.s:668    .text:0000020a .LVL82
     /tmp/ccV1lX2G.s:672    .text:00000210 .LVL83
     /tmp/ccV1lX2G.s:676    .text:00000216 .LVL84
     /tmp/ccV1lX2G.s:680    .text:0000021c .LVL85
     /tmp/ccV1lX2G.s:684    .text:00000222 .LVL86
     /tmp/ccV1lX2G.s:688    .text:00000228 .LVL87
     /tmp/ccV1lX2G.s:692    .text:0000022e .LVL88
     /tmp/ccV1lX2G.s:696    .text:00000234 .LVL89
     /tmp/ccV1lX2G.s:700    .text:0000023a .LVL90
     /tmp/ccV1lX2G.s:704    .text:00000240 .LVL91
     /tmp/ccV1lX2G.s:708    .text:00000246 .LVL92
     /tmp/ccV1lX2G.s:712    .text:0000024c .LVL93
     /tmp/ccV1lX2G.s:716    .text:00000252 .LVL94
     /tmp/ccV1lX2G.s:720    .text:00000258 .LVL95
     /tmp/ccV1lX2G.s:724    .text:0000025e .LVL96
     /tmp/ccV1lX2G.s:728    .text:00000264 .LVL97
     /tmp/ccV1lX2G.s:732    .text:0000026a .LVL98
     /tmp/ccV1lX2G.s:736    .text:00000270 .LVL99
     /tmp/ccV1lX2G.s:740    .text:00000276 .LVL100
     /tmp/ccV1lX2G.s:744    .text:0000027c .LVL101
     /tmp/ccV1lX2G.s:748    .text:00000282 .LVL102
     /tmp/ccV1lX2G.s:752    .text:00000288 .LVL103
     /tmp/ccV1lX2G.s:756    .text:0000028e .LVL104
     /tmp/ccV1lX2G.s:760    .text:00000294 .LVL105
     /tmp/ccV1lX2G.s:764    .text:0000029a .LVL106
     /tmp/ccV1lX2G.s:768    .text:000002a0 .LVL107
     /tmp/ccV1lX2G.s:772    .text:000002a6 .LVL108
     /tmp/ccV1lX2G.s:776    .text:000002ac .LVL109
     /tmp/ccV1lX2G.s:780    .text:000002b2 .LVL110
     /tmp/ccV1lX2G.s:784    .text:000002b8 .LVL111
     /tmp/ccV1lX2G.s:788    .text:000002be .LVL112
     /tmp/ccV1lX2G.s:792    .text:000002c4 .LVL113
     /tmp/ccV1lX2G.s:796    .text:000002ca .LVL114
     /tmp/ccV1lX2G.s:800    .text:000002d0 .LVL115
     /tmp/ccV1lX2G.s:804    .text:000002d6 .LVL116
     /tmp/ccV1lX2G.s:808    .text:000002dc .LVL117
     /tmp/ccV1lX2G.s:812    .text:000002e2 .LVL118
     /tmp/ccV1lX2G.s:816    .text:000002e8 .LVL119
     /tmp/ccV1lX2G.s:820    .text:000002ee .LVL120
     /tmp/ccV1lX2G.s:824    .text:000002f4 .LVL121
     /tmp/ccV1lX2G.s:828    .text:000002fa .LVL122
     /tmp/ccV1lX2G.s:832    .text:00000300 .LVL123
     /tmp/ccV1lX2G.s:836    .text:00000306 .LVL124
     /tmp/ccV1lX2G.s:840    .text:0000030c .LVL125
     /tmp/ccV1lX2G.s:844    .text:00000312 .LVL126
     /tmp/ccV1lX2G.s:848    .text:00000318 .LVL127
     /tmp/ccV1lX2G.s:852    .text:0000031e .LVL128
     /tmp/ccV1lX2G.s:856    .text:00000324 .LVL129
     /tmp/ccV1lX2G.s:860    .text:0000032a .LVL130
     /tmp/ccV1lX2G.s:864    .text:00000330 .LVL131
     /tmp/ccV1lX2G.s:868    .text:00000336 .LVL132
     /tmp/ccV1lX2G.s:872    .text:0000033c .LVL133
     /tmp/ccV1lX2G.s:876    .text:00000342 .LVL134
     /tmp/ccV1lX2G.s:880    .text:00000348 .LVL135
     /tmp/ccV1lX2G.s:884    .text:0000034e .LVL136
     /tmp/ccV1lX2G.s:888    .text:00000354 .LVL137
     /tmp/ccV1lX2G.s:892    .text:0000035a .LVL138
     /tmp/ccV1lX2G.s:896    .text:00000360 .LVL139
     /tmp/ccV1lX2G.s:901    .text:00000360 .LBI123
     /tmp/ccV1lX2G.s:4799   .debug_rnglists:0000004e .LLRL36
     /tmp/ccV1lX2G.s:4514   .debug_loclists:000002d5 .LLST37
     /tmp/ccV1lX2G.s:4511   .debug_loclists:000002d3 .LVUS37
     /tmp/ccV1lX2G.s:4525   .debug_loclists:000002e0 .LLST38
     /tmp/ccV1lX2G.s:4522   .debug_loclists:000002de .LVUS38
     /tmp/ccV1lX2G.s:4536   .debug_loclists:000002eb .LLST39
     /tmp/ccV1lX2G.s:4533   .debug_loclists:000002e9 .LVUS39
     /tmp/ccV1lX2G.s:909    .text:00000366 .LVL140
     /tmp/ccV1lX2G.s:913    .text:0000036c .LVL141
     /tmp/ccV1lX2G.s:917    .text:00000372 .LVL142
     /tmp/ccV1lX2G.s:921    .text:00000378 .LVL143
     /tmp/ccV1lX2G.s:925    .text:0000037e .LVL144
     /tmp/ccV1lX2G.s:4807   .debug_rnglists:00000059 .LLRL40
     /tmp/ccV1lX2G.s:4554   .debug_loclists:000002fd .LLST41
     /tmp/ccV1lX2G.s:4545   .debug_loclists:000002f5 .LVUS41
     /tmp/ccV1lX2G.s:955    .text:00000386 .LBI128
     /tmp/ccV1lX2G.s:4815   .debug_rnglists:00000064 .LLRL42
     /tmp/ccV1lX2G.s:4593   .debug_loclists:0000032b .LLST43
     /tmp/ccV1lX2G.s:4590   .debug_loclists:00000329 .LVUS43
     /tmp/ccV1lX2G.s:987    .text:00000398 .LBI135
     /tmp/ccV1lX2G.s:4823   .debug_rnglists:0000006f .LLRL44
     /tmp/ccV1lX2G.s:4605   .debug_loclists:00000338 .LLST45
     /tmp/ccV1lX2G.s:4602   .debug_loclists:00000336 .LVUS45
     /tmp/ccV1lX2G.s:4617   .debug_loclists:00000347 .LLST46
     /tmp/ccV1lX2G.s:4614   .debug_loclists:00000345 .LVUS46
     /tmp/ccV1lX2G.s:4635   .debug_loclists:0000035c .LLST47
     /tmp/ccV1lX2G.s:4626   .debug_loclists:00000354 .LVUS47
     /tmp/ccV1lX2G.s:1015   .text:000003a0 .LBI137
     /tmp/ccV1lX2G.s:4831   .debug_rnglists:0000007a .LLRL48
     /tmp/ccV1lX2G.s:4674   .debug_loclists:0000038a .LLST49
     /tmp/ccV1lX2G.s:4671   .debug_loclists:00000388 .LVUS49
     /tmp/ccV1lX2G.s:350    .text:0000010c .LVL36
     /tmp/ccV1lX2G.s:353    .text:00000110 .LVL37
     /tmp/ccV1lX2G.s:984    .text:00000398 .LVL149
     /tmp/ccV1lX2G.s:1044   .text:000003b2 .LVL154
     /tmp/ccV1lX2G.s:1055   .text:000003c6 .LVL155
     /tmp/ccV1lX2G.s:1069   .text:000003d2 .LVL156
     /tmp/ccV1lX2G.s:14     .text:00000000 .LFB15
     /tmp/ccV1lX2G.s:50     .text:0000001a .LFE15
     /tmp/ccV1lX2G.s:4690   .debug_loclists:0000039b .LLST0
     /tmp/ccV1lX2G.s:4683   .debug_loclists:00000395 .LVUS0
     /tmp/ccV1lX2G.s:36     .text:0000000e .LVL2
     /tmp/ccV1lX2G.s:40     .text:00000014 .LVL3
     /tmp/ccV1lX2G.s:55     .text:0000001a .LFB14
     /tmp/ccV1lX2G.s:75     .text:00000026 .LFE14
     /tmp/ccV1lX2G.s:4715   .debug_loclists:000003b2 .LLST1
     /tmp/ccV1lX2G.s:4710   .debug_loclists:000003ae .LVUS1
     /tmp/ccV1lX2G.s:68     .text:00000022 .LVL6
     /tmp/ccV1lX2G.s:81     .text:00000026 .LFB21
     /tmp/ccV1lX2G.s:93     .text:00000028 .LFE21
     /tmp/ccV1lX2G.s:1100   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
spi_xchg
spi_fast
log_boot_P
