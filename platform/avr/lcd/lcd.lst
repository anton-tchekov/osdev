   1               		.file	"lcd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "lcd/lcd.c"
  12               	_lcd_window_end:
  13               	.LFB18:
  14               		.file 1 "lcd/lcd.c"
   1:lcd/lcd.c     **** /**
   2:lcd/lcd.c     ****  * @file    lcd.c
   3:lcd/lcd.c     ****  * @author  Anton Tchekov
   4:lcd/lcd.c     ****  * @version 0.2
   5:lcd/lcd.c     ****  * @date    17.05.2023
   6:lcd/lcd.c     ****  */
   7:lcd/lcd.c     **** 
   8:lcd/lcd.c     **** #include <lcd.h>
   9:lcd/lcd.c     **** #include <logger.h>
  10:lcd/lcd.c     **** #include <spi.h>
  11:lcd/lcd.c     **** #include <gpio.h>
  12:lcd/lcd.c     **** #include <avr/pgmspace.h>
  13:lcd/lcd.c     **** #include <util/delay.h>
  14:lcd/lcd.c     **** 
  15:lcd/lcd.c     **** enum
  16:lcd/lcd.c     **** {
  17:lcd/lcd.c     **** 	L2R_U2D,
  18:lcd/lcd.c     **** 	L2R_D2U,
  19:lcd/lcd.c     **** 	R2L_U2D,
  20:lcd/lcd.c     **** 	R2L_D2U,
  21:lcd/lcd.c     **** 	U2D_L2R,
  22:lcd/lcd.c     **** 	U2D_R2L,
  23:lcd/lcd.c     **** 	D2U_L2R,
  24:lcd/lcd.c     **** 	D2U_R2L
  25:lcd/lcd.c     **** };
  26:lcd/lcd.c     **** 
  27:lcd/lcd.c     **** #define SCAN_DIR       L2R_U2D
  28:lcd/lcd.c     **** 
  29:lcd/lcd.c     **** static bool _lcd_initialized;
  30:lcd/lcd.c     **** 
  31:lcd/lcd.c     **** /* --- PRIVATE --- */
  32:lcd/lcd.c     **** static void _lcd_reset(void)
  33:lcd/lcd.c     **** {
  34:lcd/lcd.c     **** 	LCD_RST_1;
  35:lcd/lcd.c     **** 	_delay_ms(500);
  36:lcd/lcd.c     **** 	LCD_RST_0;
  37:lcd/lcd.c     **** 	_delay_ms(500);
  38:lcd/lcd.c     **** 	LCD_RST_1;
  39:lcd/lcd.c     **** 	_delay_ms(500);
  40:lcd/lcd.c     **** }
  41:lcd/lcd.c     **** 
  42:lcd/lcd.c     **** static void _lcd_write_reg(u8 reg)
  43:lcd/lcd.c     **** {
  44:lcd/lcd.c     **** 	LCD_DC_0;
  45:lcd/lcd.c     **** 	LCD_CS_0;
  46:lcd/lcd.c     **** 	spi_xchg(reg);
  47:lcd/lcd.c     **** 	LCD_CS_1;
  48:lcd/lcd.c     **** }
  49:lcd/lcd.c     **** 
  50:lcd/lcd.c     **** static void _lcd_write_data(u8 data)
  51:lcd/lcd.c     **** {
  52:lcd/lcd.c     **** 	LCD_DC_1;
  53:lcd/lcd.c     **** 	LCD_CS_0;
  54:lcd/lcd.c     **** 	spi_xchg(0);
  55:lcd/lcd.c     **** 	spi_xchg(data);
  56:lcd/lcd.c     **** 	LCD_CS_1;
  57:lcd/lcd.c     **** }
  58:lcd/lcd.c     **** 
  59:lcd/lcd.c     **** static void _lcd_window_start(u16 x, u16 y, u16 w, u16 h)
  60:lcd/lcd.c     **** {
  61:lcd/lcd.c     **** 	u16 x_end, y_end;
  62:lcd/lcd.c     **** 
  63:lcd/lcd.c     **** 	x_end = x + w - 1;
  64:lcd/lcd.c     **** 	y_end = y + h - 1;
  65:lcd/lcd.c     **** 
  66:lcd/lcd.c     **** 	spi_fast();
  67:lcd/lcd.c     **** 
  68:lcd/lcd.c     **** 	_lcd_write_reg(0x2A);
  69:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
  70:lcd/lcd.c     **** 	_lcd_write_data(x);
  71:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
  72:lcd/lcd.c     **** 	_lcd_write_data(x_end);
  73:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
  74:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
  75:lcd/lcd.c     **** 	_lcd_write_data(y);
  76:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
  77:lcd/lcd.c     **** 	_lcd_write_data(y_end);
  78:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
  79:lcd/lcd.c     **** 	LCD_DC_1;
  80:lcd/lcd.c     **** 	LCD_CS_0;
  81:lcd/lcd.c     **** }
  82:lcd/lcd.c     **** 
  83:lcd/lcd.c     **** static inline void _lcd_pixel(u16 data)
  84:lcd/lcd.c     **** {
  85:lcd/lcd.c     **** 	spi_xchg(data >> 8);
  86:lcd/lcd.c     **** 	spi_xchg(data);
  87:lcd/lcd.c     **** }
  88:lcd/lcd.c     **** 
  89:lcd/lcd.c     **** static inline void _lcd_window_end(void)
  90:lcd/lcd.c     **** {
  15               		.loc 1 90 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  91:lcd/lcd.c     **** 	LCD_CS_1;
  21               		.loc 1 91 2 view .LVU1
  22 0000 409A      		sbi 0x8,0
  23               	/* epilogue start */
  92:lcd/lcd.c     **** }
  24               		.loc 1 92 1 is_stmt 0 view .LVU2
  25 0002 0895      		ret
  26               		.cfi_endproc
  27               	.LFE18:
  30               	_lcd_write_data:
  31               	.LVL0:
  32               	.LFB15:
  51:lcd/lcd.c     **** 	LCD_DC_1;
  33               		.loc 1 51 1 is_stmt 1 view -0
  34               		.cfi_startproc
  51:lcd/lcd.c     **** 	LCD_DC_1;
  35               		.loc 1 51 1 is_stmt 0 view .LVU4
  36 0004 CF93      		push r28
  37               		.cfi_def_cfa_offset 3
  38               		.cfi_offset 28, -2
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 1 */
  42               	.L__stack_usage = 1
  43 0006 C82F      		mov r28,r24
  52:lcd/lcd.c     **** 	LCD_CS_0;
  44               		.loc 1 52 2 is_stmt 1 view .LVU5
  45 0008 419A      		sbi 0x8,1
  53:lcd/lcd.c     **** 	spi_xchg(0);
  46               		.loc 1 53 2 view .LVU6
  47 000a 4098      		cbi 0x8,0
  54:lcd/lcd.c     **** 	spi_xchg(data);
  48               		.loc 1 54 2 view .LVU7
  49 000c 80E0      		ldi r24,0
  50               	.LVL1:
  54:lcd/lcd.c     **** 	spi_xchg(data);
  51               		.loc 1 54 2 is_stmt 0 view .LVU8
  52 000e 0E94 0000 		call spi_xchg
  53               	.LVL2:
  55:lcd/lcd.c     **** 	LCD_CS_1;
  54               		.loc 1 55 2 is_stmt 1 view .LVU9
  55 0012 8C2F      		mov r24,r28
  56 0014 0E94 0000 		call spi_xchg
  57               	.LVL3:
  56:lcd/lcd.c     **** }
  58               		.loc 1 56 2 view .LVU10
  59 0018 409A      		sbi 0x8,0
  60               	/* epilogue start */
  57:lcd/lcd.c     **** 
  61               		.loc 1 57 1 is_stmt 0 view .LVU11
  62 001a CF91      		pop r28
  63               	.LVL4:
  57:lcd/lcd.c     **** 
  64               		.loc 1 57 1 view .LVU12
  65 001c 0895      		ret
  66               		.cfi_endproc
  67               	.LFE15:
  70               	_lcd_write_reg:
  71               	.LVL5:
  72               	.LFB14:
  43:lcd/lcd.c     **** 	LCD_DC_0;
  73               		.loc 1 43 1 is_stmt 1 view -0
  74               		.cfi_startproc
  75               	/* prologue: function */
  76               	/* frame size = 0 */
  77               	/* stack size = 0 */
  78               	.L__stack_usage = 0
  44:lcd/lcd.c     **** 	LCD_CS_0;
  79               		.loc 1 44 2 view .LVU14
  80 001e 4198      		cbi 0x8,1
  45:lcd/lcd.c     **** 	spi_xchg(reg);
  81               		.loc 1 45 2 view .LVU15
  82 0020 4098      		cbi 0x8,0
  46:lcd/lcd.c     **** 	LCD_CS_1;
  83               		.loc 1 46 2 view .LVU16
  84 0022 0E94 0000 		call spi_xchg
  85               	.LVL6:
  47:lcd/lcd.c     **** }
  86               		.loc 1 47 2 view .LVU17
  87 0026 409A      		sbi 0x8,0
  88               	/* epilogue start */
  48:lcd/lcd.c     **** 
  89               		.loc 1 48 1 is_stmt 0 view .LVU18
  90 0028 0895      		ret
  91               		.cfi_endproc
  92               	.LFE14:
  95               	_lcd_window_start:
  96               	.LVL7:
  97               	.LFB16:
  60:lcd/lcd.c     **** 	u16 x_end, y_end;
  98               		.loc 1 60 1 is_stmt 1 view -0
  99               		.cfi_startproc
  60:lcd/lcd.c     **** 	u16 x_end, y_end;
 100               		.loc 1 60 1 is_stmt 0 view .LVU20
 101 002a CF92      		push r12
 102               		.cfi_def_cfa_offset 3
 103               		.cfi_offset 12, -2
 104 002c DF92      		push r13
 105               		.cfi_def_cfa_offset 4
 106               		.cfi_offset 13, -3
 107 002e EF92      		push r14
 108               		.cfi_def_cfa_offset 5
 109               		.cfi_offset 14, -4
 110 0030 FF92      		push r15
 111               		.cfi_def_cfa_offset 6
 112               		.cfi_offset 15, -5
 113 0032 0F93      		push r16
 114               		.cfi_def_cfa_offset 7
 115               		.cfi_offset 16, -6
 116 0034 1F93      		push r17
 117               		.cfi_def_cfa_offset 8
 118               		.cfi_offset 17, -7
 119 0036 CF93      		push r28
 120               		.cfi_def_cfa_offset 9
 121               		.cfi_offset 28, -8
 122 0038 DF93      		push r29
 123               		.cfi_def_cfa_offset 10
 124               		.cfi_offset 29, -9
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 8 */
 128               	.L__stack_usage = 8
 129 003a 6C01      		movw r12,r24
 130 003c 7B01      		movw r14,r22
  61:lcd/lcd.c     **** 
 131               		.loc 1 61 2 is_stmt 1 view .LVU21
  63:lcd/lcd.c     **** 	y_end = y + h - 1;
 132               		.loc 1 63 2 view .LVU22
  63:lcd/lcd.c     **** 	y_end = y + h - 1;
 133               		.loc 1 63 8 is_stmt 0 view .LVU23
 134 003e 8A01      		movw r16,r20
 135 0040 0150      		subi r16,1
 136 0042 1109      		sbc r17,__zero_reg__
 137 0044 080F      		add r16,r24
 138 0046 191F      		adc r17,r25
 139               	.LVL8:
  64:lcd/lcd.c     **** 
 140               		.loc 1 64 2 is_stmt 1 view .LVU24
  64:lcd/lcd.c     **** 
 141               		.loc 1 64 8 is_stmt 0 view .LVU25
 142 0048 E901      		movw r28,r18
 143 004a 2197      		sbiw r28,1
 144 004c C60F      		add r28,r22
 145 004e D71F      		adc r29,r23
 146               	.LVL9:
  66:lcd/lcd.c     **** 
 147               		.loc 1 66 2 is_stmt 1 view .LVU26
 148 0050 0E94 0000 		call spi_fast
 149               	.LVL10:
  68:lcd/lcd.c     **** 	_lcd_write_data(x >> 8);
 150               		.loc 1 68 2 view .LVU27
 151 0054 8AE2      		ldi r24,lo8(42)
 152 0056 0E94 0000 		call _lcd_write_reg
 153               	.LVL11:
  69:lcd/lcd.c     **** 	_lcd_write_data(x);
 154               		.loc 1 69 2 view .LVU28
 155 005a 8D2D      		mov r24,r13
 156 005c 0E94 0000 		call _lcd_write_data
 157               	.LVL12:
  70:lcd/lcd.c     **** 	_lcd_write_data(x_end >> 8);
 158               		.loc 1 70 2 view .LVU29
 159 0060 8C2D      		mov r24,r12
 160 0062 0E94 0000 		call _lcd_write_data
 161               	.LVL13:
  71:lcd/lcd.c     **** 	_lcd_write_data(x_end);
 162               		.loc 1 71 2 view .LVU30
 163 0066 812F      		mov r24,r17
 164 0068 0E94 0000 		call _lcd_write_data
 165               	.LVL14:
  72:lcd/lcd.c     **** 	_lcd_write_reg(0x2B);
 166               		.loc 1 72 2 view .LVU31
 167 006c 802F      		mov r24,r16
 168 006e 0E94 0000 		call _lcd_write_data
 169               	.LVL15:
  73:lcd/lcd.c     **** 	_lcd_write_data(y >> 8);
 170               		.loc 1 73 2 view .LVU32
 171 0072 8BE2      		ldi r24,lo8(43)
 172 0074 0E94 0000 		call _lcd_write_reg
 173               	.LVL16:
  74:lcd/lcd.c     **** 	_lcd_write_data(y);
 174               		.loc 1 74 2 view .LVU33
 175 0078 8F2D      		mov r24,r15
 176 007a 0E94 0000 		call _lcd_write_data
 177               	.LVL17:
  75:lcd/lcd.c     **** 	_lcd_write_data(y_end >> 8);
 178               		.loc 1 75 2 view .LVU34
 179 007e 8E2D      		mov r24,r14
 180 0080 0E94 0000 		call _lcd_write_data
 181               	.LVL18:
  76:lcd/lcd.c     **** 	_lcd_write_data(y_end);
 182               		.loc 1 76 2 view .LVU35
 183 0084 8D2F      		mov r24,r29
 184 0086 0E94 0000 		call _lcd_write_data
 185               	.LVL19:
  77:lcd/lcd.c     **** 	_lcd_write_reg(0x2C);
 186               		.loc 1 77 2 view .LVU36
 187 008a 8C2F      		mov r24,r28
 188 008c 0E94 0000 		call _lcd_write_data
 189               	.LVL20:
  78:lcd/lcd.c     **** 	LCD_DC_1;
 190               		.loc 1 78 2 view .LVU37
 191 0090 8CE2      		ldi r24,lo8(44)
 192 0092 0E94 0000 		call _lcd_write_reg
 193               	.LVL21:
  79:lcd/lcd.c     **** 	LCD_CS_0;
 194               		.loc 1 79 2 view .LVU38
 195 0096 419A      		sbi 0x8,1
  80:lcd/lcd.c     **** }
 196               		.loc 1 80 2 view .LVU39
 197 0098 4098      		cbi 0x8,0
 198               	/* epilogue start */
  81:lcd/lcd.c     **** 
 199               		.loc 1 81 1 is_stmt 0 view .LVU40
 200 009a DF91      		pop r29
 201 009c CF91      		pop r28
 202               	.LVL22:
  81:lcd/lcd.c     **** 
 203               		.loc 1 81 1 view .LVU41
 204 009e 1F91      		pop r17
 205 00a0 0F91      		pop r16
 206               	.LVL23:
  81:lcd/lcd.c     **** 
 207               		.loc 1 81 1 view .LVU42
 208 00a2 FF90      		pop r15
 209 00a4 EF90      		pop r14
 210               	.LVL24:
  81:lcd/lcd.c     **** 
 211               		.loc 1 81 1 view .LVU43
 212 00a6 DF90      		pop r13
 213 00a8 CF90      		pop r12
 214               	.LVL25:
  81:lcd/lcd.c     **** 
 215               		.loc 1 81 1 view .LVU44
 216 00aa 0895      		ret
 217               		.cfi_endproc
 218               	.LFE16:
 221               	_lcd_pixel:
 222               	.LVL26:
 223               	.LFB17:
  84:lcd/lcd.c     **** 	spi_xchg(data >> 8);
 224               		.loc 1 84 1 is_stmt 1 view -0
 225               		.cfi_startproc
  84:lcd/lcd.c     **** 	spi_xchg(data >> 8);
 226               		.loc 1 84 1 is_stmt 0 view .LVU46
 227 00ac CF93      		push r28
 228               		.cfi_def_cfa_offset 3
 229               		.cfi_offset 28, -2
 230               	/* prologue: function */
 231               	/* frame size = 0 */
 232               	/* stack size = 1 */
 233               	.L__stack_usage = 1
 234 00ae C82F      		mov r28,r24
 235 00b0 892F      		mov r24,r25
 236               	.LVL27:
  85:lcd/lcd.c     **** 	spi_xchg(data);
 237               		.loc 1 85 2 is_stmt 1 view .LVU47
 238 00b2 0E94 0000 		call spi_xchg
 239               	.LVL28:
  86:lcd/lcd.c     **** }
 240               		.loc 1 86 2 view .LVU48
 241 00b6 8C2F      		mov r24,r28
 242               	/* epilogue start */
  87:lcd/lcd.c     **** 
 243               		.loc 1 87 1 is_stmt 0 view .LVU49
 244 00b8 CF91      		pop r28
  86:lcd/lcd.c     **** }
 245               		.loc 1 86 2 view .LVU50
 246 00ba 0C94 0000 		jmp spi_xchg
 247               	.LVL29:
 248               		.cfi_endproc
 249               	.LFE17:
 251               	.global	lcd_backlight
 253               	lcd_backlight:
 254               	.LVL30:
 255               	.LFB21:
  93:lcd/lcd.c     **** 
  94:lcd/lcd.c     **** static void _lcd_init_reg(void)
  95:lcd/lcd.c     **** {
  96:lcd/lcd.c     **** 	_lcd_write_reg(0xF9);
  97:lcd/lcd.c     **** 	_lcd_write_data(0x00);
  98:lcd/lcd.c     **** 	_lcd_write_data(0x08);
  99:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
 100:lcd/lcd.c     **** 	_lcd_write_data(0x19);
 101:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
 102:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
 103:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 104:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 105:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 106:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 107:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 108:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 109:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 110:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 111:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 112:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 113:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 114:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 115:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 116:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 117:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 118:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 119:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 120:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 121:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 122:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 123:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 124:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 125:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 126:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 127:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 128:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 129:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 130:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 131:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 132:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 133:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 134:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 135:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 136:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 137:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 138:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 139:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 140:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 141:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 142:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 143:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 144:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 145:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 146:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 147:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 148:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 149:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 150:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 151:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 152:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 153:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 154:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 155:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 156:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 157:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 158:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 159:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 160:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 161:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 162:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 163:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 164:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 165:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 166:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 167:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 168:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 169:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 170:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 171:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 172:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 173:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 174:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 175:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 176:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 177:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 178:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 179:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 180:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 181:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 182:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 183:lcd/lcd.c     **** }
 184:lcd/lcd.c     **** 
 185:lcd/lcd.c     **** static void _lcd_set_gram_scan_dir(u8 scan_dir)
 186:lcd/lcd.c     **** {
 187:lcd/lcd.c     **** 	u16 a, b;
 188:lcd/lcd.c     **** 	switch(scan_dir)
 189:lcd/lcd.c     **** 	{
 190:lcd/lcd.c     **** 	case L2R_U2D:
 191:lcd/lcd.c     **** 		a = 0x08;
 192:lcd/lcd.c     **** 		b = 0x22;
 193:lcd/lcd.c     **** 		break;
 194:lcd/lcd.c     **** 
 195:lcd/lcd.c     **** 	case L2R_D2U:
 196:lcd/lcd.c     **** 		a = 0x08;
 197:lcd/lcd.c     **** 		b = 0x62;
 198:lcd/lcd.c     **** 		break;
 199:lcd/lcd.c     **** 
 200:lcd/lcd.c     **** 	case R2L_U2D:
 201:lcd/lcd.c     **** 		a = 0x08;
 202:lcd/lcd.c     **** 		b = 0x02;
 203:lcd/lcd.c     **** 		break;
 204:lcd/lcd.c     **** 
 205:lcd/lcd.c     **** 	case R2L_D2U:
 206:lcd/lcd.c     **** 		a = 0x08;
 207:lcd/lcd.c     **** 		b = 0x42;
 208:lcd/lcd.c     **** 		break;
 209:lcd/lcd.c     **** 
 210:lcd/lcd.c     **** 	case U2D_L2R:
 211:lcd/lcd.c     **** 		a = 0x28;
 212:lcd/lcd.c     **** 		b = 0x22;
 213:lcd/lcd.c     **** 		break;
 214:lcd/lcd.c     **** 
 215:lcd/lcd.c     **** 	case U2D_R2L:
 216:lcd/lcd.c     **** 		a = 0x28;
 217:lcd/lcd.c     **** 		b = 0x02;
 218:lcd/lcd.c     **** 		break;
 219:lcd/lcd.c     **** 
 220:lcd/lcd.c     **** 	case D2U_L2R:
 221:lcd/lcd.c     **** 		a = 0x28;
 222:lcd/lcd.c     **** 		b = 0x62;
 223:lcd/lcd.c     **** 		break;
 224:lcd/lcd.c     **** 
 225:lcd/lcd.c     **** 	case D2U_R2L:
 226:lcd/lcd.c     **** 		a = 0x28;
 227:lcd/lcd.c     **** 		b = 0x42;
 228:lcd/lcd.c     **** 		break;
 229:lcd/lcd.c     **** 	}
 230:lcd/lcd.c     **** 
 231:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 232:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 233:lcd/lcd.c     **** 	_lcd_write_data(b);
 234:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 235:lcd/lcd.c     **** 	_lcd_write_data(a);
 236:lcd/lcd.c     **** }
 237:lcd/lcd.c     **** 
 238:lcd/lcd.c     **** /* --- PUBLIC --- */
 239:lcd/lcd.c     **** void lcd_backlight(u8 value)
 240:lcd/lcd.c     **** {
 256               		.loc 1 240 1 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 241:lcd/lcd.c     **** 	/* TODO: Write PWM Value */
 242:lcd/lcd.c     **** 	(void)value;
 262               		.loc 1 242 2 view .LVU52
 263               	/* epilogue start */
 243:lcd/lcd.c     **** }
 264               		.loc 1 243 1 is_stmt 0 view .LVU53
 265 00be 0895      		ret
 266               		.cfi_endproc
 267               	.LFE21:
 269               	.global	lcd_initialized
 271               	lcd_initialized:
 272               	.LFB22:
 244:lcd/lcd.c     **** 
 245:lcd/lcd.c     **** bool lcd_initialized(void)
 246:lcd/lcd.c     **** {
 273               		.loc 1 246 1 is_stmt 1 view -0
 274               		.cfi_startproc
 275               	/* prologue: function */
 276               	/* frame size = 0 */
 277               	/* stack size = 0 */
 278               	.L__stack_usage = 0
 247:lcd/lcd.c     **** 	return _lcd_initialized;
 279               		.loc 1 247 2 view .LVU55
 248:lcd/lcd.c     **** }
 280               		.loc 1 248 1 is_stmt 0 view .LVU56
 281 00c0 8091 0000 		lds r24,_lcd_initialized
 282               	/* epilogue start */
 283 00c4 0895      		ret
 284               		.cfi_endproc
 285               	.LFE22:
 287               	.global	lcd_rect
 289               	lcd_rect:
 290               	.LVL31:
 291               	.LFB24:
 249:lcd/lcd.c     **** 
 250:lcd/lcd.c     **** void lcd_init(u8 backlight, RGB565 bg)
 251:lcd/lcd.c     **** {
 252:lcd/lcd.c     **** 	/* Initialize LCD */
 253:lcd/lcd.c     **** 	log_boot_P(LOG_INIT, PSTR("LCD driver starting"));
 254:lcd/lcd.c     **** 	spi_fast();
 255:lcd/lcd.c     **** 	_lcd_reset();
 256:lcd/lcd.c     **** 	lcd_backlight(backlight);
 257:lcd/lcd.c     **** 	_lcd_init_reg();
 258:lcd/lcd.c     **** 	_lcd_set_gram_scan_dir(SCAN_DIR);
 259:lcd/lcd.c     **** 	_delay_ms(200);
 260:lcd/lcd.c     **** 	_lcd_write_reg(0x11);
 261:lcd/lcd.c     **** 	_delay_ms(120);
 262:lcd/lcd.c     **** 	_lcd_write_reg(0x29);
 263:lcd/lcd.c     **** 
 264:lcd/lcd.c     **** 	lcd_rect(0, 0, LCD_WIDTH, LCD_HEIGHT, bg);
 265:lcd/lcd.c     **** 
 266:lcd/lcd.c     **** 	log_boot_P(LOG_INIT, PSTR("LCD driver initialized"));
 267:lcd/lcd.c     **** 	_lcd_initialized = true;
 268:lcd/lcd.c     **** }
 269:lcd/lcd.c     **** 
 270:lcd/lcd.c     **** void lcd_rect(u16 x, u16 y, u16 w, u16 h, RGB565 color)
 271:lcd/lcd.c     **** {
 292               		.loc 1 271 1 is_stmt 1 view -0
 293               		.cfi_startproc
 294               		.loc 1 271 1 is_stmt 0 view .LVU58
 295 00c6 AF92      		push r10
 296               		.cfi_def_cfa_offset 3
 297               		.cfi_offset 10, -2
 298 00c8 BF92      		push r11
 299               		.cfi_def_cfa_offset 4
 300               		.cfi_offset 11, -3
 301 00ca CF92      		push r12
 302               		.cfi_def_cfa_offset 5
 303               		.cfi_offset 12, -4
 304 00cc DF92      		push r13
 305               		.cfi_def_cfa_offset 6
 306               		.cfi_offset 13, -5
 307 00ce EF92      		push r14
 308               		.cfi_def_cfa_offset 7
 309               		.cfi_offset 14, -6
 310 00d0 FF92      		push r15
 311               		.cfi_def_cfa_offset 8
 312               		.cfi_offset 15, -7
 313 00d2 0F93      		push r16
 314               		.cfi_def_cfa_offset 9
 315               		.cfi_offset 16, -8
 316 00d4 1F93      		push r17
 317               		.cfi_def_cfa_offset 10
 318               		.cfi_offset 17, -9
 319 00d6 CF93      		push r28
 320               		.cfi_def_cfa_offset 11
 321               		.cfi_offset 28, -10
 322 00d8 DF93      		push r29
 323               		.cfi_def_cfa_offset 12
 324               		.cfi_offset 29, -11
 325               	/* prologue: function */
 326               	/* frame size = 0 */
 327               	/* stack size = 10 */
 328               	.L__stack_usage = 10
 329 00da 7A01      		movw r14,r20
 330 00dc E901      		movw r28,r18
 272:lcd/lcd.c     **** 	u16 w0, h0;
 331               		.loc 1 272 2 is_stmt 1 view .LVU59
 273:lcd/lcd.c     **** 
 274:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 332               		.loc 1 274 2 view .LVU60
 333 00de 0E94 0000 		call _lcd_window_start
 334               	.LVL32:
 275:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 335               		.loc 1 275 2 view .LVU61
 336               		.loc 1 275 9 is_stmt 0 view .LVU62
 337 00e2 C12C      		mov r12,__zero_reg__
 338 00e4 D12C      		mov r13,__zero_reg__
 339               	.LVL33:
 340               	.L9:
 341               		.loc 1 275 17 is_stmt 1 discriminator 1 view .LVU63
 342 00e6 CC16      		cp r12,r28
 343 00e8 DD06      		cpc r13,r29
 344 00ea 01F4      		brne .L12
 276:lcd/lcd.c     **** 	{
 277:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 278:lcd/lcd.c     **** 		{
 279:lcd/lcd.c     **** 			_lcd_pixel(color);
 280:lcd/lcd.c     **** 		}
 281:lcd/lcd.c     **** 	}
 282:lcd/lcd.c     **** 
 283:lcd/lcd.c     **** 	_lcd_window_end();
 345               		.loc 1 283 2 view .LVU64
 346               	/* epilogue start */
 284:lcd/lcd.c     **** }
 347               		.loc 1 284 1 is_stmt 0 view .LVU65
 348 00ec DF91      		pop r29
 349 00ee CF91      		pop r28
 350               	.LVL34:
 351               		.loc 1 284 1 view .LVU66
 352 00f0 1F91      		pop r17
 353 00f2 0F91      		pop r16
 354               	.LVL35:
 355               		.loc 1 284 1 view .LVU67
 356 00f4 FF90      		pop r15
 357 00f6 EF90      		pop r14
 358               	.LVL36:
 359               		.loc 1 284 1 view .LVU68
 360 00f8 DF90      		pop r13
 361 00fa CF90      		pop r12
 362               	.LVL37:
 363               		.loc 1 284 1 view .LVU69
 364 00fc BF90      		pop r11
 365 00fe AF90      		pop r10
 283:lcd/lcd.c     **** }
 366               		.loc 1 283 2 view .LVU70
 367 0100 0C94 0000 		jmp _lcd_window_end
 368               	.LVL38:
 369               	.L10:
 279:lcd/lcd.c     **** 		}
 370               		.loc 1 279 4 is_stmt 1 discriminator 3 view .LVU71
 371 0104 C801      		movw r24,r16
 372 0106 0E94 0000 		call _lcd_pixel
 373               	.LVL39:
 277:lcd/lcd.c     **** 		{
 374               		.loc 1 277 23 discriminator 3 view .LVU72
 375 010a 8FEF      		ldi r24,-1
 376 010c A81A      		sub r10,r24
 377 010e B80A      		sbc r11,r24
 378               	.LVL40:
 379               	.L11:
 277:lcd/lcd.c     **** 		{
 380               		.loc 1 277 18 discriminator 1 view .LVU73
 381 0110 AE14      		cp r10,r14
 382 0112 BF04      		cpc r11,r15
 383 0114 01F4      		brne .L10
 275:lcd/lcd.c     **** 	{
 384               		.loc 1 275 22 discriminator 2 view .LVU74
 385 0116 8FEF      		ldi r24,-1
 386 0118 C81A      		sub r12,r24
 387 011a D80A      		sbc r13,r24
 388               	.LVL41:
 275:lcd/lcd.c     **** 	{
 389               		.loc 1 275 22 is_stmt 0 discriminator 2 view .LVU75
 390 011c 00C0      		rjmp .L9
 391               	.LVL42:
 392               	.L12:
 277:lcd/lcd.c     **** 		{
 393               		.loc 1 277 10 view .LVU76
 394 011e A12C      		mov r10,__zero_reg__
 395 0120 B12C      		mov r11,__zero_reg__
 396 0122 00C0      		rjmp .L11
 397               		.cfi_endproc
 398               	.LFE24:
 400               	.global	lcd_init
 402               	lcd_init:
 403               	.LVL43:
 404               	.LFB23:
 251:lcd/lcd.c     **** 	/* Initialize LCD */
 405               		.loc 1 251 1 is_stmt 1 view -0
 406               		.cfi_startproc
 251:lcd/lcd.c     **** 	/* Initialize LCD */
 407               		.loc 1 251 1 is_stmt 0 view .LVU78
 408 0124 0F93      		push r16
 409               		.cfi_def_cfa_offset 3
 410               		.cfi_offset 16, -2
 411 0126 1F93      		push r17
 412               		.cfi_def_cfa_offset 4
 413               		.cfi_offset 17, -3
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 2 */
 417               	.L__stack_usage = 2
 418 0128 8B01      		movw r16,r22
 253:lcd/lcd.c     **** 	spi_fast();
 419               		.loc 1 253 2 is_stmt 1 view .LVU79
 420               	.LBB85:
 253:lcd/lcd.c     **** 	spi_fast();
 421               		.loc 1 253 23 view .LVU80
 253:lcd/lcd.c     **** 	spi_fast();
 422               		.loc 1 253 23 view .LVU81
 423               	.LBE85:
 253:lcd/lcd.c     **** 	spi_fast();
 424               		.loc 1 253 2 is_stmt 0 view .LVU82
 425 012a 80E0      		ldi r24,lo8(__c.1)
 426 012c 90E0      		ldi r25,hi8(__c.1)
 427               	.LVL44:
 253:lcd/lcd.c     **** 	spi_fast();
 428               		.loc 1 253 2 view .LVU83
 429 012e 9F93      		push r25
 430               		.cfi_def_cfa_offset 5
 431 0130 8F93      		push r24
 432               		.cfi_def_cfa_offset 6
 433 0132 1F92      		push __zero_reg__
 434               		.cfi_def_cfa_offset 7
 435 0134 0E94 0000 		call log_boot_P
 436               	.LVL45:
 254:lcd/lcd.c     **** 	_lcd_reset();
 437               		.loc 1 254 2 is_stmt 1 view .LVU84
 438 0138 0E94 0000 		call spi_fast
 439               	.LVL46:
 255:lcd/lcd.c     **** 	lcd_backlight(backlight);
 440               		.loc 1 255 2 view .LVU85
 441               	.LBB86:
 442               	.LBI86:
  32:lcd/lcd.c     **** {
 443               		.loc 1 32 13 view .LVU86
 444               	.LBB87:
  34:lcd/lcd.c     **** 	_delay_ms(500);
 445               		.loc 1 34 2 view .LVU87
 446 013c 5F9A      		sbi 0xb,7
  35:lcd/lcd.c     **** 	LCD_RST_0;
 447               		.loc 1 35 2 view .LVU88
 448               	.LVL47:
 449               	.LBB88:
 450               	.LBI88:
 451               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 452               		.loc 2 166 1 view .LVU89
 453               	.LBB89:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 454               		.loc 2 168 2 view .LVU90
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/avr/include/util/delay.h **** 
 189:/usr/avr/include/util/delay.h **** #else
 190:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 455               		.loc 2 190 2 view .LVU91
 191:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 456               		.loc 2 191 2 view .LVU92
 192:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 457               		.loc 2 192 2 view .LVU93
 193:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 458               		.loc 2 194 7 view .LVU94
 195:/usr/avr/include/util/delay.h **** 	{
 196:/usr/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/avr/include/util/delay.h **** 		while(__ticks)
 459               		.loc 2 198 9 view .LVU95
 460               	.LBE89:
 461               	.LBE88:
  34:lcd/lcd.c     **** 	_delay_ms(500);
 462               		.loc 1 34 2 is_stmt 0 view .LVU96
 463 013e 0F90      		pop __tmp_reg__
 464 0140 0F90      		pop __tmp_reg__
 465 0142 0F90      		pop __tmp_reg__
 466               		.cfi_def_cfa_offset 4
 467 0144 88E8      		ldi r24,lo8(-120)
 468 0146 93E1      		ldi r25,lo8(19)
 469               	.LBB95:
 470               	.LBB94:
 471               	.LBB90:
 472               	.LBB91:
 473               		.file 3 "/usr/avr/include/util/delay_basic.h"
   1:/usr/avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/avr/include/util/delay_basic.h **** 
   5:/usr/avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/avr/include/util/delay_basic.h **** 
   8:/usr/avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/avr/include/util/delay_basic.h **** 
  11:/usr/avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/avr/include/util/delay_basic.h ****      distribution.
  15:/usr/avr/include/util/delay_basic.h **** 
  16:/usr/avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/avr/include/util/delay_basic.h **** 
  20:/usr/avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/avr/include/util/delay_basic.h **** 
  32:/usr/avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2453 2014-10-19 08:18:11Z saaadhu $ */
  33:/usr/avr/include/util/delay_basic.h **** 
  34:/usr/avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/avr/include/util/delay_basic.h **** 
  37:/usr/avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/avr/include/util/delay_basic.h **** 
  39:/usr/avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_1(uint8_t __count) __attribute__((__always_inline__));
  41:/usr/avr/include/util/delay_basic.h **** static __inline__ void _delay_loop_2(uint16_t __count) __attribute__((__always_inline__));
  42:/usr/avr/include/util/delay_basic.h **** #endif
  43:/usr/avr/include/util/delay_basic.h **** 
  44:/usr/avr/include/util/delay_basic.h **** /** \file */
  45:/usr/avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/avr/include/util/delay_basic.h ****     \code
  47:/usr/avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/avr/include/util/delay_basic.h ****     \endcode
  49:/usr/avr/include/util/delay_basic.h **** 
  50:/usr/avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/avr/include/util/delay_basic.h **** 
  58:/usr/avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/avr/include/util/delay_basic.h ****     to the overall delay time.
  64:/usr/avr/include/util/delay_basic.h **** 
  65:/usr/avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/avr/include/util/delay_basic.h **** 
  67:/usr/avr/include/util/delay_basic.h **** */
  68:/usr/avr/include/util/delay_basic.h **** 
  69:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/avr/include/util/delay_basic.h **** 
  71:/usr/avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/avr/include/util/delay_basic.h ****     register.
  76:/usr/avr/include/util/delay_basic.h **** 
  77:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/avr/include/util/delay_basic.h **** */
  80:/usr/avr/include/util/delay_basic.h **** void
  81:/usr/avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/avr/include/util/delay_basic.h **** {
  83:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/avr/include/util/delay_basic.h **** 	);
  89:/usr/avr/include/util/delay_basic.h **** }
  90:/usr/avr/include/util/delay_basic.h **** 
  91:/usr/avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/avr/include/util/delay_basic.h **** 
  93:/usr/avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/avr/include/util/delay_basic.h **** 
  99:/usr/avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/avr/include/util/delay_basic.h ****  */
 102:/usr/avr/include/util/delay_basic.h **** void
 103:/usr/avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/avr/include/util/delay_basic.h **** {
 105:/usr/avr/include/util/delay_basic.h **** 	__asm__ volatile (
 474               		.loc 3 105 2 view .LVU97
 475 0148 20E9      		ldi r18,lo8(-112)
 476 014a 31E0      		ldi r19,lo8(1)
 477               	.LVL48:
 478               	.L14:
 479               		.loc 3 105 2 view .LVU98
 480               	.LBE91:
 481               	.LBE90:
 199:/usr/avr/include/util/delay.h **** 		{
 200:/usr/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 482               		.loc 2 201 4 is_stmt 1 view .LVU99
 483               	.LBB93:
 484               	.LBI90:
 103:/usr/avr/include/util/delay_basic.h **** {
 485               		.loc 3 103 1 view .LVU100
 486               	.LBB92:
 487               		.loc 3 105 2 view .LVU101
 488 014c F901      		movw r30,r18
 489               	/* #APP */
 490               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 491 014e 3197      		1: sbiw r30,1
 492 0150 01F4      		brne 1b
 493               	 ;  0 "" 2
 494               	.LVL49:
 495               		.loc 3 105 2 is_stmt 0 view .LVU102
 496               	/* #NOAPP */
 497               	.LBE92:
 498               	.LBE93:
 202:/usr/avr/include/util/delay.h **** 			__ticks --;
 499               		.loc 2 202 4 is_stmt 1 view .LVU103
 198:/usr/avr/include/util/delay.h **** 		{
 500               		.loc 2 198 9 view .LVU104
 501 0152 0197      		sbiw r24,1
 502               	.LVL50:
 198:/usr/avr/include/util/delay.h **** 		{
 503               		.loc 2 198 9 is_stmt 0 view .LVU105
 504 0154 0097      		sbiw r24,0
 505 0156 01F4      		brne .L14
 506               	.LVL51:
 198:/usr/avr/include/util/delay.h **** 		{
 507               		.loc 2 198 9 view .LVU106
 508               	.LBE94:
 509               	.LBE95:
  36:lcd/lcd.c     **** 	_delay_ms(500);
 510               		.loc 1 36 2 is_stmt 1 view .LVU107
 511 0158 5F98      		cbi 0xb,7
  37:lcd/lcd.c     **** 	LCD_RST_1;
 512               		.loc 1 37 2 view .LVU108
 513               	.LVL52:
 514               	.LBB96:
 515               	.LBI96:
 166:/usr/avr/include/util/delay.h **** {
 516               		.loc 2 166 1 view .LVU109
 517               	.LBB97:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 518               		.loc 2 168 2 view .LVU110
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 519               		.loc 2 190 2 view .LVU111
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 520               		.loc 2 191 2 view .LVU112
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 521               		.loc 2 192 2 view .LVU113
 194:/usr/avr/include/util/delay.h **** 	{
 522               		.loc 2 194 7 view .LVU114
 198:/usr/avr/include/util/delay.h **** 		{
 523               		.loc 2 198 9 view .LVU115
 524               	.LBE97:
 525               	.LBE96:
  36:lcd/lcd.c     **** 	_delay_ms(500);
 526               		.loc 1 36 2 is_stmt 0 view .LVU116
 527 015a 88E8      		ldi r24,lo8(-120)
 528 015c 93E1      		ldi r25,lo8(19)
 529               	.LBB103:
 530               	.LBB102:
 531               	.LBB98:
 532               	.LBB99:
 533               		.loc 3 105 2 view .LVU117
 534 015e 20E9      		ldi r18,lo8(-112)
 535 0160 31E0      		ldi r19,lo8(1)
 536               	.LVL53:
 537               	.L15:
 538               		.loc 3 105 2 view .LVU118
 539               	.LBE99:
 540               	.LBE98:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 541               		.loc 2 201 4 is_stmt 1 view .LVU119
 542               	.LBB101:
 543               	.LBI98:
 103:/usr/avr/include/util/delay_basic.h **** {
 544               		.loc 3 103 1 view .LVU120
 545               	.LBB100:
 546               		.loc 3 105 2 view .LVU121
 547 0162 F901      		movw r30,r18
 548               	/* #APP */
 549               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 550 0164 3197      		1: sbiw r30,1
 551 0166 01F4      		brne 1b
 552               	 ;  0 "" 2
 553               	.LVL54:
 554               		.loc 3 105 2 is_stmt 0 view .LVU122
 555               	/* #NOAPP */
 556               	.LBE100:
 557               	.LBE101:
 558               		.loc 2 202 4 is_stmt 1 view .LVU123
 198:/usr/avr/include/util/delay.h **** 		{
 559               		.loc 2 198 9 view .LVU124
 560 0168 0197      		sbiw r24,1
 561               	.LVL55:
 198:/usr/avr/include/util/delay.h **** 		{
 562               		.loc 2 198 9 is_stmt 0 view .LVU125
 563 016a 0097      		sbiw r24,0
 564 016c 01F4      		brne .L15
 565               	.LVL56:
 198:/usr/avr/include/util/delay.h **** 		{
 566               		.loc 2 198 9 view .LVU126
 567               	.LBE102:
 568               	.LBE103:
  38:lcd/lcd.c     **** 	_delay_ms(500);
 569               		.loc 1 38 2 is_stmt 1 view .LVU127
 570 016e 5F9A      		sbi 0xb,7
  39:lcd/lcd.c     **** }
 571               		.loc 1 39 2 view .LVU128
 572               	.LVL57:
 573               	.LBB104:
 574               	.LBI104:
 166:/usr/avr/include/util/delay.h **** {
 575               		.loc 2 166 1 view .LVU129
 576               	.LBB105:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 577               		.loc 2 168 2 view .LVU130
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 578               		.loc 2 190 2 view .LVU131
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 579               		.loc 2 191 2 view .LVU132
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 580               		.loc 2 192 2 view .LVU133
 194:/usr/avr/include/util/delay.h **** 	{
 581               		.loc 2 194 7 view .LVU134
 198:/usr/avr/include/util/delay.h **** 		{
 582               		.loc 2 198 9 view .LVU135
 583               	.LBE105:
 584               	.LBE104:
  38:lcd/lcd.c     **** 	_delay_ms(500);
 585               		.loc 1 38 2 is_stmt 0 view .LVU136
 586 0170 88E8      		ldi r24,lo8(-120)
 587 0172 93E1      		ldi r25,lo8(19)
 588               	.LBB111:
 589               	.LBB110:
 590               	.LBB106:
 591               	.LBB107:
 592               		.loc 3 105 2 view .LVU137
 593 0174 20E9      		ldi r18,lo8(-112)
 594 0176 31E0      		ldi r19,lo8(1)
 595               	.LVL58:
 596               	.L16:
 597               		.loc 3 105 2 view .LVU138
 598               	.LBE107:
 599               	.LBE106:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 600               		.loc 2 201 4 is_stmt 1 view .LVU139
 601               	.LBB109:
 602               	.LBI106:
 103:/usr/avr/include/util/delay_basic.h **** {
 603               		.loc 3 103 1 view .LVU140
 604               	.LBB108:
 605               		.loc 3 105 2 view .LVU141
 606 0178 F901      		movw r30,r18
 607               	/* #APP */
 608               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 609 017a 3197      		1: sbiw r30,1
 610 017c 01F4      		brne 1b
 611               	 ;  0 "" 2
 612               	.LVL59:
 613               		.loc 3 105 2 is_stmt 0 view .LVU142
 614               	/* #NOAPP */
 615               	.LBE108:
 616               	.LBE109:
 617               		.loc 2 202 4 is_stmt 1 view .LVU143
 198:/usr/avr/include/util/delay.h **** 		{
 618               		.loc 2 198 9 view .LVU144
 619 017e 0197      		sbiw r24,1
 620               	.LVL60:
 198:/usr/avr/include/util/delay.h **** 		{
 621               		.loc 2 198 9 is_stmt 0 view .LVU145
 622 0180 0097      		sbiw r24,0
 623 0182 01F4      		brne .L16
 624               	.LVL61:
 198:/usr/avr/include/util/delay.h **** 		{
 625               		.loc 2 198 9 view .LVU146
 626               	.LBE110:
 627               	.LBE111:
 628               	.LBE87:
 629               	.LBE86:
 256:lcd/lcd.c     **** 	_lcd_init_reg();
 630               		.loc 1 256 2 is_stmt 1 view .LVU147
 257:lcd/lcd.c     **** 	_lcd_set_gram_scan_dir(SCAN_DIR);
 631               		.loc 1 257 2 view .LVU148
 632               	.LBB112:
 633               	.LBI112:
  94:lcd/lcd.c     **** {
 634               		.loc 1 94 13 view .LVU149
 635               	.LBB113:
  96:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 636               		.loc 1 96 2 view .LVU150
 637 0184 89EF      		ldi r24,lo8(-7)
 638 0186 0E94 0000 		call _lcd_write_reg
 639               	.LVL62:
  97:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 640               		.loc 1 97 2 view .LVU151
 641 018a 80E0      		ldi r24,0
 642 018c 0E94 0000 		call _lcd_write_data
 643               	.LVL63:
  98:lcd/lcd.c     **** 	_lcd_write_reg(0xC0);
 644               		.loc 1 98 2 view .LVU152
 645 0190 88E0      		ldi r24,lo8(8)
 646 0192 0E94 0000 		call _lcd_write_data
 647               	.LVL64:
  99:lcd/lcd.c     **** 	_lcd_write_data(0x19);
 648               		.loc 1 99 2 view .LVU153
 649 0196 80EC      		ldi r24,lo8(-64)
 650 0198 0E94 0000 		call _lcd_write_reg
 651               	.LVL65:
 100:lcd/lcd.c     **** 	_lcd_write_data(0x1a);
 652               		.loc 1 100 2 view .LVU154
 653 019c 89E1      		ldi r24,lo8(25)
 654 019e 0E94 0000 		call _lcd_write_data
 655               	.LVL66:
 101:lcd/lcd.c     **** 	_lcd_write_reg(0xC1);
 656               		.loc 1 101 2 view .LVU155
 657 01a2 8AE1      		ldi r24,lo8(26)
 658 01a4 0E94 0000 		call _lcd_write_data
 659               	.LVL67:
 102:lcd/lcd.c     **** 	_lcd_write_data(0x45);
 660               		.loc 1 102 2 view .LVU156
 661 01a8 81EC      		ldi r24,lo8(-63)
 662 01aa 0E94 0000 		call _lcd_write_reg
 663               	.LVL68:
 103:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 664               		.loc 1 103 2 view .LVU157
 665 01ae 85E4      		ldi r24,lo8(69)
 666 01b0 0E94 0000 		call _lcd_write_data
 667               	.LVL69:
 104:lcd/lcd.c     **** 	_lcd_write_reg(0xC2);
 668               		.loc 1 104 2 view .LVU158
 669 01b4 80E0      		ldi r24,0
 670 01b6 0E94 0000 		call _lcd_write_data
 671               	.LVL70:
 105:lcd/lcd.c     **** 	_lcd_write_data(0x33);
 672               		.loc 1 105 2 view .LVU159
 673 01ba 82EC      		ldi r24,lo8(-62)
 674 01bc 0E94 0000 		call _lcd_write_reg
 675               	.LVL71:
 106:lcd/lcd.c     **** 	_lcd_write_reg(0xC5);
 676               		.loc 1 106 2 view .LVU160
 677 01c0 83E3      		ldi r24,lo8(51)
 678 01c2 0E94 0000 		call _lcd_write_data
 679               	.LVL72:
 107:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 680               		.loc 1 107 2 view .LVU161
 681 01c6 85EC      		ldi r24,lo8(-59)
 682 01c8 0E94 0000 		call _lcd_write_reg
 683               	.LVL73:
 108:lcd/lcd.c     **** 	_lcd_write_data(0x28);
 684               		.loc 1 108 2 view .LVU162
 685 01cc 80E0      		ldi r24,0
 686 01ce 0E94 0000 		call _lcd_write_data
 687               	.LVL74:
 109:lcd/lcd.c     **** 	_lcd_write_reg(0xB1);
 688               		.loc 1 109 2 view .LVU163
 689 01d2 88E2      		ldi r24,lo8(40)
 690 01d4 0E94 0000 		call _lcd_write_data
 691               	.LVL75:
 110:lcd/lcd.c     **** 	_lcd_write_data(0xA0);
 692               		.loc 1 110 2 view .LVU164
 693 01d8 81EB      		ldi r24,lo8(-79)
 694 01da 0E94 0000 		call _lcd_write_reg
 695               	.LVL76:
 111:lcd/lcd.c     **** 	_lcd_write_data(0x11);
 696               		.loc 1 111 2 view .LVU165
 697 01de 80EA      		ldi r24,lo8(-96)
 698 01e0 0E94 0000 		call _lcd_write_data
 699               	.LVL77:
 112:lcd/lcd.c     **** 	_lcd_write_reg(0xB4);
 700               		.loc 1 112 2 view .LVU166
 701 01e4 81E1      		ldi r24,lo8(17)
 702 01e6 0E94 0000 		call _lcd_write_data
 703               	.LVL78:
 113:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 704               		.loc 1 113 2 view .LVU167
 705 01ea 84EB      		ldi r24,lo8(-76)
 706 01ec 0E94 0000 		call _lcd_write_reg
 707               	.LVL79:
 114:lcd/lcd.c     **** 	_lcd_write_reg(0xB6);
 708               		.loc 1 114 2 view .LVU168
 709 01f0 82E0      		ldi r24,lo8(2)
 710 01f2 0E94 0000 		call _lcd_write_data
 711               	.LVL80:
 115:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 712               		.loc 1 115 2 view .LVU169
 713 01f6 86EB      		ldi r24,lo8(-74)
 714 01f8 0E94 0000 		call _lcd_write_reg
 715               	.LVL81:
 116:lcd/lcd.c     **** 	_lcd_write_data(0x42);
 716               		.loc 1 116 2 view .LVU170
 717 01fc 80E0      		ldi r24,0
 718 01fe 0E94 0000 		call _lcd_write_data
 719               	.LVL82:
 117:lcd/lcd.c     **** 	_lcd_write_data(0x3B);
 720               		.loc 1 117 2 view .LVU171
 721 0202 82E4      		ldi r24,lo8(66)
 722 0204 0E94 0000 		call _lcd_write_data
 723               	.LVL83:
 118:lcd/lcd.c     **** 	_lcd_write_reg(0xB7);
 724               		.loc 1 118 2 view .LVU172
 725 0208 8BE3      		ldi r24,lo8(59)
 726 020a 0E94 0000 		call _lcd_write_data
 727               	.LVL84:
 119:lcd/lcd.c     **** 	_lcd_write_data(0x07);
 728               		.loc 1 119 2 view .LVU173
 729 020e 87EB      		ldi r24,lo8(-73)
 730 0210 0E94 0000 		call _lcd_write_reg
 731               	.LVL85:
 120:lcd/lcd.c     **** 	_lcd_write_reg(0xE0);
 732               		.loc 1 120 2 view .LVU174
 733 0214 87E0      		ldi r24,lo8(7)
 734 0216 0E94 0000 		call _lcd_write_data
 735               	.LVL86:
 121:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 736               		.loc 1 121 2 view .LVU175
 737 021a 80EE      		ldi r24,lo8(-32)
 738 021c 0E94 0000 		call _lcd_write_reg
 739               	.LVL87:
 122:lcd/lcd.c     **** 	_lcd_write_data(0x25);
 740               		.loc 1 122 2 view .LVU176
 741 0220 8FE1      		ldi r24,lo8(31)
 742 0222 0E94 0000 		call _lcd_write_data
 743               	.LVL88:
 123:lcd/lcd.c     **** 	_lcd_write_data(0x22);
 744               		.loc 1 123 2 view .LVU177
 745 0226 85E2      		ldi r24,lo8(37)
 746 0228 0E94 0000 		call _lcd_write_data
 747               	.LVL89:
 124:lcd/lcd.c     **** 	_lcd_write_data(0x0B);
 748               		.loc 1 124 2 view .LVU178
 749 022c 82E2      		ldi r24,lo8(34)
 750 022e 0E94 0000 		call _lcd_write_data
 751               	.LVL90:
 125:lcd/lcd.c     **** 	_lcd_write_data(0x06);
 752               		.loc 1 125 2 view .LVU179
 753 0232 8BE0      		ldi r24,lo8(11)
 754 0234 0E94 0000 		call _lcd_write_data
 755               	.LVL91:
 126:lcd/lcd.c     **** 	_lcd_write_data(0x0A);
 756               		.loc 1 126 2 view .LVU180
 757 0238 86E0      		ldi r24,lo8(6)
 758 023a 0E94 0000 		call _lcd_write_data
 759               	.LVL92:
 127:lcd/lcd.c     **** 	_lcd_write_data(0x4E);
 760               		.loc 1 127 2 view .LVU181
 761 023e 8AE0      		ldi r24,lo8(10)
 762 0240 0E94 0000 		call _lcd_write_data
 763               	.LVL93:
 128:lcd/lcd.c     **** 	_lcd_write_data(0xC6);
 764               		.loc 1 128 2 view .LVU182
 765 0244 8EE4      		ldi r24,lo8(78)
 766 0246 0E94 0000 		call _lcd_write_data
 767               	.LVL94:
 129:lcd/lcd.c     **** 	_lcd_write_data(0x39);
 768               		.loc 1 129 2 view .LVU183
 769 024a 86EC      		ldi r24,lo8(-58)
 770 024c 0E94 0000 		call _lcd_write_data
 771               	.LVL95:
 130:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 772               		.loc 1 130 2 view .LVU184
 773 0250 89E3      		ldi r24,lo8(57)
 774 0252 0E94 0000 		call _lcd_write_data
 775               	.LVL96:
 131:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 776               		.loc 1 131 2 view .LVU185
 777 0256 80E0      		ldi r24,0
 778 0258 0E94 0000 		call _lcd_write_data
 779               	.LVL97:
 132:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 780               		.loc 1 132 2 view .LVU186
 781 025c 80E0      		ldi r24,0
 782 025e 0E94 0000 		call _lcd_write_data
 783               	.LVL98:
 133:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 784               		.loc 1 133 2 view .LVU187
 785 0262 80E0      		ldi r24,0
 786 0264 0E94 0000 		call _lcd_write_data
 787               	.LVL99:
 134:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 788               		.loc 1 134 2 view .LVU188
 789 0268 80E0      		ldi r24,0
 790 026a 0E94 0000 		call _lcd_write_data
 791               	.LVL100:
 135:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 792               		.loc 1 135 2 view .LVU189
 793 026e 80E0      		ldi r24,0
 794 0270 0E94 0000 		call _lcd_write_data
 795               	.LVL101:
 136:lcd/lcd.c     **** 	_lcd_write_reg(0xE1);
 796               		.loc 1 136 2 view .LVU190
 797 0274 80E0      		ldi r24,0
 798 0276 0E94 0000 		call _lcd_write_data
 799               	.LVL102:
 137:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 800               		.loc 1 137 2 view .LVU191
 801 027a 81EE      		ldi r24,lo8(-31)
 802 027c 0E94 0000 		call _lcd_write_reg
 803               	.LVL103:
 138:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 804               		.loc 1 138 2 view .LVU192
 805 0280 8FE1      		ldi r24,lo8(31)
 806 0282 0E94 0000 		call _lcd_write_data
 807               	.LVL104:
 139:lcd/lcd.c     **** 	_lcd_write_data(0x3F);
 808               		.loc 1 139 2 view .LVU193
 809 0286 8FE3      		ldi r24,lo8(63)
 810 0288 0E94 0000 		call _lcd_write_data
 811               	.LVL105:
 140:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 812               		.loc 1 140 2 view .LVU194
 813 028c 8FE3      		ldi r24,lo8(63)
 814 028e 0E94 0000 		call _lcd_write_data
 815               	.LVL106:
 141:lcd/lcd.c     **** 	_lcd_write_data(0x1F);
 816               		.loc 1 141 2 view .LVU195
 817 0292 8FE0      		ldi r24,lo8(15)
 818 0294 0E94 0000 		call _lcd_write_data
 819               	.LVL107:
 142:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 820               		.loc 1 142 2 view .LVU196
 821 0298 8FE1      		ldi r24,lo8(31)
 822 029a 0E94 0000 		call _lcd_write_data
 823               	.LVL108:
 143:lcd/lcd.c     **** 	_lcd_write_data(0x46);
 824               		.loc 1 143 2 view .LVU197
 825 029e 8FE0      		ldi r24,lo8(15)
 826 02a0 0E94 0000 		call _lcd_write_data
 827               	.LVL109:
 144:lcd/lcd.c     **** 	_lcd_write_data(0x49);
 828               		.loc 1 144 2 view .LVU198
 829 02a4 86E4      		ldi r24,lo8(70)
 830 02a6 0E94 0000 		call _lcd_write_data
 831               	.LVL110:
 145:lcd/lcd.c     **** 	_lcd_write_data(0x31);
 832               		.loc 1 145 2 view .LVU199
 833 02aa 89E4      		ldi r24,lo8(73)
 834 02ac 0E94 0000 		call _lcd_write_data
 835               	.LVL111:
 146:lcd/lcd.c     **** 	_lcd_write_data(0x05);
 836               		.loc 1 146 2 view .LVU200
 837 02b0 81E3      		ldi r24,lo8(49)
 838 02b2 0E94 0000 		call _lcd_write_data
 839               	.LVL112:
 147:lcd/lcd.c     **** 	_lcd_write_data(0x09);
 840               		.loc 1 147 2 view .LVU201
 841 02b6 85E0      		ldi r24,lo8(5)
 842 02b8 0E94 0000 		call _lcd_write_data
 843               	.LVL113:
 148:lcd/lcd.c     **** 	_lcd_write_data(0x03);
 844               		.loc 1 148 2 view .LVU202
 845 02bc 89E0      		ldi r24,lo8(9)
 846 02be 0E94 0000 		call _lcd_write_data
 847               	.LVL114:
 149:lcd/lcd.c     **** 	_lcd_write_data(0x1C);
 848               		.loc 1 149 2 view .LVU203
 849 02c2 83E0      		ldi r24,lo8(3)
 850 02c4 0E94 0000 		call _lcd_write_data
 851               	.LVL115:
 150:lcd/lcd.c     **** 	_lcd_write_data(0x1A);
 852               		.loc 1 150 2 view .LVU204
 853 02c8 8CE1      		ldi r24,lo8(28)
 854 02ca 0E94 0000 		call _lcd_write_data
 855               	.LVL116:
 151:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 856               		.loc 1 151 2 view .LVU205
 857 02ce 8AE1      		ldi r24,lo8(26)
 858 02d0 0E94 0000 		call _lcd_write_data
 859               	.LVL117:
 152:lcd/lcd.c     **** 	_lcd_write_reg(0xF1);
 860               		.loc 1 152 2 view .LVU206
 861 02d4 80E0      		ldi r24,0
 862 02d6 0E94 0000 		call _lcd_write_data
 863               	.LVL118:
 153:lcd/lcd.c     **** 	_lcd_write_data(0x36);
 864               		.loc 1 153 2 view .LVU207
 865 02da 81EF      		ldi r24,lo8(-15)
 866 02dc 0E94 0000 		call _lcd_write_reg
 867               	.LVL119:
 154:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 868               		.loc 1 154 2 view .LVU208
 869 02e0 86E3      		ldi r24,lo8(54)
 870 02e2 0E94 0000 		call _lcd_write_data
 871               	.LVL120:
 155:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 872               		.loc 1 155 2 view .LVU209
 873 02e6 84E0      		ldi r24,lo8(4)
 874 02e8 0E94 0000 		call _lcd_write_data
 875               	.LVL121:
 156:lcd/lcd.c     **** 	_lcd_write_data(0x3C);
 876               		.loc 1 156 2 view .LVU210
 877 02ec 80E0      		ldi r24,0
 878 02ee 0E94 0000 		call _lcd_write_data
 879               	.LVL122:
 157:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 880               		.loc 1 157 2 view .LVU211
 881 02f2 8CE3      		ldi r24,lo8(60)
 882 02f4 0E94 0000 		call _lcd_write_data
 883               	.LVL123:
 158:lcd/lcd.c     **** 	_lcd_write_data(0x0F);
 884               		.loc 1 158 2 view .LVU212
 885 02f8 8FE0      		ldi r24,lo8(15)
 886 02fa 0E94 0000 		call _lcd_write_data
 887               	.LVL124:
 159:lcd/lcd.c     **** 	_lcd_write_data(0xA4);
 888               		.loc 1 159 2 view .LVU213
 889 02fe 8FE0      		ldi r24,lo8(15)
 890 0300 0E94 0000 		call _lcd_write_data
 891               	.LVL125:
 160:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 892               		.loc 1 160 2 view .LVU214
 893 0304 84EA      		ldi r24,lo8(-92)
 894 0306 0E94 0000 		call _lcd_write_data
 895               	.LVL126:
 161:lcd/lcd.c     **** 	_lcd_write_reg(0xF2);
 896               		.loc 1 161 2 view .LVU215
 897 030a 82E0      		ldi r24,lo8(2)
 898 030c 0E94 0000 		call _lcd_write_data
 899               	.LVL127:
 162:lcd/lcd.c     **** 	_lcd_write_data(0x18);
 900               		.loc 1 162 2 view .LVU216
 901 0310 82EF      		ldi r24,lo8(-14)
 902 0312 0E94 0000 		call _lcd_write_reg
 903               	.LVL128:
 163:lcd/lcd.c     **** 	_lcd_write_data(0xA3);
 904               		.loc 1 163 2 view .LVU217
 905 0316 88E1      		ldi r24,lo8(24)
 906 0318 0E94 0000 		call _lcd_write_data
 907               	.LVL129:
 164:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 908               		.loc 1 164 2 view .LVU218
 909 031c 83EA      		ldi r24,lo8(-93)
 910 031e 0E94 0000 		call _lcd_write_data
 911               	.LVL130:
 165:lcd/lcd.c     **** 	_lcd_write_data(0x02);
 912               		.loc 1 165 2 view .LVU219
 913 0322 82E1      		ldi r24,lo8(18)
 914 0324 0E94 0000 		call _lcd_write_data
 915               	.LVL131:
 166:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 916               		.loc 1 166 2 view .LVU220
 917 0328 82E0      		ldi r24,lo8(2)
 918 032a 0E94 0000 		call _lcd_write_data
 919               	.LVL132:
 167:lcd/lcd.c     **** 	_lcd_write_data(0x12);
 920               		.loc 1 167 2 view .LVU221
 921 032e 82E3      		ldi r24,lo8(50)
 922 0330 0E94 0000 		call _lcd_write_data
 923               	.LVL133:
 168:lcd/lcd.c     **** 	_lcd_write_data(0xFF);
 924               		.loc 1 168 2 view .LVU222
 925 0334 82E1      		ldi r24,lo8(18)
 926 0336 0E94 0000 		call _lcd_write_data
 927               	.LVL134:
 169:lcd/lcd.c     **** 	_lcd_write_data(0x32);
 928               		.loc 1 169 2 view .LVU223
 929 033a 8FEF      		ldi r24,lo8(-1)
 930 033c 0E94 0000 		call _lcd_write_data
 931               	.LVL135:
 170:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 932               		.loc 1 170 2 view .LVU224
 933 0340 82E3      		ldi r24,lo8(50)
 934 0342 0E94 0000 		call _lcd_write_data
 935               	.LVL136:
 171:lcd/lcd.c     **** 	_lcd_write_reg(0xF4);
 936               		.loc 1 171 2 view .LVU225
 937 0346 80E0      		ldi r24,0
 938 0348 0E94 0000 		call _lcd_write_data
 939               	.LVL137:
 172:lcd/lcd.c     **** 	_lcd_write_data(0x40);
 940               		.loc 1 172 2 view .LVU226
 941 034c 84EF      		ldi r24,lo8(-12)
 942 034e 0E94 0000 		call _lcd_write_reg
 943               	.LVL138:
 173:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 944               		.loc 1 173 2 view .LVU227
 945 0352 80E4      		ldi r24,lo8(64)
 946 0354 0E94 0000 		call _lcd_write_data
 947               	.LVL139:
 174:lcd/lcd.c     **** 	_lcd_write_data(0x08);
 948               		.loc 1 174 2 view .LVU228
 949 0358 80E0      		ldi r24,0
 950 035a 0E94 0000 		call _lcd_write_data
 951               	.LVL140:
 175:lcd/lcd.c     **** 	_lcd_write_data(0x91);
 952               		.loc 1 175 2 view .LVU229
 953 035e 88E0      		ldi r24,lo8(8)
 954 0360 0E94 0000 		call _lcd_write_data
 955               	.LVL141:
 176:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 956               		.loc 1 176 2 view .LVU230
 957 0364 81E9      		ldi r24,lo8(-111)
 958 0366 0E94 0000 		call _lcd_write_data
 959               	.LVL142:
 177:lcd/lcd.c     **** 	_lcd_write_reg(0xF8);
 960               		.loc 1 177 2 view .LVU231
 961 036a 84E0      		ldi r24,lo8(4)
 962 036c 0E94 0000 		call _lcd_write_data
 963               	.LVL143:
 178:lcd/lcd.c     **** 	_lcd_write_data(0x21);
 964               		.loc 1 178 2 view .LVU232
 965 0370 88EF      		ldi r24,lo8(-8)
 966 0372 0E94 0000 		call _lcd_write_reg
 967               	.LVL144:
 179:lcd/lcd.c     **** 	_lcd_write_data(0x04);
 968               		.loc 1 179 2 view .LVU233
 969 0376 81E2      		ldi r24,lo8(33)
 970 0378 0E94 0000 		call _lcd_write_data
 971               	.LVL145:
 180:lcd/lcd.c     **** 	_lcd_write_reg(0x3A);
 972               		.loc 1 180 2 view .LVU234
 973 037c 84E0      		ldi r24,lo8(4)
 974 037e 0E94 0000 		call _lcd_write_data
 975               	.LVL146:
 181:lcd/lcd.c     **** 	_lcd_write_data(0x55);
 976               		.loc 1 181 2 view .LVU235
 977 0382 8AE3      		ldi r24,lo8(58)
 978 0384 0E94 0000 		call _lcd_write_reg
 979               	.LVL147:
 182:lcd/lcd.c     **** }
 980               		.loc 1 182 2 view .LVU236
 981 0388 85E5      		ldi r24,lo8(85)
 982 038a 0E94 0000 		call _lcd_write_data
 983               	.LVL148:
 984               	.LBE113:
 985               	.LBE112:
 258:lcd/lcd.c     **** 	_delay_ms(200);
 986               		.loc 1 258 2 view .LVU237
 987               	.LBB114:
 988               	.LBI114:
 185:lcd/lcd.c     **** {
 989               		.loc 1 185 13 view .LVU238
 990               	.LBB115:
 187:lcd/lcd.c     **** 	switch(scan_dir)
 991               		.loc 1 187 2 view .LVU239
 188:lcd/lcd.c     **** 	{
 992               		.loc 1 188 2 view .LVU240
 231:lcd/lcd.c     **** 	_lcd_write_data(0x00);
 993               		.loc 1 231 2 view .LVU241
 994 038e 86EB      		ldi r24,lo8(-74)
 995 0390 0E94 0000 		call _lcd_write_reg
 996               	.LVL149:
 232:lcd/lcd.c     **** 	_lcd_write_data(b);
 997               		.loc 1 232 2 view .LVU242
 998 0394 80E0      		ldi r24,0
 999 0396 0E94 0000 		call _lcd_write_data
 1000               	.LVL150:
 233:lcd/lcd.c     **** 	_lcd_write_reg(0x36);
 1001               		.loc 1 233 2 view .LVU243
 1002 039a 82E2      		ldi r24,lo8(34)
 1003 039c 0E94 0000 		call _lcd_write_data
 1004               	.LVL151:
 234:lcd/lcd.c     **** 	_lcd_write_data(a);
 1005               		.loc 1 234 2 view .LVU244
 1006 03a0 86E3      		ldi r24,lo8(54)
 1007 03a2 0E94 0000 		call _lcd_write_reg
 1008               	.LVL152:
 235:lcd/lcd.c     **** }
 1009               		.loc 1 235 2 view .LVU245
 1010 03a6 88E0      		ldi r24,lo8(8)
 1011 03a8 0E94 0000 		call _lcd_write_data
 1012               	.LVL153:
 235:lcd/lcd.c     **** }
 1013               		.loc 1 235 2 is_stmt 0 view .LVU246
 1014               	.LBE115:
 1015               	.LBE114:
 1016               	.LBB117:
 1017               	.LBB118:
 198:/usr/avr/include/util/delay.h **** 		{
 1018               		.loc 2 198 9 is_stmt 1 view .LVU247
 1019               	.LBE118:
 1020               	.LBE117:
 1021               	.LBB124:
 1022               	.LBB116:
 235:lcd/lcd.c     **** }
 1023               		.loc 1 235 2 is_stmt 0 view .LVU248
 1024 03ac 80ED      		ldi r24,lo8(-48)
 1025 03ae 97E0      		ldi r25,lo8(7)
 1026               	.LBE116:
 1027               	.LBE124:
 1028               	.LBB125:
 1029               	.LBB123:
 1030               	.LBB119:
 1031               	.LBB120:
 1032               		.loc 3 105 2 view .LVU249
 1033 03b0 20E9      		ldi r18,lo8(-112)
 1034 03b2 31E0      		ldi r19,lo8(1)
 1035               	.LVL154:
 1036               	.L17:
 1037               		.loc 3 105 2 view .LVU250
 1038               	.LBE120:
 1039               	.LBE119:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 1040               		.loc 2 201 4 is_stmt 1 view .LVU251
 1041               	.LBB122:
 1042               	.LBI119:
 103:/usr/avr/include/util/delay_basic.h **** {
 1043               		.loc 3 103 1 view .LVU252
 1044               	.LBB121:
 1045               		.loc 3 105 2 view .LVU253
 1046 03b4 F901      		movw r30,r18
 1047               	/* #APP */
 1048               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1049 03b6 3197      		1: sbiw r30,1
 1050 03b8 01F4      		brne 1b
 1051               	 ;  0 "" 2
 1052               	.LVL155:
 1053               		.loc 3 105 2 is_stmt 0 view .LVU254
 1054               	/* #NOAPP */
 1055               	.LBE121:
 1056               	.LBE122:
 1057               		.loc 2 202 4 is_stmt 1 view .LVU255
 198:/usr/avr/include/util/delay.h **** 		{
 1058               		.loc 2 198 9 view .LVU256
 1059 03ba 0197      		sbiw r24,1
 1060               	.LVL156:
 198:/usr/avr/include/util/delay.h **** 		{
 1061               		.loc 2 198 9 is_stmt 0 view .LVU257
 1062 03bc 0097      		sbiw r24,0
 1063 03be 01F4      		brne .L17
 1064               	.LVL157:
 198:/usr/avr/include/util/delay.h **** 		{
 1065               		.loc 2 198 9 view .LVU258
 1066               	.LBE123:
 1067               	.LBE125:
 260:lcd/lcd.c     **** 	_delay_ms(120);
 1068               		.loc 1 260 2 is_stmt 1 view .LVU259
 1069 03c0 81E1      		ldi r24,lo8(17)
 1070 03c2 0E94 0000 		call _lcd_write_reg
 1071               	.LVL158:
 261:lcd/lcd.c     **** 	_lcd_write_reg(0x29);
 1072               		.loc 1 261 2 view .LVU260
 1073               	.LBB126:
 1074               	.LBI126:
 166:/usr/avr/include/util/delay.h **** {
 1075               		.loc 2 166 1 view .LVU261
 1076               	.LBB127:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 1077               		.loc 2 168 2 view .LVU262
 190:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 1078               		.loc 2 190 2 view .LVU263
 191:/usr/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 1079               		.loc 2 191 2 view .LVU264
 192:/usr/avr/include/util/delay.h **** 		__ticks = 1;
 1080               		.loc 2 192 2 view .LVU265
 194:/usr/avr/include/util/delay.h **** 	{
 1081               		.loc 2 194 7 view .LVU266
 198:/usr/avr/include/util/delay.h **** 		{
 1082               		.loc 2 198 9 view .LVU267
 1083               	.LBE127:
 1084               	.LBE126:
 260:lcd/lcd.c     **** 	_delay_ms(120);
 1085               		.loc 1 260 2 is_stmt 0 view .LVU268
 1086 03c6 80EB      		ldi r24,lo8(-80)
 1087 03c8 94E0      		ldi r25,lo8(4)
 1088               	.LBB133:
 1089               	.LBB132:
 1090               	.LBB128:
 1091               	.LBB129:
 1092               		.loc 3 105 2 view .LVU269
 1093 03ca 20E9      		ldi r18,lo8(-112)
 1094 03cc 31E0      		ldi r19,lo8(1)
 1095               	.LVL159:
 1096               	.L18:
 1097               		.loc 3 105 2 view .LVU270
 1098               	.LBE129:
 1099               	.LBE128:
 201:/usr/avr/include/util/delay.h **** 			__ticks --;
 1100               		.loc 2 201 4 is_stmt 1 view .LVU271
 1101               	.LBB131:
 1102               	.LBI128:
 103:/usr/avr/include/util/delay_basic.h **** {
 1103               		.loc 3 103 1 view .LVU272
 1104               	.LBB130:
 1105               		.loc 3 105 2 view .LVU273
 1106 03ce F901      		movw r30,r18
 1107               	/* #APP */
 1108               	 ;  105 "/usr/avr/include/util/delay_basic.h" 1
 1109 03d0 3197      		1: sbiw r30,1
 1110 03d2 01F4      		brne 1b
 1111               	 ;  0 "" 2
 1112               	.LVL160:
 1113               		.loc 3 105 2 is_stmt 0 view .LVU274
 1114               	/* #NOAPP */
 1115               	.LBE130:
 1116               	.LBE131:
 1117               		.loc 2 202 4 is_stmt 1 view .LVU275
 198:/usr/avr/include/util/delay.h **** 		{
 1118               		.loc 2 198 9 view .LVU276
 1119 03d4 0197      		sbiw r24,1
 1120               	.LVL161:
 198:/usr/avr/include/util/delay.h **** 		{
 1121               		.loc 2 198 9 is_stmt 0 view .LVU277
 1122 03d6 0097      		sbiw r24,0
 1123 03d8 01F4      		brne .L18
 1124               	.LVL162:
 198:/usr/avr/include/util/delay.h **** 		{
 1125               		.loc 2 198 9 view .LVU278
 1126               	.LBE132:
 1127               	.LBE133:
 262:lcd/lcd.c     **** 
 1128               		.loc 1 262 2 is_stmt 1 view .LVU279
 1129 03da 89E2      		ldi r24,lo8(41)
 1130 03dc 0E94 0000 		call _lcd_write_reg
 1131               	.LVL163:
 264:lcd/lcd.c     **** 
 1132               		.loc 1 264 2 view .LVU280
 1133 03e0 20EE      		ldi r18,lo8(-32)
 1134 03e2 31E0      		ldi r19,lo8(1)
 1135 03e4 40E4      		ldi r20,lo8(64)
 1136 03e6 51E0      		ldi r21,lo8(1)
 1137 03e8 60E0      		ldi r22,0
 1138 03ea 70E0      		ldi r23,0
 1139 03ec 80E0      		ldi r24,0
 1140 03ee 90E0      		ldi r25,0
 1141 03f0 0E94 0000 		call lcd_rect
 1142               	.LVL164:
 266:lcd/lcd.c     **** 	_lcd_initialized = true;
 1143               		.loc 1 266 2 view .LVU281
 1144               	.LBB134:
 266:lcd/lcd.c     **** 	_lcd_initialized = true;
 1145               		.loc 1 266 23 view .LVU282
 266:lcd/lcd.c     **** 	_lcd_initialized = true;
 1146               		.loc 1 266 23 view .LVU283
 1147               	.LBE134:
 266:lcd/lcd.c     **** 	_lcd_initialized = true;
 1148               		.loc 1 266 2 is_stmt 0 view .LVU284
 1149 03f4 80E0      		ldi r24,lo8(__c.0)
 1150 03f6 90E0      		ldi r25,hi8(__c.0)
 1151 03f8 9F93      		push r25
 1152               		.cfi_def_cfa_offset 5
 1153 03fa 8F93      		push r24
 1154               		.cfi_def_cfa_offset 6
 1155 03fc 1F92      		push __zero_reg__
 1156               		.cfi_def_cfa_offset 7
 1157 03fe 0E94 0000 		call log_boot_P
 1158               	.LVL165:
 267:lcd/lcd.c     **** }
 1159               		.loc 1 267 2 is_stmt 1 view .LVU285
 267:lcd/lcd.c     **** }
 1160               		.loc 1 267 19 is_stmt 0 view .LVU286
 1161 0402 81E0      		ldi r24,lo8(1)
 1162 0404 8093 0000 		sts _lcd_initialized,r24
 268:lcd/lcd.c     **** 
 1163               		.loc 1 268 1 view .LVU287
 1164 0408 0F90      		pop __tmp_reg__
 1165 040a 0F90      		pop __tmp_reg__
 1166 040c 0F90      		pop __tmp_reg__
 1167               		.cfi_def_cfa_offset 4
 1168               	/* epilogue start */
 1169 040e 1F91      		pop r17
 1170 0410 0F91      		pop r16
 1171               	.LVL166:
 268:lcd/lcd.c     **** 
 1172               		.loc 1 268 1 view .LVU288
 1173 0412 0895      		ret
 1174               		.cfi_endproc
 1175               	.LFE23:
 1177               	.global	lcd_color
 1179               	lcd_color:
 1180               	.LVL167:
 1181               	.LFB25:
 285:lcd/lcd.c     **** 
 286:lcd/lcd.c     **** RGB565 lcd_color(u8 r, u8 g, u8 b)
 287:lcd/lcd.c     **** {
 1182               		.loc 1 287 1 is_stmt 1 view -0
 1183               		.cfi_startproc
 1184               	/* prologue: function */
 1185               	/* frame size = 0 */
 1186               	/* stack size = 0 */
 1187               	.L__stack_usage = 0
 288:lcd/lcd.c     **** 	return ((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3);
 1188               		.loc 1 288 2 view .LVU290
 1189               		.loc 1 288 41 is_stmt 0 view .LVU291
 1190 0414 98E0      		ldi r25,lo8(8)
 1191 0416 699F      		mul r22,r25
 1192 0418 B001      		movw r22,r0
 1193 041a 1124      		clr __zero_reg__
 1194               	.LVL168:
 1195               		.loc 1 288 41 view .LVU292
 1196 041c 607E      		andi r22,224
 1197 041e 7770      		andi r23,7
 1198               		.loc 1 288 52 view .LVU293
 1199 0420 4695      		lsr r20
 1200 0422 4695      		lsr r20
 1201 0424 4695      		lsr r20
 1202               	.LVL169:
 1203               		.loc 1 288 47 view .LVU294
 1204 0426 642B      		or r22,r20
 1205               		.loc 1 288 21 view .LVU295
 1206 0428 282F      		mov r18,r24
 1207 042a 30E0      		ldi r19,0
 1208 042c 322F      		mov r19,r18
 1209 042e 2227      		clr r18
 1210               	.LVL170:
 1211               		.loc 1 288 21 view .LVU296
 1212 0430 C901      		movw r24,r18
 1213 0432 8827      		clr r24
 1214 0434 987F      		andi r25,248
 289:lcd/lcd.c     **** }
 1215               		.loc 1 289 1 view .LVU297
 1216 0436 862B      		or r24,r22
 1217 0438 972B      		or r25,r23
 1218               	/* epilogue start */
 1219 043a 0895      		ret
 1220               		.cfi_endproc
 1221               	.LFE25:
 1223               	.global	lcd_window
 1225               	lcd_window:
 1226               	.LVL171:
 1227               	.LFB26:
 290:lcd/lcd.c     **** 
 291:lcd/lcd.c     **** void lcd_window(u16 x, u16 y, u16 w, u16 h,
 292:lcd/lcd.c     **** 	RGB565 (*color_callback)(u16, u16))
 293:lcd/lcd.c     **** {
 1228               		.loc 1 293 1 is_stmt 1 view -0
 1229               		.cfi_startproc
 1230               		.loc 1 293 1 is_stmt 0 view .LVU299
 1231 043c AF92      		push r10
 1232               		.cfi_def_cfa_offset 3
 1233               		.cfi_offset 10, -2
 1234 043e BF92      		push r11
 1235               		.cfi_def_cfa_offset 4
 1236               		.cfi_offset 11, -3
 1237 0440 CF92      		push r12
 1238               		.cfi_def_cfa_offset 5
 1239               		.cfi_offset 12, -4
 1240 0442 DF92      		push r13
 1241               		.cfi_def_cfa_offset 6
 1242               		.cfi_offset 13, -5
 1243 0444 EF92      		push r14
 1244               		.cfi_def_cfa_offset 7
 1245               		.cfi_offset 14, -6
 1246 0446 FF92      		push r15
 1247               		.cfi_def_cfa_offset 8
 1248               		.cfi_offset 15, -7
 1249 0448 0F93      		push r16
 1250               		.cfi_def_cfa_offset 9
 1251               		.cfi_offset 16, -8
 1252 044a 1F93      		push r17
 1253               		.cfi_def_cfa_offset 10
 1254               		.cfi_offset 17, -9
 1255 044c CF93      		push r28
 1256               		.cfi_def_cfa_offset 11
 1257               		.cfi_offset 28, -10
 1258 044e DF93      		push r29
 1259               		.cfi_def_cfa_offset 12
 1260               		.cfi_offset 29, -11
 1261               	/* prologue: function */
 1262               	/* frame size = 0 */
 1263               	/* stack size = 10 */
 1264               	.L__stack_usage = 10
 1265 0450 7A01      		movw r14,r20
 1266 0452 E901      		movw r28,r18
 1267 0454 5801      		movw r10,r16
 294:lcd/lcd.c     **** 	u16 w0, h0;
 1268               		.loc 1 294 2 is_stmt 1 view .LVU300
 295:lcd/lcd.c     **** 
 296:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 1269               		.loc 1 296 2 view .LVU301
 1270 0456 0E94 0000 		call _lcd_window_start
 1271               	.LVL172:
 297:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 1272               		.loc 1 297 2 view .LVU302
 1273               		.loc 1 297 9 is_stmt 0 view .LVU303
 1274 045a 00E0      		ldi r16,0
 1275 045c 10E0      		ldi r17,0
 1276               	.LVL173:
 1277               	.L26:
 1278               		.loc 1 297 17 is_stmt 1 discriminator 1 view .LVU304
 1279 045e 0C17      		cp r16,r28
 1280 0460 1D07      		cpc r17,r29
 1281 0462 01F4      		brne .L29
 298:lcd/lcd.c     **** 	{
 299:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 300:lcd/lcd.c     **** 		{
 301:lcd/lcd.c     **** 			_lcd_pixel(color_callback(w0, h0));
 302:lcd/lcd.c     **** 		}
 303:lcd/lcd.c     **** 	}
 304:lcd/lcd.c     **** 
 305:lcd/lcd.c     **** 	_lcd_window_end();
 1282               		.loc 1 305 2 view .LVU305
 1283               	/* epilogue start */
 306:lcd/lcd.c     **** }
 1284               		.loc 1 306 1 is_stmt 0 view .LVU306
 1285 0464 DF91      		pop r29
 1286 0466 CF91      		pop r28
 1287               	.LVL174:
 1288               		.loc 1 306 1 view .LVU307
 1289 0468 1F91      		pop r17
 1290 046a 0F91      		pop r16
 1291               	.LVL175:
 1292               		.loc 1 306 1 view .LVU308
 1293 046c FF90      		pop r15
 1294 046e EF90      		pop r14
 1295               	.LVL176:
 1296               		.loc 1 306 1 view .LVU309
 1297 0470 DF90      		pop r13
 1298 0472 CF90      		pop r12
 1299 0474 BF90      		pop r11
 1300 0476 AF90      		pop r10
 1301               	.LVL177:
 305:lcd/lcd.c     **** }
 1302               		.loc 1 305 2 view .LVU310
 1303 0478 0C94 0000 		jmp _lcd_window_end
 1304               	.LVL178:
 1305               	.L27:
 301:lcd/lcd.c     **** 		}
 1306               		.loc 1 301 4 is_stmt 1 discriminator 3 view .LVU311
 1307 047c B801      		movw r22,r16
 1308 047e C601      		movw r24,r12
 1309 0480 F501      		movw r30,r10
 1310 0482 0995      		icall
 1311               	.LVL179:
 1312 0484 0E94 0000 		call _lcd_pixel
 1313               	.LVL180:
 299:lcd/lcd.c     **** 		{
 1314               		.loc 1 299 23 discriminator 3 view .LVU312
 1315 0488 FFEF      		ldi r31,-1
 1316 048a CF1A      		sub r12,r31
 1317 048c DF0A      		sbc r13,r31
 1318               	.LVL181:
 1319               	.L28:
 299:lcd/lcd.c     **** 		{
 1320               		.loc 1 299 18 discriminator 1 view .LVU313
 1321 048e CE14      		cp r12,r14
 1322 0490 DF04      		cpc r13,r15
 1323 0492 01F4      		brne .L27
 297:lcd/lcd.c     **** 	{
 1324               		.loc 1 297 22 discriminator 2 view .LVU314
 1325 0494 0F5F      		subi r16,-1
 1326 0496 1F4F      		sbci r17,-1
 1327               	.LVL182:
 297:lcd/lcd.c     **** 	{
 1328               		.loc 1 297 22 is_stmt 0 discriminator 2 view .LVU315
 1329 0498 00C0      		rjmp .L26
 1330               	.LVL183:
 1331               	.L29:
 299:lcd/lcd.c     **** 		{
 1332               		.loc 1 299 10 view .LVU316
 1333 049a C12C      		mov r12,__zero_reg__
 1334 049c D12C      		mov r13,__zero_reg__
 1335 049e 00C0      		rjmp .L28
 1336               		.cfi_endproc
 1337               	.LFE26:
 1339               	.global	lcd_logo_P
 1341               	lcd_logo_P:
 1342               	.LVL184:
 1343               	.LFB27:
 307:lcd/lcd.c     **** 
 308:lcd/lcd.c     **** void lcd_logo_P(u16 x, u16 y, u16 w, u16 h, const u8 *image)
 309:lcd/lcd.c     **** {
 1344               		.loc 1 309 1 is_stmt 1 view -0
 1345               		.cfi_startproc
 1346               		.loc 1 309 1 is_stmt 0 view .LVU318
 1347 04a0 6F92      		push r6
 1348               		.cfi_def_cfa_offset 3
 1349               		.cfi_offset 6, -2
 1350 04a2 7F92      		push r7
 1351               		.cfi_def_cfa_offset 4
 1352               		.cfi_offset 7, -3
 1353 04a4 8F92      		push r8
 1354               		.cfi_def_cfa_offset 5
 1355               		.cfi_offset 8, -4
 1356 04a6 9F92      		push r9
 1357               		.cfi_def_cfa_offset 6
 1358               		.cfi_offset 9, -5
 1359 04a8 AF92      		push r10
 1360               		.cfi_def_cfa_offset 7
 1361               		.cfi_offset 10, -6
 1362 04aa BF92      		push r11
 1363               		.cfi_def_cfa_offset 8
 1364               		.cfi_offset 11, -7
 1365 04ac CF92      		push r12
 1366               		.cfi_def_cfa_offset 9
 1367               		.cfi_offset 12, -8
 1368 04ae DF92      		push r13
 1369               		.cfi_def_cfa_offset 10
 1370               		.cfi_offset 13, -9
 1371 04b0 EF92      		push r14
 1372               		.cfi_def_cfa_offset 11
 1373               		.cfi_offset 14, -10
 1374 04b2 FF92      		push r15
 1375               		.cfi_def_cfa_offset 12
 1376               		.cfi_offset 15, -11
 1377 04b4 0F93      		push r16
 1378               		.cfi_def_cfa_offset 13
 1379               		.cfi_offset 16, -12
 1380 04b6 1F93      		push r17
 1381               		.cfi_def_cfa_offset 14
 1382               		.cfi_offset 17, -13
 1383 04b8 CF93      		push r28
 1384               		.cfi_def_cfa_offset 15
 1385               		.cfi_offset 28, -14
 1386 04ba DF93      		push r29
 1387               		.cfi_def_cfa_offset 16
 1388               		.cfi_offset 29, -15
 1389               	/* prologue: function */
 1390               	/* frame size = 0 */
 1391               	/* stack size = 14 */
 1392               	.L__stack_usage = 14
 1393 04bc EA01      		movw r28,r20
 1394 04be 7901      		movw r14,r18
 1395 04c0 3801      		movw r6,r16
 310:lcd/lcd.c     **** 	u16 w0, h0;
 1396               		.loc 1 310 2 is_stmt 1 view .LVU319
 311:lcd/lcd.c     **** 
 312:lcd/lcd.c     **** 	_lcd_window_start(x, y, w, h);
 1397               		.loc 1 312 2 view .LVU320
 1398 04c2 0E94 0000 		call _lcd_window_start
 1399               	.LVL185:
 313:lcd/lcd.c     **** 	for(h0 = 0; h0 < h; ++h0)
 1400               		.loc 1 313 2 view .LVU321
 1401               		.loc 1 313 2 is_stmt 0 view .LVU322
 1402 04c6 A12C      		mov r10,__zero_reg__
 1403 04c8 B12C      		mov r11,__zero_reg__
 1404               		.loc 1 313 9 view .LVU323
 1405 04ca C12C      		mov r12,__zero_reg__
 1406 04cc D12C      		mov r13,__zero_reg__
 1407               	.LVL186:
 1408               	.L31:
 1409               		.loc 1 313 17 is_stmt 1 discriminator 1 view .LVU324
 1410 04ce CE14      		cp r12,r14
 1411 04d0 DF04      		cpc r13,r15
 1412 04d2 01F4      		brne .L34
 314:lcd/lcd.c     **** 	{
 315:lcd/lcd.c     **** 		for(w0 = 0; w0 < w; ++w0)
 316:lcd/lcd.c     **** 		{
 317:lcd/lcd.c     **** 			_lcd_pixel(lcd_color(pgm_read_byte(&image[h0 * w + w0]), 0, 0));
 318:lcd/lcd.c     **** 		}
 319:lcd/lcd.c     **** 	}
 320:lcd/lcd.c     **** 
 321:lcd/lcd.c     **** 	_lcd_window_end();
 1413               		.loc 1 321 2 view .LVU325
 1414               	/* epilogue start */
 322:lcd/lcd.c     **** }
 1415               		.loc 1 322 1 is_stmt 0 view .LVU326
 1416 04d4 DF91      		pop r29
 1417 04d6 CF91      		pop r28
 1418               	.LVL187:
 1419               		.loc 1 322 1 view .LVU327
 1420 04d8 1F91      		pop r17
 1421 04da 0F91      		pop r16
 1422 04dc FF90      		pop r15
 1423 04de EF90      		pop r14
 1424               	.LVL188:
 1425               		.loc 1 322 1 view .LVU328
 1426 04e0 DF90      		pop r13
 1427 04e2 CF90      		pop r12
 1428               	.LVL189:
 1429               		.loc 1 322 1 view .LVU329
 1430 04e4 BF90      		pop r11
 1431 04e6 AF90      		pop r10
 1432 04e8 9F90      		pop r9
 1433 04ea 8F90      		pop r8
 1434 04ec 7F90      		pop r7
 1435 04ee 6F90      		pop r6
 1436               	.LVL190:
 321:lcd/lcd.c     **** }
 1437               		.loc 1 321 2 view .LVU330
 1438 04f0 0C94 0000 		jmp _lcd_window_end
 1439               	.LVL191:
 1440               	.L32:
 317:lcd/lcd.c     **** 		}
 1441               		.loc 1 317 4 is_stmt 1 discriminator 3 view .LVU331
 1442               	.LBB135:
 317:lcd/lcd.c     **** 		}
 1443               		.loc 1 317 25 discriminator 3 view .LVU332
 317:lcd/lcd.c     **** 		}
 1444               		.loc 1 317 25 discriminator 3 view .LVU333
 317:lcd/lcd.c     **** 		}
 1445               		.loc 1 317 25 discriminator 3 view .LVU334
 1446 04f4 F401      		movw r30,r8
 1447 04f6 E00F      		add r30,r16
 1448 04f8 F11F      		adc r31,r17
 1449               	/* #APP */
 1450               	 ;  317 "lcd/lcd.c" 1
 1451 04fa 8491      		lpm r24, Z
 1452               		
 1453               	 ;  0 "" 2
 1454               	.LVL192:
 317:lcd/lcd.c     **** 		}
 1455               		.loc 1 317 25 discriminator 3 view .LVU335
 317:lcd/lcd.c     **** 		}
 1456               		.loc 1 317 25 is_stmt 0 discriminator 3 view .LVU336
 1457               	/* #NOAPP */
 1458               	.LBE135:
 1459               	.LBB136:
 1460               	.LBI136:
 286:lcd/lcd.c     **** {
 1461               		.loc 1 286 8 is_stmt 1 discriminator 3 view .LVU337
 1462               	.LBB137:
 288:lcd/lcd.c     **** }
 1463               		.loc 1 288 2 discriminator 3 view .LVU338
 288:lcd/lcd.c     **** }
 1464               		.loc 1 288 21 is_stmt 0 discriminator 3 view .LVU339
 1465 04fc 90E0      		ldi r25,0
 1466 04fe 982F      		mov r25,r24
 1467 0500 8827      		clr r24
 1468               	.LVL193:
 288:lcd/lcd.c     **** }
 1469               		.loc 1 288 21 discriminator 3 view .LVU340
 1470               	.LBE137:
 1471               	.LBE136:
 317:lcd/lcd.c     **** 		}
 1472               		.loc 1 317 4 discriminator 3 view .LVU341
 1473 0502 8827      		clr r24
 1474 0504 987F      		andi r25,248
 1475 0506 0E94 0000 		call _lcd_pixel
 1476               	.LVL194:
 315:lcd/lcd.c     **** 		{
 1477               		.loc 1 315 23 is_stmt 1 discriminator 3 view .LVU342
 1478 050a 0F5F      		subi r16,-1
 1479 050c 1F4F      		sbci r17,-1
 1480               	.LVL195:
 1481               	.L33:
 315:lcd/lcd.c     **** 		{
 1482               		.loc 1 315 18 discriminator 1 view .LVU343
 1483 050e 0C17      		cp r16,r28
 1484 0510 1D07      		cpc r17,r29
 1485 0512 01F4      		brne .L32
 313:lcd/lcd.c     **** 	{
 1486               		.loc 1 313 22 discriminator 2 view .LVU344
 1487 0514 8FEF      		ldi r24,-1
 1488 0516 C81A      		sub r12,r24
 1489 0518 D80A      		sbc r13,r24
 1490               	.LVL196:
 313:lcd/lcd.c     **** 	{
 1491               		.loc 1 313 22 is_stmt 0 discriminator 2 view .LVU345
 1492 051a AC0E      		add r10,r28
 1493 051c BD1E      		adc r11,r29
 1494 051e 00C0      		rjmp .L31
 1495               	.LVL197:
 1496               	.L34:
 315:lcd/lcd.c     **** 		{
 1497               		.loc 1 315 10 view .LVU346
 1498 0520 00E0      		ldi r16,0
 1499 0522 10E0      		ldi r17,0
 1500               	.LBB138:
 317:lcd/lcd.c     **** 		}
 1501               		.loc 1 317 25 view .LVU347
 1502 0524 4301      		movw r8,r6
 1503 0526 8A0C      		add r8,r10
 1504 0528 9B1C      		adc r9,r11
 1505 052a 00C0      		rjmp .L33
 1506               	.LBE138:
 1507               		.cfi_endproc
 1508               	.LFE27:
 1510               	.global	lcd_char
 1512               	lcd_char:
 1513               	.LVL198:
 1514               	.LFB28:
 323:lcd/lcd.c     **** 
 324:lcd/lcd.c     **** #define FONT_WIDTH   5
 325:lcd/lcd.c     **** #define FONT_HEIGHT  7
 326:lcd/lcd.c     **** 
 327:lcd/lcd.c     **** static const u8 _font5x7[] PROGMEM =
 328:lcd/lcd.c     **** {
 329:lcd/lcd.c     **** 	0x00, 0x00, 0x00, 0x00, 0x00, /*   */
 330:lcd/lcd.c     **** 	0x00, 0x00, 0x5F, 0x00, 0x00, /* ! */
 331:lcd/lcd.c     **** 	0x00, 0x07, 0x00, 0x07, 0x00, /* " */
 332:lcd/lcd.c     **** 	0x14, 0x7F, 0x14, 0x7F, 0x14, /* # */
 333:lcd/lcd.c     **** 	0x24, 0x2A, 0x7F, 0x2A, 0x12, /* $ */
 334:lcd/lcd.c     **** 	0x23, 0x13, 0x08, 0x64, 0x62, /* % */
 335:lcd/lcd.c     **** 	0x36, 0x49, 0x55, 0x22, 0x50, /* & */
 336:lcd/lcd.c     **** 	0x00, 0x00, 0x03, 0x00, 0x00, /* ' */
 337:lcd/lcd.c     **** 	0x00, 0x1C, 0x22, 0x41, 0x00, /* ( */
 338:lcd/lcd.c     **** 	0x00, 0x41, 0x22, 0x1C, 0x00, /* ) */
 339:lcd/lcd.c     **** 	0x14, 0x08, 0x3E, 0x08, 0x14, /* * */
 340:lcd/lcd.c     **** 	0x08, 0x08, 0x3E, 0x08, 0x08, /* + */
 341:lcd/lcd.c     **** 	0x00, 0x50, 0x30, 0x00, 0x00, /* , */
 342:lcd/lcd.c     **** 	0x08, 0x08, 0x08, 0x08, 0x08, /* - */
 343:lcd/lcd.c     **** 	0x00, 0x60, 0x60, 0x00, 0x00, /* . */
 344:lcd/lcd.c     **** 	0x20, 0x10, 0x08, 0x04, 0x02, /* / */
 345:lcd/lcd.c     **** 
 346:lcd/lcd.c     **** 	0x3E, 0x51, 0x49, 0x45, 0x3E, /* 0 */
 347:lcd/lcd.c     **** 	0x00, 0x42, 0x7F, 0x40, 0x00, /* 1 */
 348:lcd/lcd.c     **** 	0x62, 0x51, 0x49, 0x49, 0x46, /* 2 */
 349:lcd/lcd.c     **** 	0x22, 0x41, 0x49, 0x49, 0x36, /* 3 */
 350:lcd/lcd.c     **** 	0x18, 0x14, 0x12, 0x7F, 0x10, /* 4 */
 351:lcd/lcd.c     **** 	0x27, 0x45, 0x45, 0x45, 0x39, /* 5 */
 352:lcd/lcd.c     **** 	0x3C, 0x4A, 0x49, 0x49, 0x30, /* 6 */
 353:lcd/lcd.c     **** 	0x01, 0x71, 0x09, 0x05, 0x03, /* 7 */
 354:lcd/lcd.c     **** 	0x36, 0x49, 0x49, 0x49, 0x36, /* 8 */
 355:lcd/lcd.c     **** 	0x06, 0x49, 0x49, 0x29, 0x1E, /* 9 */
 356:lcd/lcd.c     **** 
 357:lcd/lcd.c     **** 	0x00, 0x36, 0x36, 0x00, 0x00, /* : */
 358:lcd/lcd.c     **** 	0x00, 0x56, 0x36, 0x00, 0x00, /* ; */
 359:lcd/lcd.c     **** 	0x08, 0x14, 0x22, 0x41, 0x00, /* < */
 360:lcd/lcd.c     **** 	0x14, 0x14, 0x14, 0x14, 0x14, /* = */
 361:lcd/lcd.c     **** 	0x00, 0x41, 0x22, 0x14, 0x08, /* > */
 362:lcd/lcd.c     **** 	0x02, 0x01, 0x51, 0x09, 0x06, /* ? */
 363:lcd/lcd.c     **** 	0x32, 0x49, 0x79, 0x41, 0x3E, /* @ */
 364:lcd/lcd.c     **** 
 365:lcd/lcd.c     **** 	0x7C, 0x12, 0x11, 0x12, 0x7C, /* A */
 366:lcd/lcd.c     **** 	0x41, 0x7F, 0x49, 0x49, 0x36, /* B */
 367:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x41, 0x22, /* C */
 368:lcd/lcd.c     **** 	0x41, 0x7F, 0x41, 0x41, 0x3E, /* D */
 369:lcd/lcd.c     **** 	0x7F, 0x49, 0x49, 0x49, 0x41, /* E */
 370:lcd/lcd.c     **** 	0x7F, 0x09, 0x09, 0x09, 0x01, /* F */
 371:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x49, 0x7A, /* G */
 372:lcd/lcd.c     **** 	0x7F, 0x08, 0x08, 0x08, 0x7F, /* H */
 373:lcd/lcd.c     **** 	0x00, 0x41, 0x7F, 0x41, 0x00, /* I */
 374:lcd/lcd.c     **** 	0x20, 0x40, 0x41, 0x3F, 0x01, /* J */
 375:lcd/lcd.c     **** 	0x7F, 0x08, 0x14, 0x22, 0x41, /* K */
 376:lcd/lcd.c     **** 	0x7F, 0x40, 0x40, 0x40, 0x40, /* L */
 377:lcd/lcd.c     **** 	0x7F, 0x02, 0x0C, 0x02, 0x7F, /* M */
 378:lcd/lcd.c     **** 	0x7F, 0x04, 0x08, 0x10, 0x7F, /* N */
 379:lcd/lcd.c     **** 	0x3E, 0x41, 0x41, 0x41, 0x3E, /* O */
 380:lcd/lcd.c     **** 	0x7F, 0x09, 0x09, 0x09, 0x06, /* P */
 381:lcd/lcd.c     **** 	0x3E, 0x41, 0x51, 0x21, 0x5E, /* Q */
 382:lcd/lcd.c     **** 	0x7F, 0x09, 0x19, 0x29, 0x46, /* R */
 383:lcd/lcd.c     **** 	0x26, 0x49, 0x49, 0x49, 0x32, /* S */
 384:lcd/lcd.c     **** 	0x01, 0x01, 0x7F, 0x01, 0x01, /* T */
 385:lcd/lcd.c     **** 	0x3F, 0x40, 0x40, 0x40, 0x3F, /* U */
 386:lcd/lcd.c     **** 	0x1F, 0x20, 0x40, 0x20, 0x1F, /* V */
 387:lcd/lcd.c     **** 	0x3F, 0x40, 0x38, 0x40, 0x3F, /* W */
 388:lcd/lcd.c     **** 	0x63, 0x14, 0x08, 0x14, 0x63, /* X */
 389:lcd/lcd.c     **** 	0x07, 0x08, 0x70, 0x08, 0x07, /* Y */
 390:lcd/lcd.c     **** 	0x61, 0x51, 0x49, 0x45, 0x43, /* Z */
 391:lcd/lcd.c     **** 
 392:lcd/lcd.c     **** 	0x00, 0x7F, 0x41, 0x41, 0x00, /* [ */
 393:lcd/lcd.c     **** 	0x02, 0x04, 0x08, 0x10, 0x20, /* \ */
 394:lcd/lcd.c     **** 	0x00, 0x41, 0x41, 0x7F, 0x00, /* ] */
 395:lcd/lcd.c     **** 	0x04, 0x02, 0x01, 0x02, 0x04, /* ^ */
 396:lcd/lcd.c     **** 	0x40, 0x40, 0x40, 0x40, 0x40, /* _ */
 397:lcd/lcd.c     **** 	0x00, 0x01, 0x02, 0x04, 0x00, /* ` */
 398:lcd/lcd.c     **** 
 399:lcd/lcd.c     **** 	0x20, 0x54, 0x54, 0x54, 0x78, /* a */
 400:lcd/lcd.c     **** 	0x7F, 0x48, 0x44, 0x44, 0x38, /* b */
 401:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x44, 0x20, /* c */
 402:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x48, 0x7F, /* d */
 403:lcd/lcd.c     **** 	0x38, 0x54, 0x54, 0x54, 0x18, /* e */
 404:lcd/lcd.c     **** 	0x08, 0x7E, 0x09, 0x01, 0x02, /* f */
 405:lcd/lcd.c     **** 	0x08, 0x54, 0x54, 0x54, 0x3C, /* g */
 406:lcd/lcd.c     **** 	0x7F, 0x08, 0x04, 0x04, 0x78, /* h */
 407:lcd/lcd.c     **** 	0x00, 0x48, 0x7D, 0x40, 0x00, /* i */
 408:lcd/lcd.c     **** 	0x20, 0x40, 0x44, 0x3D, 0x00, /* j */
 409:lcd/lcd.c     **** 	0x7F, 0x10, 0x28, 0x44, 0x00, /* k */
 410:lcd/lcd.c     **** 	0x00, 0x41, 0x7F, 0x40, 0x00, /* l */
 411:lcd/lcd.c     **** 	0x7C, 0x04, 0x78, 0x04, 0x78, /* m */
 412:lcd/lcd.c     **** 	0x7C, 0x08, 0x04, 0x04, 0x78, /* n */
 413:lcd/lcd.c     **** 	0x38, 0x44, 0x44, 0x44, 0x38, /* o */
 414:lcd/lcd.c     **** 	0x7C, 0x14, 0x14, 0x14, 0x08, /* p */
 415:lcd/lcd.c     **** 	0x08, 0x14, 0x14, 0x18, 0x7C, /* q */
 416:lcd/lcd.c     **** 	0x7C, 0x08, 0x04, 0x04, 0x08, /* r */
 417:lcd/lcd.c     **** 	0x48, 0x54, 0x54, 0x54, 0x20, /* s */
 418:lcd/lcd.c     **** 	0x04, 0x3F, 0x44, 0x40, 0x20, /* t */
 419:lcd/lcd.c     **** 	0x3C, 0x40, 0x40, 0x20, 0x7C, /* u */
 420:lcd/lcd.c     **** 	0x1C, 0x20, 0x40, 0x20, 0x1C, /* v */
 421:lcd/lcd.c     **** 	0x3C, 0x40, 0x30, 0x40, 0x3C, /* w */
 422:lcd/lcd.c     **** 	0x44, 0x28, 0x10, 0x28, 0x44, /* x */
 423:lcd/lcd.c     **** 	0x0C, 0x50, 0x50, 0x50, 0x3C, /* y */
 424:lcd/lcd.c     **** 	0x44, 0x64, 0x54, 0x4C, 0x44, /* z */
 425:lcd/lcd.c     **** 
 426:lcd/lcd.c     **** 	0x00, 0x08, 0x36, 0x41, 0x00, /* { */
 427:lcd/lcd.c     **** 	0x00, 0x00, 0x7F, 0x00, 0x00, /* | */
 428:lcd/lcd.c     **** 	0x00, 0x41, 0x36, 0x08, 0x00, /* } */
 429:lcd/lcd.c     **** 	0x10, 0x08, 0x08, 0x10, 0x08  /* ~ */
 430:lcd/lcd.c     **** };
 431:lcd/lcd.c     **** 
 432:lcd/lcd.c     **** u8 lcd_char(u16 x, u16 y, RGB565 fg, RGB565 bg, char c)
 433:lcd/lcd.c     **** {
 1515               		.loc 1 433 1 is_stmt 1 view -0
 1516               		.cfi_startproc
 1517               		.loc 1 433 1 is_stmt 0 view .LVU349
 1518 052c 5F92      		push r5
 1519               		.cfi_def_cfa_offset 3
 1520               		.cfi_offset 5, -2
 1521 052e 6F92      		push r6
 1522               		.cfi_def_cfa_offset 4
 1523               		.cfi_offset 6, -3
 1524 0530 7F92      		push r7
 1525               		.cfi_def_cfa_offset 5
 1526               		.cfi_offset 7, -4
 1527 0532 8F92      		push r8
 1528               		.cfi_def_cfa_offset 6
 1529               		.cfi_offset 8, -5
 1530 0534 9F92      		push r9
 1531               		.cfi_def_cfa_offset 7
 1532               		.cfi_offset 9, -6
 1533 0536 AF92      		push r10
 1534               		.cfi_def_cfa_offset 8
 1535               		.cfi_offset 10, -7
 1536 0538 BF92      		push r11
 1537               		.cfi_def_cfa_offset 9
 1538               		.cfi_offset 11, -8
 1539 053a CF92      		push r12
 1540               		.cfi_def_cfa_offset 10
 1541               		.cfi_offset 12, -9
 1542 053c DF92      		push r13
 1543               		.cfi_def_cfa_offset 11
 1544               		.cfi_offset 13, -10
 1545 053e EF92      		push r14
 1546               		.cfi_def_cfa_offset 12
 1547               		.cfi_offset 14, -11
 1548 0540 FF92      		push r15
 1549               		.cfi_def_cfa_offset 13
 1550               		.cfi_offset 15, -12
 1551 0542 0F93      		push r16
 1552               		.cfi_def_cfa_offset 14
 1553               		.cfi_offset 16, -13
 1554 0544 1F93      		push r17
 1555               		.cfi_def_cfa_offset 15
 1556               		.cfi_offset 17, -14
 1557 0546 CF93      		push r28
 1558               		.cfi_def_cfa_offset 16
 1559               		.cfi_offset 28, -15
 1560 0548 DF93      		push r29
 1561               		.cfi_def_cfa_offset 17
 1562               		.cfi_offset 29, -16
 1563               	/* prologue: function */
 1564               	/* frame size = 0 */
 1565               	/* stack size = 15 */
 1566               	.L__stack_usage = 15
 1567 054a 842E      		mov r8,r20
 1568 054c 752E      		mov r7,r21
 1569 054e 622E      		mov r6,r18
 1570 0550 532E      		mov r5,r19
 434:lcd/lcd.c     **** 	u8 w0, h0;
 1571               		.loc 1 434 2 is_stmt 1 view .LVU350
 435:lcd/lcd.c     **** 	const u8 *start;
 1572               		.loc 1 435 2 view .LVU351
 436:lcd/lcd.c     **** 
 437:lcd/lcd.c     **** 	start = _font5x7 + (c - 32) * FONT_WIDTH;
 1573               		.loc 1 437 2 view .LVU352
 1574               		.loc 1 437 24 is_stmt 0 view .LVU353
 1575 0552 0052      		subi r16,32
 1576 0554 110B      		sbc r17,r17
 1577               	.LVL199:
 1578               		.loc 1 437 30 view .LVU354
 1579 0556 25E0      		ldi r18,lo8(5)
 1580               	.LVL200:
 1581               		.loc 1 437 30 view .LVU355
 1582 0558 209F      		mul r18,r16
 1583 055a 7001      		movw r14,r0
 1584 055c 219F      		mul r18,r17
 1585 055e F00C      		add r15,r0
 1586 0560 1124      		clr __zero_reg__
 1587               	.LVL201:
 438:lcd/lcd.c     **** 
 439:lcd/lcd.c     **** 	_lcd_window_start(x, y, FONT_WIDTH, FONT_HEIGHT);
 1588               		.loc 1 439 2 is_stmt 1 view .LVU356
 1589 0562 27E0      		ldi r18,lo8(7)
 1590 0564 30E0      		ldi r19,0
 1591 0566 45E0      		ldi r20,lo8(5)
 1592 0568 50E0      		ldi r21,0
 1593               	.LVL202:
 1594               		.loc 1 439 2 is_stmt 0 view .LVU357
 1595 056a 0E94 0000 		call _lcd_window_start
 1596               	.LVL203:
 440:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 1597               		.loc 1 440 2 is_stmt 1 view .LVU358
 1598               		.loc 1 440 17 view .LVU359
 439:lcd/lcd.c     **** 	for(h0 = 0; h0 < FONT_HEIGHT; ++h0)
 1599               		.loc 1 439 2 is_stmt 0 view .LVU360
 1600 056e C0E0      		ldi r28,0
 1601 0570 D0E0      		ldi r29,0
 1602 0572 AA24      		clr r10
 1603 0574 A394      		inc r10
 1604 0576 B12C      		mov r11,__zero_reg__
 1605               	.LVL204:
 1606               	.L36:
 441:lcd/lcd.c     **** 	{
 442:lcd/lcd.c     **** 		for(w0 = 0; w0 < FONT_WIDTH; ++w0)
 1607               		.loc 1 442 18 is_stmt 1 view .LVU361
 1608 0578 6501      		movw r12,r10
 1609 057a 0C2E      		mov r0,r28
 1610 057c 00C0      		rjmp 2f
 1611               		1:
 1612 057e CC0C      		lsl r12
 1613 0580 DD1C      		rol r13
 1614               		2:
 1615 0582 0A94      		dec r0
 1616 0584 02F4      		brpl 1b
 1617 0586 8701      		movw r16,r14
 1618 0588 0050      		subi r16,lo8(-(_font5x7))
 1619 058a 1040      		sbci r17,hi8(-(_font5x7))
 443:lcd/lcd.c     **** 		{
 444:lcd/lcd.c     **** 			_lcd_pixel(((pgm_read_byte(start + w0) >> h0) & 1) ? fg : bg);
 1620               		.loc 1 444 43 is_stmt 0 view .LVU362
 1621 058c 85E0      		ldi r24,lo8(5)
 1622 058e 982E      		mov r9,r24
 1623               	.LVL205:
 1624               	.L38:
 1625               		.loc 1 444 4 is_stmt 1 view .LVU363
 1626               	.LBB139:
 1627               		.loc 1 444 17 view .LVU364
 1628               		.loc 1 444 17 view .LVU365
 1629               		.loc 1 444 17 view .LVU366
 1630 0590 F801      		movw r30,r16
 1631               	/* #APP */
 1632               	 ;  444 "lcd/lcd.c" 1
 1633 0592 8491      		lpm r24, Z
 1634               		
 1635               	 ;  0 "" 2
 1636               	.LVL206:
 1637               		.loc 1 444 17 view .LVU367
 1638               	/* #NOAPP */
 1639               	.LBE139:
 1640 0594 90E0      		ldi r25,0
 1641               		.loc 1 444 4 is_stmt 0 view .LVU368
 1642 0596 8C21      		and r24,r12
 1643 0598 9D21      		and r25,r13
 1644               	.LVL207:
 1645               		.loc 1 444 4 view .LVU369
 1646 059a 892B      		or r24,r25
 1647 059c 01F0      		breq .L40
 1648 059e 882D      		mov r24,r8
 1649 05a0 972D      		mov r25,r7
 1650               	.L37:
 1651               		.loc 1 444 4 discriminator 4 view .LVU370
 1652 05a2 0E94 0000 		call _lcd_pixel
 1653               	.LVL208:
 442:lcd/lcd.c     **** 		{
 1654               		.loc 1 442 32 is_stmt 1 discriminator 4 view .LVU371
 442:lcd/lcd.c     **** 		{
 1655               		.loc 1 442 18 discriminator 4 view .LVU372
 1656 05a6 9A94      		dec r9
 1657 05a8 0F5F      		subi r16,-1
 1658 05aa 1F4F      		sbci r17,-1
 1659               	.LVL209:
 442:lcd/lcd.c     **** 		{
 1660               		.loc 1 442 18 is_stmt 0 discriminator 4 view .LVU373
 1661 05ac 9110      		cpse r9,__zero_reg__
 1662 05ae 00C0      		rjmp .L38
 440:lcd/lcd.c     **** 	{
 1663               		.loc 1 440 32 is_stmt 1 discriminator 2 view .LVU374
 1664               	.LVL210:
 440:lcd/lcd.c     **** 	{
 1665               		.loc 1 440 17 discriminator 2 view .LVU375
 1666 05b0 2196      		adiw r28,1
 1667               	.LVL211:
 440:lcd/lcd.c     **** 	{
 1668               		.loc 1 440 17 is_stmt 0 discriminator 2 view .LVU376
 1669 05b2 C730      		cpi r28,7
 1670 05b4 D105      		cpc r29,__zero_reg__
 1671 05b6 01F4      		brne .L36
 445:lcd/lcd.c     **** 		}
 446:lcd/lcd.c     **** 	}
 447:lcd/lcd.c     **** 
 448:lcd/lcd.c     **** 	_lcd_window_end();
 1672               		.loc 1 448 2 is_stmt 1 view .LVU377
 1673 05b8 0E94 0000 		call _lcd_window_end
 1674               	.LVL212:
 449:lcd/lcd.c     **** 	return FONT_WIDTH + 1;
 1675               		.loc 1 449 2 view .LVU378
 450:lcd/lcd.c     **** }
 1676               		.loc 1 450 1 is_stmt 0 view .LVU379
 1677 05bc 86E0      		ldi r24,lo8(6)
 1678               	/* epilogue start */
 1679 05be DF91      		pop r29
 1680 05c0 CF91      		pop r28
 1681               	.LVL213:
 1682               		.loc 1 450 1 view .LVU380
 1683 05c2 1F91      		pop r17
 1684 05c4 0F91      		pop r16
 1685               	.LVL214:
 1686               		.loc 1 450 1 view .LVU381
 1687 05c6 FF90      		pop r15
 1688 05c8 EF90      		pop r14
 1689               	.LVL215:
 1690               		.loc 1 450 1 view .LVU382
 1691 05ca DF90      		pop r13
 1692 05cc CF90      		pop r12
 1693 05ce BF90      		pop r11
 1694 05d0 AF90      		pop r10
 1695 05d2 9F90      		pop r9
 1696 05d4 8F90      		pop r8
 1697 05d6 7F90      		pop r7
 1698 05d8 6F90      		pop r6
 1699 05da 5F90      		pop r5
 1700 05dc 0895      		ret
 1701               	.LVL216:
 1702               	.L40:
 444:lcd/lcd.c     **** 		}
 1703               		.loc 1 444 4 view .LVU383
 1704 05de 862D      		mov r24,r6
 1705 05e0 952D      		mov r25,r5
 1706 05e2 00C0      		rjmp .L37
 1707               		.cfi_endproc
 1708               	.LFE28:
 1710               	.global	lcd_string
 1712               	lcd_string:
 1713               	.LVL217:
 1714               	.LFB29:
 451:lcd/lcd.c     **** 
 452:lcd/lcd.c     **** u16 lcd_string(u16 x, u16 y, RGB565 fg, RGB565 bg, const char *s)
 453:lcd/lcd.c     **** {
 1715               		.loc 1 453 1 is_stmt 1 view -0
 1716               		.cfi_startproc
 1717               		.loc 1 453 1 is_stmt 0 view .LVU385
 1718 05e4 6F92      		push r6
 1719               		.cfi_def_cfa_offset 3
 1720               		.cfi_offset 6, -2
 1721 05e6 7F92      		push r7
 1722               		.cfi_def_cfa_offset 4
 1723               		.cfi_offset 7, -3
 1724 05e8 8F92      		push r8
 1725               		.cfi_def_cfa_offset 5
 1726               		.cfi_offset 8, -4
 1727 05ea 9F92      		push r9
 1728               		.cfi_def_cfa_offset 6
 1729               		.cfi_offset 9, -5
 1730 05ec AF92      		push r10
 1731               		.cfi_def_cfa_offset 7
 1732               		.cfi_offset 10, -6
 1733 05ee BF92      		push r11
 1734               		.cfi_def_cfa_offset 8
 1735               		.cfi_offset 11, -7
 1736 05f0 CF92      		push r12
 1737               		.cfi_def_cfa_offset 9
 1738               		.cfi_offset 12, -8
 1739 05f2 DF92      		push r13
 1740               		.cfi_def_cfa_offset 10
 1741               		.cfi_offset 13, -9
 1742 05f4 EF92      		push r14
 1743               		.cfi_def_cfa_offset 11
 1744               		.cfi_offset 14, -10
 1745 05f6 FF92      		push r15
 1746               		.cfi_def_cfa_offset 12
 1747               		.cfi_offset 15, -11
 1748 05f8 0F93      		push r16
 1749               		.cfi_def_cfa_offset 13
 1750               		.cfi_offset 16, -12
 1751 05fa 1F93      		push r17
 1752               		.cfi_def_cfa_offset 14
 1753               		.cfi_offset 17, -13
 1754 05fc CF93      		push r28
 1755               		.cfi_def_cfa_offset 15
 1756               		.cfi_offset 28, -14
 1757 05fe DF93      		push r29
 1758               		.cfi_def_cfa_offset 16
 1759               		.cfi_offset 29, -15
 1760               	/* prologue: function */
 1761               	/* frame size = 0 */
 1762               	/* stack size = 14 */
 1763               	.L__stack_usage = 14
 1764 0600 6C01      		movw r12,r24
 1765 0602 B62E      		mov r11,r22
 1766 0604 A72E      		mov r10,r23
 1767 0606 942E      		mov r9,r20
 1768 0608 852E      		mov r8,r21
 1769 060a 722E      		mov r7,r18
 1770 060c 632E      		mov r6,r19
 454:lcd/lcd.c     **** 	u16 i;
 1771               		.loc 1 454 2 is_stmt 1 view .LVU386
 455:lcd/lcd.c     **** 	char c;
 1772               		.loc 1 455 2 view .LVU387
 456:lcd/lcd.c     **** 
 457:lcd/lcd.c     **** 	i = 0;
 1773               		.loc 1 457 2 view .LVU388
 1774               	.LVL218:
 458:lcd/lcd.c     **** 	while((c = *s++))
 1775               		.loc 1 458 2 view .LVU389
 457:lcd/lcd.c     **** 	while((c = *s++))
 1776               		.loc 1 457 4 is_stmt 0 view .LVU390
 1777 060e E12C      		mov r14,__zero_reg__
 1778 0610 F12C      		mov r15,__zero_reg__
 1779               	.LVL219:
 1780               	.L43:
 1781               		.loc 1 458 8 is_stmt 1 view .LVU391
 1782               		.loc 1 458 15 is_stmt 0 view .LVU392
 1783 0612 E801      		movw r28,r16
 1784               	.LVL220:
 1785               		.loc 1 458 11 view .LVU393
 1786 0614 0991      		ld r16,Y+
 1787               	.LVL221:
 1788               		.loc 1 458 8 view .LVU394
 1789 0616 0111      		cpse r16,__zero_reg__
 1790 0618 00C0      		rjmp .L44
 459:lcd/lcd.c     **** 	{
 460:lcd/lcd.c     **** 		i += lcd_char(x + i, y, fg, bg, c);
 461:lcd/lcd.c     **** 	}
 462:lcd/lcd.c     **** 
 463:lcd/lcd.c     **** 	return i;
 1791               		.loc 1 463 2 is_stmt 1 view .LVU395
 464:lcd/lcd.c     **** }
 1792               		.loc 1 464 1 is_stmt 0 view .LVU396
 1793 061a C701      		movw r24,r14
 1794               	/* epilogue start */
 1795 061c DF91      		pop r29
 1796 061e CF91      		pop r28
 1797               	.LVL222:
 1798               		.loc 1 464 1 view .LVU397
 1799 0620 1F91      		pop r17
 1800 0622 0F91      		pop r16
 1801               	.LVL223:
 1802               		.loc 1 464 1 view .LVU398
 1803 0624 FF90      		pop r15
 1804 0626 EF90      		pop r14
 1805               	.LVL224:
 1806               		.loc 1 464 1 view .LVU399
 1807 0628 DF90      		pop r13
 1808 062a CF90      		pop r12
 1809               	.LVL225:
 1810               		.loc 1 464 1 view .LVU400
 1811 062c BF90      		pop r11
 1812 062e AF90      		pop r10
 1813 0630 9F90      		pop r9
 1814 0632 8F90      		pop r8
 1815 0634 7F90      		pop r7
 1816 0636 6F90      		pop r6
 1817 0638 0895      		ret
 1818               	.LVL226:
 1819               	.L44:
 460:lcd/lcd.c     **** 	}
 1820               		.loc 1 460 3 is_stmt 1 view .LVU401
 460:lcd/lcd.c     **** 	}
 1821               		.loc 1 460 8 is_stmt 0 view .LVU402
 1822 063a 272D      		mov r18,r7
 1823 063c 362D      		mov r19,r6
 1824 063e 492D      		mov r20,r9
 1825 0640 582D      		mov r21,r8
 1826 0642 6B2D      		mov r22,r11
 1827 0644 7A2D      		mov r23,r10
 1828 0646 C701      		movw r24,r14
 1829 0648 8C0D      		add r24,r12
 1830 064a 9D1D      		adc r25,r13
 1831 064c 0E94 0000 		call lcd_char
 1832               	.LVL227:
 460:lcd/lcd.c     **** 	}
 1833               		.loc 1 460 5 view .LVU403
 1834 0650 E80E      		add r14,r24
 1835 0652 F11C      		adc r15,__zero_reg__
 1836               	.LVL228:
 458:lcd/lcd.c     **** 	{
 1837               		.loc 1 458 15 view .LVU404
 1838 0654 8E01      		movw r16,r28
 1839               	.LVL229:
 458:lcd/lcd.c     **** 	{
 1840               		.loc 1 458 15 view .LVU405
 1841 0656 00C0      		rjmp .L43
 1842               		.cfi_endproc
 1843               	.LFE29:
 1845               	.global	lcd_string_P
 1847               	lcd_string_P:
 1848               	.LVL230:
 1849               	.LFB30:
 465:lcd/lcd.c     **** 
 466:lcd/lcd.c     **** u16 lcd_string_P(u16 x, u16 y, RGB565 fg, RGB565 bg, const char *s)
 467:lcd/lcd.c     **** {
 1850               		.loc 1 467 1 is_stmt 1 view -0
 1851               		.cfi_startproc
 1852               		.loc 1 467 1 is_stmt 0 view .LVU407
 1853 0658 6F92      		push r6
 1854               		.cfi_def_cfa_offset 3
 1855               		.cfi_offset 6, -2
 1856 065a 7F92      		push r7
 1857               		.cfi_def_cfa_offset 4
 1858               		.cfi_offset 7, -3
 1859 065c 8F92      		push r8
 1860               		.cfi_def_cfa_offset 5
 1861               		.cfi_offset 8, -4
 1862 065e 9F92      		push r9
 1863               		.cfi_def_cfa_offset 6
 1864               		.cfi_offset 9, -5
 1865 0660 AF92      		push r10
 1866               		.cfi_def_cfa_offset 7
 1867               		.cfi_offset 10, -6
 1868 0662 BF92      		push r11
 1869               		.cfi_def_cfa_offset 8
 1870               		.cfi_offset 11, -7
 1871 0664 CF92      		push r12
 1872               		.cfi_def_cfa_offset 9
 1873               		.cfi_offset 12, -8
 1874 0666 DF92      		push r13
 1875               		.cfi_def_cfa_offset 10
 1876               		.cfi_offset 13, -9
 1877 0668 EF92      		push r14
 1878               		.cfi_def_cfa_offset 11
 1879               		.cfi_offset 14, -10
 1880 066a FF92      		push r15
 1881               		.cfi_def_cfa_offset 12
 1882               		.cfi_offset 15, -11
 1883 066c 0F93      		push r16
 1884               		.cfi_def_cfa_offset 13
 1885               		.cfi_offset 16, -12
 1886 066e 1F93      		push r17
 1887               		.cfi_def_cfa_offset 14
 1888               		.cfi_offset 17, -13
 1889 0670 CF93      		push r28
 1890               		.cfi_def_cfa_offset 15
 1891               		.cfi_offset 28, -14
 1892 0672 DF93      		push r29
 1893               		.cfi_def_cfa_offset 16
 1894               		.cfi_offset 29, -15
 1895               	/* prologue: function */
 1896               	/* frame size = 0 */
 1897               	/* stack size = 14 */
 1898               	.L__stack_usage = 14
 1899 0674 6C01      		movw r12,r24
 1900 0676 B62E      		mov r11,r22
 1901 0678 A72E      		mov r10,r23
 1902 067a 942E      		mov r9,r20
 1903 067c 852E      		mov r8,r21
 1904 067e 722E      		mov r7,r18
 1905 0680 632E      		mov r6,r19
 1906 0682 E801      		movw r28,r16
 468:lcd/lcd.c     **** 	u16 i;
 1907               		.loc 1 468 2 is_stmt 1 view .LVU408
 469:lcd/lcd.c     **** 	char c;
 1908               		.loc 1 469 2 view .LVU409
 470:lcd/lcd.c     **** 
 471:lcd/lcd.c     **** 	i = 0;
 1909               		.loc 1 471 2 view .LVU410
 1910               	.LVL231:
 472:lcd/lcd.c     **** 	while((c = pgm_read_byte(s++)))
 1911               		.loc 1 472 2 view .LVU411
 471:lcd/lcd.c     **** 	while((c = pgm_read_byte(s++)))
 1912               		.loc 1 471 4 is_stmt 0 view .LVU412
 1913 0684 E12C      		mov r14,__zero_reg__
 1914 0686 F12C      		mov r15,__zero_reg__
 1915               	.LVL232:
 1916               	.L46:
 1917               		.loc 1 472 8 is_stmt 1 view .LVU413
 1918               	.LBB140:
 1919               		.loc 1 472 13 view .LVU414
 1920               		.loc 1 472 13 view .LVU415
 1921               		.loc 1 472 13 view .LVU416
 1922 0688 FE01      		movw r30,r28
 1923               	/* #APP */
 1924               	 ;  472 "lcd/lcd.c" 1
 1925 068a 0491      		lpm r16, Z
 1926               		
 1927               	 ;  0 "" 2
 1928               	.LVL233:
 1929               		.loc 1 472 13 view .LVU417
 1930               		.loc 1 472 13 is_stmt 0 view .LVU418
 1931               	/* #NOAPP */
 1932               	.LBE140:
 1933               		.loc 1 472 8 view .LVU419
 1934 068c 2196      		adiw r28,1
 1935               	.LVL234:
 1936               		.loc 1 472 8 view .LVU420
 1937 068e 0111      		cpse r16,__zero_reg__
 1938 0690 00C0      		rjmp .L47
 473:lcd/lcd.c     **** 	{
 474:lcd/lcd.c     **** 		i += lcd_char(x + i, y, fg, bg, c);
 475:lcd/lcd.c     **** 	}
 476:lcd/lcd.c     **** 
 477:lcd/lcd.c     **** 	return i;
 1939               		.loc 1 477 2 is_stmt 1 view .LVU421
 478:lcd/lcd.c     **** }
 1940               		.loc 1 478 1 is_stmt 0 view .LVU422
 1941 0692 C701      		movw r24,r14
 1942               	/* epilogue start */
 1943 0694 DF91      		pop r29
 1944 0696 CF91      		pop r28
 1945               	.LVL235:
 1946               		.loc 1 478 1 view .LVU423
 1947 0698 1F91      		pop r17
 1948 069a 0F91      		pop r16
 1949               	.LVL236:
 1950               		.loc 1 478 1 view .LVU424
 1951 069c FF90      		pop r15
 1952 069e EF90      		pop r14
 1953               	.LVL237:
 1954               		.loc 1 478 1 view .LVU425
 1955 06a0 DF90      		pop r13
 1956 06a2 CF90      		pop r12
 1957               	.LVL238:
 1958               		.loc 1 478 1 view .LVU426
 1959 06a4 BF90      		pop r11
 1960 06a6 AF90      		pop r10
 1961 06a8 9F90      		pop r9
 1962 06aa 8F90      		pop r8
 1963 06ac 7F90      		pop r7
 1964 06ae 6F90      		pop r6
 1965 06b0 0895      		ret
 1966               	.LVL239:
 1967               	.L47:
 474:lcd/lcd.c     **** 	}
 1968               		.loc 1 474 3 is_stmt 1 view .LVU427
 474:lcd/lcd.c     **** 	}
 1969               		.loc 1 474 8 is_stmt 0 view .LVU428
 1970 06b2 272D      		mov r18,r7
 1971 06b4 362D      		mov r19,r6
 1972 06b6 492D      		mov r20,r9
 1973 06b8 582D      		mov r21,r8
 1974 06ba 6B2D      		mov r22,r11
 1975 06bc 7A2D      		mov r23,r10
 1976 06be C701      		movw r24,r14
 1977 06c0 8C0D      		add r24,r12
 1978 06c2 9D1D      		adc r25,r13
 1979 06c4 0E94 0000 		call lcd_char
 1980               	.LVL240:
 474:lcd/lcd.c     **** 	}
 1981               		.loc 1 474 5 view .LVU429
 1982 06c8 E80E      		add r14,r24
 1983 06ca F11C      		adc r15,__zero_reg__
 1984               	.LVL241:
 474:lcd/lcd.c     **** 	}
 1985               		.loc 1 474 5 view .LVU430
 1986 06cc 00C0      		rjmp .L46
 1987               		.cfi_endproc
 1988               	.LFE30:
 1990               		.section	.progmem.data,"a",@progbits
 1993               	__c.0:
 1994 0000 4C43 4420 		.string	"LCD driver initialized"
 1994      6472 6976 
 1994      6572 2069 
 1994      6E69 7469 
 1994      616C 697A 
 1997               	__c.1:
 1998 0017 4C43 4420 		.string	"LCD driver starting"
 1998      6472 6976 
 1998      6572 2073 
 1998      7461 7274 
 1998      696E 6700 
 2001               	_font5x7:
 2002 002b 00        		.string	""
 2003 002c 00        		.string	""
 2004 002d 00        		.string	""
 2005 002e 00        		.string	""
 2006 002f 00        		.string	""
 2007 0030 00        		.string	""
 2008 0031 00        		.string	""
 2009 0032 5F00      		.string	"_"
 2010 0034 00        		.string	""
 2011 0035 00        		.string	""
 2012 0036 0700      		.string	"\007"
 2013 0038 0700      		.string	"\007"
 2014 003a 147F 147F 		.string	"\024\177\024\177\024$*\177*\022#\023\bdb6IU\"P"
 2014      1424 2A7F 
 2014      2A12 2313 
 2014      0864 6236 
 2014      4955 2250 
 2015 004f 00        		.string	""
 2016 0050 0300      		.string	"\003"
 2017 0052 00        		.string	""
 2018 0053 00        		.string	""
 2019 0054 1C22 4100 		.string	"\034\"A"
 2020 0058 00        		.string	""
 2021 0059 4122 1C00 		.string	"A\"\034"
 2022 005d 1408 3E08 		.string	"\024\b>\b\024\b\b>\b\b"
 2022      1408 083E 
 2022      0808 00
 2023 0068 5030 00   		.string	"P0"
 2024 006b 00        		.string	""
 2025 006c 0808 0808 		.string	"\b\b\b\b\b"
 2025      0800 
 2026 0072 6060 00   		.string	"``"
 2027 0075 00        		.string	""
 2028 0076 2010 0804 		.string	" \020\b\004\002>QIE>"
 2028      023E 5149 
 2028      453E 00
 2029 0081 427F 4000 		.string	"B\177@"
 2030 0085 6251 4949 		.string	"bQIIF\"AII6\030\024\022\177\020'EEE9<JII0\001q\t\005\0036III6\006II)\036"
 2030      4622 4149 
 2030      4936 1814 
 2030      127F 1027 
 2030      4545 4539 
 2031 00ae 3636 00   		.string	"66"
 2032 00b1 00        		.string	""
 2033 00b2 00        		.string	""
 2034 00b3 5636 00   		.string	"V6"
 2035 00b6 00        		.string	""
 2036 00b7 0814 2241 		.string	"\b\024\"A"
 2036      00
 2037 00bc 1414 1414 		.string	"\024\024\024\024\024"
 2037      1400 
 2038 00c2 4122 1408 		.string	"A\"\024\b\002\001Q\t\0062IyA>|\022\021\022|A\177II6>AAA\"A\177AA>\177IIIA\177\t\t\t\001>A
 2038      0201 5109 
 2038      0632 4979 
 2038      413E 7C12 
 2038      1112 7C41 
 2039 00f9 417F 4100 		.string	"A\177A"
 2040 00fd 2040 413F 		.string	" @A?\001\177\b\024\"A\177@@@@\177\002\f\002\177\177\004\b\020\177>AAA>\177\t\t\t\006>AQ!^
 2040      017F 0814 
 2040      2241 7F40 
 2040      4040 407F 
 2040      020C 027F 
 2041 0153 7F41 4100 		.string	"\177AA"
 2042 0157 0204 0810 		.string	"\002\004\b\020 "
 2042      2000 
 2043 015d 4141 7F00 		.string	"AA\177"
 2044 0161 0402 0102 		.string	"\004\002\001\002\004@@@@@"
 2044      0440 4040 
 2044      4040 00
 2045 016c 0102 0400 		.string	"\001\002\004"
 2046 0170 2054 5454 		.string	" TTTx\177HDD88DDD 8DDH\1778TTT\030\b~\t\001\002\bTTT<\177\b\004\004x"
 2046      787F 4844 
 2046      4438 3844 
 2046      4444 2038 
 2046      4444 487F 
 2047 0199 487D 4000 		.string	"H}@"
 2048 019d 2040 443D 		.string	" @D="
 2048      00
 2049 01a2 7F10 2844 		.string	"\177\020(D"
 2049      00
 2050 01a7 00        		.string	""
 2051 01a8 417F 4000 		.string	"A\177@"
 2052 01ac 7C04 7804 		.string	"|\004x\004x|\b\004\004x8DDD8|\024\024\024\b\b\024\024\030||\b\004\004\bHTTT \004?D@ <@@ |
 2052      787C 0804 
 2052      0478 3844 
 2052      4444 387C 
 2052      1414 1408 
 2053 01f3 0836 4100 		.string	"\b6A"
 2054 01f7 00        		.string	""
 2055 01f8 00        		.string	""
 2056 01f9 7F00      		.string	"\177"
 2057 01fb 00        		.string	""
 2058 01fc 00        		.string	""
 2059 01fd 4136 0800 		.string	"A6\b"
 2060 0201 1008 0810 		.ascii	"\020\b\b\020\b"
 2060      08
 2061               		.local	_lcd_initialized
 2062               		.comm	_lcd_initialized,1,1
 2063               		.text
 2064               	.Letext0:
 2065               		.file 4 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 2066               		.file 5 "../../types/types.h"
 2067               		.file 6 "lcd/lcd.h"
 2068               		.file 7 "logger/logger.h"
 2069               		.file 8 "spi/spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
     /tmp/ccS822Yv.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccS822Yv.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccS822Yv.s:4      *ABS*:0000003f __SREG__
     /tmp/ccS822Yv.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccS822Yv.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccS822Yv.s:12     .text:00000000 _lcd_window_end
     /tmp/ccS822Yv.s:15     .text:00000000 .Loc.0
     /tmp/ccS822Yv.s:16     .text:00000000 L0
     /tmp/ccS822Yv.s:21     .text:00000000 .Loc.1
     /tmp/ccS822Yv.s:24     .text:00000002 .Loc.2
     /tmp/ccS822Yv.s:26     .text:00000004 L0
     /tmp/ccS822Yv.s:30     .text:00000004 _lcd_write_data
     /tmp/ccS822Yv.s:33     .text:00000004 .Loc.3
     /tmp/ccS822Yv.s:34     .text:00000004 L0
     /tmp/ccS822Yv.s:35     .text:00000004 .Loc.4
     /tmp/ccS822Yv.s:44     .text:00000008 .Loc.5
     /tmp/ccS822Yv.s:46     .text:0000000a .Loc.6
     /tmp/ccS822Yv.s:48     .text:0000000c .Loc.7
     /tmp/ccS822Yv.s:51     .text:0000000e .Loc.8
     /tmp/ccS822Yv.s:54     .text:00000012 .Loc.9
     /tmp/ccS822Yv.s:58     .text:00000018 .Loc.10
     /tmp/ccS822Yv.s:61     .text:0000001a .Loc.11
     /tmp/ccS822Yv.s:64     .text:0000001c .Loc.12
     /tmp/ccS822Yv.s:66     .text:0000001e L0
     /tmp/ccS822Yv.s:70     .text:0000001e _lcd_write_reg
     /tmp/ccS822Yv.s:73     .text:0000001e .Loc.13
     /tmp/ccS822Yv.s:74     .text:0000001e L0
     /tmp/ccS822Yv.s:79     .text:0000001e .Loc.14
     /tmp/ccS822Yv.s:81     .text:00000020 .Loc.15
     /tmp/ccS822Yv.s:83     .text:00000022 .Loc.16
     /tmp/ccS822Yv.s:86     .text:00000026 .Loc.17
     /tmp/ccS822Yv.s:89     .text:00000028 .Loc.18
     /tmp/ccS822Yv.s:91     .text:0000002a L0
     /tmp/ccS822Yv.s:95     .text:0000002a _lcd_window_start
     /tmp/ccS822Yv.s:98     .text:0000002a .Loc.19
     /tmp/ccS822Yv.s:99     .text:0000002a L0
     /tmp/ccS822Yv.s:100    .text:0000002a .Loc.20
     /tmp/ccS822Yv.s:131    .text:0000003e .Loc.21
     /tmp/ccS822Yv.s:132    .text:0000003e .Loc.22
     /tmp/ccS822Yv.s:133    .text:0000003e .Loc.23
     /tmp/ccS822Yv.s:140    .text:00000048 .Loc.24
     /tmp/ccS822Yv.s:141    .text:00000048 .Loc.25
     /tmp/ccS822Yv.s:147    .text:00000050 .Loc.26
     /tmp/ccS822Yv.s:150    .text:00000054 .Loc.27
     /tmp/ccS822Yv.s:154    .text:0000005a .Loc.28
     /tmp/ccS822Yv.s:158    .text:00000060 .Loc.29
     /tmp/ccS822Yv.s:162    .text:00000066 .Loc.30
     /tmp/ccS822Yv.s:166    .text:0000006c .Loc.31
     /tmp/ccS822Yv.s:170    .text:00000072 .Loc.32
     /tmp/ccS822Yv.s:174    .text:00000078 .Loc.33
     /tmp/ccS822Yv.s:178    .text:0000007e .Loc.34
     /tmp/ccS822Yv.s:182    .text:00000084 .Loc.35
     /tmp/ccS822Yv.s:186    .text:0000008a .Loc.36
     /tmp/ccS822Yv.s:190    .text:00000090 .Loc.37
     /tmp/ccS822Yv.s:194    .text:00000096 .Loc.38
     /tmp/ccS822Yv.s:196    .text:00000098 .Loc.39
     /tmp/ccS822Yv.s:199    .text:0000009a .Loc.40
     /tmp/ccS822Yv.s:203    .text:0000009e .Loc.41
     /tmp/ccS822Yv.s:207    .text:000000a2 .Loc.42
     /tmp/ccS822Yv.s:211    .text:000000a6 .Loc.43
     /tmp/ccS822Yv.s:215    .text:000000aa .Loc.44
     /tmp/ccS822Yv.s:217    .text:000000ac L0
     /tmp/ccS822Yv.s:221    .text:000000ac _lcd_pixel
     /tmp/ccS822Yv.s:224    .text:000000ac .Loc.45
     /tmp/ccS822Yv.s:225    .text:000000ac L0
     /tmp/ccS822Yv.s:226    .text:000000ac .Loc.46
     /tmp/ccS822Yv.s:237    .text:000000b2 .Loc.47
     /tmp/ccS822Yv.s:240    .text:000000b6 .Loc.48
     /tmp/ccS822Yv.s:243    .text:000000b8 .Loc.49
     /tmp/ccS822Yv.s:245    .text:000000ba .Loc.50
     /tmp/ccS822Yv.s:248    .text:000000be L0
     /tmp/ccS822Yv.s:253    .text:000000be lcd_backlight
     /tmp/ccS822Yv.s:256    .text:000000be .Loc.51
     /tmp/ccS822Yv.s:257    .text:000000be L0
     /tmp/ccS822Yv.s:262    .text:000000be .Loc.52
     /tmp/ccS822Yv.s:264    .text:000000be .Loc.53
     /tmp/ccS822Yv.s:266    .text:000000c0 L0
     /tmp/ccS822Yv.s:271    .text:000000c0 lcd_initialized
     /tmp/ccS822Yv.s:273    .text:000000c0 .Loc.54
     /tmp/ccS822Yv.s:274    .text:000000c0 L0
     /tmp/ccS822Yv.s:279    .text:000000c0 .Loc.55
     /tmp/ccS822Yv.s:280    .text:000000c0 .Loc.56
                             .bss:00000000 _lcd_initialized
     /tmp/ccS822Yv.s:284    .text:000000c6 L0
     /tmp/ccS822Yv.s:289    .text:000000c6 lcd_rect
     /tmp/ccS822Yv.s:292    .text:000000c6 .Loc.57
     /tmp/ccS822Yv.s:293    .text:000000c6 L0
     /tmp/ccS822Yv.s:294    .text:000000c6 .Loc.58
     /tmp/ccS822Yv.s:331    .text:000000de .Loc.59
     /tmp/ccS822Yv.s:332    .text:000000de .Loc.60
     /tmp/ccS822Yv.s:335    .text:000000e2 .Loc.61
     /tmp/ccS822Yv.s:336    .text:000000e2 .Loc.62
     /tmp/ccS822Yv.s:341    .text:000000e6 .Loc.63
     /tmp/ccS822Yv.s:345    .text:000000ec .Loc.64
     /tmp/ccS822Yv.s:347    .text:000000ec .Loc.65
     /tmp/ccS822Yv.s:351    .text:000000f0 .Loc.66
     /tmp/ccS822Yv.s:355    .text:000000f4 .Loc.67
     /tmp/ccS822Yv.s:359    .text:000000f8 .Loc.68
     /tmp/ccS822Yv.s:363    .text:000000fc .Loc.69
     /tmp/ccS822Yv.s:366    .text:00000100 .Loc.70
     /tmp/ccS822Yv.s:370    .text:00000104 .Loc.71
     /tmp/ccS822Yv.s:374    .text:0000010a .Loc.72
     /tmp/ccS822Yv.s:380    .text:00000110 .Loc.73
     /tmp/ccS822Yv.s:384    .text:00000116 .Loc.74
     /tmp/ccS822Yv.s:389    .text:0000011c .Loc.75
     /tmp/ccS822Yv.s:393    .text:0000011e .Loc.76
     /tmp/ccS822Yv.s:397    .text:00000124 L0
     /tmp/ccS822Yv.s:402    .text:00000124 lcd_init
     /tmp/ccS822Yv.s:405    .text:00000124 .Loc.77
     /tmp/ccS822Yv.s:406    .text:00000124 L0
     /tmp/ccS822Yv.s:407    .text:00000124 .Loc.78
     /tmp/ccS822Yv.s:419    .text:0000012a .Loc.79
     /tmp/ccS822Yv.s:421    .text:0000012a .Loc.80
     /tmp/ccS822Yv.s:422    .text:0000012a .Loc.81
     /tmp/ccS822Yv.s:424    .text:0000012a .Loc.82
     /tmp/ccS822Yv.s:1997   .progmem.data:00000017 __c.1
     /tmp/ccS822Yv.s:428    .text:0000012e .Loc.83
     /tmp/ccS822Yv.s:437    .text:00000138 .Loc.84
     /tmp/ccS822Yv.s:440    .text:0000013c .Loc.85
     /tmp/ccS822Yv.s:443    .text:0000013c .Loc.86
     /tmp/ccS822Yv.s:445    .text:0000013c .Loc.87
     /tmp/ccS822Yv.s:447    .text:0000013e .Loc.88
     /tmp/ccS822Yv.s:452    .text:0000013e .Loc.89
     /tmp/ccS822Yv.s:454    .text:0000013e .Loc.90
     /tmp/ccS822Yv.s:455    .text:0000013e .Loc.91
     /tmp/ccS822Yv.s:456    .text:0000013e .Loc.92
     /tmp/ccS822Yv.s:457    .text:0000013e .Loc.93
     /tmp/ccS822Yv.s:458    .text:0000013e .Loc.94
     /tmp/ccS822Yv.s:459    .text:0000013e .Loc.95
     /tmp/ccS822Yv.s:462    .text:0000013e .Loc.96
     /tmp/ccS822Yv.s:474    .text:00000148 .Loc.97
     /tmp/ccS822Yv.s:479    .text:0000014c .Loc.98
     /tmp/ccS822Yv.s:482    .text:0000014c .Loc.99
     /tmp/ccS822Yv.s:485    .text:0000014c .Loc.100
     /tmp/ccS822Yv.s:487    .text:0000014c .Loc.101
     /tmp/ccS822Yv.s:495    .text:00000152 .Loc.102
     /tmp/ccS822Yv.s:499    .text:00000152 .Loc.103
     /tmp/ccS822Yv.s:500    .text:00000152 .Loc.104
     /tmp/ccS822Yv.s:503    .text:00000154 .Loc.105
     /tmp/ccS822Yv.s:507    .text:00000158 .Loc.106
     /tmp/ccS822Yv.s:510    .text:00000158 .Loc.107
     /tmp/ccS822Yv.s:512    .text:0000015a .Loc.108
     /tmp/ccS822Yv.s:516    .text:0000015a .Loc.109
     /tmp/ccS822Yv.s:518    .text:0000015a .Loc.110
     /tmp/ccS822Yv.s:519    .text:0000015a .Loc.111
     /tmp/ccS822Yv.s:520    .text:0000015a .Loc.112
     /tmp/ccS822Yv.s:521    .text:0000015a .Loc.113
     /tmp/ccS822Yv.s:522    .text:0000015a .Loc.114
     /tmp/ccS822Yv.s:523    .text:0000015a .Loc.115
     /tmp/ccS822Yv.s:526    .text:0000015a .Loc.116
     /tmp/ccS822Yv.s:533    .text:0000015e .Loc.117
     /tmp/ccS822Yv.s:538    .text:00000162 .Loc.118
     /tmp/ccS822Yv.s:541    .text:00000162 .Loc.119
     /tmp/ccS822Yv.s:544    .text:00000162 .Loc.120
     /tmp/ccS822Yv.s:546    .text:00000162 .Loc.121
     /tmp/ccS822Yv.s:554    .text:00000168 .Loc.122
     /tmp/ccS822Yv.s:558    .text:00000168 .Loc.123
     /tmp/ccS822Yv.s:559    .text:00000168 .Loc.124
     /tmp/ccS822Yv.s:562    .text:0000016a .Loc.125
     /tmp/ccS822Yv.s:566    .text:0000016e .Loc.126
     /tmp/ccS822Yv.s:569    .text:0000016e .Loc.127
     /tmp/ccS822Yv.s:571    .text:00000170 .Loc.128
     /tmp/ccS822Yv.s:575    .text:00000170 .Loc.129
     /tmp/ccS822Yv.s:577    .text:00000170 .Loc.130
     /tmp/ccS822Yv.s:578    .text:00000170 .Loc.131
     /tmp/ccS822Yv.s:579    .text:00000170 .Loc.132
     /tmp/ccS822Yv.s:580    .text:00000170 .Loc.133
     /tmp/ccS822Yv.s:581    .text:00000170 .Loc.134
     /tmp/ccS822Yv.s:582    .text:00000170 .Loc.135
     /tmp/ccS822Yv.s:585    .text:00000170 .Loc.136
     /tmp/ccS822Yv.s:592    .text:00000174 .Loc.137
     /tmp/ccS822Yv.s:597    .text:00000178 .Loc.138
     /tmp/ccS822Yv.s:600    .text:00000178 .Loc.139
     /tmp/ccS822Yv.s:603    .text:00000178 .Loc.140
     /tmp/ccS822Yv.s:605    .text:00000178 .Loc.141
     /tmp/ccS822Yv.s:613    .text:0000017e .Loc.142
     /tmp/ccS822Yv.s:617    .text:0000017e .Loc.143
     /tmp/ccS822Yv.s:618    .text:0000017e .Loc.144
     /tmp/ccS822Yv.s:621    .text:00000180 .Loc.145
     /tmp/ccS822Yv.s:625    .text:00000184 .Loc.146
     /tmp/ccS822Yv.s:630    .text:00000184 .Loc.147
     /tmp/ccS822Yv.s:631    .text:00000184 .Loc.148
     /tmp/ccS822Yv.s:634    .text:00000184 .Loc.149
     /tmp/ccS822Yv.s:636    .text:00000184 .Loc.150
     /tmp/ccS822Yv.s:640    .text:0000018a .Loc.151
     /tmp/ccS822Yv.s:644    .text:00000190 .Loc.152
     /tmp/ccS822Yv.s:648    .text:00000196 .Loc.153
     /tmp/ccS822Yv.s:652    .text:0000019c .Loc.154
     /tmp/ccS822Yv.s:656    .text:000001a2 .Loc.155
     /tmp/ccS822Yv.s:660    .text:000001a8 .Loc.156
     /tmp/ccS822Yv.s:664    .text:000001ae .Loc.157
     /tmp/ccS822Yv.s:668    .text:000001b4 .Loc.158
     /tmp/ccS822Yv.s:672    .text:000001ba .Loc.159
     /tmp/ccS822Yv.s:676    .text:000001c0 .Loc.160
     /tmp/ccS822Yv.s:680    .text:000001c6 .Loc.161
     /tmp/ccS822Yv.s:684    .text:000001cc .Loc.162
     /tmp/ccS822Yv.s:688    .text:000001d2 .Loc.163
     /tmp/ccS822Yv.s:692    .text:000001d8 .Loc.164
     /tmp/ccS822Yv.s:696    .text:000001de .Loc.165
     /tmp/ccS822Yv.s:700    .text:000001e4 .Loc.166
     /tmp/ccS822Yv.s:704    .text:000001ea .Loc.167
     /tmp/ccS822Yv.s:708    .text:000001f0 .Loc.168
     /tmp/ccS822Yv.s:712    .text:000001f6 .Loc.169
     /tmp/ccS822Yv.s:716    .text:000001fc .Loc.170
     /tmp/ccS822Yv.s:720    .text:00000202 .Loc.171
     /tmp/ccS822Yv.s:724    .text:00000208 .Loc.172
     /tmp/ccS822Yv.s:728    .text:0000020e .Loc.173
     /tmp/ccS822Yv.s:732    .text:00000214 .Loc.174
     /tmp/ccS822Yv.s:736    .text:0000021a .Loc.175
     /tmp/ccS822Yv.s:740    .text:00000220 .Loc.176
     /tmp/ccS822Yv.s:744    .text:00000226 .Loc.177
     /tmp/ccS822Yv.s:748    .text:0000022c .Loc.178
     /tmp/ccS822Yv.s:752    .text:00000232 .Loc.179
     /tmp/ccS822Yv.s:756    .text:00000238 .Loc.180
     /tmp/ccS822Yv.s:760    .text:0000023e .Loc.181
     /tmp/ccS822Yv.s:764    .text:00000244 .Loc.182
     /tmp/ccS822Yv.s:768    .text:0000024a .Loc.183
     /tmp/ccS822Yv.s:772    .text:00000250 .Loc.184
     /tmp/ccS822Yv.s:776    .text:00000256 .Loc.185
     /tmp/ccS822Yv.s:780    .text:0000025c .Loc.186
     /tmp/ccS822Yv.s:784    .text:00000262 .Loc.187
     /tmp/ccS822Yv.s:788    .text:00000268 .Loc.188
     /tmp/ccS822Yv.s:792    .text:0000026e .Loc.189
     /tmp/ccS822Yv.s:796    .text:00000274 .Loc.190
     /tmp/ccS822Yv.s:800    .text:0000027a .Loc.191
     /tmp/ccS822Yv.s:804    .text:00000280 .Loc.192
     /tmp/ccS822Yv.s:808    .text:00000286 .Loc.193
     /tmp/ccS822Yv.s:812    .text:0000028c .Loc.194
     /tmp/ccS822Yv.s:816    .text:00000292 .Loc.195
     /tmp/ccS822Yv.s:820    .text:00000298 .Loc.196
     /tmp/ccS822Yv.s:824    .text:0000029e .Loc.197
     /tmp/ccS822Yv.s:828    .text:000002a4 .Loc.198
     /tmp/ccS822Yv.s:832    .text:000002aa .Loc.199
     /tmp/ccS822Yv.s:836    .text:000002b0 .Loc.200
     /tmp/ccS822Yv.s:840    .text:000002b6 .Loc.201
     /tmp/ccS822Yv.s:844    .text:000002bc .Loc.202
     /tmp/ccS822Yv.s:848    .text:000002c2 .Loc.203
     /tmp/ccS822Yv.s:852    .text:000002c8 .Loc.204
     /tmp/ccS822Yv.s:856    .text:000002ce .Loc.205
     /tmp/ccS822Yv.s:860    .text:000002d4 .Loc.206
     /tmp/ccS822Yv.s:864    .text:000002da .Loc.207
     /tmp/ccS822Yv.s:868    .text:000002e0 .Loc.208
     /tmp/ccS822Yv.s:872    .text:000002e6 .Loc.209
     /tmp/ccS822Yv.s:876    .text:000002ec .Loc.210
     /tmp/ccS822Yv.s:880    .text:000002f2 .Loc.211
     /tmp/ccS822Yv.s:884    .text:000002f8 .Loc.212
     /tmp/ccS822Yv.s:888    .text:000002fe .Loc.213
     /tmp/ccS822Yv.s:892    .text:00000304 .Loc.214
     /tmp/ccS822Yv.s:896    .text:0000030a .Loc.215
     /tmp/ccS822Yv.s:900    .text:00000310 .Loc.216
     /tmp/ccS822Yv.s:904    .text:00000316 .Loc.217
     /tmp/ccS822Yv.s:908    .text:0000031c .Loc.218
     /tmp/ccS822Yv.s:912    .text:00000322 .Loc.219
     /tmp/ccS822Yv.s:916    .text:00000328 .Loc.220
     /tmp/ccS822Yv.s:920    .text:0000032e .Loc.221
     /tmp/ccS822Yv.s:924    .text:00000334 .Loc.222
     /tmp/ccS822Yv.s:928    .text:0000033a .Loc.223
     /tmp/ccS822Yv.s:932    .text:00000340 .Loc.224
     /tmp/ccS822Yv.s:936    .text:00000346 .Loc.225
     /tmp/ccS822Yv.s:940    .text:0000034c .Loc.226
     /tmp/ccS822Yv.s:944    .text:00000352 .Loc.227
     /tmp/ccS822Yv.s:948    .text:00000358 .Loc.228
     /tmp/ccS822Yv.s:952    .text:0000035e .Loc.229
     /tmp/ccS822Yv.s:956    .text:00000364 .Loc.230
     /tmp/ccS822Yv.s:960    .text:0000036a .Loc.231
     /tmp/ccS822Yv.s:964    .text:00000370 .Loc.232
     /tmp/ccS822Yv.s:968    .text:00000376 .Loc.233
     /tmp/ccS822Yv.s:972    .text:0000037c .Loc.234
     /tmp/ccS822Yv.s:976    .text:00000382 .Loc.235
     /tmp/ccS822Yv.s:980    .text:00000388 .Loc.236
     /tmp/ccS822Yv.s:986    .text:0000038e .Loc.237
     /tmp/ccS822Yv.s:989    .text:0000038e .Loc.238
     /tmp/ccS822Yv.s:991    .text:0000038e .Loc.239
     /tmp/ccS822Yv.s:992    .text:0000038e .Loc.240
     /tmp/ccS822Yv.s:993    .text:0000038e .Loc.241
     /tmp/ccS822Yv.s:997    .text:00000394 .Loc.242
     /tmp/ccS822Yv.s:1001   .text:0000039a .Loc.243
     /tmp/ccS822Yv.s:1005   .text:000003a0 .Loc.244
     /tmp/ccS822Yv.s:1009   .text:000003a6 .Loc.245
     /tmp/ccS822Yv.s:1013   .text:000003ac .Loc.246
     /tmp/ccS822Yv.s:1018   .text:000003ac .Loc.247
     /tmp/ccS822Yv.s:1023   .text:000003ac .Loc.248
     /tmp/ccS822Yv.s:1032   .text:000003b0 .Loc.249
     /tmp/ccS822Yv.s:1037   .text:000003b4 .Loc.250
     /tmp/ccS822Yv.s:1040   .text:000003b4 .Loc.251
     /tmp/ccS822Yv.s:1043   .text:000003b4 .Loc.252
     /tmp/ccS822Yv.s:1045   .text:000003b4 .Loc.253
     /tmp/ccS822Yv.s:1053   .text:000003ba .Loc.254
     /tmp/ccS822Yv.s:1057   .text:000003ba .Loc.255
     /tmp/ccS822Yv.s:1058   .text:000003ba .Loc.256
     /tmp/ccS822Yv.s:1061   .text:000003bc .Loc.257
     /tmp/ccS822Yv.s:1065   .text:000003c0 .Loc.258
     /tmp/ccS822Yv.s:1068   .text:000003c0 .Loc.259
     /tmp/ccS822Yv.s:1072   .text:000003c6 .Loc.260
     /tmp/ccS822Yv.s:1075   .text:000003c6 .Loc.261
     /tmp/ccS822Yv.s:1077   .text:000003c6 .Loc.262
     /tmp/ccS822Yv.s:1078   .text:000003c6 .Loc.263
     /tmp/ccS822Yv.s:1079   .text:000003c6 .Loc.264
     /tmp/ccS822Yv.s:1080   .text:000003c6 .Loc.265
     /tmp/ccS822Yv.s:1081   .text:000003c6 .Loc.266
     /tmp/ccS822Yv.s:1082   .text:000003c6 .Loc.267
     /tmp/ccS822Yv.s:1085   .text:000003c6 .Loc.268
     /tmp/ccS822Yv.s:1092   .text:000003ca .Loc.269
     /tmp/ccS822Yv.s:1097   .text:000003ce .Loc.270
     /tmp/ccS822Yv.s:1100   .text:000003ce .Loc.271
     /tmp/ccS822Yv.s:1103   .text:000003ce .Loc.272
     /tmp/ccS822Yv.s:1105   .text:000003ce .Loc.273
     /tmp/ccS822Yv.s:1113   .text:000003d4 .Loc.274
     /tmp/ccS822Yv.s:1117   .text:000003d4 .Loc.275
     /tmp/ccS822Yv.s:1118   .text:000003d4 .Loc.276
     /tmp/ccS822Yv.s:1121   .text:000003d6 .Loc.277
     /tmp/ccS822Yv.s:1125   .text:000003da .Loc.278
     /tmp/ccS822Yv.s:1128   .text:000003da .Loc.279
     /tmp/ccS822Yv.s:1132   .text:000003e0 .Loc.280
     /tmp/ccS822Yv.s:1143   .text:000003f4 .Loc.281
     /tmp/ccS822Yv.s:1145   .text:000003f4 .Loc.282
     /tmp/ccS822Yv.s:1146   .text:000003f4 .Loc.283
     /tmp/ccS822Yv.s:1148   .text:000003f4 .Loc.284
     /tmp/ccS822Yv.s:1993   .progmem.data:00000000 __c.0
     /tmp/ccS822Yv.s:1159   .text:00000402 .Loc.285
     /tmp/ccS822Yv.s:1160   .text:00000402 .Loc.286
     /tmp/ccS822Yv.s:1163   .text:00000408 .Loc.287
     /tmp/ccS822Yv.s:1172   .text:00000412 .Loc.288
     /tmp/ccS822Yv.s:1174   .text:00000414 L0
     /tmp/ccS822Yv.s:1179   .text:00000414 lcd_color
     /tmp/ccS822Yv.s:1182   .text:00000414 .Loc.289
     /tmp/ccS822Yv.s:1183   .text:00000414 L0
     /tmp/ccS822Yv.s:1188   .text:00000414 .Loc.290
     /tmp/ccS822Yv.s:1189   .text:00000414 .Loc.291
     /tmp/ccS822Yv.s:1195   .text:0000041c .Loc.292
     /tmp/ccS822Yv.s:1198   .text:00000420 .Loc.293
     /tmp/ccS822Yv.s:1203   .text:00000426 .Loc.294
     /tmp/ccS822Yv.s:1205   .text:00000428 .Loc.295
     /tmp/ccS822Yv.s:1211   .text:00000430 .Loc.296
     /tmp/ccS822Yv.s:1215   .text:00000436 .Loc.297
     /tmp/ccS822Yv.s:1220   .text:0000043c L0
     /tmp/ccS822Yv.s:1225   .text:0000043c lcd_window
     /tmp/ccS822Yv.s:1228   .text:0000043c .Loc.298
     /tmp/ccS822Yv.s:1229   .text:0000043c L0
     /tmp/ccS822Yv.s:1230   .text:0000043c .Loc.299
     /tmp/ccS822Yv.s:1268   .text:00000456 .Loc.300
     /tmp/ccS822Yv.s:1269   .text:00000456 .Loc.301
     /tmp/ccS822Yv.s:1272   .text:0000045a .Loc.302
     /tmp/ccS822Yv.s:1273   .text:0000045a .Loc.303
     /tmp/ccS822Yv.s:1278   .text:0000045e .Loc.304
     /tmp/ccS822Yv.s:1282   .text:00000464 .Loc.305
     /tmp/ccS822Yv.s:1284   .text:00000464 .Loc.306
     /tmp/ccS822Yv.s:1288   .text:00000468 .Loc.307
     /tmp/ccS822Yv.s:1292   .text:0000046c .Loc.308
     /tmp/ccS822Yv.s:1296   .text:00000470 .Loc.309
     /tmp/ccS822Yv.s:1302   .text:00000478 .Loc.310
     /tmp/ccS822Yv.s:1306   .text:0000047c .Loc.311
     /tmp/ccS822Yv.s:1314   .text:00000488 .Loc.312
     /tmp/ccS822Yv.s:1320   .text:0000048e .Loc.313
     /tmp/ccS822Yv.s:1324   .text:00000494 .Loc.314
     /tmp/ccS822Yv.s:1328   .text:00000498 .Loc.315
     /tmp/ccS822Yv.s:1332   .text:0000049a .Loc.316
     /tmp/ccS822Yv.s:1336   .text:000004a0 L0
     /tmp/ccS822Yv.s:1341   .text:000004a0 lcd_logo_P
     /tmp/ccS822Yv.s:1344   .text:000004a0 .Loc.317
     /tmp/ccS822Yv.s:1345   .text:000004a0 L0
     /tmp/ccS822Yv.s:1346   .text:000004a0 .Loc.318
     /tmp/ccS822Yv.s:1396   .text:000004c2 .Loc.319
     /tmp/ccS822Yv.s:1397   .text:000004c2 .Loc.320
     /tmp/ccS822Yv.s:1400   .text:000004c6 .Loc.321
     /tmp/ccS822Yv.s:1401   .text:000004c6 .Loc.322
     /tmp/ccS822Yv.s:1404   .text:000004ca .Loc.323
     /tmp/ccS822Yv.s:1409   .text:000004ce .Loc.324
     /tmp/ccS822Yv.s:1413   .text:000004d4 .Loc.325
     /tmp/ccS822Yv.s:1415   .text:000004d4 .Loc.326
     /tmp/ccS822Yv.s:1419   .text:000004d8 .Loc.327
     /tmp/ccS822Yv.s:1425   .text:000004e0 .Loc.328
     /tmp/ccS822Yv.s:1429   .text:000004e4 .Loc.329
     /tmp/ccS822Yv.s:1437   .text:000004f0 .Loc.330
     /tmp/ccS822Yv.s:1441   .text:000004f4 .Loc.331
     /tmp/ccS822Yv.s:1443   .text:000004f4 .Loc.332
     /tmp/ccS822Yv.s:1444   .text:000004f4 .Loc.333
     /tmp/ccS822Yv.s:1445   .text:000004f4 .Loc.334
     /tmp/ccS822Yv.s:1455   .text:000004fc .Loc.335
     /tmp/ccS822Yv.s:1456   .text:000004fc .Loc.336
     /tmp/ccS822Yv.s:1461   .text:000004fc .Loc.337
     /tmp/ccS822Yv.s:1463   .text:000004fc .Loc.338
     /tmp/ccS822Yv.s:1464   .text:000004fc .Loc.339
     /tmp/ccS822Yv.s:1469   .text:00000502 .Loc.340
     /tmp/ccS822Yv.s:1472   .text:00000502 .Loc.341
     /tmp/ccS822Yv.s:1477   .text:0000050a .Loc.342
     /tmp/ccS822Yv.s:1482   .text:0000050e .Loc.343
     /tmp/ccS822Yv.s:1486   .text:00000514 .Loc.344
     /tmp/ccS822Yv.s:1491   .text:0000051a .Loc.345
     /tmp/ccS822Yv.s:1497   .text:00000520 .Loc.346
     /tmp/ccS822Yv.s:1501   .text:00000524 .Loc.347
     /tmp/ccS822Yv.s:1507   .text:0000052c L0
     /tmp/ccS822Yv.s:1512   .text:0000052c lcd_char
     /tmp/ccS822Yv.s:1515   .text:0000052c .Loc.348
     /tmp/ccS822Yv.s:1516   .text:0000052c L0
     /tmp/ccS822Yv.s:1517   .text:0000052c .Loc.349
     /tmp/ccS822Yv.s:1571   .text:00000552 .Loc.350
     /tmp/ccS822Yv.s:1572   .text:00000552 .Loc.351
     /tmp/ccS822Yv.s:1573   .text:00000552 .Loc.352
     /tmp/ccS822Yv.s:1574   .text:00000552 .Loc.353
     /tmp/ccS822Yv.s:1578   .text:00000556 .Loc.354
     /tmp/ccS822Yv.s:1581   .text:00000558 .Loc.355
     /tmp/ccS822Yv.s:1588   .text:00000562 .Loc.356
     /tmp/ccS822Yv.s:1594   .text:0000056a .Loc.357
     /tmp/ccS822Yv.s:1597   .text:0000056e .Loc.358
     /tmp/ccS822Yv.s:1598   .text:0000056e .Loc.359
     /tmp/ccS822Yv.s:1599   .text:0000056e .Loc.360
     /tmp/ccS822Yv.s:1607   .text:00000578 .Loc.361
     /tmp/ccS822Yv.s:2001   .progmem.data:0000002b _font5x7
     /tmp/ccS822Yv.s:1620   .text:0000058c .Loc.362
     /tmp/ccS822Yv.s:1625   .text:00000590 .Loc.363
     /tmp/ccS822Yv.s:1627   .text:00000590 .Loc.364
     /tmp/ccS822Yv.s:1628   .text:00000590 .Loc.365
     /tmp/ccS822Yv.s:1629   .text:00000590 .Loc.366
     /tmp/ccS822Yv.s:1637   .text:00000594 .Loc.367
     /tmp/ccS822Yv.s:1641   .text:00000596 .Loc.368
     /tmp/ccS822Yv.s:1645   .text:0000059a .Loc.369
     /tmp/ccS822Yv.s:1651   .text:000005a2 .Loc.370
     /tmp/ccS822Yv.s:1654   .text:000005a6 .Loc.371
     /tmp/ccS822Yv.s:1655   .text:000005a6 .Loc.372
     /tmp/ccS822Yv.s:1660   .text:000005ac .Loc.373
     /tmp/ccS822Yv.s:1663   .text:000005b0 .Loc.374
     /tmp/ccS822Yv.s:1665   .text:000005b0 .Loc.375
     /tmp/ccS822Yv.s:1668   .text:000005b2 .Loc.376
     /tmp/ccS822Yv.s:1672   .text:000005b8 .Loc.377
     /tmp/ccS822Yv.s:1675   .text:000005bc .Loc.378
     /tmp/ccS822Yv.s:1676   .text:000005bc .Loc.379
     /tmp/ccS822Yv.s:1682   .text:000005c2 .Loc.380
     /tmp/ccS822Yv.s:1686   .text:000005c6 .Loc.381
     /tmp/ccS822Yv.s:1690   .text:000005ca .Loc.382
     /tmp/ccS822Yv.s:1703   .text:000005de .Loc.383
     /tmp/ccS822Yv.s:1707   .text:000005e4 L0
     /tmp/ccS822Yv.s:1712   .text:000005e4 lcd_string
     /tmp/ccS822Yv.s:1715   .text:000005e4 .Loc.384
     /tmp/ccS822Yv.s:1716   .text:000005e4 L0
     /tmp/ccS822Yv.s:1717   .text:000005e4 .Loc.385
     /tmp/ccS822Yv.s:1771   .text:0000060e .Loc.386
     /tmp/ccS822Yv.s:1772   .text:0000060e .Loc.387
     /tmp/ccS822Yv.s:1773   .text:0000060e .Loc.388
     /tmp/ccS822Yv.s:1775   .text:0000060e .Loc.389
     /tmp/ccS822Yv.s:1776   .text:0000060e .Loc.390
     /tmp/ccS822Yv.s:1781   .text:00000612 .Loc.391
     /tmp/ccS822Yv.s:1782   .text:00000612 .Loc.392
     /tmp/ccS822Yv.s:1785   .text:00000614 .Loc.393
     /tmp/ccS822Yv.s:1788   .text:00000616 .Loc.394
     /tmp/ccS822Yv.s:1791   .text:0000061a .Loc.395
     /tmp/ccS822Yv.s:1792   .text:0000061a .Loc.396
     /tmp/ccS822Yv.s:1798   .text:00000620 .Loc.397
     /tmp/ccS822Yv.s:1802   .text:00000624 .Loc.398
     /tmp/ccS822Yv.s:1806   .text:00000628 .Loc.399
     /tmp/ccS822Yv.s:1810   .text:0000062c .Loc.400
     /tmp/ccS822Yv.s:1820   .text:0000063a .Loc.401
     /tmp/ccS822Yv.s:1821   .text:0000063a .Loc.402
     /tmp/ccS822Yv.s:1833   .text:00000650 .Loc.403
     /tmp/ccS822Yv.s:1837   .text:00000654 .Loc.404
     /tmp/ccS822Yv.s:1840   .text:00000656 .Loc.405
     /tmp/ccS822Yv.s:1842   .text:00000658 L0
     /tmp/ccS822Yv.s:1847   .text:00000658 lcd_string_P
     /tmp/ccS822Yv.s:1850   .text:00000658 .Loc.406
     /tmp/ccS822Yv.s:1851   .text:00000658 L0
     /tmp/ccS822Yv.s:1852   .text:00000658 .Loc.407
     /tmp/ccS822Yv.s:1907   .text:00000684 .Loc.408
     /tmp/ccS822Yv.s:1908   .text:00000684 .Loc.409
     /tmp/ccS822Yv.s:1909   .text:00000684 .Loc.410
     /tmp/ccS822Yv.s:1911   .text:00000684 .Loc.411
     /tmp/ccS822Yv.s:1912   .text:00000684 .Loc.412
     /tmp/ccS822Yv.s:1917   .text:00000688 .Loc.413
     /tmp/ccS822Yv.s:1919   .text:00000688 .Loc.414
     /tmp/ccS822Yv.s:1920   .text:00000688 .Loc.415
     /tmp/ccS822Yv.s:1921   .text:00000688 .Loc.416
     /tmp/ccS822Yv.s:1929   .text:0000068c .Loc.417
     /tmp/ccS822Yv.s:1930   .text:0000068c .Loc.418
     /tmp/ccS822Yv.s:1933   .text:0000068c .Loc.419
     /tmp/ccS822Yv.s:1936   .text:0000068e .Loc.420
     /tmp/ccS822Yv.s:1939   .text:00000692 .Loc.421
     /tmp/ccS822Yv.s:1940   .text:00000692 .Loc.422
     /tmp/ccS822Yv.s:1946   .text:00000698 .Loc.423
     /tmp/ccS822Yv.s:1950   .text:0000069c .Loc.424
     /tmp/ccS822Yv.s:1954   .text:000006a0 .Loc.425
     /tmp/ccS822Yv.s:1958   .text:000006a4 .Loc.426
     /tmp/ccS822Yv.s:1968   .text:000006b2 .Loc.427
     /tmp/ccS822Yv.s:1969   .text:000006b2 .Loc.428
     /tmp/ccS822Yv.s:1981   .text:000006c8 .Loc.429
     /tmp/ccS822Yv.s:1985   .text:000006cc .Loc.430
     /tmp/ccS822Yv.s:1987   .text:000006ce L0
     /tmp/ccS822Yv.s:2070   .text:000006ce L0
                     .debug_frame:00000000 L0
     /tmp/ccS822Yv.s:392    .text:0000011e .L12
     /tmp/ccS822Yv.s:369    .text:00000104 .L10
     /tmp/ccS822Yv.s:340    .text:000000e6 .L9
     /tmp/ccS822Yv.s:379    .text:00000110 .L11
     /tmp/ccS822Yv.s:491    .text:0000014e .L11
     /tmp/ccS822Yv.s:478    .text:0000014c .L14
     /tmp/ccS822Yv.s:550    .text:00000164 .L12
     /tmp/ccS822Yv.s:537    .text:00000162 .L15
     /tmp/ccS822Yv.s:609    .text:0000017a .L13
     /tmp/ccS822Yv.s:596    .text:00000178 .L16
     /tmp/ccS822Yv.s:1049   .text:000003b6 .L14
     /tmp/ccS822Yv.s:1036   .text:000003b4 .L17
     /tmp/ccS822Yv.s:1109   .text:000003d0 .L15
     /tmp/ccS822Yv.s:1096   .text:000003ce .L18
     /tmp/ccS822Yv.s:1331   .text:0000049a .L29
     /tmp/ccS822Yv.s:1305   .text:0000047c .L27
     /tmp/ccS822Yv.s:1277   .text:0000045e .L26
     /tmp/ccS822Yv.s:1319   .text:0000048e .L28
     /tmp/ccS822Yv.s:1496   .text:00000520 .L34
     /tmp/ccS822Yv.s:1440   .text:000004f4 .L32
     /tmp/ccS822Yv.s:1408   .text:000004ce .L31
     /tmp/ccS822Yv.s:1481   .text:0000050e .L33
     /tmp/ccS822Yv.s:1614   .text:00000582 .L21
     /tmp/ccS822Yv.s:1611   .text:0000057e .L16
     /tmp/ccS822Yv.s:1702   .text:000005de .L40
     /tmp/ccS822Yv.s:1624   .text:00000590 .L38
     /tmp/ccS822Yv.s:1606   .text:00000578 .L36
     /tmp/ccS822Yv.s:1650   .text:000005a2 .L37
     /tmp/ccS822Yv.s:1819   .text:0000063a .L44
     /tmp/ccS822Yv.s:1780   .text:00000612 .L43
     /tmp/ccS822Yv.s:1967   .text:000006b2 .L47
     /tmp/ccS822Yv.s:1916   .text:00000688 .L46
     /tmp/ccS822Yv.s:4790   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccS822Yv.s:8      .text:00000000 .Ltext0
     /tmp/ccS822Yv.s:2064   .text:000006ce .Letext0
     /tmp/ccS822Yv.s:8471   .debug_line:00000000 .Ldebug_line0
     /tmp/ccS822Yv.s:1849   .text:00000658 .LFB30
     /tmp/ccS822Yv.s:1988   .text:000006ce .LFE30
     /tmp/ccS822Yv.s:5853   .debug_loclists:00000014 .LLST90
     /tmp/ccS822Yv.s:5844   .debug_loclists:0000000c .LVUS90
     /tmp/ccS822Yv.s:5898   .debug_loclists:00000047 .LLST91
     /tmp/ccS822Yv.s:5893   .debug_loclists:00000043 .LVUS91
     /tmp/ccS822Yv.s:5923   .debug_loclists:00000062 .LLST92
     /tmp/ccS822Yv.s:5918   .debug_loclists:0000005e .LVUS92
     /tmp/ccS822Yv.s:5948   .debug_loclists:0000007d .LLST93
     /tmp/ccS822Yv.s:5943   .debug_loclists:00000079 .LVUS93
     /tmp/ccS822Yv.s:5981   .debug_loclists:000000a0 .LLST94
     /tmp/ccS822Yv.s:5968   .debug_loclists:00000094 .LVUS94
     /tmp/ccS822Yv.s:6046   .debug_loclists:000000eb .LLST95
     /tmp/ccS822Yv.s:6037   .debug_loclists:000000e3 .LVUS95
     /tmp/ccS822Yv.s:6089   .debug_loclists:0000011c .LLST96
     /tmp/ccS822Yv.s:6084   .debug_loclists:00000118 .LVUS96
     /tmp/ccS822Yv.s:1918   .text:00000688 .LBB140
     /tmp/ccS822Yv.s:1932   .text:0000068c .LBE140
     /tmp/ccS822Yv.s:6108   .debug_loclists:00000131 .LLST97
     /tmp/ccS822Yv.s:6101   .debug_loclists:0000012b .LVUS97
     /tmp/ccS822Yv.s:6142   .debug_loclists:00000157 .LLST98
     /tmp/ccS822Yv.s:6137   .debug_loclists:00000153 .LVUS98
     /tmp/ccS822Yv.s:1980   .text:000006c8 .LVL240
     /tmp/ccS822Yv.s:1714   .text:000005e4 .LFB29
     /tmp/ccS822Yv.s:1843   .text:00000658 .LFE29
     /tmp/ccS822Yv.s:6163   .debug_loclists:0000016e .LLST83
     /tmp/ccS822Yv.s:6154   .debug_loclists:00000166 .LVUS83
     /tmp/ccS822Yv.s:6208   .debug_loclists:000001a1 .LLST84
     /tmp/ccS822Yv.s:6203   .debug_loclists:0000019d .LVUS84
     /tmp/ccS822Yv.s:6233   .debug_loclists:000001bc .LLST85
     /tmp/ccS822Yv.s:6228   .debug_loclists:000001b8 .LVUS85
     /tmp/ccS822Yv.s:6258   .debug_loclists:000001d7 .LLST86
     /tmp/ccS822Yv.s:6253   .debug_loclists:000001d3 .LVUS86
     /tmp/ccS822Yv.s:6289   .debug_loclists:000001f8 .LLST87
     /tmp/ccS822Yv.s:6278   .debug_loclists:000001ee .LVUS87
     /tmp/ccS822Yv.s:6347   .debug_loclists:0000023a .LLST88
     /tmp/ccS822Yv.s:6338   .debug_loclists:00000232 .LVUS88
     /tmp/ccS822Yv.s:6390   .debug_loclists:0000026b .LLST89
     /tmp/ccS822Yv.s:6385   .debug_loclists:00000267 .LVUS89
     /tmp/ccS822Yv.s:1832   .text:00000650 .LVL227
     /tmp/ccS822Yv.s:1514   .text:0000052c .LFB28
     /tmp/ccS822Yv.s:1708   .text:000005e4 .LFE28
     /tmp/ccS822Yv.s:6407   .debug_loclists:0000027e .LLST73
     /tmp/ccS822Yv.s:6402   .debug_loclists:0000027a .LVUS73
     /tmp/ccS822Yv.s:6432   .debug_loclists:00000299 .LLST74
     /tmp/ccS822Yv.s:6427   .debug_loclists:00000295 .LVUS74
     /tmp/ccS822Yv.s:6457   .debug_loclists:000002b4 .LLST75
     /tmp/ccS822Yv.s:6452   .debug_loclists:000002b0 .LVUS75
     /tmp/ccS822Yv.s:6482   .debug_loclists:000002cf .LLST76
     /tmp/ccS822Yv.s:6477   .debug_loclists:000002cb .LVUS76
     /tmp/ccS822Yv.s:6507   .debug_loclists:000002ea .LLST77
     /tmp/ccS822Yv.s:6502   .debug_loclists:000002e6 .LVUS77
     /tmp/ccS822Yv.s:6533   .debug_loclists:00000306 .LLST78
     /tmp/ccS822Yv.s:6522   .debug_loclists:000002fc .LVUS78
     /tmp/ccS822Yv.s:6630   .debug_loclists:0000037b .LLST79
     /tmp/ccS822Yv.s:6619   .debug_loclists:00000371 .LVUS79
     /tmp/ccS822Yv.s:6667   .debug_loclists:000003a8 .LLST80
     /tmp/ccS822Yv.s:6660   .debug_loclists:000003a2 .LVUS80
     /tmp/ccS822Yv.s:1626   .text:00000590 .LBB139
     /tmp/ccS822Yv.s:1639   .text:00000594 .LBE139
     /tmp/ccS822Yv.s:6715   .debug_loclists:000003e5 .LLST81
     /tmp/ccS822Yv.s:6708   .debug_loclists:000003df .LVUS81
     /tmp/ccS822Yv.s:6747   .debug_loclists:00000409 .LLST82
     /tmp/ccS822Yv.s:6744   .debug_loclists:00000407 .LVUS82
     /tmp/ccS822Yv.s:1596   .text:0000056e .LVL203
     /tmp/ccS822Yv.s:1653   .text:000005a6 .LVL208
     /tmp/ccS822Yv.s:1674   .text:000005bc .LVL212
     /tmp/ccS822Yv.s:1343   .text:000004a0 .LFB27
     /tmp/ccS822Yv.s:1508   .text:0000052c .LFE27
     /tmp/ccS822Yv.s:6759   .debug_loclists:00000415 .LLST60
     /tmp/ccS822Yv.s:6754   .debug_loclists:00000411 .LVUS60
     /tmp/ccS822Yv.s:6784   .debug_loclists:00000430 .LLST61
     /tmp/ccS822Yv.s:6779   .debug_loclists:0000042c .LVUS61
     /tmp/ccS822Yv.s:6813   .debug_loclists:0000044f .LLST62
     /tmp/ccS822Yv.s:6804   .debug_loclists:00000447 .LVUS62
     /tmp/ccS822Yv.s:6862   .debug_loclists:00000486 .LLST63
     /tmp/ccS822Yv.s:6853   .debug_loclists:0000047e .LVUS63
     /tmp/ccS822Yv.s:6911   .debug_loclists:000004bd .LLST64
     /tmp/ccS822Yv.s:6902   .debug_loclists:000004b5 .LVUS64
     /tmp/ccS822Yv.s:6954   .debug_loclists:000004ee .LLST65
     /tmp/ccS822Yv.s:6951   .debug_loclists:000004ec .LVUS65
     /tmp/ccS822Yv.s:6973   .debug_loclists:00000501 .LLST66
     /tmp/ccS822Yv.s:6966   .debug_loclists:000004fb .LVUS66
     /tmp/ccS822Yv.s:8461   .debug_rnglists:00000085 .LLRL67
     /tmp/ccS822Yv.s:7004   .debug_loclists:00000524 .LLST68
     /tmp/ccS822Yv.s:7001   .debug_loclists:00000522 .LVUS68
     /tmp/ccS822Yv.s:7022   .debug_loclists:00000536 .LLST69
     /tmp/ccS822Yv.s:7019   .debug_loclists:00000534 .LVUS69
     /tmp/ccS822Yv.s:1460   .text:000004fc .LBI136
     /tmp/ccS822Yv.s:1459   .text:000004fc .LBB136
     /tmp/ccS822Yv.s:1471   .text:00000502 .LBE136
     /tmp/ccS822Yv.s:7032   .debug_loclists:00000540 .LLST70
     /tmp/ccS822Yv.s:7029   .debug_loclists:0000053e .LVUS70
     /tmp/ccS822Yv.s:7043   .debug_loclists:0000054b .LLST72
     /tmp/ccS822Yv.s:7040   .debug_loclists:00000549 .LVUS72
     /tmp/ccS822Yv.s:1399   .text:000004c6 .LVL185
     /tmp/ccS822Yv.s:1439   .text:000004f4 .LVL191
     /tmp/ccS822Yv.s:1476   .text:0000050a .LVL194
     /tmp/ccS822Yv.s:1227   .text:0000043c .LFB26
     /tmp/ccS822Yv.s:1337   .text:000004a0 .LFE26
     /tmp/ccS822Yv.s:7055   .debug_loclists:00000557 .LLST53
     /tmp/ccS822Yv.s:7050   .debug_loclists:00000553 .LVUS53
     /tmp/ccS822Yv.s:7080   .debug_loclists:00000572 .LLST54
     /tmp/ccS822Yv.s:7075   .debug_loclists:0000056e .LVUS54
     /tmp/ccS822Yv.s:7109   .debug_loclists:00000591 .LLST55
     /tmp/ccS822Yv.s:7100   .debug_loclists:00000589 .LVUS55
     /tmp/ccS822Yv.s:7158   .debug_loclists:000005c8 .LLST56
     /tmp/ccS822Yv.s:7149   .debug_loclists:000005c0 .LVUS56
     /tmp/ccS822Yv.s:7207   .debug_loclists:000005ff .LLST57
     /tmp/ccS822Yv.s:7198   .debug_loclists:000005f7 .LVUS57
     /tmp/ccS822Yv.s:7250   .debug_loclists:00000630 .LLST58
     /tmp/ccS822Yv.s:7247   .debug_loclists:0000062e .LVUS58
     /tmp/ccS822Yv.s:7269   .debug_loclists:00000643 .LLST59
     /tmp/ccS822Yv.s:7262   .debug_loclists:0000063d .LVUS59
     /tmp/ccS822Yv.s:1271   .text:0000045a .LVL172
     /tmp/ccS822Yv.s:1304   .text:0000047c .LVL178
     /tmp/ccS822Yv.s:1311   .text:00000484 .LVL179
     /tmp/ccS822Yv.s:1313   .text:00000488 .LVL180
     /tmp/ccS822Yv.s:291    .text:000000c6 .LFB24
     /tmp/ccS822Yv.s:398    .text:00000124 .LFE24
     /tmp/ccS822Yv.s:7302   .debug_loclists:00000668 .LLST9
     /tmp/ccS822Yv.s:7297   .debug_loclists:00000664 .LVUS9
     /tmp/ccS822Yv.s:7327   .debug_loclists:00000683 .LLST10
     /tmp/ccS822Yv.s:7322   .debug_loclists:0000067f .LVUS10
     /tmp/ccS822Yv.s:7356   .debug_loclists:000006a2 .LLST11
     /tmp/ccS822Yv.s:7347   .debug_loclists:0000069a .LVUS11
     /tmp/ccS822Yv.s:7405   .debug_loclists:000006d9 .LLST12
     /tmp/ccS822Yv.s:7396   .debug_loclists:000006d1 .LVUS12
     /tmp/ccS822Yv.s:7452   .debug_loclists:0000070e .LLST13
     /tmp/ccS822Yv.s:7445   .debug_loclists:00000708 .LVUS13
     /tmp/ccS822Yv.s:7485   .debug_loclists:00000733 .LLST14
     /tmp/ccS822Yv.s:7482   .debug_loclists:00000731 .LVUS14
     /tmp/ccS822Yv.s:7504   .debug_loclists:00000746 .LLST15
     /tmp/ccS822Yv.s:7497   .debug_loclists:00000740 .LVUS15
     /tmp/ccS822Yv.s:334    .text:000000e2 .LVL32
     /tmp/ccS822Yv.s:368    .text:00000104 .LVL38
     /tmp/ccS822Yv.s:373    .text:0000010a .LVL39
     /tmp/ccS822Yv.s:404    .text:00000124 .LFB23
     /tmp/ccS822Yv.s:1175   .text:00000414 .LFE23
     /tmp/ccS822Yv.s:7537   .debug_loclists:0000076b .LLST16
     /tmp/ccS822Yv.s:7532   .debug_loclists:00000767 .LVUS16
     /tmp/ccS822Yv.s:7559   .debug_loclists:00000783 .LLST17
     /tmp/ccS822Yv.s:7552   .debug_loclists:0000077d .LVUS17
     /tmp/ccS822Yv.s:420    .text:0000012a .LBB85
     /tmp/ccS822Yv.s:423    .text:0000012a .LBE85
     /tmp/ccS822Yv.s:1144   .text:000003f4 .LBB134
     /tmp/ccS822Yv.s:1147   .text:000003f4 .LBE134
     /tmp/ccS822Yv.s:442    .text:0000013c .LBI86
     /tmp/ccS822Yv.s:441    .text:0000013c .LBB86
     /tmp/ccS822Yv.s:629    .text:00000184 .LBE86
     /tmp/ccS822Yv.s:450    .text:0000013e .LBI88
     /tmp/ccS822Yv.s:8373   .debug_rnglists:0000000c .LLRL18
     /tmp/ccS822Yv.s:7592   .debug_loclists:000007a8 .LLST19
     /tmp/ccS822Yv.s:7589   .debug_loclists:000007a6 .LVUS19
     /tmp/ccS822Yv.s:7604   .debug_loclists:000007b7 .LLST20
     /tmp/ccS822Yv.s:7601   .debug_loclists:000007b5 .LVUS20
     /tmp/ccS822Yv.s:7622   .debug_loclists:000007cc .LLST21
     /tmp/ccS822Yv.s:7613   .debug_loclists:000007c4 .LVUS21
     /tmp/ccS822Yv.s:484    .text:0000014c .LBI90
     /tmp/ccS822Yv.s:8381   .debug_rnglists:00000017 .LLRL22
     /tmp/ccS822Yv.s:7661   .debug_loclists:000007fa .LLST23
     /tmp/ccS822Yv.s:7658   .debug_loclists:000007f8 .LVUS23
     /tmp/ccS822Yv.s:515    .text:0000015a .LBI96
     /tmp/ccS822Yv.s:8389   .debug_rnglists:00000022 .LLRL24
     /tmp/ccS822Yv.s:7673   .debug_loclists:00000807 .LLST25
     /tmp/ccS822Yv.s:7670   .debug_loclists:00000805 .LVUS25
     /tmp/ccS822Yv.s:7685   .debug_loclists:00000816 .LLST26
     /tmp/ccS822Yv.s:7682   .debug_loclists:00000814 .LVUS26
     /tmp/ccS822Yv.s:7703   .debug_loclists:0000082b .LLST27
     /tmp/ccS822Yv.s:7694   .debug_loclists:00000823 .LVUS27
     /tmp/ccS822Yv.s:543    .text:00000162 .LBI98
     /tmp/ccS822Yv.s:8397   .debug_rnglists:0000002d .LLRL28
     /tmp/ccS822Yv.s:7742   .debug_loclists:00000859 .LLST29
     /tmp/ccS822Yv.s:7739   .debug_loclists:00000857 .LVUS29
     /tmp/ccS822Yv.s:574    .text:00000170 .LBI104
     /tmp/ccS822Yv.s:8405   .debug_rnglists:00000038 .LLRL30
     /tmp/ccS822Yv.s:7754   .debug_loclists:00000866 .LLST31
     /tmp/ccS822Yv.s:7751   .debug_loclists:00000864 .LVUS31
     /tmp/ccS822Yv.s:7766   .debug_loclists:00000875 .LLST32
     /tmp/ccS822Yv.s:7763   .debug_loclists:00000873 .LVUS32
     /tmp/ccS822Yv.s:7784   .debug_loclists:0000088a .LLST33
     /tmp/ccS822Yv.s:7775   .debug_loclists:00000882 .LVUS33
     /tmp/ccS822Yv.s:602    .text:00000178 .LBI106
     /tmp/ccS822Yv.s:8413   .debug_rnglists:00000043 .LLRL34
     /tmp/ccS822Yv.s:7823   .debug_loclists:000008b8 .LLST35
     /tmp/ccS822Yv.s:7820   .debug_loclists:000008b6 .LVUS35
     /tmp/ccS822Yv.s:633    .text:00000184 .LBI112
     /tmp/ccS822Yv.s:632    .text:00000184 .LBB112
     /tmp/ccS822Yv.s:985    .text:0000038e .LBE112
     /tmp/ccS822Yv.s:639    .text:0000018a .LVL62
     /tmp/ccS822Yv.s:643    .text:00000190 .LVL63
     /tmp/ccS822Yv.s:647    .text:00000196 .LVL64
     /tmp/ccS822Yv.s:651    .text:0000019c .LVL65
     /tmp/ccS822Yv.s:655    .text:000001a2 .LVL66
     /tmp/ccS822Yv.s:659    .text:000001a8 .LVL67
     /tmp/ccS822Yv.s:663    .text:000001ae .LVL68
     /tmp/ccS822Yv.s:667    .text:000001b4 .LVL69
     /tmp/ccS822Yv.s:671    .text:000001ba .LVL70
     /tmp/ccS822Yv.s:675    .text:000001c0 .LVL71
     /tmp/ccS822Yv.s:679    .text:000001c6 .LVL72
     /tmp/ccS822Yv.s:683    .text:000001cc .LVL73
     /tmp/ccS822Yv.s:687    .text:000001d2 .LVL74
     /tmp/ccS822Yv.s:691    .text:000001d8 .LVL75
     /tmp/ccS822Yv.s:695    .text:000001de .LVL76
     /tmp/ccS822Yv.s:699    .text:000001e4 .LVL77
     /tmp/ccS822Yv.s:703    .text:000001ea .LVL78
     /tmp/ccS822Yv.s:707    .text:000001f0 .LVL79
     /tmp/ccS822Yv.s:711    .text:000001f6 .LVL80
     /tmp/ccS822Yv.s:715    .text:000001fc .LVL81
     /tmp/ccS822Yv.s:719    .text:00000202 .LVL82
     /tmp/ccS822Yv.s:723    .text:00000208 .LVL83
     /tmp/ccS822Yv.s:727    .text:0000020e .LVL84
     /tmp/ccS822Yv.s:731    .text:00000214 .LVL85
     /tmp/ccS822Yv.s:735    .text:0000021a .LVL86
     /tmp/ccS822Yv.s:739    .text:00000220 .LVL87
     /tmp/ccS822Yv.s:743    .text:00000226 .LVL88
     /tmp/ccS822Yv.s:747    .text:0000022c .LVL89
     /tmp/ccS822Yv.s:751    .text:00000232 .LVL90
     /tmp/ccS822Yv.s:755    .text:00000238 .LVL91
     /tmp/ccS822Yv.s:759    .text:0000023e .LVL92
     /tmp/ccS822Yv.s:763    .text:00000244 .LVL93
     /tmp/ccS822Yv.s:767    .text:0000024a .LVL94
     /tmp/ccS822Yv.s:771    .text:00000250 .LVL95
     /tmp/ccS822Yv.s:775    .text:00000256 .LVL96
     /tmp/ccS822Yv.s:779    .text:0000025c .LVL97
     /tmp/ccS822Yv.s:783    .text:00000262 .LVL98
     /tmp/ccS822Yv.s:787    .text:00000268 .LVL99
     /tmp/ccS822Yv.s:791    .text:0000026e .LVL100
     /tmp/ccS822Yv.s:795    .text:00000274 .LVL101
     /tmp/ccS822Yv.s:799    .text:0000027a .LVL102
     /tmp/ccS822Yv.s:803    .text:00000280 .LVL103
     /tmp/ccS822Yv.s:807    .text:00000286 .LVL104
     /tmp/ccS822Yv.s:811    .text:0000028c .LVL105
     /tmp/ccS822Yv.s:815    .text:00000292 .LVL106
     /tmp/ccS822Yv.s:819    .text:00000298 .LVL107
     /tmp/ccS822Yv.s:823    .text:0000029e .LVL108
     /tmp/ccS822Yv.s:827    .text:000002a4 .LVL109
     /tmp/ccS822Yv.s:831    .text:000002aa .LVL110
     /tmp/ccS822Yv.s:835    .text:000002b0 .LVL111
     /tmp/ccS822Yv.s:839    .text:000002b6 .LVL112
     /tmp/ccS822Yv.s:843    .text:000002bc .LVL113
     /tmp/ccS822Yv.s:847    .text:000002c2 .LVL114
     /tmp/ccS822Yv.s:851    .text:000002c8 .LVL115
     /tmp/ccS822Yv.s:855    .text:000002ce .LVL116
     /tmp/ccS822Yv.s:859    .text:000002d4 .LVL117
     /tmp/ccS822Yv.s:863    .text:000002da .LVL118
     /tmp/ccS822Yv.s:867    .text:000002e0 .LVL119
     /tmp/ccS822Yv.s:871    .text:000002e6 .LVL120
     /tmp/ccS822Yv.s:875    .text:000002ec .LVL121
     /tmp/ccS822Yv.s:879    .text:000002f2 .LVL122
     /tmp/ccS822Yv.s:883    .text:000002f8 .LVL123
     /tmp/ccS822Yv.s:887    .text:000002fe .LVL124
     /tmp/ccS822Yv.s:891    .text:00000304 .LVL125
     /tmp/ccS822Yv.s:895    .text:0000030a .LVL126
     /tmp/ccS822Yv.s:899    .text:00000310 .LVL127
     /tmp/ccS822Yv.s:903    .text:00000316 .LVL128
     /tmp/ccS822Yv.s:907    .text:0000031c .LVL129
     /tmp/ccS822Yv.s:911    .text:00000322 .LVL130
     /tmp/ccS822Yv.s:915    .text:00000328 .LVL131
     /tmp/ccS822Yv.s:919    .text:0000032e .LVL132
     /tmp/ccS822Yv.s:923    .text:00000334 .LVL133
     /tmp/ccS822Yv.s:927    .text:0000033a .LVL134
     /tmp/ccS822Yv.s:931    .text:00000340 .LVL135
     /tmp/ccS822Yv.s:935    .text:00000346 .LVL136
     /tmp/ccS822Yv.s:939    .text:0000034c .LVL137
     /tmp/ccS822Yv.s:943    .text:00000352 .LVL138
     /tmp/ccS822Yv.s:947    .text:00000358 .LVL139
     /tmp/ccS822Yv.s:951    .text:0000035e .LVL140
     /tmp/ccS822Yv.s:955    .text:00000364 .LVL141
     /tmp/ccS822Yv.s:959    .text:0000036a .LVL142
     /tmp/ccS822Yv.s:963    .text:00000370 .LVL143
     /tmp/ccS822Yv.s:967    .text:00000376 .LVL144
     /tmp/ccS822Yv.s:971    .text:0000037c .LVL145
     /tmp/ccS822Yv.s:975    .text:00000382 .LVL146
     /tmp/ccS822Yv.s:979    .text:00000388 .LVL147
     /tmp/ccS822Yv.s:983    .text:0000038e .LVL148
     /tmp/ccS822Yv.s:988    .text:0000038e .LBI114
     /tmp/ccS822Yv.s:8421   .debug_rnglists:0000004e .LLRL36
     /tmp/ccS822Yv.s:7835   .debug_loclists:000008c5 .LLST37
     /tmp/ccS822Yv.s:7832   .debug_loclists:000008c3 .LVUS37
     /tmp/ccS822Yv.s:7846   .debug_loclists:000008d0 .LLST38
     /tmp/ccS822Yv.s:7843   .debug_loclists:000008ce .LVUS38
     /tmp/ccS822Yv.s:7857   .debug_loclists:000008db .LLST39
     /tmp/ccS822Yv.s:7854   .debug_loclists:000008d9 .LVUS39
     /tmp/ccS822Yv.s:996    .text:00000394 .LVL149
     /tmp/ccS822Yv.s:1000   .text:0000039a .LVL150
     /tmp/ccS822Yv.s:1004   .text:000003a0 .LVL151
     /tmp/ccS822Yv.s:1008   .text:000003a6 .LVL152
     /tmp/ccS822Yv.s:1012   .text:000003ac .LVL153
     /tmp/ccS822Yv.s:8429   .debug_rnglists:00000059 .LLRL40
     /tmp/ccS822Yv.s:7875   .debug_loclists:000008ed .LLST41
     /tmp/ccS822Yv.s:7866   .debug_loclists:000008e5 .LVUS41
     /tmp/ccS822Yv.s:1042   .text:000003b4 .LBI119
     /tmp/ccS822Yv.s:8437   .debug_rnglists:00000064 .LLRL42
     /tmp/ccS822Yv.s:7914   .debug_loclists:0000091b .LLST43
     /tmp/ccS822Yv.s:7911   .debug_loclists:00000919 .LVUS43
     /tmp/ccS822Yv.s:1074   .text:000003c6 .LBI126
     /tmp/ccS822Yv.s:8445   .debug_rnglists:0000006f .LLRL44
     /tmp/ccS822Yv.s:7926   .debug_loclists:00000928 .LLST45
     /tmp/ccS822Yv.s:7923   .debug_loclists:00000926 .LVUS45
     /tmp/ccS822Yv.s:7938   .debug_loclists:00000937 .LLST46
     /tmp/ccS822Yv.s:7935   .debug_loclists:00000935 .LVUS46
     /tmp/ccS822Yv.s:7956   .debug_loclists:0000094c .LLST47
     /tmp/ccS822Yv.s:7947   .debug_loclists:00000944 .LVUS47
     /tmp/ccS822Yv.s:1102   .text:000003ce .LBI128
     /tmp/ccS822Yv.s:8453   .debug_rnglists:0000007a .LLRL48
     /tmp/ccS822Yv.s:7995   .debug_loclists:0000097a .LLST49
     /tmp/ccS822Yv.s:7992   .debug_loclists:00000978 .LVUS49
     /tmp/ccS822Yv.s:436    .text:00000138 .LVL45
     /tmp/ccS822Yv.s:439    .text:0000013c .LVL46
     /tmp/ccS822Yv.s:1071   .text:000003c6 .LVL158
     /tmp/ccS822Yv.s:1131   .text:000003e0 .LVL163
     /tmp/ccS822Yv.s:1142   .text:000003f4 .LVL164
     /tmp/ccS822Yv.s:1158   .text:00000402 .LVL165
     /tmp/ccS822Yv.s:272    .text:000000c0 .LFB22
     /tmp/ccS822Yv.s:285    .text:000000c6 .LFE22
     /tmp/ccS822Yv.s:13     .text:00000000 .LFB18
     /tmp/ccS822Yv.s:27     .text:00000004 .LFE18
     /tmp/ccS822Yv.s:223    .text:000000ac .LFB17
     /tmp/ccS822Yv.s:249    .text:000000be .LFE17
     /tmp/ccS822Yv.s:8009   .debug_loclists:00000989 .LLST8
     /tmp/ccS822Yv.s:8004   .debug_loclists:00000985 .LVUS8
     /tmp/ccS822Yv.s:239    .text:000000b6 .LVL28
     /tmp/ccS822Yv.s:247    .text:000000be .LVL29
     /tmp/ccS822Yv.s:97     .text:0000002a .LFB16
     /tmp/ccS822Yv.s:218    .text:000000ac .LFE16
     /tmp/ccS822Yv.s:8036   .debug_loclists:000009a6 .LLST2
     /tmp/ccS822Yv.s:8029   .debug_loclists:000009a0 .LVUS2
     /tmp/ccS822Yv.s:8073   .debug_loclists:000009cc .LLST3
     /tmp/ccS822Yv.s:8066   .debug_loclists:000009c6 .LVUS3
     /tmp/ccS822Yv.s:8108   .debug_loclists:000009f0 .LLST4
     /tmp/ccS822Yv.s:8103   .debug_loclists:000009ec .LVUS4
     /tmp/ccS822Yv.s:8133   .debug_loclists:00000a08 .LLST5
     /tmp/ccS822Yv.s:8128   .debug_loclists:00000a04 .LVUS5
     /tmp/ccS822Yv.s:8160   .debug_loclists:00000a22 .LLST6
     /tmp/ccS822Yv.s:8153   .debug_loclists:00000a1c .LVUS6
     /tmp/ccS822Yv.s:8206   .debug_loclists:00000a53 .LLST7
     /tmp/ccS822Yv.s:8199   .debug_loclists:00000a4d .LVUS7
     /tmp/ccS822Yv.s:149    .text:00000054 .LVL10
     /tmp/ccS822Yv.s:153    .text:0000005a .LVL11
     /tmp/ccS822Yv.s:157    .text:00000060 .LVL12
     /tmp/ccS822Yv.s:161    .text:00000066 .LVL13
     /tmp/ccS822Yv.s:165    .text:0000006c .LVL14
     /tmp/ccS822Yv.s:169    .text:00000072 .LVL15
     /tmp/ccS822Yv.s:173    .text:00000078 .LVL16
     /tmp/ccS822Yv.s:177    .text:0000007e .LVL17
     /tmp/ccS822Yv.s:181    .text:00000084 .LVL18
     /tmp/ccS822Yv.s:185    .text:0000008a .LVL19
     /tmp/ccS822Yv.s:189    .text:00000090 .LVL20
     /tmp/ccS822Yv.s:193    .text:00000096 .LVL21
     /tmp/ccS822Yv.s:32     .text:00000004 .LFB15
     /tmp/ccS822Yv.s:67     .text:0000001e .LFE15
     /tmp/ccS822Yv.s:8252   .debug_loclists:00000a84 .LLST0
     /tmp/ccS822Yv.s:8245   .debug_loclists:00000a7e .LVUS0
     /tmp/ccS822Yv.s:53     .text:00000012 .LVL2
     /tmp/ccS822Yv.s:57     .text:00000018 .LVL3
     /tmp/ccS822Yv.s:72     .text:0000001e .LFB14
     /tmp/ccS822Yv.s:92     .text:0000002a .LFE14
     /tmp/ccS822Yv.s:8277   .debug_loclists:00000a9b .LLST1
     /tmp/ccS822Yv.s:8272   .debug_loclists:00000a97 .LVUS1
     /tmp/ccS822Yv.s:85     .text:00000026 .LVL6
     /tmp/ccS822Yv.s:255    .text:000000be .LFB21
     /tmp/ccS822Yv.s:267    .text:000000c0 .LFE21
     /tmp/ccS822Yv.s:1181   .text:00000414 .LFB25
     /tmp/ccS822Yv.s:1221   .text:0000043c .LFE25
     /tmp/ccS822Yv.s:8297   .debug_loclists:00000aad .LLST50
     /tmp/ccS822Yv.s:8292   .debug_loclists:00000aa9 .LVUS50
     /tmp/ccS822Yv.s:8317   .debug_loclists:00000ac3 .LLST51
     /tmp/ccS822Yv.s:8312   .debug_loclists:00000abf .LVUS51
     /tmp/ccS822Yv.s:8337   .debug_loclists:00000ad9 .LLST52
     /tmp/ccS822Yv.s:8332   .debug_loclists:00000ad5 .LVUS52
     /tmp/ccS822Yv.s:2071   .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
spi_xchg
spi_fast
log_boot_P
__do_clear_bss
