   1               		.file	"initrd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "initrd/initrd.c"
  11               	.global	initrd_load
  13               	initrd_load:
  14               	.LFB5:
  15               		.file 1 "initrd/initrd.c"
   1:initrd/initrd.c **** /**
   2:initrd/initrd.c ****  * @file    initrd.c
   3:initrd/initrd.c ****  * @author  Anton Tchekov
   4:initrd/initrd.c ****  * @version 0.1
   5:initrd/initrd.c ****  * @date    21.05.2023
   6:initrd/initrd.c ****  */
   7:initrd/initrd.c **** 
   8:initrd/initrd.c **** #include <initrd.h>
   9:initrd/initrd.c **** #include <types.h>
  10:initrd/initrd.c **** #include <sd.h>
  11:initrd/initrd.c **** #include <xmem.h>
  12:initrd/initrd.c **** #include <logger.h>
  13:initrd/initrd.c **** #include <string.h>
  14:initrd/initrd.c **** #include <avr/pgmspace.h>
  15:initrd/initrd.c **** 
  16:initrd/initrd.c **** /* 512 bytes */
  17:initrd/initrd.c **** #define SECTOR_BOOT            0
  18:initrd/initrd.c **** #define SIZE_BOOT              1
  19:initrd/initrd.c **** 
  20:initrd/initrd.c **** /* 64 KiB */
  21:initrd/initrd.c **** #define SECTOR_STDLIB           SIZE_BOOT
  22:initrd/initrd.c **** #define SIZE_STDLIB          128
  23:initrd/initrd.c **** 
  24:initrd/initrd.c **** /* 64 KiB */
  25:initrd/initrd.c **** #define SECTOR_INIT             (SECTOR_BOOT + SIZE_STDLIB)
  26:initrd/initrd.c **** #define SIZE_INIT            128
  27:initrd/initrd.c **** 
  28:initrd/initrd.c **** /* Root Dir */
  29:initrd/initrd.c **** #define SECTOR_ROOT             (SIZE_BOOT + SIZE_STDLIB + SIZE_INIT)
  30:initrd/initrd.c **** 
  31:initrd/initrd.c **** /* Current FS Revision */
  32:initrd/initrd.c **** #define REVISION               0
  33:initrd/initrd.c **** 
  34:initrd/initrd.c **** /* Boot sector offsets */
  35:initrd/initrd.c **** #define OFFSET_SIGNATURE       0
  36:initrd/initrd.c **** #define OFFSET_REVISION        4
  37:initrd/initrd.c **** #define OFFSET_STDLIB_SIZE    12
  38:initrd/initrd.c **** #define OFFSET_INIT_SIZE      16
  39:initrd/initrd.c **** 
  40:initrd/initrd.c **** /* TODO: STDLIB as shared library */
  41:initrd/initrd.c **** /* RAM offsets */
  42:initrd/initrd.c **** #define RAM_OFFSET_STDLIB       TODO
  43:initrd/initrd.c **** #define RAM_OFFSET_INIT        0
  44:initrd/initrd.c **** 
  45:initrd/initrd.c **** /* FS Signature (bytes 0-4) */
  46:initrd/initrd.c **** static const u8 _signature[] = { 'A', 'T', 'F', 'S' };
  47:initrd/initrd.c **** 
  48:initrd/initrd.c **** static void _load_xmem(u32 addr, u32 block, u32 count)
  49:initrd/initrd.c **** {
  50:initrd/initrd.c **** 	u8 buf[BLOCK_SIZE];
  51:initrd/initrd.c **** 	u32 i, end;
  52:initrd/initrd.c **** 
  53:initrd/initrd.c **** 	end = block + count;
  54:initrd/initrd.c **** 	for(i = block; i < end; ++i)
  55:initrd/initrd.c **** 	{
  56:initrd/initrd.c **** 		if(sd_read(i, buf))
  57:initrd/initrd.c **** 		{
  58:initrd/initrd.c **** 			panic(PSTR("Loading InitRD failed"));
  59:initrd/initrd.c **** 		}
  60:initrd/initrd.c **** 
  61:initrd/initrd.c **** 		xmem_write(addr, buf, BLOCK_SIZE);
  62:initrd/initrd.c **** 	}
  63:initrd/initrd.c **** }
  64:initrd/initrd.c **** 
  65:initrd/initrd.c **** /**
  66:initrd/initrd.c ****  * @brief Load a 32-bit little endian value from a buffer
  67:initrd/initrd.c ****  *
  68:initrd/initrd.c ****  * @param buf Input
  69:initrd/initrd.c ****  * @return Result
  70:initrd/initrd.c ****  */
  71:initrd/initrd.c **** static u32 _load_le_32(u8 *buf)
  72:initrd/initrd.c **** {
  73:initrd/initrd.c **** 	return (u32)(buf[0]) |
  74:initrd/initrd.c **** 		((u32)(buf[1]) << 8) |
  75:initrd/initrd.c **** 		((u32)(buf[2]) << 16) |
  76:initrd/initrd.c **** 		((u32)(buf[3]) << 24);
  77:initrd/initrd.c **** }
  78:initrd/initrd.c **** 
  79:initrd/initrd.c **** void initrd_load(void)
  80:initrd/initrd.c **** {
  16               		.loc 1 80 1 view -0
  17               		.cfi_startproc
  18 0000 4F92      		push r4
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 4, -2
  21 0002 5F92      		push r5
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 5, -3
  24 0004 6F92      		push r6
  25               		.cfi_def_cfa_offset 5
  26               		.cfi_offset 6, -4
  27 0006 7F92      		push r7
  28               		.cfi_def_cfa_offset 6
  29               		.cfi_offset 7, -5
  30 0008 AF92      		push r10
  31               		.cfi_def_cfa_offset 7
  32               		.cfi_offset 10, -6
  33 000a BF92      		push r11
  34               		.cfi_def_cfa_offset 8
  35               		.cfi_offset 11, -7
  36 000c CF92      		push r12
  37               		.cfi_def_cfa_offset 9
  38               		.cfi_offset 12, -8
  39 000e DF92      		push r13
  40               		.cfi_def_cfa_offset 10
  41               		.cfi_offset 13, -9
  42 0010 EF92      		push r14
  43               		.cfi_def_cfa_offset 11
  44               		.cfi_offset 14, -10
  45 0012 FF92      		push r15
  46               		.cfi_def_cfa_offset 12
  47               		.cfi_offset 15, -11
  48 0014 0F93      		push r16
  49               		.cfi_def_cfa_offset 13
  50               		.cfi_offset 16, -12
  51 0016 1F93      		push r17
  52               		.cfi_def_cfa_offset 14
  53               		.cfi_offset 17, -13
  54 0018 CF93      		push r28
  55               		.cfi_def_cfa_offset 15
  56               		.cfi_offset 28, -14
  57 001a DF93      		push r29
  58               		.cfi_def_cfa_offset 16
  59               		.cfi_offset 29, -15
  60 001c CDB7      		in r28,__SP_L__
  61 001e DEB7      		in r29,__SP_H__
  62               		.cfi_def_cfa_register 28
  63 0020 D250      		subi r29,2
  64               		.cfi_def_cfa_offset 528
  65 0022 0FB6      		in __tmp_reg__,__SREG__
  66 0024 F894      		cli
  67 0026 DEBF      		out __SP_H__,r29
  68 0028 0FBE      		out __SREG__,__tmp_reg__
  69 002a CDBF      		out __SP_L__,r28
  70               	/* prologue: function */
  71               	/* frame size = 512 */
  72               	/* stack size = 526 */
  73               	.L__stack_usage = 526
  81:initrd/initrd.c **** 	u32 size_stdlib, size_init;
  74               		.loc 1 81 2 view .LVU1
  82:initrd/initrd.c **** 
  83:initrd/initrd.c **** 	log_boot_P(LOG_INIT, PSTR("Loading Init Binary"));
  75               		.loc 1 83 2 view .LVU2
  76               	.LBB14:
  77               		.loc 1 83 23 view .LVU3
  78               		.loc 1 83 23 view .LVU4
  79               	.LBE14:
  80               		.loc 1 83 2 is_stmt 0 view .LVU5
  81 002c 80E0      		ldi r24,lo8(__c.3)
  82 002e 90E0      		ldi r25,hi8(__c.3)
  83 0030 9F93      		push r25
  84 0032 8F93      		push r24
  85 0034 1F92      		push __zero_reg__
  86 0036 0E94 0000 		call log_boot_P
  87               	.LVL0:
  88               	.LBB15:
  84:initrd/initrd.c **** 
  85:initrd/initrd.c **** 	/* Conserve Stack */
  86:initrd/initrd.c **** 	{
  87:initrd/initrd.c **** 		u32 revision;
  89               		.loc 1 87 3 is_stmt 1 view .LVU6
  88:initrd/initrd.c **** 		u8 buf[BLOCK_SIZE];
  90               		.loc 1 88 3 view .LVU7
  89:initrd/initrd.c **** 
  90:initrd/initrd.c **** 		sd_read(SECTOR_BOOT, buf);
  91               		.loc 1 90 3 view .LVU8
  92 003a 8E01      		movw r16,r28
  93 003c 0F5F      		subi r16,-1
  94 003e 1F4F      		sbci r17,-1
  95 0040 A801      		movw r20,r16
  96 0042 60E0      		ldi r22,0
  97 0044 70E0      		ldi r23,0
  98 0046 CB01      		movw r24,r22
  99 0048 0E94 0000 		call sd_read
 100               	.LVL1:
  91:initrd/initrd.c **** 
  92:initrd/initrd.c **** 		/* Check signature */
  93:initrd/initrd.c **** 		if(memcmp(buf + OFFSET_SIGNATURE, _signature, sizeof(_signature)))
 101               		.loc 1 93 3 view .LVU9
 102               		.loc 1 93 6 is_stmt 0 view .LVU10
 103 004c 44E0      		ldi r20,lo8(4)
 104 004e 50E0      		ldi r21,0
 105 0050 60E0      		ldi r22,lo8(_signature)
 106 0052 70E0      		ldi r23,hi8(_signature)
 107 0054 C801      		movw r24,r16
 108 0056 0E94 0000 		call memcmp
 109               	.LVL2:
 110               		.loc 1 93 5 view .LVU11
 111 005a 0F90      		pop __tmp_reg__
 112 005c 0F90      		pop __tmp_reg__
 113 005e 0F90      		pop __tmp_reg__
 114 0060 B02E      		mov r11,r16
 115 0062 A12E      		mov r10,r17
 116 0064 892B      		or r24,r25
 117 0066 01F0      		breq .L2
  94:initrd/initrd.c **** 		{
  95:initrd/initrd.c **** 			panic(PSTR("Wrong FS signature"));
 118               		.loc 1 95 4 is_stmt 1 view .LVU12
 119               	.LBB16:
 120               		.loc 1 95 10 view .LVU13
 121               		.loc 1 95 10 view .LVU14
 122               	.LBE16:
 123               		.loc 1 95 4 is_stmt 0 view .LVU15
 124 0068 80E0      		ldi r24,lo8(__c.2)
 125 006a 90E0      		ldi r25,hi8(__c.2)
 126 006c 9F93      		push r25
 127 006e 8F93      		push r24
 128 0070 0E94 0000 		call panic
 129               	.LVL3:
 130 0074 0F90      		pop __tmp_reg__
 131 0076 0F90      		pop __tmp_reg__
 132               	.L2:
  96:initrd/initrd.c **** 		}
  97:initrd/initrd.c **** 
  98:initrd/initrd.c **** 		/* Check revision */
  99:initrd/initrd.c **** 		revision = _load_le_32(buf + OFFSET_REVISION);
 133               		.loc 1 99 3 is_stmt 1 view .LVU16
 134               	.LVL4:
 135               	.LBB17:
 136               	.LBI17:
  71:initrd/initrd.c **** {
 137               		.loc 1 71 12 view .LVU17
 138               	.LBB18:
  73:initrd/initrd.c **** 		((u32)(buf[1]) << 8) |
 139               		.loc 1 73 2 view .LVU18
  73:initrd/initrd.c **** 		((u32)(buf[1]) << 8) |
 140               		.loc 1 73 2 is_stmt 0 view .LVU19
 141               	.LBE18:
 142               	.LBE17:
 100:initrd/initrd.c **** 		if(revision != REVISION)
 143               		.loc 1 100 3 is_stmt 1 view .LVU20
 144               		.loc 1 100 5 is_stmt 0 view .LVU21
 145 0078 8D81      		ldd r24,Y+5
 146 007a 9E81      		ldd r25,Y+6
 147 007c AF81      		ldd r26,Y+7
 148 007e B885      		ldd r27,Y+8
 149 0080 892B      		or r24,r25
 150 0082 8A2B      		or r24,r26
 151 0084 8B2B      		or r24,r27
 152 0086 01F0      		breq .L3
 101:initrd/initrd.c **** 		{
 102:initrd/initrd.c **** 			panic(PSTR("Unsupported ATFS revision"));
 153               		.loc 1 102 4 is_stmt 1 view .LVU22
 154               	.LBB19:
 155               		.loc 1 102 10 view .LVU23
 156               		.loc 1 102 10 view .LVU24
 157               	.LBE19:
 158               		.loc 1 102 4 is_stmt 0 view .LVU25
 159 0088 80E0      		ldi r24,lo8(__c.1)
 160 008a 90E0      		ldi r25,hi8(__c.1)
 161 008c 9F93      		push r25
 162               	.LVL5:
 163               		.loc 1 102 4 view .LVU26
 164 008e 8F93      		push r24
 165 0090 0E94 0000 		call panic
 166               	.LVL6:
 167 0094 0F90      		pop __tmp_reg__
 168 0096 0F90      		pop __tmp_reg__
 169               	.L3:
 103:initrd/initrd.c **** 		}
 104:initrd/initrd.c **** 
 105:initrd/initrd.c **** 		/* Get STDLIB Size */
 106:initrd/initrd.c **** 		size_stdlib = _load_le_32(buf + OFFSET_STDLIB_SIZE);
 170               		.loc 1 106 3 is_stmt 1 view .LVU27
 171               	.LVL7:
 172               	.LBB20:
 173               	.LBI20:
  71:initrd/initrd.c **** {
 174               		.loc 1 71 12 view .LVU28
 175               	.LBB21:
  73:initrd/initrd.c **** 		((u32)(buf[1]) << 8) |
 176               		.loc 1 73 2 view .LVU29
  75:initrd/initrd.c **** 		((u32)(buf[3]) << 24);
 177               		.loc 1 75 25 is_stmt 0 view .LVU30
 178 0098 CD84      		ldd r12,Y+13
 179 009a DE84      		ldd r13,Y+14
 180 009c EF84      		ldd r14,Y+15
 181 009e F888      		ldd r15,Y+16
 182               	.LVL8:
  75:initrd/initrd.c **** 		((u32)(buf[3]) << 24);
 183               		.loc 1 75 25 view .LVU31
 184               	.LBE21:
 185               	.LBE20:
 107:initrd/initrd.c **** 
 108:initrd/initrd.c **** 		/* Get INIT Size */
 109:initrd/initrd.c **** 		size_init = _load_le_32(buf + OFFSET_STDLIB_SIZE);
 186               		.loc 1 109 3 is_stmt 1 view .LVU32
 187               		.loc 1 109 3 is_stmt 0 view .LVU33
 188               	.LBE15:
 110:initrd/initrd.c **** 	}
 111:initrd/initrd.c **** 
 112:initrd/initrd.c **** 	/* Load STDLIB to address 0 */
 113:initrd/initrd.c **** 	/* _load_xmem(RAM_OFFSET_STDLIB, SECTOR_STDLIB, size_stdlib >> BLOCK_SIZE_POT); */
 114:initrd/initrd.c **** 
 115:initrd/initrd.c **** 	/* Load INIT */
 116:initrd/initrd.c **** 	_load_xmem(RAM_OFFSET_INIT, SECTOR_INIT, size_init >> BLOCK_SIZE_POT);
 189               		.loc 1 116 2 is_stmt 1 view .LVU34
 190               	.LBB22:
 191               	.LBI22:
  48:initrd/initrd.c **** {
 192               		.loc 1 48 13 view .LVU35
 193               	.LBB23:
  50:initrd/initrd.c **** 	u32 i, end;
 194               		.loc 1 50 2 view .LVU36
  51:initrd/initrd.c **** 
 195               		.loc 1 51 2 view .LVU37
  53:initrd/initrd.c **** 	for(i = block; i < end; ++i)
 196               		.loc 1 53 2 view .LVU38
 197               	.LBE23:
 198               	.LBE22:
 199               		.loc 1 116 2 is_stmt 0 view .LVU39
 200 00a0 89E0      		ldi r24,9
 201               		1:
 202 00a2 F694      		lsr r15
 203 00a4 E794      		ror r14
 204 00a6 D794      		ror r13
 205 00a8 C794      		ror r12
 206 00aa 8A95      		dec r24
 207 00ac 01F4      		brne 1b
 208               	.LVL9:
 209               	.LBB27:
 210               	.LBB24:
  53:initrd/initrd.c **** 	for(i = block; i < end; ++i)
 211               		.loc 1 53 6 view .LVU40
 212 00ae 80E8      		ldi r24,-128
 213 00b0 C80E      		add r12,r24
 214 00b2 D11C      		adc r13,__zero_reg__
 215 00b4 E11C      		adc r14,__zero_reg__
 216 00b6 F11C      		adc r15,__zero_reg__
 217               	.LVL10:
  54:initrd/initrd.c **** 	{
 218               		.loc 1 54 2 is_stmt 1 view .LVU41
  54:initrd/initrd.c **** 	{
 219               		.loc 1 54 8 is_stmt 0 view .LVU42
 220 00b8 90E8      		ldi r25,lo8(-128)
 221 00ba 492E      		mov r4,r25
 222 00bc 512C      		mov r5,__zero_reg__
 223 00be 612C      		mov r6,__zero_reg__
 224 00c0 712C      		mov r7,__zero_reg__
  58:initrd/initrd.c **** 		}
 225               		.loc 1 58 4 view .LVU43
 226 00c2 00E0      		ldi r16,lo8(__c.0)
 227 00c4 10E0      		ldi r17,hi8(__c.0)
 228               	.LVL11:
 229               	.L4:
  54:initrd/initrd.c **** 	{
 230               		.loc 1 54 19 is_stmt 1 view .LVU44
 231 00c6 4C14      		cp r4,r12
 232 00c8 5D04      		cpc r5,r13
 233 00ca 6E04      		cpc r6,r14
 234 00cc 7F04      		cpc r7,r15
 235 00ce 00F0      		brlo .L6
 236               	/* epilogue start */
 237               	.LBE24:
 238               	.LBE27:
 117:initrd/initrd.c **** }
 239               		.loc 1 117 1 is_stmt 0 view .LVU45
 240 00d0 DE5F      		subi r29,-2
 241 00d2 0FB6      		in __tmp_reg__,__SREG__
 242 00d4 F894      		cli
 243 00d6 DEBF      		out __SP_H__,r29
 244 00d8 0FBE      		out __SREG__,__tmp_reg__
 245 00da CDBF      		out __SP_L__,r28
 246 00dc DF91      		pop r29
 247 00de CF91      		pop r28
 248 00e0 1F91      		pop r17
 249 00e2 0F91      		pop r16
 250 00e4 FF90      		pop r15
 251 00e6 EF90      		pop r14
 252 00e8 DF90      		pop r13
 253 00ea CF90      		pop r12
 254               	.LVL12:
 255               		.loc 1 117 1 view .LVU46
 256 00ec BF90      		pop r11
 257 00ee AF90      		pop r10
 258 00f0 7F90      		pop r7
 259 00f2 6F90      		pop r6
 260 00f4 5F90      		pop r5
 261 00f6 4F90      		pop r4
 262               	.LVL13:
 263               		.loc 1 117 1 view .LVU47
 264 00f8 0895      		ret
 265               	.LVL14:
 266               	.L6:
 267               	.LBB28:
 268               	.LBB25:
  56:initrd/initrd.c **** 		{
 269               		.loc 1 56 3 is_stmt 1 view .LVU48
  56:initrd/initrd.c **** 		{
 270               		.loc 1 56 6 is_stmt 0 view .LVU49
 271 00fa 4B2D      		mov r20,r11
 272 00fc 5A2D      		mov r21,r10
 273 00fe C301      		movw r24,r6
 274 0100 B201      		movw r22,r4
 275 0102 0E94 0000 		call sd_read
 276               	.LVL15:
  56:initrd/initrd.c **** 		{
 277               		.loc 1 56 5 view .LVU50
 278 0106 8823      		tst r24
 279 0108 01F0      		breq .L5
  58:initrd/initrd.c **** 		}
 280               		.loc 1 58 4 is_stmt 1 view .LVU51
 281               	.LBE25:
  58:initrd/initrd.c **** 		}
 282               		.loc 1 58 10 view .LVU52
  58:initrd/initrd.c **** 		}
 283               		.loc 1 58 10 view .LVU53
 284               	.LBB26:
  58:initrd/initrd.c **** 		}
 285               		.loc 1 58 4 is_stmt 0 view .LVU54
 286 010a 1F93      		push r17
 287 010c 0F93      		push r16
 288 010e 0E94 0000 		call panic
 289               	.LVL16:
 290 0112 0F90      		pop __tmp_reg__
 291 0114 0F90      		pop __tmp_reg__
 292               	.L5:
  61:initrd/initrd.c **** 	}
 293               		.loc 1 61 3 is_stmt 1 view .LVU55
 294 0116 20E0      		ldi r18,0
 295 0118 32E0      		ldi r19,lo8(2)
 296 011a 4B2D      		mov r20,r11
 297 011c 5A2D      		mov r21,r10
 298 011e 60E0      		ldi r22,0
 299 0120 70E0      		ldi r23,0
 300 0122 CB01      		movw r24,r22
 301 0124 0E94 0000 		call xmem_write
 302               	.LVL17:
  54:initrd/initrd.c **** 	{
 303               		.loc 1 54 26 view .LVU56
 304 0128 8FEF      		ldi r24,-1
 305 012a 481A      		sub r4,r24
 306 012c 580A      		sbc r5,r24
 307 012e 680A      		sbc r6,r24
 308 0130 780A      		sbc r7,r24
 309               	.LVL18:
  54:initrd/initrd.c **** 	{
 310               		.loc 1 54 26 is_stmt 0 view .LVU57
 311 0132 00C0      		rjmp .L4
 312               	.LBE26:
 313               	.LBE28:
 314               		.cfi_endproc
 315               	.LFE5:
 317               		.section	.progmem.data,"a",@progbits
 320               	__c.0:
 321 0000 4C6F 6164 		.string	"Loading InitRD failed"
 321      696E 6720 
 321      496E 6974 
 321      5244 2066 
 321      6169 6C65 
 324               	__c.1:
 325 0016 556E 7375 		.string	"Unsupported ATFS revision"
 325      7070 6F72 
 325      7465 6420 
 325      4154 4653 
 325      2072 6576 
 328               	__c.2:
 329 0030 5772 6F6E 		.string	"Wrong FS signature"
 329      6720 4653 
 329      2073 6967 
 329      6E61 7475 
 329      7265 00
 332               	__c.3:
 333 0043 4C6F 6164 		.string	"Loading Init Binary"
 333      696E 6720 
 333      496E 6974 
 333      2042 696E 
 333      6172 7900 
 334               		.section	.rodata
 337               	_signature:
 338 0000 4154 4653 		.ascii	"ATFS"
 339               		.text
 340               	.Letext0:
 341               		.file 2 "/usr/lib/gcc/avr/12.2.0/include/stddef.h"
 342               		.file 3 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 343               		.file 4 "../../types/types.h"
 344               		.file 5 "../../status/status.h"
 345               		.file 6 "logger/logger.h"
 346               		.file 7 "xmem/xmem.h"
 347               		.file 8 "/usr/avr/include/string.h"
 348               		.file 9 "sd/sd.h"
DEFINED SYMBOLS
                            *ABS*:00000000 initrd.c
     /tmp/ccjDOGBo.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccjDOGBo.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccjDOGBo.s:4      *ABS*:0000003f __SREG__
     /tmp/ccjDOGBo.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccjDOGBo.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccjDOGBo.s:13     .text:00000000 initrd_load
     /tmp/ccjDOGBo.s:16     .text:00000000 .Loc.0
     /tmp/ccjDOGBo.s:17     .text:00000000 L0
     /tmp/ccjDOGBo.s:74     .text:0000002c .Loc.1
     /tmp/ccjDOGBo.s:75     .text:0000002c .Loc.2
     /tmp/ccjDOGBo.s:77     .text:0000002c .Loc.3
     /tmp/ccjDOGBo.s:78     .text:0000002c .Loc.4
     /tmp/ccjDOGBo.s:80     .text:0000002c .Loc.5
     /tmp/ccjDOGBo.s:332    .progmem.data:00000043 __c.3
     /tmp/ccjDOGBo.s:89     .text:0000003a .Loc.6
     /tmp/ccjDOGBo.s:90     .text:0000003a .Loc.7
     /tmp/ccjDOGBo.s:91     .text:0000003a .Loc.8
     /tmp/ccjDOGBo.s:101    .text:0000004c .Loc.9
     /tmp/ccjDOGBo.s:102    .text:0000004c .Loc.10
     /tmp/ccjDOGBo.s:337    .rodata:00000000 _signature
     /tmp/ccjDOGBo.s:110    .text:0000005a .Loc.11
     /tmp/ccjDOGBo.s:118    .text:00000068 .Loc.12
     /tmp/ccjDOGBo.s:120    .text:00000068 .Loc.13
     /tmp/ccjDOGBo.s:121    .text:00000068 .Loc.14
     /tmp/ccjDOGBo.s:123    .text:00000068 .Loc.15
     /tmp/ccjDOGBo.s:328    .progmem.data:00000030 __c.2
     /tmp/ccjDOGBo.s:133    .text:00000078 .Loc.16
     /tmp/ccjDOGBo.s:137    .text:00000078 .Loc.17
     /tmp/ccjDOGBo.s:139    .text:00000078 .Loc.18
     /tmp/ccjDOGBo.s:140    .text:00000078 .Loc.19
     /tmp/ccjDOGBo.s:143    .text:00000078 .Loc.20
     /tmp/ccjDOGBo.s:144    .text:00000078 .Loc.21
     /tmp/ccjDOGBo.s:153    .text:00000088 .Loc.22
     /tmp/ccjDOGBo.s:155    .text:00000088 .Loc.23
     /tmp/ccjDOGBo.s:156    .text:00000088 .Loc.24
     /tmp/ccjDOGBo.s:158    .text:00000088 .Loc.25
     /tmp/ccjDOGBo.s:324    .progmem.data:00000016 __c.1
     /tmp/ccjDOGBo.s:163    .text:0000008e .Loc.26
     /tmp/ccjDOGBo.s:170    .text:00000098 .Loc.27
     /tmp/ccjDOGBo.s:174    .text:00000098 .Loc.28
     /tmp/ccjDOGBo.s:176    .text:00000098 .Loc.29
     /tmp/ccjDOGBo.s:177    .text:00000098 .Loc.30
     /tmp/ccjDOGBo.s:183    .text:000000a0 .Loc.31
     /tmp/ccjDOGBo.s:186    .text:000000a0 .Loc.32
     /tmp/ccjDOGBo.s:187    .text:000000a0 .Loc.33
     /tmp/ccjDOGBo.s:189    .text:000000a0 .Loc.34
     /tmp/ccjDOGBo.s:192    .text:000000a0 .Loc.35
     /tmp/ccjDOGBo.s:194    .text:000000a0 .Loc.36
     /tmp/ccjDOGBo.s:195    .text:000000a0 .Loc.37
     /tmp/ccjDOGBo.s:196    .text:000000a0 .Loc.38
     /tmp/ccjDOGBo.s:199    .text:000000a0 .Loc.39
     /tmp/ccjDOGBo.s:211    .text:000000ae .Loc.40
     /tmp/ccjDOGBo.s:218    .text:000000b8 .Loc.41
     /tmp/ccjDOGBo.s:219    .text:000000b8 .Loc.42
     /tmp/ccjDOGBo.s:225    .text:000000c2 .Loc.43
     /tmp/ccjDOGBo.s:320    .progmem.data:00000000 __c.0
     /tmp/ccjDOGBo.s:230    .text:000000c6 .Loc.44
     /tmp/ccjDOGBo.s:239    .text:000000d0 .Loc.45
     /tmp/ccjDOGBo.s:255    .text:000000ec .Loc.46
     /tmp/ccjDOGBo.s:263    .text:000000f8 .Loc.47
     /tmp/ccjDOGBo.s:269    .text:000000fa .Loc.48
     /tmp/ccjDOGBo.s:270    .text:000000fa .Loc.49
     /tmp/ccjDOGBo.s:277    .text:00000106 .Loc.50
     /tmp/ccjDOGBo.s:280    .text:0000010a .Loc.51
     /tmp/ccjDOGBo.s:282    .text:0000010a .Loc.52
     /tmp/ccjDOGBo.s:283    .text:0000010a .Loc.53
     /tmp/ccjDOGBo.s:285    .text:0000010a .Loc.54
     /tmp/ccjDOGBo.s:293    .text:00000116 .Loc.55
     /tmp/ccjDOGBo.s:303    .text:00000128 .Loc.56
     /tmp/ccjDOGBo.s:310    .text:00000132 .Loc.57
     /tmp/ccjDOGBo.s:314    .text:00000134 L0
     /tmp/ccjDOGBo.s:349    .text:00000134 L0
                     .debug_frame:00000000 L0
     /tmp/ccjDOGBo.s:132    .text:00000078 .L2
     /tmp/ccjDOGBo.s:169    .text:00000098 .L3
     /tmp/ccjDOGBo.s:201    .text:000000a2 .L11
     /tmp/ccjDOGBo.s:266    .text:000000fa .L6
     /tmp/ccjDOGBo.s:292    .text:00000116 .L5
     /tmp/ccjDOGBo.s:229    .text:000000c6 .L4
     /tmp/ccjDOGBo.s:977    .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccjDOGBo.s:8      .text:00000000 .Ltext0
     /tmp/ccjDOGBo.s:340    .text:00000134 .Letext0
     /tmp/ccjDOGBo.s:1790   .debug_line:00000000 .Ldebug_line0
     /tmp/ccjDOGBo.s:14     .text:00000000 .LFB5
     /tmp/ccjDOGBo.s:315    .text:00000134 .LFE5
     /tmp/ccjDOGBo.s:76     .text:0000002c .LBB14
     /tmp/ccjDOGBo.s:79     .text:0000002c .LBE14
     /tmp/ccjDOGBo.s:88     .text:0000003a .LBB15
     /tmp/ccjDOGBo.s:188    .text:000000a0 .LBE15
     /tmp/ccjDOGBo.s:1537   .debug_loclists:0000000e .LLST0
     /tmp/ccjDOGBo.s:1534   .debug_loclists:0000000c .LVUS0
     /tmp/ccjDOGBo.s:119    .text:00000068 .LBB16
     /tmp/ccjDOGBo.s:122    .text:00000068 .LBE16
     /tmp/ccjDOGBo.s:154    .text:00000088 .LBB19
     /tmp/ccjDOGBo.s:157    .text:00000088 .LBE19
     /tmp/ccjDOGBo.s:136    .text:00000078 .LBI17
     /tmp/ccjDOGBo.s:135    .text:00000078 .LBB17
     /tmp/ccjDOGBo.s:142    .text:00000078 .LBE17
     /tmp/ccjDOGBo.s:1584   .debug_loclists:00000040 .LLST1
     /tmp/ccjDOGBo.s:1581   .debug_loclists:0000003e .LVUS1
     /tmp/ccjDOGBo.s:173    .text:00000098 .LBI20
     /tmp/ccjDOGBo.s:172    .text:00000098 .LBB20
     /tmp/ccjDOGBo.s:185    .text:000000a0 .LBE20
     /tmp/ccjDOGBo.s:1596   .debug_loclists:0000004b .LLST2
     /tmp/ccjDOGBo.s:1593   .debug_loclists:00000049 .LVUS2
     /tmp/ccjDOGBo.s:100    .text:0000004c .LVL1
     /tmp/ccjDOGBo.s:109    .text:0000005a .LVL2
     /tmp/ccjDOGBo.s:129    .text:00000074 .LVL3
     /tmp/ccjDOGBo.s:166    .text:00000094 .LVL6
     /tmp/ccjDOGBo.s:191    .text:000000a0 .LBI22
     /tmp/ccjDOGBo.s:1763   .debug_rnglists:0000000c .LLRL3
     /tmp/ccjDOGBo.s:1614   .debug_loclists:0000005e .LLST4
     /tmp/ccjDOGBo.s:1605   .debug_loclists:00000056 .LVUS4
     /tmp/ccjDOGBo.s:1774   .debug_rnglists:0000001c .LLRL5
     /tmp/ccjDOGBo.s:1662   .debug_loclists:00000096 .LLST6
     /tmp/ccjDOGBo.s:1655   .debug_loclists:00000090 .LVUS6
     /tmp/ccjDOGBo.s:1708   .debug_loclists:000000c8 .LLST7
     /tmp/ccjDOGBo.s:1703   .debug_loclists:000000c4 .LVUS7
     /tmp/ccjDOGBo.s:276    .text:00000106 .LVL15
     /tmp/ccjDOGBo.s:289    .text:00000112 .LVL16
     /tmp/ccjDOGBo.s:302    .text:00000128 .LVL17
     /tmp/ccjDOGBo.s:87     .text:0000003a .LVL0
     /tmp/ccjDOGBo.s:350    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
log_boot_P
sd_read
memcmp
panic
xmem_write
__do_copy_data
