   1               		.file	"initrd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "/home/files/osdev/platform/avr" "initrd/initrd.c"
  11               	.global	initrd_load
  13               	initrd_load:
  14               	.LFB4:
  15               		.file 1 "initrd/initrd.c"
   1:initrd/initrd.c **** /**
   2:initrd/initrd.c ****  * @file    initrd.c
   3:initrd/initrd.c ****  * @author  Anton Tchekov
   4:initrd/initrd.c ****  * @version 0.1
   5:initrd/initrd.c ****  * @date    21.05.2023
   6:initrd/initrd.c ****  */
   7:initrd/initrd.c **** 
   8:initrd/initrd.c **** #include <initrd.h>
   9:initrd/initrd.c **** #include <types.h>
  10:initrd/initrd.c **** #include <sd.h>
  11:initrd/initrd.c **** #include <xmem.h>
  12:initrd/initrd.c **** #include <logger.h>
  13:initrd/initrd.c **** #include <string.h>
  14:initrd/initrd.c **** #include <avr/pgmspace.h>
  15:initrd/initrd.c **** 
  16:initrd/initrd.c **** /* 512 bytes */
  17:initrd/initrd.c **** #define SECTOR_BOOT            0
  18:initrd/initrd.c **** #define SIZE_BOOT              1
  19:initrd/initrd.c **** 
  20:initrd/initrd.c **** /* 64 KiB */
  21:initrd/initrd.c **** #define SECTOR_STDLIB           SIZE_BOOT
  22:initrd/initrd.c **** #define SIZE_STDLIB          128
  23:initrd/initrd.c **** 
  24:initrd/initrd.c **** /* 64 KiB */
  25:initrd/initrd.c **** #define SECTOR_INIT             (SIZE_BOOT + SIZE_STDLIB)
  26:initrd/initrd.c **** #define SIZE_INIT            128
  27:initrd/initrd.c **** 
  28:initrd/initrd.c **** /* Root Dir */
  29:initrd/initrd.c **** #define SECTOR_ROOT             (SIZE_BOOT + SIZE_STDLIB + SIZE_INIT)
  30:initrd/initrd.c **** 
  31:initrd/initrd.c **** /* Current FS Revision */
  32:initrd/initrd.c **** #define REVISION               0
  33:initrd/initrd.c **** 
  34:initrd/initrd.c **** /* Boot sector offsets */
  35:initrd/initrd.c **** #define OFFSET_SIGNATURE       0
  36:initrd/initrd.c **** #define OFFSET_REVISION        4
  37:initrd/initrd.c **** #define OFFSET_STDLIB_SIZE     8
  38:initrd/initrd.c **** #define OFFSET_INIT_SIZE      12
  39:initrd/initrd.c **** 
  40:initrd/initrd.c **** /* TODO: STDLIB as shared library */
  41:initrd/initrd.c **** /* RAM offsets */
  42:initrd/initrd.c **** #define RAM_OFFSET_STDLIB       TODO
  43:initrd/initrd.c **** #define RAM_OFFSET_INIT        0
  44:initrd/initrd.c **** 
  45:initrd/initrd.c **** /* FS Signature (bytes 0-4) */
  46:initrd/initrd.c **** static const u8 _signature[] = { 'A', 'T', 'F', 'S' };
  47:initrd/initrd.c **** 
  48:initrd/initrd.c **** /**
  49:initrd/initrd.c ****  * @brief Load a 32-bit little endian value from a buffer
  50:initrd/initrd.c ****  *
  51:initrd/initrd.c ****  * @param buf Input
  52:initrd/initrd.c ****  * @return Result
  53:initrd/initrd.c ****  */
  54:initrd/initrd.c **** static u32 _load_le_32(u8 *buf)
  55:initrd/initrd.c **** {
  56:initrd/initrd.c **** 	return (u32)(buf[0]) |
  57:initrd/initrd.c **** 		((u32)(buf[1]) << 8UL) |
  58:initrd/initrd.c **** 		((u32)(buf[2]) << 16UL) |
  59:initrd/initrd.c **** 		((u32)(buf[3]) << 24UL);
  60:initrd/initrd.c **** }
  61:initrd/initrd.c **** 
  62:initrd/initrd.c **** void initrd_load(void)
  63:initrd/initrd.c **** {
  16               		.loc 1 63 1 view -0
  17               		.cfi_startproc
  18 0000 7F92      		push r7
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 7, -2
  21 0002 8F92      		push r8
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 8, -3
  24 0004 9F92      		push r9
  25               		.cfi_def_cfa_offset 5
  26               		.cfi_offset 9, -4
  27 0006 AF92      		push r10
  28               		.cfi_def_cfa_offset 6
  29               		.cfi_offset 10, -5
  30 0008 BF92      		push r11
  31               		.cfi_def_cfa_offset 7
  32               		.cfi_offset 11, -6
  33 000a CF92      		push r12
  34               		.cfi_def_cfa_offset 8
  35               		.cfi_offset 12, -7
  36 000c DF92      		push r13
  37               		.cfi_def_cfa_offset 9
  38               		.cfi_offset 13, -8
  39 000e EF92      		push r14
  40               		.cfi_def_cfa_offset 10
  41               		.cfi_offset 14, -9
  42 0010 FF92      		push r15
  43               		.cfi_def_cfa_offset 11
  44               		.cfi_offset 15, -10
  45 0012 0F93      		push r16
  46               		.cfi_def_cfa_offset 12
  47               		.cfi_offset 16, -11
  48 0014 1F93      		push r17
  49               		.cfi_def_cfa_offset 13
  50               		.cfi_offset 17, -12
  51 0016 CF93      		push r28
  52               		.cfi_def_cfa_offset 14
  53               		.cfi_offset 28, -13
  54 0018 DF93      		push r29
  55               		.cfi_def_cfa_offset 15
  56               		.cfi_offset 29, -14
  57 001a CDB7      		in r28,__SP_L__
  58 001c DEB7      		in r29,__SP_H__
  59               		.cfi_def_cfa_register 28
  60 001e C450      		subi r28,4
  61 0020 D240      		sbci r29,2
  62               		.cfi_def_cfa_offset 531
  63 0022 0FB6      		in __tmp_reg__,__SREG__
  64 0024 F894      		cli
  65 0026 DEBF      		out __SP_H__,r29
  66 0028 0FBE      		out __SREG__,__tmp_reg__
  67 002a CDBF      		out __SP_L__,r28
  68               	/* prologue: function */
  69               	/* frame size = 516 */
  70               	/* stack size = 529 */
  71               	.L__stack_usage = 529
  64:initrd/initrd.c **** 	u8 buf[BLOCK_SIZE];
  72               		.loc 1 64 2 view .LVU1
  65:initrd/initrd.c **** 	u16 block;
  73               		.loc 1 65 2 view .LVU2
  66:initrd/initrd.c **** 	u32 addr, revision, size_stdlib, size_init;
  74               		.loc 1 66 2 view .LVU3
  67:initrd/initrd.c **** 
  68:initrd/initrd.c **** 	log_boot_P(LOG_INIT, PSTR("Loading Init Binary"));
  75               		.loc 1 68 2 view .LVU4
  76               	.LBB15:
  77               		.loc 1 68 23 view .LVU5
  78               		.loc 1 68 23 view .LVU6
  79               	.LBE15:
  80               		.loc 1 68 2 is_stmt 0 view .LVU7
  81 002c 80E0      		ldi r24,lo8(__c.6)
  82 002e 90E0      		ldi r25,hi8(__c.6)
  83 0030 9F93      		push r25
  84 0032 8F93      		push r24
  85 0034 1F92      		push __zero_reg__
  86 0036 0E94 0000 		call log_boot_P
  87               	.LVL0:
  69:initrd/initrd.c **** 
  70:initrd/initrd.c **** 	sd_read(SECTOR_BOOT, buf);
  88               		.loc 1 70 2 is_stmt 1 view .LVU8
  89 003a 8E01      		movw r16,r28
  90 003c 0F5F      		subi r16,-1
  91 003e 1F4F      		sbci r17,-1
  92 0040 A801      		movw r20,r16
  93 0042 60E0      		ldi r22,0
  94 0044 70E0      		ldi r23,0
  95 0046 CB01      		movw r24,r22
  96 0048 0E94 0000 		call sd_read
  97               	.LVL1:
  71:initrd/initrd.c **** 
  72:initrd/initrd.c **** 	memory_dump(0, buf, BLOCK_SIZE);
  98               		.loc 1 72 2 view .LVU9
  99 004c 20E0      		ldi r18,0
 100 004e 32E0      		ldi r19,lo8(2)
 101 0050 A801      		movw r20,r16
 102 0052 60E0      		ldi r22,0
 103 0054 70E0      		ldi r23,0
 104 0056 CB01      		movw r24,r22
 105 0058 0E94 0000 		call memory_dump
 106               	.LVL2:
  73:initrd/initrd.c **** 
  74:initrd/initrd.c **** 	/* Check signature */
  75:initrd/initrd.c **** 	if(memcmp(buf + OFFSET_SIGNATURE, _signature, sizeof(_signature)))
 107               		.loc 1 75 2 view .LVU10
 108               		.loc 1 75 5 is_stmt 0 view .LVU11
 109 005c 44E0      		ldi r20,lo8(4)
 110 005e 50E0      		ldi r21,0
 111 0060 60E0      		ldi r22,lo8(_signature)
 112 0062 70E0      		ldi r23,hi8(_signature)
 113 0064 C801      		movw r24,r16
 114 0066 0E94 0000 		call memcmp
 115               	.LVL3:
 116               		.loc 1 75 4 view .LVU12
 117 006a 0F90      		pop __tmp_reg__
 118 006c 0F90      		pop __tmp_reg__
 119 006e 0F90      		pop __tmp_reg__
 120 0070 B02E      		mov r11,r16
 121 0072 A12E      		mov r10,r17
 122 0074 892B      		or r24,r25
 123 0076 01F0      		breq .L2
  76:initrd/initrd.c **** 	{
  77:initrd/initrd.c **** 		panic(PSTR("Wrong FS signature"));
 124               		.loc 1 77 3 is_stmt 1 view .LVU13
 125               	.LBB16:
 126               		.loc 1 77 9 view .LVU14
 127               		.loc 1 77 9 view .LVU15
 128               	.LBE16:
 129               		.loc 1 77 3 is_stmt 0 view .LVU16
 130 0078 80E0      		ldi r24,lo8(__c.5)
 131 007a 90E0      		ldi r25,hi8(__c.5)
 132 007c 9F93      		push r25
 133 007e 8F93      		push r24
 134 0080 0E94 0000 		call panic
 135               	.LVL4:
 136 0084 0F90      		pop __tmp_reg__
 137 0086 0F90      		pop __tmp_reg__
 138               	.L2:
  78:initrd/initrd.c **** 	}
  79:initrd/initrd.c **** 
  80:initrd/initrd.c **** 	/* Check revision */
  81:initrd/initrd.c **** 	revision = _load_le_32(buf + OFFSET_REVISION);
 139               		.loc 1 81 2 is_stmt 1 view .LVU17
 140               	.LVL5:
 141               	.LBB17:
 142               	.LBI17:
  54:initrd/initrd.c **** {
 143               		.loc 1 54 12 view .LVU18
 144               	.LBB18:
  56:initrd/initrd.c **** 		((u32)(buf[1]) << 8UL) |
 145               		.loc 1 56 2 view .LVU19
  56:initrd/initrd.c **** 		((u32)(buf[1]) << 8UL) |
 146               		.loc 1 56 2 is_stmt 0 view .LVU20
 147               	.LBE18:
 148               	.LBE17:
  82:initrd/initrd.c **** 	if(revision != REVISION)
 149               		.loc 1 82 2 is_stmt 1 view .LVU21
 150               		.loc 1 82 4 is_stmt 0 view .LVU22
 151 0088 8D81      		ldd r24,Y+5
 152 008a 9E81      		ldd r25,Y+6
 153 008c AF81      		ldd r26,Y+7
 154 008e B885      		ldd r27,Y+8
 155 0090 892B      		or r24,r25
 156 0092 8A2B      		or r24,r26
 157 0094 8B2B      		or r24,r27
 158 0096 01F0      		breq .L3
  83:initrd/initrd.c **** 	{
  84:initrd/initrd.c **** 		panic(PSTR("Unsupported ATFS revision"));
 159               		.loc 1 84 3 is_stmt 1 view .LVU23
 160               	.LBB19:
 161               		.loc 1 84 9 view .LVU24
 162               		.loc 1 84 9 view .LVU25
 163               	.LBE19:
 164               		.loc 1 84 3 is_stmt 0 view .LVU26
 165 0098 80E0      		ldi r24,lo8(__c.4)
 166 009a 90E0      		ldi r25,hi8(__c.4)
 167 009c 9F93      		push r25
 168               	.LVL6:
 169               		.loc 1 84 3 view .LVU27
 170 009e 8F93      		push r24
 171 00a0 0E94 0000 		call panic
 172               	.LVL7:
 173 00a4 0F90      		pop __tmp_reg__
 174 00a6 0F90      		pop __tmp_reg__
 175               	.L3:
  85:initrd/initrd.c **** 	}
  86:initrd/initrd.c **** 
  87:initrd/initrd.c **** 	/* Get STDLIB Size */
  88:initrd/initrd.c **** 	size_stdlib = _load_le_32(buf + OFFSET_STDLIB_SIZE);
 176               		.loc 1 88 2 is_stmt 1 view .LVU28
 177               	.LVL8:
 178               	.LBB20:
 179               	.LBI20:
  54:initrd/initrd.c **** {
 180               		.loc 1 54 12 view .LVU29
 181               	.LBB21:
  56:initrd/initrd.c **** 		((u32)(buf[1]) << 8UL) |
 182               		.loc 1 56 2 view .LVU30
  58:initrd/initrd.c **** 		((u32)(buf[3]) << 24UL);
 183               		.loc 1 58 27 is_stmt 0 view .LVU31
 184 00a8 1985      		ldd r17,Y+9
 185 00aa 0A85      		ldd r16,Y+10
 186 00ac 8B84      		ldd r8,Y+11
 187 00ae 7C84      		ldd r7,Y+12
 188               	.LVL9:
  58:initrd/initrd.c **** 		((u32)(buf[3]) << 24UL);
 189               		.loc 1 58 27 view .LVU32
 190               	.LBE21:
 191               	.LBE20:
  89:initrd/initrd.c **** 
  90:initrd/initrd.c **** 	/* Get INIT Size */
  91:initrd/initrd.c **** 	size_init = _load_le_32(buf + OFFSET_INIT_SIZE);
 192               		.loc 1 91 2 is_stmt 1 view .LVU33
 193               	.LBB22:
 194               	.LBI22:
  54:initrd/initrd.c **** {
 195               		.loc 1 54 12 view .LVU34
 196               	.LBB23:
  56:initrd/initrd.c **** 		((u32)(buf[1]) << 8UL) |
 197               		.loc 1 56 2 view .LVU35
  58:initrd/initrd.c **** 		((u32)(buf[3]) << 24UL);
 198               		.loc 1 58 27 is_stmt 0 view .LVU36
 199 00b0 CD84      		ldd r12,Y+13
 200 00b2 DE84      		ldd r13,Y+14
 201 00b4 EF84      		ldd r14,Y+15
 202 00b6 F888      		ldd r15,Y+16
 203               	.LVL10:
  58:initrd/initrd.c **** 		((u32)(buf[3]) << 24UL);
 204               		.loc 1 58 27 view .LVU37
 205               	.LBE23:
 206               	.LBE22:
  92:initrd/initrd.c **** 
  93:initrd/initrd.c **** 	/* Load STDLIB */
  94:initrd/initrd.c **** 	/* _load_xmem(RAM_OFFSET_STDLIB, SECTOR_STDLIB, size_stdlib >> BLOCK_SIZE_POT); */
  95:initrd/initrd.c **** 
  96:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("INIT Size: %"PRIu32), size_init);
 207               		.loc 1 96 2 is_stmt 1 view .LVU38
 208               	.LBB24:
 209               		.loc 1 96 22 view .LVU39
 210               		.loc 1 96 22 view .LVU40
 211               	.LBE24:
 212               		.loc 1 96 2 is_stmt 0 view .LVU41
 213 00b8 FF92      		push r15
 214 00ba EF92      		push r14
 215 00bc DF92      		push r13
 216 00be CF92      		push r12
 217 00c0 80E0      		ldi r24,lo8(__c.3)
 218 00c2 90E0      		ldi r25,hi8(__c.3)
 219 00c4 9F93      		push r25
 220 00c6 8F93      		push r24
 221 00c8 87E0      		ldi r24,lo8(7)
 222 00ca 982E      		mov r9,r24
 223 00cc 9F92      		push r9
 224 00ce 0E94 0000 		call log_boot_P
 225               	.LVL11:
  97:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("STDLIB Size: %"PRIu32), size_stdlib);
 226               		.loc 1 97 2 is_stmt 1 view .LVU42
 227               	.LBB25:
 228               		.loc 1 97 22 view .LVU43
 229               		.loc 1 97 22 view .LVU44
 230               	.LBE25:
 231               		.loc 1 97 2 is_stmt 0 view .LVU45
 232 00d2 7F92      		push r7
 233 00d4 8F92      		push r8
 234 00d6 0F93      		push r16
 235 00d8 1F93      		push r17
 236 00da 80E0      		ldi r24,lo8(__c.2)
 237 00dc 90E0      		ldi r25,hi8(__c.2)
 238 00de 9F93      		push r25
 239 00e0 8F93      		push r24
 240 00e2 9F92      		push r9
 241 00e4 0E94 0000 		call log_boot_P
 242               	.LVL12:
  98:initrd/initrd.c **** 
  99:initrd/initrd.c **** 	u16 num_sectors = (size_init + BLOCK_SIZE - 1) >> BLOCK_SIZE_POT;
 243               		.loc 1 99 2 is_stmt 1 view .LVU46
 244               		.loc 1 99 44 is_stmt 0 view .LVU47
 245 00e8 8FEF      		ldi r24,-1
 246 00ea C80E      		add r12,r24
 247 00ec 81E0      		ldi r24,1
 248 00ee D81E      		adc r13,r24
 249 00f0 E11C      		adc r14,__zero_reg__
 250 00f2 F11C      		adc r15,__zero_reg__
 251               		.loc 1 99 49 view .LVU48
 252 00f4 99E0      		ldi r25,9
 253               		1:
 254 00f6 F694      		lsr r15
 255 00f8 E794      		ror r14
 256 00fa D794      		ror r13
 257 00fc C794      		ror r12
 258 00fe 9A95      		dec r25
 259 0100 01F4      		brne 1b
 260               		.loc 1 99 6 view .LVU49
 261 0102 8601      		movw r16,r12
 262               	.LVL13:
 100:initrd/initrd.c **** 
 101:initrd/initrd.c **** 	log_boot_P(LOG_EXT, PSTR("INIT Sectors: %d"), num_sectors);
 263               		.loc 1 101 2 is_stmt 1 view .LVU50
 264               	.LBB26:
 265               		.loc 1 101 22 view .LVU51
 266               		.loc 1 101 22 view .LVU52
 267               	.LBE26:
 268               		.loc 1 101 2 is_stmt 0 view .LVU53
 269 0104 DF92      		push r13
 270 0106 CF92      		push r12
 271 0108 80E0      		ldi r24,lo8(__c.1)
 272 010a 90E0      		ldi r25,hi8(__c.1)
 273 010c 9F93      		push r25
 274 010e 8F93      		push r24
 275 0110 9F92      		push r9
 276 0112 0E94 0000 		call log_boot_P
 277               	.LVL14:
 102:initrd/initrd.c **** 
 103:initrd/initrd.c **** 	/* Load INIT */
 104:initrd/initrd.c **** 	for(addr = 0, block = SECTOR_INIT;
 278               		.loc 1 104 2 is_stmt 1 view .LVU54
 279               		.loc 1 104 2 is_stmt 0 view .LVU55
 280 0116 0FB6      		in __tmp_reg__,__SREG__
 281 0118 F894      		cli
 282 011a DEBF      		out __SP_H__,r29
 283 011c 0FBE      		out __SREG__,__tmp_reg__
 284 011e CDBF      		out __SP_L__,r28
 285 0120 21E8      		ldi r18,lo8(-127)
 286 0122 C22E      		mov r12,r18
 287 0124 D12C      		mov r13,__zero_reg__
 288 0126 E12C      		mov r14,__zero_reg__
 289 0128 F12C      		mov r15,__zero_reg__
 290               	.LVL15:
 291               		.loc 1 104 11 view .LVU56
 292 012a CF5F      		subi r28,lo8(-513)
 293 012c DD4F      		sbci r29,hi8(-513)
 294 012e 1882      		st Y,__zero_reg__
 295 0130 1982      		std Y+1,__zero_reg__
 296 0132 1A82      		std Y+2,__zero_reg__
 297 0134 1B82      		std Y+3,__zero_reg__
 298 0136 C150      		subi r28,lo8(513)
 299 0138 D240      		sbci r29,hi8(513)
 105:initrd/initrd.c **** 		block < SECTOR_INIT + num_sectors;
 300               		.loc 1 105 23 view .LVU57
 301 013a 0F57      		subi r16,127
 302 013c 1F4F      		sbci r17,-1
 106:initrd/initrd.c **** 		++block, addr += BLOCK_SIZE)
 107:initrd/initrd.c **** 	{
 108:initrd/initrd.c **** 		if(sd_read(block, buf))
 109:initrd/initrd.c **** 		{
 110:initrd/initrd.c **** 			panic(PSTR("Loading InitRD failed"));
 303               		.loc 1 110 4 view .LVU58
 304 013e 30E0      		ldi r19,lo8(__c.0)
 305 0140 832E      		mov r8,r19
 306 0142 30E0      		ldi r19,hi8(__c.0)
 307 0144 932E      		mov r9,r19
 308               	.LVL16:
 309               	.L4:
 105:initrd/initrd.c **** 		block < SECTOR_INIT + num_sectors;
 310               		.loc 1 105 9 is_stmt 1 view .LVU59
 311 0146 C016      		cp r12,r16
 312 0148 D106      		cpc r13,r17
 313 014a 00F0      		brlo .L6
 314               	/* epilogue start */
 111:initrd/initrd.c **** 		}
 112:initrd/initrd.c **** 
 113:initrd/initrd.c **** 		xmem_write(addr, buf, BLOCK_SIZE);
 114:initrd/initrd.c **** 	}
 115:initrd/initrd.c **** }
 315               		.loc 1 115 1 is_stmt 0 view .LVU60
 316 014c CC5F      		subi r28,-4
 317 014e DD4F      		sbci r29,-3
 318 0150 0FB6      		in __tmp_reg__,__SREG__
 319 0152 F894      		cli
 320 0154 DEBF      		out __SP_H__,r29
 321 0156 0FBE      		out __SREG__,__tmp_reg__
 322 0158 CDBF      		out __SP_L__,r28
 323 015a DF91      		pop r29
 324 015c CF91      		pop r28
 325 015e 1F91      		pop r17
 326 0160 0F91      		pop r16
 327 0162 FF90      		pop r15
 328 0164 EF90      		pop r14
 329 0166 DF90      		pop r13
 330 0168 CF90      		pop r12
 331               	.LVL17:
 332               		.loc 1 115 1 view .LVU61
 333 016a BF90      		pop r11
 334 016c AF90      		pop r10
 335 016e 9F90      		pop r9
 336 0170 8F90      		pop r8
 337 0172 7F90      		pop r7
 338 0174 0895      		ret
 339               	.LVL18:
 340               	.L6:
 108:initrd/initrd.c **** 		{
 341               		.loc 1 108 3 is_stmt 1 view .LVU62
 108:initrd/initrd.c **** 		{
 342               		.loc 1 108 6 is_stmt 0 view .LVU63
 343 0176 4B2D      		mov r20,r11
 344 0178 5A2D      		mov r21,r10
 345 017a C701      		movw r24,r14
 346 017c B601      		movw r22,r12
 347 017e 0E94 0000 		call sd_read
 348               	.LVL19:
 108:initrd/initrd.c **** 		{
 349               		.loc 1 108 5 view .LVU64
 350 0182 8823      		tst r24
 351 0184 01F0      		breq .L5
 110:initrd/initrd.c **** 		}
 352               		.loc 1 110 4 is_stmt 1 view .LVU65
 353               	.LBB27:
 110:initrd/initrd.c **** 		}
 354               		.loc 1 110 10 view .LVU66
 110:initrd/initrd.c **** 		}
 355               		.loc 1 110 10 view .LVU67
 356               	.LBE27:
 110:initrd/initrd.c **** 		}
 357               		.loc 1 110 4 is_stmt 0 view .LVU68
 358 0186 9F92      		push r9
 359               	.LVL20:
 110:initrd/initrd.c **** 		}
 360               		.loc 1 110 4 view .LVU69
 361 0188 8F92      		push r8
 362 018a 0E94 0000 		call panic
 363               	.LVL21:
 364 018e 0F90      		pop __tmp_reg__
 365 0190 0F90      		pop __tmp_reg__
 366               	.L5:
 113:initrd/initrd.c **** 	}
 367               		.loc 1 113 3 is_stmt 1 view .LVU70
 368 0192 20E0      		ldi r18,0
 369 0194 32E0      		ldi r19,lo8(2)
 370 0196 4B2D      		mov r20,r11
 371 0198 5A2D      		mov r21,r10
 372 019a CF5F      		subi r28,lo8(-513)
 373 019c DD4F      		sbci r29,hi8(-513)
 374 019e 6881      		ld r22,Y
 375 01a0 7981      		ldd r23,Y+1
 376 01a2 8A81      		ldd r24,Y+2
 377 01a4 9B81      		ldd r25,Y+3
 378 01a6 C150      		subi r28,lo8(513)
 379 01a8 D240      		sbci r29,hi8(513)
 380 01aa 0E94 0000 		call xmem_write
 381               	.LVL22:
 106:initrd/initrd.c **** 	{
 382               		.loc 1 106 10 view .LVU71
 106:initrd/initrd.c **** 	{
 383               		.loc 1 106 17 is_stmt 0 view .LVU72
 384 01ae CF5F      		subi r28,lo8(-513)
 385 01b0 DD4F      		sbci r29,hi8(-513)
 386 01b2 8881      		ld r24,Y
 387 01b4 9981      		ldd r25,Y+1
 388 01b6 AA81      		ldd r26,Y+2
 389 01b8 BB81      		ldd r27,Y+3
 390 01ba C150      		subi r28,lo8(513)
 391 01bc D240      		sbci r29,hi8(513)
 392 01be 9E5F      		subi r25,-2
 393 01c0 AF4F      		sbci r26,-1
 394 01c2 BF4F      		sbci r27,-1
 395 01c4 CF5F      		subi r28,lo8(-513)
 396 01c6 DD4F      		sbci r29,hi8(-513)
 397 01c8 8883      		st Y,r24
 398 01ca 9983      		std Y+1,r25
 399 01cc AA83      		std Y+2,r26
 400 01ce BB83      		std Y+3,r27
 401 01d0 C150      		subi r28,lo8(513)
 402 01d2 D240      		sbci r29,hi8(513)
 403               	.LVL23:
 106:initrd/initrd.c **** 	{
 404               		.loc 1 106 17 view .LVU73
 405 01d4 9FEF      		ldi r25,-1
 406 01d6 C91A      		sub r12,r25
 407 01d8 D90A      		sbc r13,r25
 408 01da E90A      		sbc r14,r25
 409 01dc F90A      		sbc r15,r25
 410               	.LVL24:
 106:initrd/initrd.c **** 	{
 411               		.loc 1 106 17 view .LVU74
 412 01de 00C0      		rjmp .L4
 413               		.cfi_endproc
 414               	.LFE4:
 416               		.section	.progmem.data,"a",@progbits
 419               	__c.0:
 420 0000 4C6F 6164 		.string	"Loading InitRD failed"
 420      696E 6720 
 420      496E 6974 
 420      5244 2066 
 420      6169 6C65 
 423               	__c.1:
 424 0016 494E 4954 		.string	"INIT Sectors: %d"
 424      2053 6563 
 424      746F 7273 
 424      3A20 2564 
 424      00
 427               	__c.2:
 428 0027 5354 444C 		.string	"STDLIB Size: %lu"
 428      4942 2053 
 428      697A 653A 
 428      2025 6C75 
 428      00
 431               	__c.3:
 432 0038 494E 4954 		.string	"INIT Size: %lu"
 432      2053 697A 
 432      653A 2025 
 432      6C75 00
 435               	__c.4:
 436 0047 556E 7375 		.string	"Unsupported ATFS revision"
 436      7070 6F72 
 436      7465 6420 
 436      4154 4653 
 436      2072 6576 
 439               	__c.5:
 440 0061 5772 6F6E 		.string	"Wrong FS signature"
 440      6720 4653 
 440      2073 6967 
 440      6E61 7475 
 440      7265 00
 443               	__c.6:
 444 0074 4C6F 6164 		.string	"Loading Init Binary"
 444      696E 6720 
 444      496E 6974 
 444      2042 696E 
 444      6172 7900 
 445               		.section	.rodata
 448               	_signature:
 449 0000 4154 4653 		.ascii	"ATFS"
 450               		.text
 451               	.Letext0:
 452               		.file 2 "/usr/lib/gcc/avr/12.2.0/include/stddef.h"
 453               		.file 3 "/usr/lib/gcc/avr/12.2.0/include/stdint-gcc.h"
 454               		.file 4 "../../types/types.h"
 455               		.file 5 "../../status/status.h"
 456               		.file 6 "logger/logger.h"
 457               		.file 7 "xmem/xmem.h"
 458               		.file 8 "/usr/avr/include/string.h"
 459               		.file 9 "sd/sd.h"
DEFINED SYMBOLS
                            *ABS*:00000000 initrd.c
     /tmp/cc8viRcj.s:2      *ABS*:0000003e __SP_H__
     /tmp/cc8viRcj.s:3      *ABS*:0000003d __SP_L__
     /tmp/cc8viRcj.s:4      *ABS*:0000003f __SREG__
     /tmp/cc8viRcj.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc8viRcj.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc8viRcj.s:13     .text:00000000 initrd_load
     /tmp/cc8viRcj.s:16     .text:00000000 .Loc.0
     /tmp/cc8viRcj.s:17     .text:00000000 L0
     /tmp/cc8viRcj.s:72     .text:0000002c .Loc.1
     /tmp/cc8viRcj.s:73     .text:0000002c .Loc.2
     /tmp/cc8viRcj.s:74     .text:0000002c .Loc.3
     /tmp/cc8viRcj.s:75     .text:0000002c .Loc.4
     /tmp/cc8viRcj.s:77     .text:0000002c .Loc.5
     /tmp/cc8viRcj.s:78     .text:0000002c .Loc.6
     /tmp/cc8viRcj.s:80     .text:0000002c .Loc.7
     /tmp/cc8viRcj.s:443    .progmem.data:00000074 __c.6
     /tmp/cc8viRcj.s:88     .text:0000003a .Loc.8
     /tmp/cc8viRcj.s:98     .text:0000004c .Loc.9
     /tmp/cc8viRcj.s:107    .text:0000005c .Loc.10
     /tmp/cc8viRcj.s:108    .text:0000005c .Loc.11
     /tmp/cc8viRcj.s:448    .rodata:00000000 _signature
     /tmp/cc8viRcj.s:116    .text:0000006a .Loc.12
     /tmp/cc8viRcj.s:124    .text:00000078 .Loc.13
     /tmp/cc8viRcj.s:126    .text:00000078 .Loc.14
     /tmp/cc8viRcj.s:127    .text:00000078 .Loc.15
     /tmp/cc8viRcj.s:129    .text:00000078 .Loc.16
     /tmp/cc8viRcj.s:439    .progmem.data:00000061 __c.5
     /tmp/cc8viRcj.s:139    .text:00000088 .Loc.17
     /tmp/cc8viRcj.s:143    .text:00000088 .Loc.18
     /tmp/cc8viRcj.s:145    .text:00000088 .Loc.19
     /tmp/cc8viRcj.s:146    .text:00000088 .Loc.20
     /tmp/cc8viRcj.s:149    .text:00000088 .Loc.21
     /tmp/cc8viRcj.s:150    .text:00000088 .Loc.22
     /tmp/cc8viRcj.s:159    .text:00000098 .Loc.23
     /tmp/cc8viRcj.s:161    .text:00000098 .Loc.24
     /tmp/cc8viRcj.s:162    .text:00000098 .Loc.25
     /tmp/cc8viRcj.s:164    .text:00000098 .Loc.26
     /tmp/cc8viRcj.s:435    .progmem.data:00000047 __c.4
     /tmp/cc8viRcj.s:169    .text:0000009e .Loc.27
     /tmp/cc8viRcj.s:176    .text:000000a8 .Loc.28
     /tmp/cc8viRcj.s:180    .text:000000a8 .Loc.29
     /tmp/cc8viRcj.s:182    .text:000000a8 .Loc.30
     /tmp/cc8viRcj.s:183    .text:000000a8 .Loc.31
     /tmp/cc8viRcj.s:189    .text:000000b0 .Loc.32
     /tmp/cc8viRcj.s:192    .text:000000b0 .Loc.33
     /tmp/cc8viRcj.s:195    .text:000000b0 .Loc.34
     /tmp/cc8viRcj.s:197    .text:000000b0 .Loc.35
     /tmp/cc8viRcj.s:198    .text:000000b0 .Loc.36
     /tmp/cc8viRcj.s:204    .text:000000b8 .Loc.37
     /tmp/cc8viRcj.s:207    .text:000000b8 .Loc.38
     /tmp/cc8viRcj.s:209    .text:000000b8 .Loc.39
     /tmp/cc8viRcj.s:210    .text:000000b8 .Loc.40
     /tmp/cc8viRcj.s:212    .text:000000b8 .Loc.41
     /tmp/cc8viRcj.s:431    .progmem.data:00000038 __c.3
     /tmp/cc8viRcj.s:226    .text:000000d2 .Loc.42
     /tmp/cc8viRcj.s:228    .text:000000d2 .Loc.43
     /tmp/cc8viRcj.s:229    .text:000000d2 .Loc.44
     /tmp/cc8viRcj.s:231    .text:000000d2 .Loc.45
     /tmp/cc8viRcj.s:427    .progmem.data:00000027 __c.2
     /tmp/cc8viRcj.s:243    .text:000000e8 .Loc.46
     /tmp/cc8viRcj.s:244    .text:000000e8 .Loc.47
     /tmp/cc8viRcj.s:251    .text:000000f4 .Loc.48
     /tmp/cc8viRcj.s:260    .text:00000102 .Loc.49
     /tmp/cc8viRcj.s:263    .text:00000104 .Loc.50
     /tmp/cc8viRcj.s:265    .text:00000104 .Loc.51
     /tmp/cc8viRcj.s:266    .text:00000104 .Loc.52
     /tmp/cc8viRcj.s:268    .text:00000104 .Loc.53
     /tmp/cc8viRcj.s:423    .progmem.data:00000016 __c.1
     /tmp/cc8viRcj.s:278    .text:00000116 .Loc.54
     /tmp/cc8viRcj.s:279    .text:00000116 .Loc.55
     /tmp/cc8viRcj.s:291    .text:0000012a .Loc.56
     /tmp/cc8viRcj.s:300    .text:0000013a .Loc.57
     /tmp/cc8viRcj.s:303    .text:0000013e .Loc.58
     /tmp/cc8viRcj.s:419    .progmem.data:00000000 __c.0
     /tmp/cc8viRcj.s:310    .text:00000146 .Loc.59
     /tmp/cc8viRcj.s:315    .text:0000014c .Loc.60
     /tmp/cc8viRcj.s:332    .text:0000016a .Loc.61
     /tmp/cc8viRcj.s:341    .text:00000176 .Loc.62
     /tmp/cc8viRcj.s:342    .text:00000176 .Loc.63
     /tmp/cc8viRcj.s:349    .text:00000182 .Loc.64
     /tmp/cc8viRcj.s:352    .text:00000186 .Loc.65
     /tmp/cc8viRcj.s:354    .text:00000186 .Loc.66
     /tmp/cc8viRcj.s:355    .text:00000186 .Loc.67
     /tmp/cc8viRcj.s:357    .text:00000186 .Loc.68
     /tmp/cc8viRcj.s:360    .text:00000188 .Loc.69
     /tmp/cc8viRcj.s:367    .text:00000192 .Loc.70
     /tmp/cc8viRcj.s:382    .text:000001ae .Loc.71
     /tmp/cc8viRcj.s:383    .text:000001ae .Loc.72
     /tmp/cc8viRcj.s:404    .text:000001d4 .Loc.73
     /tmp/cc8viRcj.s:411    .text:000001de .Loc.74
     /tmp/cc8viRcj.s:413    .text:000001e0 L0
     /tmp/cc8viRcj.s:460    .text:000001e0 L0
                     .debug_frame:00000000 L0
     /tmp/cc8viRcj.s:138    .text:00000088 .L2
     /tmp/cc8viRcj.s:175    .text:000000a8 .L3
     /tmp/cc8viRcj.s:253    .text:000000f6 .L11
     /tmp/cc8viRcj.s:340    .text:00000176 .L6
     /tmp/cc8viRcj.s:366    .text:00000192 .L5
     /tmp/cc8viRcj.s:309    .text:00000146 .L4
     /tmp/cc8viRcj.s:1175   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/cc8viRcj.s:8      .text:00000000 .Ltext0
     /tmp/cc8viRcj.s:451    .text:000001e0 .Letext0
     /tmp/cc8viRcj.s:1863   .debug_line:00000000 .Ldebug_line0
     /tmp/cc8viRcj.s:14     .text:00000000 .LFB4
     /tmp/cc8viRcj.s:414    .text:000001e0 .LFE4
     /tmp/cc8viRcj.s:1629   .debug_loclists:00000016 .LLST0
     /tmp/cc8viRcj.s:1618   .debug_loclists:0000000c .LVUS0
     /tmp/cc8viRcj.s:1682   .debug_loclists:00000053 .LLST1
     /tmp/cc8viRcj.s:1675   .debug_loclists:0000004d .LVUS1
     /tmp/cc8viRcj.s:1715   .debug_loclists:00000078 .LLST2
     /tmp/cc8viRcj.s:1712   .debug_loclists:00000076 .LVUS2
     /tmp/cc8viRcj.s:1762   .debug_loclists:000000ab .LLST3
     /tmp/cc8viRcj.s:1759   .debug_loclists:000000a9 .LVUS3
     /tmp/cc8viRcj.s:1801   .debug_loclists:000000d2 .LLST4
     /tmp/cc8viRcj.s:1798   .debug_loclists:000000d0 .LVUS4
     /tmp/cc8viRcj.s:76     .text:0000002c .LBB15
     /tmp/cc8viRcj.s:79     .text:0000002c .LBE15
     /tmp/cc8viRcj.s:125    .text:00000078 .LBB16
     /tmp/cc8viRcj.s:128    .text:00000078 .LBE16
     /tmp/cc8viRcj.s:160    .text:00000098 .LBB19
     /tmp/cc8viRcj.s:163    .text:00000098 .LBE19
     /tmp/cc8viRcj.s:208    .text:000000b8 .LBB24
     /tmp/cc8viRcj.s:211    .text:000000b8 .LBE24
     /tmp/cc8viRcj.s:227    .text:000000d2 .LBB25
     /tmp/cc8viRcj.s:230    .text:000000d2 .LBE25
     /tmp/cc8viRcj.s:264    .text:00000104 .LBB26
     /tmp/cc8viRcj.s:267    .text:00000104 .LBE26
     /tmp/cc8viRcj.s:353    .text:00000186 .LBB27
     /tmp/cc8viRcj.s:356    .text:00000186 .LBE27
     /tmp/cc8viRcj.s:142    .text:00000088 .LBI17
     /tmp/cc8viRcj.s:141    .text:00000088 .LBB17
     /tmp/cc8viRcj.s:148    .text:00000088 .LBE17
     /tmp/cc8viRcj.s:1816   .debug_loclists:000000e1 .LLST5
     /tmp/cc8viRcj.s:1813   .debug_loclists:000000df .LVUS5
     /tmp/cc8viRcj.s:179    .text:000000a8 .LBI20
     /tmp/cc8viRcj.s:178    .text:000000a8 .LBB20
     /tmp/cc8viRcj.s:191    .text:000000b0 .LBE20
     /tmp/cc8viRcj.s:1828   .debug_loclists:000000ee .LLST6
     /tmp/cc8viRcj.s:1825   .debug_loclists:000000ec .LVUS6
     /tmp/cc8viRcj.s:194    .text:000000b0 .LBI22
     /tmp/cc8viRcj.s:193    .text:000000b0 .LBB22
     /tmp/cc8viRcj.s:206    .text:000000b8 .LBE22
     /tmp/cc8viRcj.s:1840   .debug_loclists:000000fb .LLST7
     /tmp/cc8viRcj.s:1837   .debug_loclists:000000f9 .LVUS7
     /tmp/cc8viRcj.s:87     .text:0000003a .LVL0
     /tmp/cc8viRcj.s:97     .text:0000004c .LVL1
     /tmp/cc8viRcj.s:106    .text:0000005c .LVL2
     /tmp/cc8viRcj.s:115    .text:0000006a .LVL3
     /tmp/cc8viRcj.s:135    .text:00000084 .LVL4
     /tmp/cc8viRcj.s:172    .text:000000a4 .LVL7
     /tmp/cc8viRcj.s:225    .text:000000d2 .LVL11
     /tmp/cc8viRcj.s:242    .text:000000e8 .LVL12
     /tmp/cc8viRcj.s:277    .text:00000116 .LVL14
     /tmp/cc8viRcj.s:348    .text:00000182 .LVL19
     /tmp/cc8viRcj.s:363    .text:0000018e .LVL21
     /tmp/cc8viRcj.s:381    .text:000001ae .LVL22
     /tmp/cc8viRcj.s:461    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
log_boot_P
sd_read
memory_dump
memcmp
panic
xmem_write
__do_copy_data
